{
    "addeventhandler": {
        "name": "addEventHandler",
        "description": "Adds an Event Handler to the given object.\n\n* You can add as many Event Handlers of any type as you like to every unit. Existing Event Handlers do not get overwritten.\n\n* Use [removeEventHandler](https://community.bistudio.com/wiki/removeEventHandler) to remove an Event Handler.\nRead [Event Handlers](https://community.bistudio.com/wiki/Category:Event_Handlers) for more information and a list of all available Event Handlers.",
        "syntaxArray": [
            {
                "Syntax": "object addEventHandler [type, code]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String) - See [Event Handlers](https://community.bistudio.com/wiki/Category:Event_Handlers) for the full list of available options.\n\ncode: [Code](https://community.bistudio.com/wiki/Code) or [String](https://community.bistudio.com/wiki/String) - Code that should be executed when the Event Handler is triggered; executed in [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) by default.\n\n* Event Handler parameters are accessible via the _this inside the code\n\n* Since Arma 3 v.1.64 the Event Handler index is available as _thisEventHandler during Event Handler code execution\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - The index of the added Event Handler. Indices start at 0 for each unit and increment with each added Event Handler."
            }
        ],
        "examples": [
            "\n```sqf\n_index = player addEventHandler [\"Killed\", {_this exec \"playerKilled.sqs\"}];\n```\n",
            "\n```sqf\nthis addEventHandler [\"Killed\", \"hint format ['Killed by %1', _this # 1];\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addEventHandler",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "addeditorobject": {
        "name": "addEditorObject",
        "description": "Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **addEditorObject** [type,[name1,value1,...],subtype class]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[type,[name1,value1,...],subtype class]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/addEditorObject",
        "modifiers": []
    },
    "additemcargo": {
        "name": "addItemCargo",
        "description": "Creates new items and stores them in given container. Works with items, weapons and magazines. For global variant see [addItemCargoGlobal](https://community.bistudio.com/wiki/addItemCargoGlobal)",
        "syntaxArray": [
            {
                "Syntax": "box **addItemCargo** [item, count]",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n[item, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsupplyBox addItemCargo [\"optic_ARCO\", 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItemCargo",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "action": {
        "name": "action",
        "description": "Make a unit perform an action. See [Category:Actions](https://community.bistudio.com/wiki/Category:Actions) for action names and syntaxes.\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "unit action actionArray",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nactionArray: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer action [\"SitDown\", player];\n```\n",
            "\n```sqf\n_soldier action [\"Eject\", vehicle _soldier];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/action",
        "modifiers": [
            "Global effect"
        ]
    },
    "additempool": {
        "name": "addItemPool",
        "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)",
        "syntaxArray": [
            {
                "Syntax": "**addItemPool** [itemName, count]",
                "Params": "[itemName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitemName: [String](https://community.bistudio.com/wiki/String) - Item name\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - Number of items to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\naddItemPool [\"ItemGPS\", 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItemPool",
        "modifiers": []
    },
    "additemtobackpack": {
        "name": "addItemToBackpack",
        "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.",
        "syntaxArray": [
            {
                "Syntax": "unit addItemToBackpack item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";\n```\n",
            "\n```sqf\nplayer addItemToBackpack \"itemGPS\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItemToBackpack",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "allairports": {
        "name": "allAirports",
        "description": "Returns all map airports, both static and dynamic",
        "syntaxArray": [
            {
                "Syntax": "**allAirports**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [staticAirports, dynamicAirports], where:\n\n* staticAirports [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) - static airports IDs\n\n* dynamicAirports [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - dynamic airports objects (such as \"DynamicAirport_01_F\" found on aircraft carrier)"
            }
        ],
        "examples": [
            "\n```sqf\n_allAirports = allAirports;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allAirports",
        "modifiers": []
    },
    "allcontrols": {
        "name": "allControls",
        "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from [CT_CONTROLS_GROUPs](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP).",
        "syntaxArray": [
            {
                "Syntax": "allControls display",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Controls](https://community.bistudio.com/wiki/Control)"
            },
            {
                "Syntax": "allControls controlsGroup (*since Arma 3 v2.03*)",
                "Params": "controlsGroup: [Control](https://community.bistudio.com/wiki/Control) - [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Controls](https://community.bistudio.com/wiki/Control)"
            }
        ],
        "examples": [
            "\n```sqf\n_allCtrls = allControls findDisplay 46;\n```\n",
            "\n```sqf\n_allSubCtrls = allControls _myControlsGroup;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allControls",
        "modifiers": []
    },
    "actionkeysnamesarray": {
        "name": "actionKeysNamesArray",
        "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or [user action names](https://community.bistudio.com/wiki/Category:Key_Actions).",
        "syntaxArray": [
            {
                "Syntax": "**actionKeysNamesArray** userAction",
                "Params": "userAction: [String](https://community.bistudio.com/wiki/String) - Name of the action\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - An array of [Strings](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "**actionKeysNamesArray** [userAction, maxKeys, inputDevicePriority]",
                "Params": "userAction: [String](https://community.bistudio.com/wiki/String) - Name of the action\n\nmaxKeys: [Number](https://community.bistudio.com/wiki/Number) - Maximum number of keys to return\n\ninputDevicePriority: [String](https://community.bistudio.com/wiki/String) - Result sorted by inputDevicePriority with values: *Since Arma 3 v1.36*\n\n* \"Mouse\"\n\n* \"Keyboard\"\n\n* \"Stick\"\n\n* \"Gamepad\"\n\n* \"Tracker\"\n\n* \"Combo\" (mouse and keyboard combinations)\n\n* \"Controler\"[sic](https://community.bistudio.com/wiki/Template:sic) (any controller other than mouse or keyboard)\nOther values are considered as: \n\n* \"Unsorted\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_actionList = actionKeysNamesArray \"ReloadMagazine\";\n```\n",
            "\n```sqf\n_actionList = actionKeysNamesArray [\"ReloadMagazine\", 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/actionKeysNamesArray",
        "modifiers": []
    },
    "activateaddons": {
        "name": "activateAddons",
        "description": "Activates the listed addons. The list of active addons is initialized during this function.",
        "syntaxArray": [
            {
                "Syntax": "**activateAddons** [addon1, ...]",
                "Params": "[addon1, ...]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nactivateAddons [\"BISOFP\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/activateAddons",
        "modifiers": []
    },
    "addforcegeneratorrtd": {
        "name": "addForceGeneratorRTD",
        "description": "Adds force generator to world. > ",
        "syntaxArray": [
            {
                "Syntax": "addForceGeneratorRTD parameters",
                "Params": "parameters: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Force index"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/addForceGeneratorRTD",
        "modifiers": []
    },
    "actionkeys": {
        "name": "actionKeys",
        "description": "Returns [Array](https://community.bistudio.com/wiki/Array) containing [dikCodes](https://community.bistudio.com/wiki/DIK_KeyCodes) of keys, buttons and combos assigned to the given user action. Action names could be found in config class ControllerSchemes or [user action names](https://community.bistudio.com/wiki/Category:Key_Actions) or user profile, for example:\n\nTo retrieve the value, use the property name without 'key':\n\n```sqf\nactionKeys \"Watch\"; // 24\n```\n\n\nIn addition, some of the actions are also listed in here: [inputAction/actions](https://community.bistudio.com/wiki/inputAction/actions)",
        "syntaxArray": [
            {
                "Syntax": "actionKeys userAction",
                "Params": "userAction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_array = actionKeys \"ReloadMagazine\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/actionKeys",
        "modifiers": []
    },
    "assigncurator": {
        "name": "assignCurator",
        "description": "Assign player as curator. Two players cannot act as one curator.",
        "syntaxArray": [
            {
                "Syntax": "player **assignCurator** curatorObj",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\ncuratorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer assignCurator myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignCurator",
        "modifiers": [
            "Server execution"
        ]
    },
    "actionparams": {
        "name": "actionParams",
        "description": "Returns [Array](https://community.bistudio.com/wiki/Array) with params for given user action id (similar to [addAction](https://community.bistudio.com/wiki/addAction) param array). The output array is of the following format: \n[title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, textWindowBackground, textWindowForeground, selection, memoryPoint],  where:\n\n* title: [String](https://community.bistudio.com/wiki/String) - action title text\n\n* script: [String](https://community.bistudio.com/wiki/String) - script file or script expression assigned to the action\n\n* arguments: [Anything](https://community.bistudio.com/wiki/Anything) or [nil](https://community.bistudio.com/wiki/nil) - arguments passed to the action\n\n* priority: [Number](https://community.bistudio.com/wiki/Number) - action priority on the action menu\n\n* showWindow: [Boolean](https://community.bistudio.com/wiki/Boolean) - whether the action is shown in the center of the screen too\n\n* hideOnUse: [Boolean](https://community.bistudio.com/wiki/Boolean) - whether the action menu should close after selecting the action\n\n* shortcut: [String](https://community.bistudio.com/wiki/String) - action bindings to some existing engine action if any\n\n* condition: [String](https://community.bistudio.com/wiki/String) - expression returning [true](https://community.bistudio.com/wiki/true) or [nil](https://community.bistudio.com/wiki/nil) for action to appear on the action menu\n\n* radius: [Number](https://community.bistudio.com/wiki/Number) - max distance to entity at which action becomes available. -1 means it is engine default (~15m)\n\n* unconscious: [Boolean](https://community.bistudio.com/wiki/Boolean) - whether the action is available to [unconscious](https://community.bistudio.com/wiki/setUnconscious) person\n\n* textWindowBackground: [String](https://community.bistudio.com/wiki/String) - same as textWindowBackground in [setUserActionText](https://community.bistudio.com/wiki/setUserActionText)\n\n* textWindowForeground: [String](https://community.bistudio.com/wiki/String) - same as textWindowForeground in [setUserActionText](https://community.bistudio.com/wiki/setUserActionText)\n\n* selection: [String](https://community.bistudio.com/wiki/String) - named selection in Geometry LOD to which the action is attached\n\n* memoryPoint: [String](https://community.bistudio.com/wiki/String) - memory point on the object to which the action is attached\n\nSince Arma 3 v1.94 if object is null or the action doesn't exist, default array of params is returned:\n[\"\",\"\",<null>,1.5,true,true,\"\",\"\",50,false,\"\",\"\",\"\",\"\"]",
        "syntaxArray": [
            {
                "Syntax": "entity actionParams id",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object) - entity with added user actions\n\nid: [Number](https://community.bistudio.com/wiki/Number) - id of existing user action (returned by [addAction](https://community.bistudio.com/wiki/addAction) or [actionIDs](https://community.bistudio.com/wiki/actionIDs))\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) (or, prior to Arma 3 v1.94, [Nothing](https://community.bistudio.com/wiki/Nothing) if action doesn't exist)"
            }
        ],
        "examples": [
            "\n```sqf\n_params = player actionParams 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/actionParams",
        "modifiers": []
    },
    "assignasturret": {
        "name": "assignAsTurret",
        "description": "Assigns the soldier to turret.",
        "syntaxArray": [
            {
                "Syntax": "unit **assignAsTurret** [vehicle, [turretPath]]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[vehicle, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[turretPath]: [Array](https://community.bistudio.com/wiki/Array) - Array of numbers.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer assignAsTurret [BIS_vehicle, [0,1] ];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignAsTurret",
        "modifiers": []
    },
    "assignedvehicle": {
        "name": "assignedVehicle",
        "description": "Returns the vehicle an unit is assigned to. If no vehicle is assigned [objNull](https://community.bistudio.com/wiki/objNull) is returned.\n\nNotes:\n\n* The assignment happens via the various assignAsXXX/moveInXXX commands, or player/AI GL getIn radio commands, getIn waypoint, or when units start in vehicles or get moved in to a vehicle by Zeus/via Eden.\n\n* [addVehicle](https://community.bistudio.com/wiki/addVehicle) indirectly may also add the vehicle, however only if an AI GL assigns [vehicle roles](https://community.bistudio.com/wiki/assignedVehicleRole) (which depends on various things).\n\n* [vehicle](https://community.bistudio.com/wiki/vehicle) returns the current vehicles an AI is in, while with assignedVehicle the AI may not (yet) be in the said vehicle (still in transit or held of by waypoints or other SQF commands).\n\n* To make AI under AI GL enter a vehicle, use [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) [true](https://community.bistudio.com/wiki/true).\n\n* While [unassignVehicle](https://community.bistudio.com/wiki/unassignVehicle) works, if the group is under AI command, the AI GL may re-assign the vehicle immediately. To stop the AI from re-entering at least, use [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) or [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) [false](https://community.bistudio.com/wiki/false), or permanently remove the assignment vi a [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle).\n\n* For player GL lead AI assignedVehicle seems not to be really reliable/behaves strange. Disembark radio command seems to [unassign](https://community.bistudio.com/wiki/unassignVehicle) though.",
        "syntaxArray": [
            {
                "Syntax": "assignedVehicle unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle = assignedVehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedVehicle",
        "modifiers": [
            "Local argument"
        ]
    },
    "assignedteam": {
        "name": "assignedTeam",
        "description": "Returns the team the unit belongs to. Possible values:\n\n\n* \"MAIN\" (default and white)\n\n* \"RED\"\n\n* \"GREEN\"\n\n* \"BLUE\"\n\n* \"YELLOW\"\n\n* \"\" if given unit is [objNull](https://community.bistudio.com/wiki/objNull) or [remoteControling](https://community.bistudio.com/wiki/remoteControl) another unit(Since Arma 3 v1.94)",
        "syntaxArray": [
            {
                "Syntax": "**assignedTeam** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) (or, prior to Arma 3 v1.94, [Nothing](https://community.bistudio.com/wiki/Nothing) if given unit is [objNull](https://community.bistudio.com/wiki/objNull) or [remoteControling](https://community.bistudio.com/wiki/remoteControl) another unit)"
            }
        ],
        "examples": [
            "\n```sqf\n_team = assignedTeam player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedTeam",
        "modifiers": [
            "Global argument"
        ]
    },
    "campreload": {
        "name": "camPreload",
        "description": "Preloads the scene for the prepared camera with given timeout after which preloading is aborted. Max timeout is 30 seconds. Timeout of 0 means max timeout of 30 seconds as well. > ",
        "syntaxArray": [
            {
                "Syntax": "camera **camPreload** timeout",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\ntimeout: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPreload 5 \n```\n",
            "Preload camera around player to avoid stuttering on optics zooming: \n```sqf\n[] spawn \n{\n\t_cam = \"camera\" camCreate (player selectionPosition \"camera\");\n\tfor \"_i\" from 0 to 359 do\n\t{\n\t\t_cam setDir _i; \n\t\t_cam camPrepareFov 0.25; \n\t\t_cam camPreload 0;\n\t\twaitUntil { camPreloaded _cam };\n\t};\n\tcamDestroy _cam;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPreload",
        "modifiers": []
    },
    "addwaypoint": {
        "name": "addWaypoint",
        "description": "Adds (or inserts when index is given) a new waypoint to a group.\n\nThe waypoint is placed randomly within a circle with the given center and radius.\n\nThe function returns a waypoint with format [group, index]. \n> ",
        "syntaxArray": [
            {
                "Syntax": "groupName **addWaypoint** [center, radius, index, name]",
                "Params": "groupName: [Group](https://community.bistudio.com/wiki/Group)\n\ncenter: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) ([PositionASL](https://community.bistudio.com/wiki/PositionASL) if *radius* is negative!) or [Object](https://community.bistudio.com/wiki/Object)\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - random waypoint placement within *radius* from *center* > \n\nindex (optional): [Number](https://community.bistudio.com/wiki/Number) - can be used to insert a waypoint in between existing waypoints\n\nname (optional): [String](https://community.bistudio.com/wiki/String) - [waypointName](https://community.bistudio.com/wiki/waypointName)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint) - [[Group](https://community.bistudio.com/wiki/Group), *index*]"
            }
        ],
        "examples": [
            "\n```sqf\n_wp =_grp addWaypoint [position player, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWaypoint",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "campreloaded": {
        "name": "camPreloaded",
        "description": "Checks whether the camera has finished preloading.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **camPreloaded** camera",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n ?(camPreloaded _camera) : exit \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPreloaded",
        "modifiers": []
    },
    "addweaponcargoglobal": {
        "name": "addWeaponCargoGlobal",
        "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. \n\nMP Synchronized",
        "syntaxArray": [
            {
                "Syntax": "vehicleName addWeaponCargoGlobal [weaponName, count]",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object) - vehicle to add the weapons to\n\n[weaponName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String) - weapon name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - number of weapons to add.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_truck addWeaponCargoGlobal [\"M16\", 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "campreparedir": {
        "name": "camPrepareDir",
        "description": "Prepares the camera heading. \n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareDir** direction",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\ndirection: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareDir 150 \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareDir",
        "modifiers": []
    },
    "animationstate": {
        "name": "animationState",
        "description": "Returns the name of a unit's current primary animation. Seems to be forced to lower case in Arma 3.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**animationState** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_state = animationState player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animationState",
        "modifiers": [
            "Global argument"
        ]
    },
    "campreparebank": {
        "name": "camPrepareBank",
        "description": "Prepares the camera bank angle.\n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareBank** bank",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nbank: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareBank -0.1 \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareBank",
        "modifiers": []
    },
    "clearforcesrtd": {
        "name": "clearForcesRTD",
        "description": "Removes all force generators from world.\n> ",
        "syntaxArray": [
            {
                "Syntax": "clearForcesRTD",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nclearForcesRTD;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearForcesRTD",
        "modifiers": []
    },
    "animatedoor": {
        "name": "animateDoor",
        "description": "Animates a door on a vehicle. Animation is defined in config file in [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles) -> [ AnimationSources](https://community.bistudio.com/wiki/Model_Config#AnimationSources). Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor [\"Door_L\", 1];\n>   \n\nTo animate doors or other sources that have \"user\" controller, use [animate](https://community.bistudio.com/wiki/animate) command, or even better, [animateSource](https://community.bistudio.com/wiki/animateSource) (recommended). Sources with \"hit\" controller can be animated with [setHitPointDamage](https://community.bistudio.com/wiki/setHitPointDamage) command applied to the name contained in hitpoint property. For availability of animation sources and their controller types see: [Arma 3: createVehicle/vehicles](https://community.bistudio.com/wiki/Arma_3:_createVehicle/vehicles)",
        "syntaxArray": [
            {
                "Syntax": "object **animateDoor** [doorname, phase, instant]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[doorname, phase, instant]: [Array](https://community.bistudio.com/wiki/Array)\n\ndoorname: [String](https://community.bistudio.com/wiki/String)\n\nphase: [Number](https://community.bistudio.com/wiki/Number)\n\ninstant: [Boolean](https://community.bistudio.com/wiki/Boolean) (When [true](https://community.bistudio.com/wiki/true) and phase is either 0 or 1, door will change phase instantaneously)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nTaru animateDoor [\"Door_1_source\", 1];\n```\n",
            "Open left front door on Ifrit instantly:\n```sqf\nIfrit animateDoor [\"Door_LF\", 1, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animateDoor",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "clearmagazinecargo": {
        "name": "clearMagazineCargo",
        "description": "Remove all magazines from the given vehicle's magazine cargo space.",
        "syntaxArray": [
            {
                "Syntax": "clearMagazineCargo vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearMagazineCargo _truck;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearMagazineCargo",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "clearitempool": {
        "name": "clearItemPool",
        "description": "Removes all items from ammo box (or any general weapon holder container)",
        "syntaxArray": [
            {
                "Syntax": "**clearItemPool** box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearItemPool jeepOne\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearItemPool",
        "modifiers": []
    },
    "animationsourcephase": {
        "name": "animationSourcePhase",
        "description": "Returns current animation phase of given source. Similar to [animationPhase](https://community.bistudio.com/wiki/animationPhase) or [doorPhase](https://community.bistudio.com/wiki/doorPhase) but designed to complement [animateSource](https://community.bistudio.com/wiki/animateSource). This command could be used to obtain relative turret direction and gun elevation on a vehicle (see Example 2)",
        "syntaxArray": [
            {
                "Syntax": "object **animationSourcePhase** source",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nsource: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_phase = house animationSourcePhase \"Door_1_source\";\n```\n",
            "\n```sqf\n_mainturretDirection = deg (_marshall animationSourcePhase \"mainturret\"); // relative to Marshall direction\n_maingunElevation = deg (_marshall animationSourcePhase \"maingun\");\n_obsturretDirection = deg (_marshall animationSourcePhase \"obsturret\"); // relative to main turret direction\n_obsgunElevation = deg (_marshall animationSourcePhase \"obsgun\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animationSourcePhase",
        "modifiers": []
    },
    "buldozer_loadnewroads": {
        "name": "buldozer_LoadNewRoads",
        "description": "Generates new roads. Working only in [buldozer](https://community.bistudio.com/wiki/Oxygen_Viewer).",
        "syntaxArray": [
            {
                "Syntax": "buldozer_LoadNewRoads path",
                "Params": "path: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nresult = buldozer_LoadNewRoads \"C:/A3/Map_Stratis/data/roads/\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buldozer_LoadNewRoads",
        "modifiers": []
    },
    "cancelsimpletaskdestination": {
        "name": "cancelSimpleTaskDestination",
        "description": "Cancels a simple task destination.",
        "syntaxArray": [
            {
                "Syntax": "**cancelSimpleTaskDestination** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n cancelSimpleTaskDestination myTask;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cancelSimpleTaskDestination",
        "modifiers": []
    },
    "createdisplay": {
        "name": "createDisplay",
        "description": "Creates child display of given display and loads from \"resourceName\". The notable difference between createDisplay and [createDialog](https://community.bistudio.com/wiki/createDialog) is that with createDisplay the player would be able to move around while the display is shown.\nDisplays created with createDisplay or [createDialog](https://community.bistudio.com/wiki/createDialog) will take control of the mouse pointer and will close when user presses Escape.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "parent **createDisplay** resourceName",
                "Params": "parent: [Display](https://community.bistudio.com/wiki/Display)\n\nresourceName: [String](https://community.bistudio.com/wiki/String) - custom display class defined in [description.ext](https://community.bistudio.com/wiki/description.ext) or existing display class from main config\n\n",
                "Return": "[Display](https://community.bistudio.com/wiki/Display) (since Arma 3 v1.50, [Nothing](https://community.bistudio.com/wiki/Nothing) before)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 46 createDisplay \"RscCredits\";\n```\n",
            "\n```sqf\n// creates an empty display\nprivate _emptyDisplay = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createDisplay",
        "modifiers": []
    },
    "createhashmap": {
        "name": "createHashMap",
        "description": "Creates a new empty [HashMap](https://community.bistudio.com/wiki/HashMap).",
        "syntaxArray": [
            {
                "Syntax": "createHashMap",
                "Params": "",
                "Return": "[HashMap](https://community.bistudio.com/wiki/HashMap)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _myHashMap = createHashMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createHashMap",
        "modifiers": []
    },
    "createmarker": {
        "name": "createMarker",
        "description": "Creates a new map marker at the given position. The marker will be created for every connected player as well as all JIP players. The marker name has to be unique; the command will be ignored if a marker with the given name already exists.\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "createMarker [name, position, channel, creator]",
                "Params": "**name**: [String](https://community.bistudio.com/wiki/String) - The marker's name, used to reference the marker in scripts.\n\n**position**: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - [Position2D](https://community.bistudio.com/wiki/Position2D), [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Object](https://community.bistudio.com/wiki/Object). In case of object, the object's [PositionWorld](https://community.bistudio.com/wiki/PositionWorld) is used.\n\n**channel** (Optional): [Number](https://community.bistudio.com/wiki/Number) (See also [Channel IDs](https://community.bistudio.com/wiki/Channel_IDs)) - The marker channel for MP [](https://community.bistudio.com/wiki/Category:Arma_3)[2.02](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_2.02)\n\n**creator** (Optional): [Object](https://community.bistudio.com/wiki/Object) - The marker creator for MP [](https://community.bistudio.com/wiki/Category:Arma_3)[2.02](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_2.02)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - The marker's name or empty string if the marker name is not unique."
            }
        ],
        "examples": [
            "\n```sqf\n_marker1 = createMarker [\"Marker1\", position player];\n```\n",
            "\n```sqf\n_marker2 = createMarker [\"Marker2\", player]; // since Arma 3 v1.50\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createMarker",
        "modifiers": [
            "Global effect"
        ]
    },
    "createhashmapfromarray": {
        "name": "createHashMapFromArray",
        "description": "Creates a new [HashMap](https://community.bistudio.com/wiki/HashMap) and initializes it from a key-value pair array",
        "syntaxArray": [
            {
                "Syntax": "createHashMapFromArray [[key1, value1], [key2, value2]]",
                "Params": "key: [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[HashMap](https://community.bistudio.com/wiki/HashMap)"
            },
            {
                "Syntax": "keys createHashMapFromArray values *Since Arma 3 v2.04*",
                "Params": "keys: [Array](https://community.bistudio.com/wiki/Array) - Array of [HashMapKeys](https://community.bistudio.com/wiki/HashMapKey)\n\nvalues: [Array](https://community.bistudio.com/wiki/Array) - Array of [anything](https://community.bistudio.com/wiki/Anything)\n> \n\n",
                "Return": "[HashMap](https://community.bistudio.com/wiki/HashMap)"
            }
        ],
        "examples": [
            "\n```sqf\ncreateHashMapFromArray [[\"a\",1], [\"b\",2], [\"c\",3]];\n```\n",
            "\n```sqf\n[1,2,3,4] createHashMapFromArray [];// Returns [[1,<null>],[2,<null>],[4,<null>],[3,<null>]]\n```\n",
            "\n```sqf\n[1,2,3] createHashMapFromArray [\"one\",\"two\",\"three\",\"four\"];// Returns [[1,\"one\"],[2,\"two\"],[3,\"three\"]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createHashMapFromArray",
        "modifiers": []
    },
    "ctrlsetangle": {
        "name": "ctrlSetAngle",
        "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Only requires [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) when fourth parameter is set to [false](https://community.bistudio.com/wiki/false). Procedural textures filled controls do not rotate.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetAngle [angle, centerX, centerY, now]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - picture control\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - Rotation angle (clockwise)\n\ncenterX: [Number](https://community.bistudio.com/wiki/Number) - Rotation center X in range 0 to 1. Control center is 0.5\n\ncenterY: [Number](https://community.bistudio.com/wiki/Number) - Rotation center Y in range 0 to 1. Control center is 0.5\n\nnow: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) If [false](https://community.bistudio.com/wiki/false), control will wait for [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) input for result to apply *Since Arma 3 v1.78*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetAngle [25, 0.5, 0.5];\n```\n",
            "\n```sqf\nwith uiNamespace do\n{\n\tctrl = findDisplay 46 ctrlCreate [\"RscPictureKeepAspect\", -1]; \n\tctrl ctrlSetPosition [0,0,1,1]; \n\tctrl ctrlSetText \"A3\\Missions_F_Exp\\data\\Img\\lobby\\ui_campaign_lobby_background_tablet_radial_left_ca.paa\"; \n\tctrl ctrlCommit 0;\n\tangle = 0;\n\tonEachFrame\n\t{\n\t\twith uiNamespace do\n\t\t{\n\t\t\tif (angle > 359) then {angle = 0}; \n\t\t\tctrl ctrlSetAngle [angle, 0.5, 0.5]; \n\t\t\tangle = angle + 1;\n\t\t};\n\t};\n};\n```\n",
            "\n```sqf\n_control ctrlSetAngle [25, 0.5, 0.5, false];\n_control ctrlCommit 1; // Rotation applies smoothly for 1 second.\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetAngle",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "case": {
        "name": "case",
        "description": "This command is used inside a [switch do](https://community.bistudio.com/wiki/switch_do) construct. Although the syntax below states that this operator takes only one argument, that is most likely not true. It seems like it needs two arguments of which the left one is some sort of hidden variable that gets defined inside a [switch do](https://community.bistudio.com/wiki/switch_do) construct. That is the reason why **this operator can not be used outside a [switch do](https://community.bistudio.com/wiki/switch_do) construct**. (see [https://foxhound.international/arma-3-sqf-grammar.html](https://community.bistudio.comhttps://foxhound.international/arma-3-sqf-grammar.html) for further explaination)\nAlso note that it is not possible to store the returned [Switch Type](https://community.bistudio.com/wiki/Switch_Type) in a variable and use that variable in another [switch do](https://community.bistudio.com/wiki/switch_do) construct. It will never lead to an execution of the corresponding code block.",
        "syntaxArray": [
            {
                "Syntax": "**case** b",
                "Params": "b: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Switch Type](https://community.bistudio.com/wiki/Switch_Type)"
            }
        ],
        "examples": [
            "\n```sqf\nswitch (_condition) do {\n    case 1: { hint \"1\" };\n    case 2: { hint \"2\" };\n    default { hint \"default\" };\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/case",
        "modifiers": []
    },
    "ctrlscrollvalues": {
        "name": "ctrlScrollValues",
        "description": "Returns scroll values for current scrollbars in range 0...1 (-1 if not applicable) for the following controls:\n\n\n* CT_CONTROLS_TABLE\n\n* CT_CONTROLS_GROUP\n\n* CT_TREE\n\n* CT_LISTBOX\n\n* CT_COMBO\n\n* CT_XCOMBO\n\n* CT_LISTNBOX\n\n* CT_LISTNBOX_CHECKABLE",
        "syntaxArray": [
            {
                "Syntax": "ctrlScrollValues control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [vScrollValue, hScrollValue]"
            }
        ],
        "examples": [
            "\n```sqf\n_scrollvalues = ctrlScrollValues _ctrl;\n```\n",
            "\n```sqf\n// ControlsGroup\nprivate _disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nprivate _ctrlGrp = _disp ctrlCreate [\"RscControlsGroup\", -1]; \nprivate _ctrl = _disp ctrlCreate [\"RscTree\", -1, _ctrlGrp]; \n_ctrl tvAdd [[], \"Root\"];\nfor \"_i\" from 1 to 25 do\n{\n\t_ctrl tvAdd [[0], format [\"Tree Item %1\", _i]];  \n};\n_ctrl ctrlSetPosition [0,0,0.3,1.2]; \n_ctrl ctrlCommit 0;\ntvExpandAll _ctrl;\n_ctrlGrp ctrlSetPosition [0,0,0.2,0.3];\n_ctrlGrp ctrlCommit 0;\n \nuiNamespace setVariable [\"_ctrl\", _ctrlGrp];   \nonEachFrame\n{\n\thintSilent str ctrlScrollValues (uiNamespace getVariable [\"_ctrl\", controlNull]);\n};\n[] spawn\n{\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.3, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.3];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.7, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.7];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlScrollValues",
        "modifiers": []
    },
    "cbchecked": {
        "name": "cbChecked",
        "description": "Returns the current state of a [CT_CHECKBOX](https://community.bistudio.com/wiki/CT_CHECKBOX) control.",
        "syntaxArray": [
            {
                "Syntax": "**cbChecked** control",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_checked = cbChecked _myCheckBox;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cbChecked",
        "modifiers": []
    },
    "commandartilleryfire": {
        "name": "commandArtilleryFire",
        "description": "Orders an artillery unit to fire a burst on the given position (via the radio).",
        "syntaxArray": [
            {
                "Syntax": "unit commandArtilleryFire [position, type, rounds]",
                "Params": "**unit**: [Object](https://community.bistudio.com/wiki/Object)\n\n**position**: [Position](https://community.bistudio.com/wiki/Position)\n\n**type**: [String](https://community.bistudio.com/wiki/String) - Magazine class name from [CfgMagazines](https://community.bistudio.com/wiki/Arma_3:_CfgMagazines) (case sensitive).\n\n**rounds**: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nMortar commandArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandArtilleryFire",
        "modifiers": []
    },
    "attachobject": {
        "name": "attachObject",
        "description": "Attaches a location to the specified object. To detach a location, attach it to [objNull](https://community.bistudio.com/wiki/objNull).",
        "syntaxArray": [
            {
                "Syntax": "location attachObject object",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation attachObject player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/attachObject",
        "modifiers": []
    },
    "diag_ticktime": {
        "name": "diag_tickTime",
        "description": "Real time in seconds spent from the start of the game. On Windows the command uses [timeGetTime](https://community.bistudio.comhttps://docs.microsoft.com/en-us/windows/win32/api/timeapi/nf-timeapi-timegettime).",
        "syntaxArray": [
            {
                "Syntax": "**diag_tickTime**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Time in seconds from game start"
            }
        ],
        "examples": [
            "\n```sqf\n// Measure execution time of a script\n_start = diag_tickTime;\n// code\n_stop = diag_tickTime;\ndiag_log format [\"%1\",_stop - _start];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_tickTime",
        "modifiers": []
    },
    "assignascargoindex": {
        "name": "assignAsCargoIndex",
        "description": "Assigns the character to a specific cargo / passenger index of the given vehicle.",
        "syntaxArray": [
            {
                "Syntax": "character assignAsCargoIndex [vehicle, index]",
                "Params": "character: [Object](https://community.bistudio.com/wiki/Object) - character to assign\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle to assign to\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - cargo / passenger index\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer assignAsCargoIndex [myHelicopter, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignAsCargoIndex",
        "modifiers": []
    },
    "assert": {
        "name": "assert",
        "description": "Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution.\n\nIf script was pre-processed with [preprocessFileLineNumbers](https://community.bistudio.com/wiki/preprocessFileLineNumbers), it will also show/log the error line number and the file name.",
        "syntaxArray": [
            {
                "Syntax": "**assert** condition",
                "Params": "condition: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - mirrors condition"
            }
        ],
        "examples": [
            "\n```sqf\nassert (1>2);\n```\n \n\n[](https://community.bistudio.com/wiki/File:PreprocessFile.jpg)",
            "Check function params (Faster alternative to [BIS_fnc_param](https://community.bistudio.com/wiki/BIS_fnc_param))\n```sqf\nsome_func = {\t\n\t_0 = _this select 0;\n\t_1 = _this select 1;\n\t_2 = _this select 2;\n\tif (!assert (\n\t\ttypeName _0 == \"ARRAY\" && \n\t\ttypeName _1 == \"STRING\" && \n\t\ttypeName _2 == \"SCALAR\"\n\t)) exitWith {/*optional error logging*/};\n\thint \"Alright!\";\n};\n[1,2,3] call some_func; //assert error\n[[1],\"2\",3] call some_func; //Alright!\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assert",
        "modifiers": []
    },
    "aimpos": {
        "name": "aimPos",
        "description": "Returns the position of the object other units can aim to.",
        "syntaxArray": [
            {
                "Syntax": "**aimPos** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\n_aimPos = aimPos player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/aimPos",
        "modifiers": [
            "Global argument"
        ]
    },
    "create3dencomposition": {
        "name": "create3DENComposition",
        "description": "Create new [Composition](https://community.bistudio.com/wiki/Eden_Editor:_Composition). To create individual entities, use [create3DENEntity](https://community.bistudio.com/wiki/create3DENEntity).",
        "syntaxArray": [
            {
                "Syntax": "**create3DENComposition** [configPath,  position]",
                "Params": "configPath: [Config](https://community.bistudio.com/wiki/Config) - path to *CfgGroups* class of a composition\n\nposition: [Array](https://community.bistudio.com/wiki/Array) in format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Eden Entities](https://community.bistudio.com/wiki/Eden_Entity)"
            }
        ],
        "examples": [
            "\n```sqf\nmyComposition = create3DENComposition [\n\tconfigFile >> \"CfgGroups\" >> \"West\" >> \"BLU_F\" >> \"Infantry\" >> \"BUS_InfSquad\",\n\tscreenToWorld [0.5,0.5]\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/create3DENComposition",
        "modifiers": []
    },
    "camsettarget": {
        "name": "camSetTarget",
        "description": "Set the target object or position where the given camera should point at. Needs the call of [camCommit](https://community.bistudio.com/wiki/camCommit) to be conducted. To reset the target use [objNull](https://community.bistudio.com/wiki/objNull).",
        "syntaxArray": [
            {
                "Syntax": "camera camSetTarget target",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) - target location\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "camera camSetTarget position",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - target location - [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_camera camSetTarget player;\n```\n",
            "\n```sqf\n_camera camSetTarget [2540,1503,26];\n```\n",
            "\n```sqf\n_cam = \"camera\" camCreate (player modelToWorld [0, 100, 10]);\n_cam camSetTarget player;\n_cam camSetRelPos [0, 0.5, 1.5];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 1;\nplayer setRandomLip true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetTarget",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "camsetrelpos": {
        "name": "camSetRelPos",
        "description": "Sets the position of the given camera relative to its target, set with [camSetTarget](https://community.bistudio.com/wiki/camSetTarget). Needs a call to [camCommit](https://community.bistudio.com/wiki/camCommit) to be conducted.> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetRelPos** position",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_cam camSetTarget _car;\n_cam camSetRelPos [0,10,8];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetRelPos",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "clear3denattribute": {
        "name": "clear3DENAttribute",
        "description": "Clears the value of the given entity's [attribute](https://community.bistudio.com/wiki/Eden_Editor:_Entity_Attributes) in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see [Setting Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Attributes).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "entity **clear3DENAttribute** attribute",
                "Params": "entity: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\nattribute: [String](https://community.bistudio.com/wiki/String) - attribute property\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\n0 clear3DENAttribute \"name\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clear3DENAttribute",
        "modifiers": []
    },
    "counttype": {
        "name": "countType",
        "description": "Count how many objects in the array are of given type. This command also works with parent classes like \"Air\", \"Tank\", and \"Car\". For a full class reference see [Classes](https://community.bistudio.com/wiki/CfgVehicles).",
        "syntaxArray": [
            {
                "Syntax": "type **countType** objects",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - class type\n\nobjects: [Array](https://community.bistudio.com/wiki/Array) - array of [Objects](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_count = \"Tank\" countType list _triggerOne;\n```\n",
            "\n```sqf\n_count = \"B_medic_F\" countType units player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/countType",
        "modifiers": [
            "Global argument"
        ]
    },
    "curatoreditingarea": {
        "name": "curatorEditingArea",
        "description": "Returns all curator editing areas.",
        "syntaxArray": [
            {
                "Syntax": "curatorEditingArea curator",
                "Params": "curator: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [arrays](https://community.bistudio.com/wiki/Array) in format: [ID, [PositionAGL](https://community.bistudio.com/wiki/PositionAGL), radius]"
            }
        ],
        "examples": [
            "\n```sqf\n_editingAreas = curatorEditingArea myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorEditingArea",
        "modifiers": []
    },
    "diaryrecordnull": {
        "name": "diaryRecordNull",
        "description": "A non-existent [Diary Record](https://community.bistudio.com/wiki/Diary_Record). To compare non-existent objects use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* diaryRecordNull == diaryRecordNull; *// false*\n\n* [isNull](https://community.bistudio.com/wiki/isNull) diaryRecordNull; *// true*\n\n* diaryRecordNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) diaryRecordNull; *// true*",
        "syntaxArray": [
            {
                "Syntax": "diaryRecordNull",
                "Params": "",
                "Return": "[Diary Record](https://community.bistudio.com/wiki/Diary_Record)"
            }
        ],
        "examples": [
            "\n```sqf\nisNull diaryRecordNull; // true\n```\n",
            "\n```sqf\nisNull (objNull createDiaryRecord [\"Diary\", [\"Title\", \"Text\"]]); // true - objNull cannot take diary records\n```\n",
            "\n```sqf\nstr diaryRecordNull; // \"No diary record\"\n```\n",
            "\n```sqf\nprivate _diaryRecord = diaryRecordNull;\nif (damage player > 0.5) then\n{\n\t_diaryRecord = player createDiaryRecord [\"Diary\", [\"Heal yourself\", \"Ask a medic\"]];\n};\nif (not isNull _diaryRecord) then { hint \"Diary record added.\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diaryRecordNull",
        "modifiers": []
    },
    "didjipowner": {
        "name": "didJIPOwner",
        "description": "Checks if the current [owner](https://community.bistudio.com/wiki/owner) of supplied [Object](https://community.bistudio.com/wiki/Object) Joined In Progress. Returns [false](https://community.bistudio.com/wiki/false) on clients.",
        "syntaxArray": [
            {
                "Syntax": "**didJIPOwner** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_ownerDidJip = didJIPOwner tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/didJIPOwner",
        "modifiers": [
            "Server execution"
        ]
    },
    "curatorregisteredobjects": {
        "name": "curatorRegisteredObjects",
        "description": "Returns array with all objects that has curator registered and their settings.",
        "syntaxArray": [
            {
                "Syntax": "curatorRegisteredObjects curator",
                "Params": "curator: [Object](https://community.bistudio.com/wiki/Object) - Curator module\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorRegisteredObjects _curatorModule;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorRegisteredObjects",
        "modifiers": []
    },
    "camsetfov": {
        "name": "camSetFov",
        "description": "Set the zoom level (**F**ield **O**f **V**iew) of the given camera.\n\nThe zoom level is from *0.01* for the nearest and *8.5* for the furthest zoom value, with a default zoom level of *0.75*\n\nThe angle of the field of view is *atan(FOV)*2* radians when in 4:3 aspect ratio. Needs the call of [camCommit](https://community.bistudio.com/wiki/camCommit) to be conducted.",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetFov** level",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\nlevel: [Number](https://community.bistudio.com/wiki/Number) - zoom level, range 0.01 to 8.5 (see description above)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_cam camSetFov 0.75;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetFov",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "enablecamshake": {
        "name": "enableCamShake",
        "description": "Allows camera shake effects via [addCamShake](https://community.bistudio.com/wiki/addCamShake). If set to [false](https://community.bistudio.com/wiki/false), then a currently active shake effect will stop immediately.\nBy default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.",
        "syntaxArray": [
            {
                "Syntax": "**enableCamShake** value",
                "Params": "value: [Boolean](https://community.bistudio.com/wiki/Boolean) - If [true](https://community.bistudio.com/wiki/true), shake effects are visible\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableCamShake false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableCamShake",
        "modifiers": [
            "Local effect"
        ]
    },
    "camcommitprepared": {
        "name": "camCommitPrepared",
        "description": "Smoothly conducts the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. This command is for use with camPrepareXXX commands. For the normal cam command use [camCommit](https://community.bistudio.com/wiki/camCommit).",
        "syntaxArray": [
            {
                "Syntax": "camera camCommitPrepared time",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - Object of type \"camera\"\n\ntime: [Number](https://community.bistudio.com/wiki/Number) - Time in seconds during which the changes shall be done\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n// Create a camera object\n_cam = \"camera\" camCreate [5600,4800,10];\n_cam camPrepareTarget player;\n_cam cameraEffect [\"internal\", \"BACK\"];\n_cam camCommitPrepared 0;\n// Smoothly move the camera to its new position in 6 seconds\n_cam camPreparePos [5680,4720,20];\n_cam camCommitPrepared 6;\nwaitUntil {camCommitted _cam};\n// Proceed\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camCommitPrepared",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "attachto": {
        "name": "attachTo",
        "description": "Attaches an object to another object.\n\n* The offset is applied to the object center unless a memory point is provided, in which case the offset will be applied to the memory point position.\n\n* If no offset is specified, the current offset between the two objects will be used.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "object1 attachTo [object2, offset, memPoint, followBoneRotation]",
                "Params": "object1: [Object](https://community.bistudio.com/wiki/Object) - object to attach\n\nobject2: [Object](https://community.bistudio.com/wiki/Object) - object to attach to\n\noffset: [Array](https://community.bistudio.com/wiki/Array) - (Optional) format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)\n\nmemPoint: [String](https://community.bistudio.com/wiki/String) - (Optional) see [ArmA: Selection Translations](https://community.bistudio.com/wiki/ArmA:_Selection_Translations) for czech selections names\n\nfollowBoneRotation: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional) follows the memory point's rotation (if attached to one) *Since Arma 3 v2.01.147011*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer attachTo [car, [0, 0, 1]]; \n```\n",
            "\n```sqf\nplayer attachTo [tank, [0, -1, 0], \"Usti hlavne\"];\n```\n",
            "Automatic offset: \n```sqf\nammoCrate attachTo [player];\n```\n",
            "To set orientation of attached object use [setVectorDirAndUp](https://community.bistudio.com/wiki/setVectorDirAndUp) command:\n\n_expl1 = \"DemoCharge_Remote_Ammo\" [createVehicle](https://community.bistudio.com/wiki/createVehicle) [position](https://community.bistudio.com/wiki/position) [player](https://community.bistudio.com/wiki/player);\n_expl1 attachTo [[player](https://community.bistudio.com/wiki/player), [-0.1, 0.1, 0.15], \"Pelvis\"];\n_expl1 [setVectorDirAndUp](https://community.bistudio.com/wiki/setVectorDirAndUp) [[0.5, 0.5, 0], [-0.5, 0.5, 0]];\n_expl2 = \"DemoCharge_Remote_Ammo\" [createVehicle](https://community.bistudio.com/wiki/createVehicle) [position](https://community.bistudio.com/wiki/position) [player](https://community.bistudio.com/wiki/player);\n_expl2 attachTo [[player](https://community.bistudio.com/wiki/player), [0, 0.15, 0.15], \"Pelvis\"];\n_expl2 [setVectorDirAndUp](https://community.bistudio.com/wiki/setVectorDirAndUp) [[1, 0, 0], [0, 1, 0]];\n_expl3 = \"DemoCharge_Remote_Ammo\" [createVehicle](https://community.bistudio.com/wiki/createVehicle) [position](https://community.bistudio.com/wiki/position) [player](https://community.bistudio.com/wiki/player);\n_expl3 attachTo [[player](https://community.bistudio.com/wiki/player), [0.1, 0.1, 0.15], \"Pelvis\"];\n_expl3 [setVectorDirAndUp](https://community.bistudio.com/wiki/setVectorDirAndUp) [[0.5, -0.5, 0], [0.5, 0.5, 0]];\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/attachTo",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "enableautotrimrtd": {
        "name": "enableAutoTrimRTD",
        "description": "Toggle auto-trim for RTD helicopters. \n> ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD **enableAutoTrimRTD** enable",
                "Params": "helicopterRTD: [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - enable or disable\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopterRTD enableAutoTrimRTD true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAutoTrimRTD",
        "modifiers": []
    },
    "createvehiclecrew": {
        "name": "createVehicleCrew",
        "description": "Creates vehicle crew corresponding to vehicle's [faction](https://community.bistudio.com/wiki/faction). The command creates driver, if the vehicle has driver position (vehicle config: hasDriver) and fills [ all non-FFV turrets](https://community.bistudio.com/wiki/allTurrets) with gunners, if turrets can have gunners (turret config: hasGunner). Any turret that has dontCreateAI option set is omitted. If the vehicle is already occupied, the command will only create missing crew.\nSince Arma 3 v1.94 this command will return [Group](https://community.bistudio.com/wiki/Group) of the created crew which will be vehicle's group. Missing crew will be created in the same group as vehicle. To find out which crew will be created, use [BIS_fnc_vehicleCrewTurrets](https://community.bistudio.com/wiki/BIS_fnc_vehicleCrewTurrets).\n  \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "createVehicleCrew vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle to populate with crew\n\n",
                "Return": "[Group](https://community.bistudio.com/wiki/Group) - the group of the created crew (since Arma 3 v1.94)"
            }
        ],
        "examples": [
            "\n```sqf\n_veh = createVehicle [\"B_MRAP_01_F\", getMarkerPos \"createVeh\", [], 0, \"NONE\"];\ncreateVehicleCrew _veh;\n```\n",
            "\n```sqf\n_veh = createVehicle [\"O_MRAP_02_hmg_F\", position player, [], 0, \"NONE\"];\ncreateVehicleCrew _veh;\n{\n\tdiag_log [_x, faction _x, side _x, side group _x];\n} forEach crew _veh;\n```\n\n\n```sqf\n[O Alpha 1-1:1,\"OPF_F\",EAST,EAST]\n[O Alpha 1-1:2,\"OPF_F\",EAST,EAST]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createVehicleCrew",
        "modifiers": []
    },
    "diag_localized": {
        "name": "diag_localized",
        "description": "Returns array with all [localized](https://community.bistudio.com/wiki/localize) keys from the given [ stringtable](https://community.bistudio.com/wiki/Stringtable.xml) or the array of all stringtables names if empty string \"\" is given. Common stringtables are: \"Global\", \"Mission\", \"Campaign\".",
        "syntaxArray": [
            {
                "Syntax": "diag_localized stringtable",
                "Params": "stringtable: [String](https://community.bistudio.com/wiki/String) - stringtable name or \"\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of [Strings](https://community.bistudio.com/wiki/Strings), see description"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _randomKey = selectRandom diag_localized \"Global\"; \nhint format [\"Key: %1\\nValue: %2\", _randomKey, localize _randomKey];\n```\n",
            "\n```sqf\nprivate _allTables = diag_localized \"\";\n```\n",
            "\n```sqf\ndiag_localized \"Global\" select 0; // \"$STR_A3_SHOWCASE_SLINGLOADING_15_AMMODROPPED_PIL_0\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_localized",
        "modifiers": []
    },
    "createunit": {
        "name": "createUnit",
        "description": "Create a unit of class that is defined in [CfgVehicles](https://community.bistudio.com/wiki/Category:CfgVehicles).\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "group createUnit [type, position, markers, placement, special]",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) - Existing group new unit will join\n\n[type, position, markers, placement, special]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - Class name of unit to be created as per [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles)\n\nposition: [Position](https://community.bistudio.com/wiki/Position), [Position2D](https://community.bistudio.com/wiki/Position2D), [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group) - Location unit is created at. In case of [Group](https://community.bistudio.com/wiki/Group) position of the [group](https://community.bistudio.com/wiki/group) [leader](https://community.bistudio.com/wiki/leader) is used\n\nmarkers: [Array](https://community.bistudio.com/wiki/Array) - Placement markers\n\nplacement: [Number](https://community.bistudio.com/wiki/Number) - Placement radius\n\nspecial: [String](https://community.bistudio.com/wiki/String) - Unit placement special, one of:\n\n* \"NONE\" - The unit will be created at the first available free position nearest to given position\n\n* \"FORM\" - Not implemented, currently functions the same as \"NONE\".\n\n* \"CAN_COLLIDE\" - The unit will be created exactly at passed position\n\n* \"CARGO\" - The unit will be created in cargo of the group's vehicle, regardless of the passed position (see Example 5). If group has no vehicle or there is no cargo space available, the unit will be placed according to \"NONE\". To check available cargo space use: \n```sqf\n_hasCargo = _veh emptyPositions \"CARGO\" > 0;\n```\n\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - The created unit"
            },
            {
                "Syntax": "type createUnit [position, group, init, skill, rank]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - Class name of unit to be created as per [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles)\n\n[position, group, init, skill, rank]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Position](https://community.bistudio.com/wiki/Position), [Position2D](https://community.bistudio.com/wiki/Position2D), [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group) - Location unit is created at. In case of [Group](https://community.bistudio.com/wiki/Group) position of the [group](https://community.bistudio.com/wiki/group) [leader](https://community.bistudio.com/wiki/leader) is used\n\ngroup: [Group](https://community.bistudio.com/wiki/Group) - Existing group new unit will join\n\ninit: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"\") Unit init statement, similar to unit init field in the editor. The code placed in unit init will run upon unit creation for every client on network, present and future. The code itself receives the reference to the created unit via local variable [this](https://community.bistudio.com/wiki/Magic_Variables#this_2). Avoid using global commands in unit init statement as it already runs on every client.\n\nskill: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 0.5) Unit [skill](https://community.bistudio.com/wiki/skill)\n\nrank: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"PRIVATE\") Unit [rank](https://community.bistudio.com/wiki/rank)\n\n",
                "Return": "> "
            }
        ],
        "examples": [
            "\n```sqf\n_unit = group player createUnit [\"B_RangeMaster_F\", position player, [], 0, \"FORM\"];\n```\n",
            "\n```sqf\n\"B_RangeMaster_F\" createUnit [position player, group player];\n```\n",
            "\n```sqf\n\"B_RangeMaster_F\" createUnit [getMarkerPos \"barracks\", _groupAlpha];\n```\n",
            "\n```sqf\n\"B_RangeMaster_F\" createUnit [\n\tgetMarkerPos \"marker_1\",\n\t_groupAlpha,\n\t\"loon1 = this; this addWeapon 'BAF_L85A2_RIS_SUSAT'\",\n\t0.6,\n\t\"corporal\"\n];\n```\n",
            "\n```sqf\n_veh = \"O_Quadbike_01_F\" createVehicle (player getRelPos [10, 0]);\n_grp = createVehicleCrew _veh;\n_unit = _grp createUnit [typeOf driver _veh, _grp, [], 0, \"CARGO\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createUnit",
        "modifiers": [
            "Global effect"
        ]
    },
    "diag_activemissionfsms": {
        "name": "diag_activeMissionFSMs",
        "description": "Returns array with active Mission FSMs. To see number of all scripts currently in the scheduler use [diag_activeScripts](https://community.bistudio.com/wiki/diag_activeScripts).",
        "syntaxArray": [
            {
                "Syntax": "diag_activeMissionFSMs",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [[name, state, timeout],...]:\n\n* name: [String](https://community.bistudio.com/wiki/String)\n\n* state:\n\n* timeout:"
            }
        ],
        "examples": [
            "\n```sqf\n{systemChat str _x} forEach diag_activeMissionFSMs;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_activeMissionFSMs",
        "modifiers": []
    },
    "clearradio": {
        "name": "clearRadio",
        "description": "Clean up the content of radio protocol history.",
        "syntaxArray": [
            {
                "Syntax": "**clearRadio**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearRadio;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearRadio",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlmodeldirandup": {
        "name": "ctrlModelDirAndUp",
        "description": "Returns [vectorDir](https://community.bistudio.com/wiki/vectorDir) and [vectorUp](https://community.bistudio.com/wiki/vectorUp) of the model used in 3D-[Dialogs](https://community.bistudio.com/wiki/Arma:_GUI_Configuration).",
        "syntaxArray": [
            {
                "Syntax": "**ctrlModelDirAndUp** control",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [[vectorDir](https://community.bistudio.com/wiki/vectorDir), [vectorUp](https://community.bistudio.com/wiki/vectorUp)]"
            }
        ],
        "examples": [
            "\n```sqf\n_vectorDirAndUp = ctrlModelDirAndUp _control3D;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlModelDirAndUp",
        "modifiers": []
    },
    "closedialog": {
        "name": "closeDialog",
        "description": "Close the currently active user dialog with exit code. Most common exit codes are:\n\n```sqf\n#define IDC_OK            1 //emulate \"Ok\" button\n```\n\n\n```sqf\n#define IDC_CANCEL        2 //emulate \"Cancel\" button\n```\n",
        "syntaxArray": [
            {
                "Syntax": "**closeDialog** exitcode",
                "Params": "exitcode : [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncloseDialog 2;\n```\n",
            "\n```sqf\n#define IDC_CANCEL 2\ncloseDialog IDC_CANCEL;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/closeDialog",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "camcommitted": {
        "name": "camCommitted",
        "description": "Checks if the conduction of the last camCommit call already finished.",
        "syntaxArray": [
            {
                "Syntax": "**camCommitted** camera",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) -  \ntrue if the last camCommit already finished, false if not"
            }
        ],
        "examples": [
            "SQS:\n\n```sqf\n; create a camera object\n_cam = \"camera\" camCreate [5600,4800,10]\n_cam camSetTarget player\n_cam cameraEffect [\"internal\", \"BACK\"]\n_cam camCommit 0\n\n; smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [5680,4720,20]\n_cam camCommit 6\n@camCommitted _cam\n\n; proceed\n```\n",
            "SQF: \n```sqf\n_cam = \"camera\" camCreate [0, 0, 0];\n_cam camSetTarget player;\n_cam camSetRelPos [0, -5, 10];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 0;\n\nwaitUntil {camCommitted _cam};\n\n_cam camSetTarget player;\n_cam camSetRelPos [90, 25, 10];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 5;\n\nwaitUntil {camCommitted _cam};\n\n_cam camSetTarget player;\n_cam camSetRelPos [-90, -5, 10];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camCommitted",
        "modifiers": []
    },
    "camusenvg": {
        "name": "camUseNVG",
        "description": "Set / clear using of night vision during cutscenes. This command only works with [camCreate](https://community.bistudio.com/wiki/camCreate) created camera that is currently the main camera for the player (see example).",
        "syntaxArray": [
            {
                "Syntax": "**camUseNVG** set",
                "Params": "set: [Boolean](https://community.bistudio.com/wiki/Boolean) enable/disable night vision\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncamUseNVG true;\n```\n",
            "\n```sqf\nsetDate [2000,12,31,0,0];\n_cam = \"camera\" camCreate [0,0,0];\n_cam camSetTarget player;\n_cam camSetRelPos [0,-5,3];\n_cam cameraEffect [\"Internal\",\"Back\"];\n_cam camCommit 0;\ncamUseNVG true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camUseNVG",
        "modifiers": []
    },
    "creatediaryrecord": {
        "name": "createDiaryRecord",
        "description": "Creates a [diary](https://community.bistudio.com/wiki/Diary) entry. Supported tags and their parameters: [Show text](https://community.bistudio.com/wiki/createDiaryRecord#)\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "player createDiaryRecord [subject, text, task, taskState, showTitle]",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\nsubject: [String](https://community.bistudio.com/wiki/String)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\ntask: (Optional, default \n```sqf\ntaskNull\n```\n) - [Task](https://community.bistudio.com/wiki/Task)\n\ntaskState: [String](https://community.bistudio.com/wiki/String) (Optional, default \n```sqf\n?\n```\n) - Changes the state of the given task. Can be \"NONE\", \"CREATED\", \"ASSIGNED\", \"SUCCEEDED\", \"FAILED\", \"CANCELED\"\n\nshowTitle: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default \n```sqf\ntrue\n```\n) - Whether or not to show title in the description section as well *Since Arma 3 v1.96*\n\n",
                "Return": "[Diary Record](https://community.bistudio.com/wiki/Diary_Record)"
            },
            {
                "Syntax": "player createDiaryRecord [subject, [title, text], task, taskState, showTitle]",
                "Params": "player : [Object](https://community.bistudio.com/wiki/Object)\n\nsubject: [String](https://community.bistudio.com/wiki/String)\n\ntitle: [String](https://community.bistudio.com/wiki/String)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\ntask: (Optional, default \n```sqf\ntaskNull\n```\n) - [Task](https://community.bistudio.com/wiki/Task)\n\ntaskState: [String](https://community.bistudio.com/wiki/String) (Optional, default \n```sqf\n?\n```\n) - Changes the state of the given task. Can be \"NONE\", \"CREATED\", \"ASSIGNED\", \"SUCCEEDED\", \"FAILED\", \"CANCELED\"\n\nshowTitle: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default \n```sqf\ntrue\n```\n) - Whether or not to show title in the description section as well *Since Arma 3 v1.96*\n\n",
                "Return": "[Diary Record](https://community.bistudio.com/wiki/Diary_Record)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Intel\", \"Enemy base is on grid <marker name='enemyBase'>161170</marker>\"]]\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", \"Information gathered.<br /><img image='wellDone_ca.paa' />\"]\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"No Title\", \"description\"], taskNull, \"\", false];\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Font tag\",\"<font color='#7FFF00' size='30' face='TahomaB'>This will changed text size, colour and font</font>\"], taskNull, \"\",false];\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Image\", \"<img image='\\A3\\Ui_F_Curator\\Data\\Logos\\arma3_curator_artwork.jpg' width='500' height='800'/>\"], taskNull, \"\", false];\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Linebreak\",\"Line1<br></br>Line2<br></br><br></br>Line4\"], taskNull, \"\", false];\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Execute\",\"<execute expression='hint \"\"Some code\"\";'>Some text</execute>\"], taskNull, \"\", false];\n```\n",
            "\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"ExecuteClose\", \"<executeClose expression=\"\"hint 'Diary closed';\"\">Close Diary</executeClose>\"], taskNull, \"\", false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createDiaryRecord",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "camdestroy": {
        "name": "camDestroy",
        "description": "Destroys camera object created with [camCreate](https://community.bistudio.com/wiki/camCreate). This command doesn't need [camCommit](https://community.bistudio.com/wiki/camCommit). \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "camDestroy object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncamDestroy _cam;\n```\n",
            "\n```sqf\n_cam cameraEffect [\"terminate\",\"back\"];\ncamDestroy _cam;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camDestroy",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "creatempcampaigndisplay": {
        "name": "createMPCampaignDisplay",
        "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; for example, \n```sqf\nconfigFile >> \"CfgMissions\" >> \"MPMissions\" >> \"Apex\"\n```\n\nIf the class doesn't exist or isn't a mission collection, the display will be created empty.",
        "syntaxArray": [
            {
                "Syntax": "display createMPCampaignDisplay class",
                "Params": "display - [Display](https://community.bistudio.com/wiki/Display)\n\nclass: [String](https://community.bistudio.com/wiki/String) - Mission collection class [name](https://community.bistudio.com/wiki/name)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 46 createMPCampaignDisplay \"Apex\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createMPCampaignDisplay",
        "modifiers": []
    },
    "camcreate": {
        "name": "camCreate",
        "description": "Create a camera or a seagull object on the given position. The creation happens immediately and doesn't wait for [camCommit](https://community.bistudio.com/wiki/camCommit).\nAmong other commands, [cameraEffect](https://community.bistudio.com/wiki/cameraEffect) must be used to enter the camera's view and [camDestroy](https://community.bistudio.com/wiki/camDestroy) to delete the created camera. See also [Camera Control](https://community.bistudio.com/wiki/Category:Command_Group:_Camera_Control).\n> ",
        "syntaxArray": [
            {
                "Syntax": "type camCreate position",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - camera type, one of the following:\n\n* \"camera\"\n\n* \"seagull\" (a crow in Arma 2)\n\n* \"camconstruct\"\n\n* \"camcurator\" (Since Arma 3 Zeus)\n\n* \"crowe\" (crow - Arma 3)\n\n* or any vehicle class suitable to be spawned with cam\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) - position to create the object at\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the created camera"
            }
        ],
        "examples": [
            "\n```sqf\n_cam = \"camera\" camCreate (ASLToAGL eyePos player);\n```\n",
            "\n```sqf\n_flr = \"flare\" camCreate (position _myPlane); // works too\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camCreate",
        "modifiers": [
            "Local effect"
        ]
    },
    "asltoatl": {
        "name": "ASLToATL",
        "description": "Converts a position from [PositionASL](https://community.bistudio.com/wiki/PositionASL) to [PositionATL](https://community.bistudio.com/wiki/PositionATL)",
        "syntaxArray": [
            {
                "Syntax": "**ASLToATL** pos",
                "Params": "pos:  [PositionASL](https://community.bistudio.com/wiki/PositionASL) - position to convert\n\n",
                "Return": "[PositionATL](https://community.bistudio.com/wiki/PositionATL)"
            }
        ],
        "examples": [
            "\n```sqf\nASLToATL (getPosASL player) isEqualTo getPosATL player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ASLToATL",
        "modifiers": []
    },
    "diag_activesqfscripts": {
        "name": "diag_activeSQFScripts",
        "description": "Returns information about active [SQF](https://community.bistudio.com/wiki/SQF_Syntax) scripts. To see number of all scripts currently in the scheduler use [diag_activeScripts](https://community.bistudio.com/wiki/diag_activeScripts).",
        "syntaxArray": [
            {
                "Syntax": "diag_activeSQFScripts",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) - to format [[scriptName, fileName, isRunning, currentLine], ...]:\n\n* scriptName: [String](https://community.bistudio.com/wiki/String) - function or filename. Custom name can be set with [scriptName](https://community.bistudio.com/wiki/scriptName)\n\n* fileName: [String](https://community.bistudio.com/wiki/String)\n\n* isRunning: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* currentLine: [Number](https://community.bistudio.com/wiki/Number) - line currently executing"
            }
        ],
        "examples": [
            "\n```sqf\n[] spawn { hint str diag_activeSQFScripts; }; // displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 1]]\n```\n",
            "\n```sqf\n[] spawn {\n\thint str diag_activeSQFScripts; // displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 2]]\n};\n```\n",
            "\n```sqf\n[] spawn {\n\tscriptName \"aScript\"; \n\thint str diag_activeSQFScripts; // displays [[\"aScript\", \"\", true, 3]]\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_activeSQFScripts",
        "modifiers": []
    },
    "dynamicsimulationenabled": {
        "name": "dynamicSimulationEnabled",
        "description": "A getter for [enableDynamicSimulation](https://community.bistudio.com/wiki/enableDynamicSimulation)",
        "syntaxArray": [
            {
                "Syntax": "**dynamicSimulationEnabled** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str dynamicSimulationEnabled _myObject;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dynamicSimulationEnabled",
        "modifiers": []
    },
    "createlocation": {
        "name": "createLocation",
        "description": "Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes. For possible location types see [Location Types](https://community.bistudio.com/wiki/Location#Location_Types). For the actual name text of the location, use [text](https://community.bistudio.com/wiki/text) and [setText](https://community.bistudio.com/wiki/setText)",
        "syntaxArray": [
            {
                "Syntax": "**createLocation** [className, position, sizeX, sizeY]",
                "Params": "[className, position, sizeX, sizeY]: [Array](https://community.bistudio.com/wiki/Array)\n\nclassName: [String](https://community.bistudio.com/wiki/String) - see [Location Types](https://community.bistudio.com/wiki/Location#Location_Types)\n\nposition: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\nsizeX: [Number](https://community.bistudio.com/wiki/Number) in meters\n\nsizeY: [Number](https://community.bistudio.com/wiki/Number) in meters\n\n",
                "Return": "[Location](https://community.bistudio.com/wiki/Location)"
            }
        ],
        "examples": [
            "\n```sqf\n_location = createLocation [\"NameVillage\" , [4035,2151,10], 100, 100];\n```\n",
            "\n```sqf\n_location = createLocation [\"NameVillage\" , [4035,2151,10], 30, 30];\n_location setText \"Player town\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createLocation",
        "modifiers": [
            "Local effect"
        ]
    },
    "currentmagazinedetail": {
        "name": "currentMagazineDetail",
        "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.",
        "syntaxArray": [
            {
                "Syntax": "currentMagazineDetail object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_currentMagazineDetail = currentMagazineDetail player; // \"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"\n```\n",
            "\n```sqf\n_currentMagazineDetail = currentMagazineDetail Mi_48; // \"30mm HE Shells(250/250)[id:21]\n```\n",
            "\n```sqf\n_cmd = currentMagazineDetail player; // \"9mm 16Rnd Mag(13/16)[id/cr:10000011/0]\"\n_cmd splitString \"([ ]/:)\"; // [\"9mm\",\"16Rnd\",\"Mag\",\"13\",\"16\",\"id\",\"cr\",\"10000011\",\"0\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentMagazineDetail",
        "modifiers": []
    },
    "enablecaustics": {
        "name": "enableCaustics",
        "description": "Enable/disable caustics drawing.",
        "syntaxArray": [
            {
                "Syntax": "**enableCaustics** bool",
                "Params": "bool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableCaustics true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableCaustics",
        "modifiers": []
    },
    "currentmagazinedetailturret": {
        "name": "currentMagazineDetailTurret",
        "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
        "syntaxArray": [
            {
                "Syntax": "vehicle **currentMagazineDetailTurret** [turret path]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[turret path]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentMagazineDetailTurret",
        "modifiers": []
    },
    "isequaltype": {
        "name": "isEqualType",
        "description": "Compares 2 values by their type. A much faster alternative to [typeName](https://community.bistudio.com/wiki/typeName) a == [typeName](https://community.bistudio.com/wiki/typeName) b.",
        "syntaxArray": [
            {
                "Syntax": "val1 **isEqualType** val2",
                "Params": "val1: [Anything](https://community.bistudio.com/wiki/Anything)\n\nval2: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_var = [1,2,3];\n_var isEqualType 0; //false\n_var isEqualType []; //true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEqualType",
        "modifiers": []
    },
    "isfinal": {
        "name": "isFinal",
        "description": "Checks if [code](https://community.bistudio.com/wiki/Code) or a variable was compiled final with [compileFinal](https://community.bistudio.com/wiki/compileFinal).",
        "syntaxArray": [
            {
                "Syntax": "isFinal variable",
                "Params": "varName: [String](https://community.bistudio.com/wiki/String) - A [String](https://community.bistudio.com/wiki/String) pointing to a variable\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if final, [false](https://community.bistudio.com/wiki/false) if not"
            },
            {
                "Syntax": "isFinal code",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code) - Some code\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if final, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nmyCode = compileFinal \"a = a + 1\";\nif (isFinal myCode) then {systemChat \"Code is compiled final.\"};\n```\n",
            "\n```sqf\nif (isFinal BIS_fnc_arsenal) then {hint \"You can't edit this function!\"};\n```\n",
            "Avoid overwrite .rpt warnings\n```sqf\nif (!isFinal fnc_myCode) then { fnc_myCode = compileFinal str_myCode };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isFinal",
        "modifiers": []
    },
    "ctrlposition": {
        "name": "ctrlPosition",
        "description": "Returns the current position of 2D control as \n```sqf\n[x, y, w, h]\n```\n array. For 3D control it returns relative \n```sqf\n[x, y, z]\n```\n. If the control is part of a [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP), the returned position will be relative to the group's position.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlPosition** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format \n```sqf\n[x, y, w, h]\n```\n (2D) or \n```sqf\n[x, y, z]\n```\n (3D)"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = ctrlPosition _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlPosition",
        "modifiers": []
    },
    "gettextwidth": {
        "name": "getTextWidth",
        "description": "Returns estimated width of the text based on font type and size. Similar to [ctrlTextWidth](https://community.bistudio.com/wiki/ctrlTextWidth) but doesn't require a control and can be used to estimate text width for any control including buttons. Result does not include left and right margins (hardcoded at 0.008 each).\nAlways uses unicode (see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode)).",
        "syntaxArray": [
            {
                "Syntax": "text getTextWidth [font, size]",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) - text string to measure\n\n[font, size]: [Array](https://community.bistudio.com/wiki/Array)\n\nfont: [String](https://community.bistudio.com/wiki/String) - font type\n\nsize: [Number](https://community.bistudio.com/wiki/Number) - font size\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_textWidth = \"Hello World\" getTextWidth [\"PuristaMedium\", 0.03];\n```\n",
            "\n```sqf\n_textWidthInclMargins = (\"Hello World\" getTextWidth [\"PuristaMedium\", 0.03]) + 0.016;\n```\n",
            "\n```sqf\nprivate _ctrl = findDisplay 46 ctrlCreate [\"RscText\", -1]; \n_ctrl ctrlSetText \"TestString\"; \n_ctrl ctrlSetFont \"PuristaMedium\"; \n_ctrl ctrlSetFontHeight 0.04;\nctrlTextWidth _ctrl == (\"TestString\" getTextWidth [\"PuristaMedium\", 0.04]) + 0.016; // true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getTextWidth",
        "modifiers": []
    },
    "isequaltypearray": {
        "name": "isEqualTypeArray",
        "description": "Compares types of all elements of one array to types of all elements of another array.",
        "syntaxArray": [
            {
                "Syntax": "arr1 **isEqualTypeArray** arr2",
                "Params": "arr1: [Array](https://community.bistudio.com/wiki/Array)\n\narr2: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,true,\"three\"];\n_arr isEqualTypeArray [0,objNull,\"\"]; // false\n_arr isEqualTypeArray [0,false,\"\"]; // true\n```\n",
            "\n```sqf\n_arr = [1,2];\n_arr isEqualTypeArray [0]; // false\n_arr isEqualTypeArray [0,0]; // true\n_arr isEqualTypeArray [0,0,0]; // false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEqualTypeArray",
        "modifiers": []
    },
    "finddisplay": {
        "name": "findDisplay",
        "description": "Finds a display by its IDD which can either be defined in [missionConfigFile](https://community.bistudio.com/wiki/missionConfigFile) ([description.ext](https://community.bistudio.com/wiki/description.ext)) or [configFile](https://community.bistudio.com/wiki/configFile) ([config.cpp](https://community.bistudio.com/wiki/config.cpp))\nIf the specified display can't be found [displayNull](https://community.bistudio.com/wiki/displayNull) (\"No display\") is returned, which can be tested with the [isNull](https://community.bistudio.com/wiki/isNull) command.\n\n> \nA list of common displays can be found in the notes below; for a full list, see [findDisplay/Arma 3 IDD list](https://community.bistudio.com/wiki/findDisplay/Arma_3_IDD_list).",
        "syntaxArray": [
            {
                "Syntax": "findDisplay idd",
                "Params": "idd: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Display](https://community.bistudio.com/wiki/Display)"
            }
        ],
        "examples": [
            "\n```sqf\n[] spawn\n{\n\twaitUntil { !isNull findDisplay 46 };\n\thint \"Mission Display is now available!\";\n};\n```\n",
            "\n```sqf\n_display = findDisplay 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/findDisplay",
        "modifiers": []
    },
    "finishmissioninit": {
        "name": "finishMissionInit",
        "description": "Finish world initialization before mission is launched.",
        "syntaxArray": [
            {
                "Syntax": "**finishMissionInit**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "finishMissionInit"
        ],
        "Url": "https://community.bistudio.com/wiki/finishMissionInit",
        "modifiers": []
    },
    "lnbaddarray": {
        "name": "lnbAddArray",
        "description": "Adds list of rows of strings.",
        "syntaxArray": [
            {
                "Syntax": "**lnbAddArray** [idc, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]",
                "Params": "[idc, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) or [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - index"
            }
        ],
        "examples": [
            "\n```sqf\nlnbAddArray [102,[[[\"#1\"],[1],[\"#1\"]]]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbAddArray",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lnbclear": {
        "name": "lnbClear",
        "description": "Clears all items in the given listbox or combobox.",
        "syntaxArray": [
            {
                "Syntax": "lnbClear idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "lnbClear ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbClear _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbClear",
        "modifiers": []
    },
    "fadesound": {
        "name": "fadeSound",
        "description": "Changes the sound volume smoothly within the given time. > ",
        "syntaxArray": [
            {
                "Syntax": "time **fadeSound** volume",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - Fade interval in seconds\n\nvolume: [Number](https://community.bistudio.com/wiki/Number) - Sound volume range 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n5 fadeSound 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fadeSound",
        "modifiers": [
            "Local effect"
        ]
    },
    "getcustomaimcoef": {
        "name": "getCustomAimCoef",
        "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.",
        "syntaxArray": [
            {
                "Syntax": "**getCustomAimCoef** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "_coef = **getCustomAimCoef** player"
        ],
        "Url": "https://community.bistudio.com/wiki/getCustomAimCoef",
        "modifiers": [
            "Global argument"
        ]
    },
    "isequaltypeall": {
        "name": "isEqualTypeAll",
        "description": "Compares types of all elements of an array to the type of a single value.",
        "syntaxArray": [
            {
                "Syntax": "arr **isEqualTypeAll** val",
                "Params": "arr: [Array](https://community.bistudio.com/wiki/Array)\n\nval: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3,4,5,6,7,8,9,0];\n_arr isEqualTypeAll \"\"; //false\n_arr isEqualTypeAll 0; //true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEqualTypeAll",
        "modifiers": []
    },
    "glanceat": {
        "name": "glanceAt",
        "description": "Control what the unit(s) is/are glancing at (target or [Position](https://community.bistudio.com/wiki/Position)). If target is used, it will get revealed fully.\n\nHow frequently the unit(s) is/are glancing there depends on behaviour.",
        "syntaxArray": [
            {
                "Syntax": "unit(s) **glanceAt** position",
                "Params": "unit(s): [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_someSoldier glanceAt _otherSoldier\n```\n",
            "\n```sqf\n[_someSoldier, _otherSoldier] glanceAt markerPos \"markerOne\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/glanceAt",
        "modifiers": []
    },
    "magazinesdetail": {
        "name": "magazinesDetail",
        "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. \n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use [currentMagazineDetail](https://community.bistudio.com/wiki/currentMagazineDetail) to get this information for a currently loaded magazine.",
        "syntaxArray": [
            {
                "Syntax": "**magazinesDetail** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "magazinesDetail [vehicle, includeEmpty] *Since Arma 3 v1.99.146475*",
                "Params": "[vehicle, includeEmpty]: [Array](https://community.bistudio.com/wiki/Array)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_magazinesDetail = magazinesDetail player;\n/*\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id:3]\",\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id:9]\",\n\t\"9mm 16Rnd Mag(16/16)[id:12]\",\n\t\"Smoke Grenade (Green)(1/1)[id:14]\",\n\t\"Chemlight (Green)(1/1)[id:16]\",\n\t\"RGO Frag Grenade(1/1)[id:18]\"\n]\n*/\n```\n",
            "\n```sqf\n_magazinesDetail = magazinesDetail Mi_48;\n{{codecomment/*\n[\n\t\"30mm APDS shells(250/250)[id:20]\",\n\t\"30mm HE Shells(250/250)[id:21]\",\n\t\"Scalpel E2(8/8)[id:22]\",\n\t\"Skyfire(38/38)[id:23]\"\n]\n*/}}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesDetail",
        "modifiers": []
    },
    "lbsetcolor": {
        "name": "lbSetColor",
        "description": "Sets the color of the item (left) with the given index of the listbox or combobox with id idc of the topmost user [Dialog](https://community.bistudio.com/wiki?title=Dialog&action=edit&redlink=1) to color.",
        "syntaxArray": [
            {
                "Syntax": "lbSetColor [idc, index, color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - control's IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control lbSetColor [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetColor [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_control lbSetColor [0, [0, 1, 0, 0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetColor",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lbsetcolorright": {
        "name": "lbSetColorRight",
        "description": "Sets the color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog) to color.\n\nColour is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "**lbSetColorRight**  [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetColorRight** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetColorRight [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_control lbSetColorRight [0, [0, 1, 0, 0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetColorRight",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lightison": {
        "name": "lightIsOn",
        "description": "Check if lampost is on (shining).\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "lightIsOn lamppost",
                "Params": "lamppost: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Can be one of:\n\n* **\"ON\"** - light is on\n\n* **\"OFF\"** - light is off\n\n* **\"AUTO\"** - applicable only to the light of type \"StreetLamp\" and is only on during the night.\n\n* **\"ERROR\"** - if command fails"
            }
        ],
        "examples": [
            "\n```sqf\nif (lightIsOn nearestObject [player, \"StreetLamp\"] == \"ON\") then { hint \"nightime\"; };\n```\n",
            "\n```sqf\n_it = lightIsOn object 159582\n```\n",
            "\n```sqf\nif (count allMissionObjects \"StreetLamp\" == 0) then {\n\thint \"Objects compatible with 'lightIsOn' are not found.\";\n} else {\n\thint \"'lightIsOn' compatible objects are found!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lightIsOn",
        "modifiers": []
    },
    "addhandgunitem": {
        "name": "addHandgunItem",
        "description": "Adds weapon item, including magazine, directly to the [handgunWeapon](https://community.bistudio.com/wiki/handgunWeapon). This is used for infantry weapons.",
        "syntaxArray": [
            {
                "Syntax": "unit **addHandgunItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n player addHandgunItem \"muzzle_snds_L\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addHandgunItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "lightdetachobject": {
        "name": "lightDetachObject",
        "description": "Detach light from object.",
        "syntaxArray": [
            {
                "Syntax": "lightDetachObject light",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlightDetachObject _light\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lightDetachObject",
        "modifiers": []
    },
    "assignteam": {
        "name": "assignTeam",
        "description": "Assigns the unit (in case of a vehicle, its commander) to the given team. Team is an option in group control (unit management) menu that allows to split player group in teams and then give bulk order to separate teams. In order to operate properly, the command requires specific conditions:\n\n* The command requires [player](https://community.bistudio.com/wiki/player) to be fully initialised\n\n* The unit getting assigned must be either player himself or a unit in player's group\n\n* Units in player's group as well as player himself can all have different teams assigned\n\n* The colour of the assigned team for a unit is seen on the group management UI as well as squad radar\nThe possible team values (colours) are: \n\n* \"MAIN\" - (white)\n\n* \"RED\" - (red)\n\n* \"GREEN\" - (green)\n\n* \"BLUE\" - (blue)\n\n* \"YELLOW\"  - (yellow)\n**NOTE**: In older version of the game the effect of this command is local [LELocal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)",
        "syntaxArray": [
            {
                "Syntax": "unit **assignTeam** team",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nteam: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier2 assignTeam \"RED\";\n```\n",
            "In a unit's init script in the editor you should use the following. Or else you might experience [race conditions](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Race_condition). \n\n```sqf\n0 = this spawn {_this assignTeam \"RED\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignTeam",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "assignedvehiclerole": {
        "name": "assignedVehicleRole",
        "description": "Returns the role a unit is assigned to within its assigned vehicle.\n\n\n**Notes:**\n\n* When an unit enters a vehicle crew position, it gets assigned the vehicle role automatically for the given crew position.\n\n* The unit does not have to be in the vehicle when getting the role assignment (ie via assignAsXXX or human/AI GL getIn radio commands).\n\n* GL getIn radio commands result in instant assignment - the unit does not yet have to occupy the crew position.\n\n* Dying units will let go of the assigned role after a few seconds - seems the delay is independent of being in the vehicle or not.\n\n* An unit will hold on to its assigned role after exiting the vehicle.\n\n* One has to use [unassignVehicle](https://community.bistudio.com/wiki/unassignVehicle) (and stop an AI GL to assign vehicle positions again) or [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle) to remove the assignment - or assigned to another vehicle.\n\n* A vehicle position/role can only be assigned to one unit at a time. So even when not (visually) occupied, the \"seat\" may be blocked/reserved by another unit.\n\n* A player can still get into the vehicle position already assigned if not already taken, or switch seats with AI (if [leader](https://community.bistudio.com/wiki/leader) or [effectiveCommander](https://community.bistudio.com/wiki/effectiveCommander) for those AI).",
        "syntaxArray": [
            {
                "Syntax": "**assignedVehicleRole** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - The array which is returned contains:\n\n* [] - Not assigned to any vehicle\n\n* [\"driver\"] - Assigned as driver\n\n* [\"cargo\"] (or [\"cargo\", [turret path]] since Arma 3 1.31.127272) - Assigned as cargo\n\n* [\"turret\", [turret path]] - Assigned to a turret"
            }
        ],
        "examples": [
            "\n```sqf\n_RoleArray = assignedVehicleRole player;\n```\n",
            "Get weapons available to player at player occupied turret:\n```sqf\n_weaponsTurret = vehicle player weaponsTurret (assignedVehicleRole player select 1);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedVehicleRole",
        "modifiers": [
            "Global argument"
        ]
    },
    "allcurators": {
        "name": "allCurators",
        "description": "Returns list of all curator logic units, not the units assigned to the logic.",
        "syntaxArray": [
            {
                "Syntax": "**allCurators**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_allCuratorLogics = allCurators;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allCurators",
        "modifiers": []
    },
    "assignitem": {
        "name": "assignItem",
        "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.",
        "syntaxArray": [
            {
                "Syntax": "unit **assignItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbluforUnit addItem \"NVGoggles\";\nbluforUnit assignItem \"NVGoggles\";\nopforUnit addItem \"NVGoggles_OPFOR\";\nopforUnit assignItem \"NVGoggles_OPFOR\";\nindependentUnit addItem \"NVGoggles_INDEP\";\nindependentUnit assignItem \"NVGoggles_INDEP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignItem",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "curatormouseover": {
        "name": "curatorMouseOver",
        "description": "Returns [Curator Editable Object](https://community.bistudio.com/wiki/curatorEditableObjects) under curator mouse pointer.",
        "syntaxArray": [
            {
                "Syntax": "curatorMouseOver",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)\n\n* [] - when not in curator mode\n\n* [\"\"] - if no curator editable object under the pointer in curator mode\n\n* [[typeName](https://community.bistudio.com/wiki/typeName), [Curator Editable Object](https://community.bistudio.com/wiki/curatorEditableObjects)] - if there is curator editable object under the pointer in curator mode"
            }
        ],
        "examples": [
            "\n```sqf\n_mouseOver = curatorMouseOver; // Possible return value: [\"OBJECT\", 3594ab00# 164218: apc_wheeled_01_cannon_f.p3d]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorMouseOver",
        "modifiers": [
            "Local argument"
        ]
    },
    "buldozer_reloadopermap": {
        "name": "buldozer_reloadOperMap",
        "description": "Reload oper map visible in costMap diag tool. Working only in [buldozer](https://community.bistudio.com/wiki/Oxygen_Viewer).",
        "syntaxArray": [
            {
                "Syntax": "**buldozer_reloadOperMap**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbuldozer_reloadOperMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buldozer_reloadOperMap",
        "modifiers": []
    },
    "magazinesturret": {
        "name": "magazinesTurret",
        "description": "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use [magazinesAllTurrets](https://community.bistudio.com/wiki/magazinesAllTurrets).\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle **magazinesTurret** turretPath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "vehicle **magazinesTurret** [turretPath, includeEmpty] *Since Arma 3 v2.01.146669*",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - turret path\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) - [true](https://community.bistudio.com/wiki/true) = include empty magazines, [false](https://community.bistudio.com/wiki/false) = exclude empty magazines - same behaviour as the primary syntax\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_mags = vehicle player magazinesTurret [0, 0];\n```\n",
            "\n```sqf\n_mags = _tank magazinesTurret [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesTurret",
        "modifiers": [
            "Global argument"
        ]
    },
    "buildingexit": {
        "name": "buildingExit",
        "description": "Returns the given indexed exit in a building. The returned value is in format Position.",
        "syntaxArray": [
            {
                "Syntax": "building **buildingExit** index",
                "Params": "building: [Object](https://community.bistudio.com/wiki/Object)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)"
            }
        ],
        "examples": [
            "\n```sqf\n_building buildingExit 0\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buildingExit",
        "modifiers": []
    },
    "curatorwaypointcost": {
        "name": "curatorWaypointCost",
        "description": "Return current price for placing waypoints (curator specific).",
        "syntaxArray": [
            {
                "Syntax": "**curatorWaypointCost** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nvar_wpcost = curatorWaypointCost bis_curator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorWaypointCost",
        "modifiers": []
    },
    "cadetmode": {
        "name": "cadetMode",
        "description": "**Prior to Arma 3** it returns if the player is currently playing in cadet or veteran mode.",
        "syntaxArray": [
            {
                "Syntax": "**cadetMode**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - true when playing in cadet mode, false when playing in veteran mode"
            }
        ],
        "examples": [
            "\n```sqf\n? (cadetMode) : _AIsoldier setSkill 0.1 //sqs\n```\n",
            "\n```sqf\nif (cadetMode) then {_AIsoldier setSkill 0.1}; //sqf\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cadetMode",
        "modifiers": []
    },
    "buttonaction": {
        "name": "buttonAction",
        "description": "Returns the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs and controls.",
        "syntaxArray": [
            {
                "Syntax": "**buttonAction** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Button IDC\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "**buttonAction** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nbuttonSetAction [100, {player exec \"reply.sqs\"}]\n_action = buttonAction 100; // Returns {player exec \"reply.sqs\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buttonAction",
        "modifiers": [
            "Local argument"
        ]
    },
    "setwaypointbehaviour": {
        "name": "setWaypointBehaviour",
        "description": "Switches the unit behaviour when the waypoint becomes active.\n\n\nPossible values are:\n\n* \"UNCHANGED\"\n\n* \"CARELESS\"\n\n* \"SAFE\"\n\n* \"AWARE\"\n\n* \"COMBAT\"\n\n* \"STEALTH\"\n\nSee the [AIBehaviour](https://community.bistudio.com/wiki/AIBehaviour) page for details of the effect of this command on AI units.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointBehaviour** mode",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nmode: [String](https://community.bistudio.com/wiki/String) As Above\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointBehaviour \"AWARE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointBehaviour",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "magazinesdetailuniform": {
        "name": "magazinesDetailUniform",
        "description": "Returns an array with the type names of all the unit's uniform magazines.",
        "syntaxArray": [
            {
                "Syntax": "**magazinesDetailUniform** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "magazinesDetailUniform [unit, includeEmpty] *Since Arma 3 v1.99.146475*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nmagazinesDetailUniform player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesDetailUniform",
        "modifiers": []
    },
    "addvehicle": {
        "name": "addVehicle",
        "description": "Adds a specified vehicle for use by a specified AI led group.\n\nNotes:\n\n* The vehicle will be considered as available for use by this group.\n\n* It creates a/adds to the vehicle pool for the given group to use. So more than one vehicle can be added to a group, and more than one group can be added to a vehicle.\n\n* This is relevant for some waypoints like getIn and guard - potentially more.\n\n* The AI choosing what vehicle to use based on the vehicle's [cost](https://community.bistudio.com/wiki/CfgVehicles_Config_Reference#cost) value. Probably also distance to the available vehicles plays a role.\n\n* When deciding whether to board a vehicle, AI leaders seem to only consider the transport benefit of a vehicle, ignoring any combat benefits the vehicle may provide.\n\n* This happens also implicitly when using assignAsXXX or moveInXXX commands, or player GL orders units to enter a vehicle, as well editor or Zeus placed vehicles with units assigned to it.\n\n* One can make an AI GL order his group to board the specified vehicle with [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) [true](https://community.bistudio.com/wiki/true). Setting to [false](https://community.bistudio.com/wiki/false) will cancel the order, but the AI will first enter to get out again immediately thereafter. To immediately (potentially temporarily) halt the AI moving to the vehicle one can use  [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) [false](https://community.bistudio.com/wiki/false).\n\n* When vehicle is added in this way, it can appear as a target for the enemy - even if the vehicle currently has no crew.\n\n* If used on a vehicle already driven by a member of another group, the driver will continue under his own group's orders, which may not benefit the addVehicle group.\n\n* Seems to have no affect on AI under player command - at least as long as the player remains the GL.\n\n* To remove vehicle from a group, use [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle).",
        "syntaxArray": [
            {
                "Syntax": "groupName **addVehicle** vehicleName",
                "Params": "groupName: [Group](https://community.bistudio.com/wiki/Group)\n\nvehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_grp addVehicle _vehicle\n```\n",
            "Using on crewed vehicle:\n```sqf\ngroup tank addVehicle tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addVehicle",
        "modifiers": [
            "Local argument"
        ]
    },
    "cbsetchecked": {
        "name": "cbSetChecked",
        "description": "Sets the current state of a [CT_CHECKBOX](https://community.bistudio.com/wiki/CT_CHECKBOX) control. Use \"CheckedChanged\" control event handler with it.",
        "syntaxArray": [
            {
                "Syntax": "control **cbSetChecked** state",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control)\n\nstate : [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myCheckBox cbSetChecked true;\n```\n",
            "\n```sqf\n_disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n_chk = _disp ctrlCreate [\"RscCheckBox\", -1];\n_chk cbSetChecked true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cbSetChecked",
        "modifiers": []
    },
    "simpletasks": {
        "name": "simpleTasks",
        "description": "Return all simple tasks assigned to given unit.",
        "syntaxArray": [
            {
                "Syntax": "**simpleTasks** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_tasks = simpleTasks player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/simpleTasks",
        "modifiers": []
    },
    "setpilotcameratarget": {
        "name": "setPilotCameraTarget",
        "description": "Sets an area or target to be tracked by the object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera). \nTo track an object the vehicle has to have appropriate sensors ([scanners](https://community.bistudio.com/wiki/A3_Targeting_config_reference#CfgVehicles)) that can detect the given target type.\nUsing [objNull](https://community.bistudio.com/wiki/objNull) will unlock the camera",
        "syntaxArray": [
            {
                "Syntax": "[bool](https://community.bistudio.com/wiki/bool) = object **setPilotCameraTarget** target",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) - format PositionASL\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_pilotCamTrack = vehicle player setPilotCameraTarget [2100,4200,4.2];\n```\n",
            "\n```sqf\n_pilotCamTrack = vehicle player setPilotCameraTarget BIS_Edita;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPilotCameraTarget",
        "modifiers": [
            "Local argument"
        ]
    },
    "diag_lightnewload": {
        "name": "diag_lightNewLoad",
        "description": "Allows loading of lightning config during the gameplay (effectively changing the current scene lightning). Filename path can be either absolute or relative. The file must contain only the class LightningNew, which should contain lightning configuration.",
        "syntaxArray": [
            {
                "Syntax": "diag_lightNewLoad path",
                "Params": "path: [String](https://community.bistudio.com/wiki/String) - The path to the config filename\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_lightNewLoad \"o:\\lighting.txt\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_lightNewLoad",
        "modifiers": []
    },
    "add3deneventhandler": {
        "name": "add3DENEventHandler",
        "description": "Add code to be run when a [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) event is triggered.\n\nSee the list of all [Eden Editor Event Handlers](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers:_Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**add3DENEventHandler** [type,code]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\neh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/add3DENEventHandler",
        "modifiers": []
    },
    "addmagazinecargoglobal": {
        "name": "addMagazineCargoGlobal",
        "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units.\n\nMP Synchronized",
        "syntaxArray": [
            {
                "Syntax": "vehicleName addMagazineCargoGlobal [magazineName, count]",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object) - vehicle to add the magazines to\n\n[magazineName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String) - magazine name. See [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - number of magazines to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_truck addMagazineCargoGlobal [\"M16\", 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazineCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "findnearestenemy": {
        "name": "findNearestEnemy",
        "description": "Finds the nearest enemy to the specified position. Returns a null object if the object's group does not [know about](https://community.bistudio.com/wiki/knowsAbout) any enemies. This command will return nearest object that is known to the unit and is considered enemy. An empty vehicle that is part of enemy group assets (see [addVehicle](https://community.bistudio.com/wiki/addVehicle)) can be returned as valid nearest target.",
        "syntaxArray": [
            {
                "Syntax": "object **findNearestEnemy** position",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_myNearestEnemy = (units _myGroup select 0) findNearestEnemy player;\n```\n",
            "\n```sqf\n_myNearestEnemy = player findNearestEnemy player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/findNearestEnemy",
        "modifiers": []
    },
    "actionkeysimages": {
        "name": "actionKeysImages",
        "description": "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or [user action names](https://community.bistudio.com/wiki/Category:Key_Actions).",
        "syntaxArray": [
            {
                "Syntax": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text) = **actionKeysImages** userAction",
                "Params": "userAction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            },
            {
                "Syntax": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text) = **actionKeysImages** [userAction, maxKeys]",
                "Params": "[userAction, maxKeys]: [Array](https://community.bistudio.com/wiki/Array)\n\nuserAction: [String](https://community.bistudio.com/wiki/String)\n\nmaxKeys: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "_text = actionKeysImages \"ReloadMagazine\"",
            "_reload = actionKeysImages [\"ReloadMagazine\",1]will return **\"R\"** (incl. the quotation marks!)"
        ],
        "Url": "https://community.bistudio.com/wiki/actionKeysImages",
        "modifiers": []
    },
    "addmagazinepool": {
        "name": "addMagazinePool",
        "description": "Adds magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.",
        "syntaxArray": [
            {
                "Syntax": "**addMagazinePool** [magazineName, count]",
                "Params": "magazineName: [String](https://community.bistudio.com/wiki/String) - Magazine class name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - Number of magazines to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\naddMagazinePool [\"M16\", 20];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazinePool",
        "modifiers": []
    },
    "addmagazineturret": {
        "name": "addMagazineTurret",
        "description": "Adds a magazine to the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. Since Arma 3  v1.56 it is possible to set custom ammo count in added magazine.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **addMagazineTurret** [magazineName, turretPath, ammoCount]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[magazineName, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\nammoCount (Optional): [Number](https://community.bistudio.com/wiki/Number) (*since Arma 3 v1.56*) - required ammo count\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tank addMagazineTurret [\"SmokeLauncherMag\",[0,0]];\n```\n",
            "\n```sqf\n_tank addMagazineTurret [\"20Rnd_120mmSABOT_M1A2\",[0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazineTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "disableserialization": {
        "name": "disableSerialization",
        "description": "Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types). See [Namespace serialization](https://community.bistudio.com/wiki/Namespace#Namespace_serialization) for more information.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "disableSerialization",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndisableSerialization;\nprivate _display = findDisplay 46;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableSerialization",
        "modifiers": []
    },
    "set3denattributes": {
        "name": "set3DENAttributes",
        "description": "Set entity [attributes](https://community.bistudio.com/wiki/Eden_Editor:_Entity_Attributes).\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see [Setting Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Attributes).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**set3DENAttributes** [[<entities1>,<class1>,<value1>], ..., [<entitiesN>,<classN>,<valueN>]]",
                "Params": "entities: [Array](https://community.bistudio.com/wiki/Array) of types [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\nclass: [String](https://community.bistudio.com/wiki/String) - attribute name\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - new attribute value\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the value was set"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENAttributes [[get3DENSelected \"Object\",\"ControlMP\",true ]];\n```\n\nSet all selected objects as playable"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENAttributes",
        "modifiers": []
    },
    "agent": {
        "name": "agent",
        "description": "Return a person for a given agent.",
        "syntaxArray": [
            {
                "Syntax": "**agent** teamMember",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_obj = agent teamMember _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/agent",
        "modifiers": []
    },
    "camsetfocus": {
        "name": "camSetFocus",
        "description": "Sets camera focus range in format [distance, blur]. blur param - sets the camera focus blur. It does not automatically commit changes (see [camCommit](https://community.bistudio.com/wiki/camCommit)). Use [-1, -1] to disable focus completely.",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetFocus** focusRange",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nfocusRange: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_camera camSetFocus [50, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetFocus",
        "modifiers": []
    },
    "addmagazine": {
        "name": "addMagazine",
        "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma 3), any further addMagazine commands are ignored. If class of magazine does not exist, an error message is printed in .rpt:\n\n```sqf\nplayer addMagazine \"dasdsa\"; // .rpt: Given magazine[dasdsa] not found)\n```\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "unitName addMagazine magazineName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) - person to add the magazines to\n\nmagazineName: [String](https://community.bistudio.com/wiki/String) - magazine name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unitName addMagazine [magazineName, ammoCount]\n[](https://community.bistudio.com/wiki/Category:Arma_2:_Operation_Arrowhead)[1.62](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_2:_Operation_Arrowhead_version_1.62) [LALocal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)[GEGlobal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)\n[](https://community.bistudio.com/wiki/Category:Arma_3)[1.00](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.00) [GAGlobal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)[GEGlobal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) - person to add the magazines to\n\nmagazineName: [String](https://community.bistudio.com/wiki/String) - magazine name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\nammoCount: [Number](https://community.bistudio.com/wiki/Number) - Ammo quantity to be added to magazine. If it goes beyond maximum magazine capacity, the magazine will be given full and not overloaded.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addMagazine \"30Rnd_556x45_STANAG\";\n```\n",
            "\n```sqf\nplayer addMagazine [\"30Rnd_556x45_STANAG\", 15]; // since Arma 2 OA 1.62\n```\n",
            "\n```sqf\nnonLocalUnit addMagazine [\"30Rnd_556x45_STANAG\", 15]; // global argument since Arma 3\n```\n",
            "\n```sqf\nplayer addMagazine [\"30Rnd_556x45_STANAG\", 9999]; // will give a 30 rounds magazine anyway\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazine",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "addbackpack": {
        "name": "addBackpack",
        "description": "Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit.\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit addBackpack backpackClassName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\npackClassName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nthis addBackpack \"TK_RPG_Backpack_EP1\";\n```\n",
            "\n```sqf\n_mySoldierDude addBackpack \"US_Patrol_Pack_EP1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addBackpack",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "additemtouniform": {
        "name": "addItemToUniform",
        "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.",
        "syntaxArray": [
            {
                "Syntax": "unit **addItemToUniform** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addItemToUniform \"itemGPS\";\n```\n",
            "\n```sqf\nplayer addItemToUniform \"hgun_Rook40_F\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItemToUniform",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "actionids": {
        "name": "actionIDs",
        "description": "Returns [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number), where numbers are IDs of all user actions added to given entity with [addAction](https://community.bistudio.com/wiki/addAction) command.",
        "syntaxArray": [
            {
                "Syntax": "actionIDs entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object) - entity with added user actions\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array with user action IDs"
            }
        ],
        "examples": [
            "\n```sqf\n_actions = actionIDs player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/actionIDs",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "lbsettooltip": {
        "name": "lbSetTooltip",
        "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetTooltip** [idc, index, tooltip]",
                "Params": "[idc, index, tooltip]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ntooltip: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetTooltip** [index, tooltip]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, tooltip]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ntooltip: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetTooltip [101, 1, \"tooltip\"];\n```\n",
            "\n```sqf\n_control lbSetTooltip [0, \"another tooltip\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetTooltip",
        "modifiers": []
    },
    "enableirlasers": {
        "name": "enableIRLasers",
        "description": "Allows the AI to use IR lasers.",
        "syntaxArray": [
            {
                "Syntax": "unitOrGroup enableIRLasers value",
                "Params": "unitOrGroup: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group) - the unit or the group allowed to use IR lasers\n\nvalue: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ngroup player enableIRLasers true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableIRLasers",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "teamtype": {
        "name": "teamType",
        "description": "Returns a type of given team.",
        "syntaxArray": [
            {
                "Syntax": "**teamType** team",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_type = teamType _team;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teamType",
        "modifiers": []
    },
    "channelenabled": {
        "name": "channelEnabled",
        "description": "Returns [Array](https://community.bistudio.com/wiki/Array) of [Booleans](https://community.bistudio.com/wiki/Boolean) in format [enabledChat, enabledVoN] for the given channel. For more information about enabling/disabling of chat channels see [enableChannel](https://community.bistudio.com/wiki/enableChannel).\n",
        "syntaxArray": [
            {
                "Syntax": "channelEnabled channelID",
                "Params": "channelID: [Number](https://community.bistudio.com/wiki/Number) - [Channel ID](https://community.bistudio.com/wiki/Channel_IDs) (see description)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [enabledChat, enabledVoN]"
            }
        ],
        "examples": [
            "\n```sqf\n_isGlobalChatEnabled = (channelEnabled 0) select 0; // check if user can use text on global channel\n```\n",
            "\n```sqf\n_isGlobalVoiceEnabled = (channelEnabled 0) select 1; // check if user can use the VoN on global channel\n```\n",
            "\n```sqf\n(channelEnabled 0) params [\"_isGlobalChatEnabled\", \"_isGlobalVoiceEnabled\"]; // sets both variables\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/channelEnabled",
        "modifiers": []
    },
    "mapanimclear": {
        "name": "mapAnimClear",
        "description": "Clear map animation.",
        "syntaxArray": [
            {
                "Syntax": "**mapAnimClear**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmapAnimClear;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mapAnimClear",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "secondaryweaponmagazine": {
        "name": "secondaryWeaponMagazine",
        "description": "Collects all loaded [magazines](https://community.bistudio.com/wiki/magazines) from all [secondaryWeapon](https://community.bistudio.com/wiki/secondaryWeapon) muzzles and returns them in [Array](https://community.bistudio.com/wiki/Array), otherwise it returns []. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**secondaryWeaponMagazine** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str secondaryWeaponMagazine player; //[\"NLAW_F\"]\n\n```\n",
            "\n```sqf\n_array = secondaryWeaponMagazine player;\nif (count _array > 0) then {\n\thint (\"Secondary weapon is loaded with \" + (_array select 0) + \"!\");\n} else {\n\tif (secondaryWeapon player != \"\") then {\n\t\thint \"Secondary weapon is not loaded!\";\n\t} else {\n\t\thint \"Player doesn't have a secondary weapon!\";\n\t};\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/secondaryWeaponMagazine",
        "modifiers": []
    },
    "setgroupidglobal": {
        "name": "setGroupIdGlobal",
        "description": "A [global](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality) equivalent of  [setGroupId](https://community.bistudio.com/wiki/setGroupId).",
        "syntaxArray": [
            {
                "Syntax": "group setGroupIdGlobal [format, keyword1, ..., keywordN]",
                "Params": "group: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nformat: [String](https://community.bistudio.com/wiki/String) - format template (e.g \"%keyword1 - %keyword2 / %keyword4 (%keyword3)\")\n\nkeyword1..n: [String](https://community.bistudio.com/wiki/String) - keyword value\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ngroup player setGroupIdGlobal [\"PAPA BEAR\"];\nhint groupId group player; // \"PAPA BEAR\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupIdGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "sethitpointdamage": {
        "name": "setHitPointDamage",
        "description": "Set the current level of damage for a specific Hit Point (specified by its config class).\n\n* 0: no damage\n\n* 1: full damage\nSee also [BIS_fnc_setHitPointDamage](https://community.bistudio.com/wiki/BIS_fnc_setHitPointDamage) for setting hit with dependency",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setHitPointDamage** [hitPointName, damage, useEffects]",
                "Params": "vehicle : [Object](https://community.bistudio.com/wiki/Object) - vehicle to be damaged\n\n[hitPointName, damage]: [Array](https://community.bistudio.com/wiki/Array)\n\nhitPointName: [String](https://community.bistudio.com/wiki/String) - name of the Hit Point class\n\ndamage: [Number](https://community.bistudio.com/wiki/Number) - level of damage\n\nuseEffects (Optional, default [true](https://community.bistudio.com/wiki/true)): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to skip destruction effects *Since Arma 3 v1.67*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setHitPointDamage [\"hitEngine2\", 1.0];\n```\n",
            "\n```sqf\nplayer setHitPointDamage [\"hitHead\", 0.5];\nplayer setHitPointDamage [\"hitBody\", 0.5];\nplayer setHitPointDamage [\"hitHands\", 0.5];\nplayer setHitPointDamage [\"hitLegs\", 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setHitPointDamage",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "sethudmovementlevels": {
        "name": "setHUDMovementLevels",
        "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.",
        "syntaxArray": [
            {
                "Syntax": "**setHUDMovementLevels** [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]",
                "Params": "[minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, position]: [Array](https://community.bistudio.com/wiki/Array)\n\nminSpeed: [Number](https://community.bistudio.com/wiki/Number) - Units: m/s\n\nmaxSpeed: [Number](https://community.bistudio.com/wiki/Number) - Units: m/s\n\nminAlt: [Number](https://community.bistudio.com/wiki/Number) - Units: m\n\nmaxAlt: [Number](https://community.bistudio.com/wiki/Number) - Units: m\n\nminDir: [Number](https://community.bistudio.com/wiki/Number) - Units: deg\n\nmaxDir: [Number](https://community.bistudio.com/wiki/Number) - Units: deg\n\ntargetOrPosition: [Object](https://community.bistudio.com/wiki/Object) or [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetHUDMovementLevels [20,30,-1,-1,0.23,2.1,[0,0,0]]\n```\n",
            "\n```sqf\nsetHUDMovementLevels [20,30,-1,-1,0.23,2.1,player]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setHUDMovementLevels",
        "modifiers": []
    },
    "isdlcavailable": {
        "name": "isDLCAvailable",
        "description": "Returns true if the DLC is marked as available. (Steam)",
        "syntaxArray": [
            {
                "Syntax": "isDLCAvailable appid",
                "Params": "appid : [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n _Karts = 288520;\nisDLCAvailable _Karts;//Returns true \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isDLCAvailable",
        "modifiers": []
    },
    "add3denconnection": {
        "name": "add3DENConnection",
        "description": "[Connect](https://community.bistudio.com/wiki/Eden_Editor:_Connecting) entities together.",
        "syntaxArray": [
            {
                "Syntax": "**add3DENConnection** [type, from, to]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - connection class from *Cfg3DEN >> Connections*\n\nfrom: [Array](https://community.bistudio.com/wiki/Array) of [Eden Entities](https://community.bistudio.com/wiki/Eden_Entity) - entities which are being connected\n\nto: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity)- entity to which entities will be connected to\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the connection was made"
            }
        ],
        "examples": [
            "\n```sqf\nadd3DENConnection [\"RandomStart\",get3DENSelected \"Object\",\"marker_0\"]\n```\n\nSet random start on marker \"marker_0\" for all selected objects."
        ],
        "Url": "https://community.bistudio.com/wiki/add3DENConnection",
        "modifiers": []
    },
    "activatedaddons": {
        "name": "activatedAddons",
        "description": "Returns a list of all activated addons.",
        "syntaxArray": [
            {
                "Syntax": "**activatedAddons**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_addons = activatedAddons;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/activatedAddons",
        "modifiers": []
    },
    "movetofailed": {
        "name": "moveToFailed",
        "description": "Check if latest low level [moveTo](https://community.bistudio.com/wiki/moveTo) command failed.",
        "syntaxArray": [
            {
                "Syntax": "moveToFailed unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _hasFailed = moveToFailed _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveToFailed",
        "modifiers": []
    },
    "currenttasks": {
        "name": "currentTasks",
        "description": "Returns array with all [ uncompleted](https://community.bistudio.com/wiki/taskCompleted) tasks for the given agent. [getVariable](https://community.bistudio.com/wiki/getVariable) could be used on [Task](https://community.bistudio.com/wiki/Task) to get the following special local variables from the task:\n\n\n* \"_this\" [Team Member](https://community.bistudio.com/wiki/Team_Member) - the [teamMember](https://community.bistudio.com/wiki/teamMember) [agent](https://community.bistudio.com/wiki/agent) the task is assigned to\n\n* \"_taskType\" [String](https://community.bistudio.com/wiki/String) - the name of the task (see [registeredTasks](https://community.bistudio.com/wiki/registeredTasks))\n\n* \"_thisCreated\" [Number](https://community.bistudio.com/wiki/Number) - 1 or 0\n\n* \"_thisRunning\" [Number](https://community.bistudio.com/wiki/Number) - 1 or 0\n\n* \"_totalCreated\" [Number](https://community.bistudio.com/wiki/Number) - total number of tasks\n\n* \"_totalRunning\" [Number](https://community.bistudio.com/wiki/Number) - total number of running tasks\n\n* \"_task\"[Task](https://community.bistudio.com/wiki/Task) - often null",
        "syntaxArray": [
            {
                "Syntax": "**currentTasks** teamMember",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member) - [teamMember](https://community.bistudio.com/wiki/teamMember) [agent](https://community.bistudio.com/wiki/agent)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of [Tasks](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "\n```sqf\ncurrentTasks teamMember _agent\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentTasks",
        "modifiers": []
    },
    "camcommand": {
        "name": "camCommand",
        "description": "Executes a command on the given *camera / actor* object. Known commands for:\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "camera camCommand command",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - see [camCreate](https://community.bistudio.com/wiki/camCreate)\n\ncommand: [String](https://community.bistudio.com/wiki/String) - see description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_camera camCommand \"manual on\";\n```\n",
            "\n```sqf\nprivate _camera = \"CamCurator\" camCreate [0,0,0];\n_camera camCommand \"maxPitch 89\";\n_camera camCommand \"minPitch -89\";\n_camera camCommand \"speedDefault 0.1\";\n_camera camCommand \"speedMax 2\";\n_camera camCommand \"ceilingHeight 5000\";\n_camera camCommand \"atl off\";\n_camera camCommand \"surfaceSpeed off\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camCommand",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "curatorcoef": {
        "name": "curatorCoef",
        "description": "Returns current coeficient setting.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj curatorCoef action",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\naction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule curatorCoef \"Place\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorCoef",
        "modifiers": []
    },
    "call": {
        "name": "call",
        "description": "Adds given set of compiled instructions to the current stack and waits for it to finish and return, provides an option to pass arguments to the executed [Code](https://community.bistudio.com/wiki/Code). See [Scheduler](https://community.bistudio.com/wiki/Scheduler) to learn more about how the code is excuted and behaves.",
        "syntaxArray": [
            {
                "Syntax": "call code",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code) - [Compiled](https://community.bistudio.com/wiki/compile) instructions. In Operation Flashpoint this command also accepts datatype [string](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - The last value given in the function is returned. See the topic [Function](https://community.bistudio.com/wiki/Function#Return_Values) for more information."
            },
            {
                "Syntax": "args call code",
                "Params": "args: [Anything](https://community.bistudio.com/wiki/Anything) -  Arguments that are passed to the function in the [_this](https://community.bistudio.com/wiki/Magic_Variables#this) variable\n\ncode: [Code](https://community.bistudio.com/wiki/Code) - [Compiled](https://community.bistudio.com/wiki/compile) instructions. In Operation Flashpoint this command also accepts datatype [string](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - The last value given in the function is returned. See the topic [Function](https://community.bistudio.com/wiki/Function#Return_Values) for more information."
            }
        ],
        "examples": [
            "\n```sqf\ncall { hint str 123; };\n```\n",
            "\n```sqf\n123 call { hint str _this; };\n```\n",
            "\n```sqf\n_sum = [1, 2] call { (_this select 0) + (_this select 1); };\nhint str _sum; // displays 3\n```\n",
            "\n```sqf\n123 call compile \"hint str _this;\";\n```\n",
            "\n```sqf\n_result = 123 call compile preprocessFileLineNumbers \"myFile.sqf\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/call",
        "modifiers": []
    },
    "difficultyenabled": {
        "name": "difficultyEnabled",
        "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the [ArmA profile](https://community.bistudio.com/wiki/server.armaprofile) file under class Difficulties/xxx/Flags (xxx being regular or veteran).",
        "syntaxArray": [
            {
                "Syntax": "**difficultyEnabled** flagName",
                "Params": "flagName: [String](https://community.bistudio.com/wiki/String) - Difficulty flag name. Following values are available:\n[Arma 3 Flags](https://community.bistudio.com/wiki/difficultyEnabled#)\n\n\n[Arma 2 Flags](https://community.bistudio.com/wiki/difficultyEnabled#)\n\n\n\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str (difficultyEnabled \"armor\");\n```\n",
            "List current difficulty settings:\n\n```sqf\ncall {\n\tprivate [\"_diff\", \"_cfg\", \"_flags\", \"_res\"];\n\t_diff = [];\n\t_cfg = configFile >> \"CfgDifficulties\";\n\t{\n\t\t_flags = _cfg >> configName _x >> \"Flags\";\n\t\tfor \"_i\" from 0 to count _flags - 1 do {\n\t\t\t_diff pushBack configName (_flags select _i);\n\t\t};\n\t} forEach (\"true\" configClasses _cfg);\n\t_diff = _diff arrayIntersect _diff;\n\t_diff sort true;\n\t_res = text \"\";\n\t{\n\t\t_res = composeText [_res, parseText format [\n\t\t\t\"<t align='left'>%1 - %2</t>\", \n\t\t\t_x, \n\t\t\t[0, 1] select difficultyEnabled _x\n\t\t], lineBreak];\n\t} forEach _diff;\n\thint _res;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/difficultyEnabled",
        "modifiers": []
    },
    "moveinany": {
        "name": "moveInAny",
        "description": "Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle. Seat assignment seems to use the following priority logic: \ndriver ([moveInDriver](https://community.bistudio.com/wiki/moveInDriver)) -> commander turret ([moveInCommander](https://community.bistudio.com/wiki/moveInCommander)) -> gunner turret ([moveInGunner](https://community.bistudio.com/wiki/moveInGunner)) -> remaining turrets ([moveInTurret](https://community.bistudio.com/wiki/moveInTurret)) -> cargo ([moveInCargo](https://community.bistudio.com/wiki/moveInCargo)).\n**NOTE**: This command will move player into the [locked](https://community.bistudio.com/wiki/locked) vehicle or seat just as well.",
        "syntaxArray": [
            {
                "Syntax": "unit **moveInAny** vehicle",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success, [false](https://community.bistudio.com/wiki/false) on failure"
            }
        ],
        "examples": [
            "\n```sqf\nplayer moveInAny tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveInAny",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "lnbcolorright": {
        "name": "lnbColorRight",
        "description": "Returns the right color of given row.",
        "syntaxArray": [
            {
                "Syntax": "lnbColorRight [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - RGBA"
            },
            {
                "Syntax": "ctrl lnbColorRight [row, column]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - RGBA"
            }
        ],
        "examples": [
            "\n```sqf\n_color= _control lnbColorRight [0, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbColorRight",
        "modifiers": []
    },
    "lockdriver": {
        "name": "lockDriver",
        "description": "Lock the driver position of the vehicle. This command must be executed where vehicle is [local](https://community.bistudio.com/wiki/local). This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike [lock](https://community.bistudio.com/wiki/lock) command",
        "syntaxArray": [
            {
                "Syntax": "vehicle **lockDriver** lock",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\nlock: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nvehicleName lockDriver true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockDriver",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "synchronizedwaypoints": {
        "name": "synchronizedWaypoints",
        "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.",
        "syntaxArray": [
            {
                "Syntax": "**synchronizedWaypoints** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object) or [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nsynchronizedWaypoints _someTrigger;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizedWaypoints",
        "modifiers": []
    },
    "setdir": {
        "name": "setDir",
        "description": "Sets object heading. Angles are measured in degrees clockwise from north; the regular range goes from 0 to 360 (0° = N, 90° = E, 180° = S, 270° = W). Negative angles represent counter-clockwise angles.",
        "syntaxArray": [
            {
                "Syntax": "object setDir heading",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nheading: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nMyUnit setDir 45; // Will set MyUnit to face North-East\n```\n",
            "\n```sqf\nMyUnit setDir -675; // Will also set MyUnit to face North-East (= 45-360-360)\n```\n",
            "\n```sqf\nMyUnit setDir 30;\nMyUnit setFormDir 30; // Needed for AI to keep the given direction\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDir",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "geteditorcamera": {
        "name": "getEditorCamera",
        "description": "Fetches a reference to the mission editor camera.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**getEditorCamera** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/getEditorCamera",
        "modifiers": []
    },
    "setcenterofmass": {
        "name": "setCenterOfMass",
        "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
        "syntaxArray": [
            {
                "Syntax": "myObject setCenterOfMass [centerOfMass, time]",
                "Params": "myObject: [Object](https://community.bistudio.com/wiki/Object)\n\n[centerOfMass, time]: [Array](https://community.bistudio.com/wiki/Array)\n\ncenterOfMass: [Array](https://community.bistudio.com/wiki/Array) - [x,y,z] offset relative to the model centre\n\ntime: [Number](https://community.bistudio.com/wiki/Number) - transition time, 0 for instant center of mass transfer\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "myObject setCenterOfMass centerOfMass",
                "Params": "myObject: [Object](https://community.bistudio.com/wiki/Object)\n\ncenterOfMass: [Array](https://community.bistudio.com/wiki/Array) - [x,y,z] offset relative to the model centre\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyObject setCenterOfMass [[0,-1,0], 0.5];\n```\n",
            "\n```sqf\nmyObject setCenterOfMass [0,-1,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCenterOfMass",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "menuchecked": {
        "name": "menuChecked",
        "description": "Returns if item on given path is checked or not.",
        "syntaxArray": [
            {
                "Syntax": "menuChecked [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "control menuChecked path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isChecked = findDisplay 313 displayCtrl 120 menuChecked [0,1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuChecked",
        "modifiers": []
    },
    "linearconversion": {
        "name": "linearConversion",
        "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to [true](https://community.bistudio.com/wiki/true), the resulting value is guaranteed to be within \"to\" range no matter what. > ",
        "syntaxArray": [
            {
                "Syntax": "**linearConversion** [minFrom, maxFrom, value, minTo, maxTo, clip]",
                "Params": "minFrom: [Number](https://community.bistudio.com/wiki/Number) - start \"from\" range\n\nmaxFrom: [Number](https://community.bistudio.com/wiki/Number) - end \"from\" range\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - given value from \"from\" range\n\nminTo: [Number](https://community.bistudio.com/wiki/Number) - start \"to\" range\n\nmaxTo: [Number](https://community.bistudio.com/wiki/Number)  - end \"to\" range\n\nclip (Optional, default [false](https://community.bistudio.com/wiki/false)): [Boolean](https://community.bistudio.com/wiki/Boolean) - if [true](https://community.bistudio.com/wiki/true), resulting value cannot leave \"to\" range\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - respectful value from \"to\" range"
            }
        ],
        "examples": [
            "\n```sqf\n// Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be 55\nlinearConversion [0,1,0.55,0,100];\n// but if given value is 1.1 it will return 110\nlinearConversion [0,1,1.1,0,100,false];\n// or if clipping is true it will return 100\nlinearConversion [0,1,1.1,0,100,true];\n```\n",
            "\n```sqf\nlinearConversion [4, 8, 5, 0, 1, false];\n```\n",
            "\n```sqf\n// Calculate days from 1/1/1970\nfnc_daysFromEpoc = \n{\n\tprivate _year = param [0];\n\tprivate _days = 0;\n\tfor \"_i\" from 1970 to _year - 1 do \n\t{\n\t\t_days = _days + round linearConversion [0, 1, dateToNumber [_i, 12, 31, 23, 59], 0, 365, false];\n\t};\n\t_days + linearConversion [0, 1, dateToNumber _this, 0, 365, false];\n};\n\nhint str (date call fnc_daysFromEpoc);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/linearConversion",
        "modifiers": []
    },
    "setaperture": {
        "name": "setAperture",
        "description": "Sets custom eye accommodation camera aperture.\n\n>   \n> ",
        "syntaxArray": [
            {
                "Syntax": "**setAperture** aperture",
                "Params": "aperture: [Number](https://community.bistudio.com/wiki/Number) - Aperture value. If \n```sqf\n-1\n```\n is provided the engine will set the aperture automatically\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetAperture 0.3;\n```\n",
            "\n```sqf\n[] spawn { sleep 0.2; setAperture 100 };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAperture",
        "modifiers": [
            "Local effect"
        ]
    },
    "setcustomweightrtd": {
        "name": "setCustomWeightRTD",
        "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.\n> ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD **setCustomWeightRTD** weight",
                "Params": "helicopterRTD : [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nweight: [Number](https://community.bistudio.com/wiki/Number) - weight (kilograms)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopterRTD setCustomWeightRTD 120;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCustomWeightRTD",
        "modifiers": []
    },
    "waypointattachedobject": {
        "name": "waypointAttachedObject",
        "description": "Gets the object attached to the waypoint.",
        "syntaxArray": [
            {
                "Syntax": "**waypointAttachedObject** waypoint",
                "Params": "waypoint:  [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointAttachedObject [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointAttachedObject",
        "modifiers": []
    },
    "getvehicletipars": {
        "name": "getVehicleTIPars",
        "description": "Returns TI parameters of a vehicle.",
        "syntaxArray": [
            {
                "Syntax": "getVehicleTIPars vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array in format [aliveFactor, movementFactor, metabolismFactor]"
            }
        ],
        "examples": [
            "\n```sqf\ngetVehicleTIPars _veh;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getVehicleTIPars",
        "modifiers": []
    },
    "flagowner": {
        "name": "flagOwner",
        "description": "Returns the global owner of a flag. A getter for [setFlagOwner](https://community.bistudio.com/wiki/setFlagOwner). Note that owner of a flag is [Object](https://community.bistudio.com/wiki/Object) rather than [Number](https://community.bistudio.com/wiki/Number), as how it is usually with other [owner](https://community.bistudio.com/wiki/owner) commands",
        "syntaxArray": [
            {
                "Syntax": "**flagOwner** flag",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) -  The person or vehicle that owns the flag is returned. If used on anything else than a flag, the returned value is [objNull](https://community.bistudio.com/wiki/objNull). If the flag is on its pole, the return value is NULL. If the flagowner is dead, the return value is the name of the soldier model."
            }
        ],
        "examples": [
            "\n```sqf\n_person = flagOwner _flagOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flagOwner",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "triggertext": {
        "name": "triggerText",
        "description": "Returns trigger text.",
        "syntaxArray": [
            {
                "Syntax": "**triggerText** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_text = triggerText triggerName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerText",
        "modifiers": [
            "Global argument"
        ]
    },
    "removeswitchableunit": {
        "name": "removeSwitchableUnit",
        "description": "Remove a unit from the list of units available for [Team Switch](https://community.bistudio.com/wiki/Team_Switch).",
        "syntaxArray": [
            {
                "Syntax": "removeSwitchableUnit  unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveSwitchableUnit _unit1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeSwitchableUnit",
        "modifiers": []
    },
    "endl": {
        "name": "endl",
        "description": "Creates a string containing a line break, similar to [lineBreak](https://community.bistudio.com/wiki/lineBreak) for [text](https://community.bistudio.com/wiki/text). The name is inspired by c++ std::endl (**end** **l**ine). The command returns \"\\r\\n\", which contains control characters rather than printable characters:  \n\n* [hint](https://community.bistudio.com/wiki/hint) [str](https://community.bistudio.com/wiki/str) [count](https://community.bistudio.com/wiki/count) \"\\r\\n\"; // 4\n\n* [hint](https://community.bistudio.com/wiki/hint) [str](https://community.bistudio.com/wiki/str) [count](https://community.bistudio.com/wiki/count) endl; // 2\nThe line break works for [diag_log](https://community.bistudio.com/wiki/diag_log) and [ctrlSetText](https://community.bistudio.com/wiki/ctrlSetText). It doesn't work with the [hint](https://community.bistudio.com/wiki/hint) because [hint](https://community.bistudio.com/wiki/hint) interprets printable \"\\n\" as line break instead. Alternatively one can use [toString](https://community.bistudio.com/wiki/toString) command to get other characters.",
        "syntaxArray": [
            {
                "Syntax": "**endl**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String) - line break"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_log (\"line1\" + endl + \"line2\");\n```\n",
            "\n```sqf\n_ctrl = findDisplay 46 ctrlCreate [\"RscTextMulti\", -1]; \n_ctrl ctrlSetPosition [0,0,1,1]; \n_ctrl ctrlCommit 0; \n_ctrl ctrlSetText format [\"line1%1line2%1line3\", endl];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/endl",
        "modifiers": []
    },
    "ctrlsetfonth6b": {
        "name": "ctrlSetFontH6B",
        "description": "Sets H6 bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH6B** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH6B \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH6B",
        "modifiers": []
    },
    "difficultyoption": {
        "name": "difficultyOption",
        "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in \n[ArmA profile](https://community.bistudio.com/wiki/server.armaprofile) file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran). This command replaces [difficultyEnabled](https://community.bistudio.com/wiki/difficultyEnabled) as many options have multiple values and former command only provided [Boolean](https://community.bistudio.com/wiki/Boolean) return.",
        "syntaxArray": [
            {
                "Syntax": "**difficultyOption** optionName",
                "Params": "optionName: [String](https://community.bistudio.com/wiki/String) - difficulty option name\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str (difficultyOption \"friendlyTags\");\n```\n",
            "Remember last [cameraView](https://community.bistudio.com/wiki/cameraView) per vehicle:\n```sqf\nplayer addEventHandler [\"GetOutMan\", \n{\n\tparams [\"_unit\", \"_role\", \"_vehicle\", \"_turret\"];\n\t_unit setVariable [_vehicle call BIS_fnc_netId, cameraView];\n}];\nplayer addEventHandler [\"GetInMan\", \n{\n\tif (difficultyOption \"thirdPersonView\" == 2) then\n\t{\n\t\tparams [\"_unit\", \"_role\", \"_vehicle\", \"_turret\"];\n\t\t_unit switchCamera (_unit getVariable [_vehicle call BIS_fnc_netId, \"INTERNAL\"]);\n\t};\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/difficultyOption",
        "modifiers": []
    },
    "confirmsensortarget": {
        "name": "confirmSensorTarget",
        "description": "Sets for which [Side](https://community.bistudio.com/wiki/Side) the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **confirmSensorTarget** [side, isConfirmed]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[side, isConfirmed]: [Array](https://community.bistudio.com/wiki/Array)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\nisConfirmed: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(vehicle player) confirmSensorTarget [west, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/confirmSensorTarget",
        "modifiers": []
    },
    "tvsortbyvalue": {
        "name": "tvSortByValue",
        "description": "Sorts all children of given path. Value of [Tree View](https://community.bistudio.com/wiki/CT_TREE) entries is used for sorting.",
        "syntaxArray": [
            {
                "Syntax": "control tvSortByValue [path, reversed]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the parent item to sort\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to reverse sort it. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "tvSortByValue [idc, path, reversed]",
                "Params": "[idc, path, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) - control idc\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the parent item to sort\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to reverse sort it. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncontrol tvSortByValue [[0], false];\n```\n",
            "\n```sqf\ntvSortByValue [102, [0], false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSortByValue",
        "modifiers": []
    },
    "civilian": {
        "name": "civilian",
        "description": "Pre-defined variable for the civilian [side](https://community.bistudio.com/wiki/Side).\n\nWhen used in a [format](https://community.bistudio.com/wiki/format) statement (hint [format](https://community.bistudio.com/wiki/format)[\"%1\",civilian]), the string returned is \"CIV\".",
        "syntaxArray": [
            {
                "Syntax": "**civilian**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "SQS:\n```sqf\n?((side _unit) == civilian) : hint \"This is a civilian unit!\"\n```\n",
            "SQF:\n```sqf\nif ((side _unit) == civilian) then {\n    hint \"This is a civilian unit!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/civilian",
        "modifiers": []
    },
    "synchronizeobjectsremove": {
        "name": "synchronizeObjectsRemove",
        "description": "Removes given objects from the unit's list of synchronized objects.",
        "syntaxArray": [
            {
                "Syntax": "unit **synchronizeObjectsRemove** objects",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nobjects: [Array](https://community.bistudio.com/wiki/Array) - An array of objects\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer synchronizeObjectsRemove [_object1, _object2, _object3]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizeObjectsRemove",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "uniformmagazines": {
        "name": "uniformMagazines",
        "description": "Get array with all magazines from uniform of the given unit.",
        "syntaxArray": [
            {
                "Syntax": "**uniformMagazines** unit",
                "Params": "unit : [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nuniformMagazines player;\n```\n\n\n\n```sqf\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](3x)\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/uniformMagazines",
        "modifiers": []
    },
    "tvsettooltip": {
        "name": "tvSetTooltip",
        "description": "Sets the tooltip text associated with the specified tree view path.",
        "syntaxArray": [
            {
                "Syntax": "tvSetTooltip [idc, path, text]",
                "Params": "[idc, path, text]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) - IDC of the tree view control.\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing path numbers.\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl tvSetTooltip [path, text]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, text]: [Array](https://community.bistudio.com/wiki/Array) -\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing path numbers.\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetTooltip [101, [0,2], \"This is a tooltip\"];\n```\n",
            "\n```sqf\n_tree tvSetTooltip [[0,2], \"This is a tooltip\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetTooltip",
        "modifiers": []
    },
    "ctrlsetfontheight": {
        "name": "ctrlSetFontHeight",
        "description": "Sets the sizeEx property for most controls as follows: \n\n* CT_MAP - \"sizeExNames\"\n\n* CT_HTML - \"P\" >> \"sizeEx\"\n\n* Other - \"sizeEx\"\n\n* CT_STRUCTURED_TEXT - \"size\" *Since Arma 3 v2.02*",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetFontHeight** size",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nsize: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontHeight 0.05;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeight",
        "modifiers": []
    },
    "createcenter": {
        "name": "createCenter",
        "description": "Instanciate a [Side](https://community.bistudio.com/wiki/Side) center. A [Side](https://community.bistudio.com/wiki/Side) center is required to be able to [create groups](https://community.bistudio.com/wiki/createGroup) of this side.\nCenters can only be created for [east](https://community.bistudio.com/wiki/east), [west](https://community.bistudio.com/wiki/west), [resistance](https://community.bistudio.com/wiki/resistance), [civilian](https://community.bistudio.com/wiki/civilian) and [sideLogic](https://community.bistudio.com/wiki/sideLogic) [sides](https://community.bistudio.com/wiki/Side).\nCreated sides must have their \"side-friendship\" defined with [setFriend](https://community.bistudio.com/wiki/setFriend).\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "createCenter side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\ncreateCenter east;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createCenter",
        "modifiers": [
            "Global effect"
        ]
    },
    "setanimspeedcoef": {
        "name": "setAnimSpeedCoef",
        "description": "Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).\nDoesn't affect upper body animations (reloading, etc.)",
        "syntaxArray": [
            {
                "Syntax": "unit setAnimSpeedCoef coef",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ncoef: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setAnimSpeedCoef 0.75;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAnimSpeedCoef",
        "modifiers": []
    },
    "createtask": {
        "name": "createTask",
        "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
        "syntaxArray": [
            {
                "Syntax": "teamMember createTask [[type, parentTask], priority, name1, value1, (...), nameN, valueN]",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n[type, parentTask]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - name defined in CfgTasks\n\nparentTask (optional): [Task](https://community.bistudio.com/wiki/Task)\n\npriority: [Number](https://community.bistudio.com/wiki/Number)\n\nname1: [String](https://community.bistudio.com/wiki/String)\n\nvalue1: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Task](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/createTask",
        "modifiers": []
    },
    "currentvisionmode": {
        "name": "currentVisionMode",
        "description": "Returns current vision mode of unit's weapon.\n\n\n* 0 - daytime\n\n* 1 - night vision\n\n* 2 - thermal vision",
        "syntaxArray": [
            {
                "Syntax": "**currentVisionMode** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_currMode = currentVisionMode gunner _tank\n```\n",
            "\n```sqf\nif (currentVisionMode player == 1) then\n{\n\thint \"nightvision active\";\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentVisionMode",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlsetfonth1": {
        "name": "ctrlSetFontH1",
        "description": "Sets H1 font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH1** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontH1 \"TahomaB\""
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH1",
        "modifiers": []
    },
    "ctrlsetfocus": {
        "name": "ctrlSetFocus",
        "description": "Sets the input focus on given control.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlSetFocus** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlSetFocus _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFocus",
        "modifiers": []
    },
    "linkitem": {
        "name": "linkItem",
        "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.",
        "syntaxArray": [
            {
                "Syntax": "unit **linkItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbluforUnit linkItem \"NVGoggles\";\nopforUnit linkItem \"NVGoggles_OPFOR\";\nindependentUnit linkItem \"NVGoggles_INDEP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/linkItem",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "fire": {
        "name": "fire",
        "description": "Forces a unit to fire the given weapon. See also: [BIS_fnc_fire](https://community.bistudio.com/wiki/BIS_fnc_fire).\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit fire muzzle",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit that is supposed to fire\n\nmuzzle: [String](https://community.bistudio.com/wiki/String) - name of the muzzle to be fired\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit fire [muzzle, mode, magazine]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[muzzle, mode, magazine]: [Array](https://community.bistudio.com/wiki/Array)\n\nmuzzle: [String](https://community.bistudio.com/wiki/String)\n\nmode: [String](https://community.bistudio.com/wiki/String)\n\nmagazine: [String](https://community.bistudio.com/wiki/String) (Optional)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier fire \"M16\";\n```\n",
            "\n```sqf\n_soldier fire \"SmokeShellMuzzle\";\n```\n",
            "\n```sqf\n_soldier fire [\"SmokeShellMuzzle\", \"SmokeShellMuzzle\", \"SmokeShellRed\"];\n```\n",
            "\n```sqf\nplayer playActionNow \"PutDown\";\nplayer selectWeapon \"DemoChargeMuzzle\";\nplayer fire [\"DemoChargeMuzzle\", \"DemoChargeMuzzle\", \"DemoCharge_Remote_Mag\"];\nplayer setWeaponReloadingTime [player, \"DemoChargeMuzzle\", 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fire",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "disabletiequipment": {
        "name": "disableTIEquipment",
        "description": "Disables TI (Thermal Imaging) equipment for given vehicle.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle disableTIEquipment state",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean) - true to turn TI off, false to turn TI on\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player disableTIEquipment true;\n```\n",
            "\n```sqf\n_tank disableTIEquipment true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableTIEquipment",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "resetsubgroupdirection": {
        "name": "resetSubgroupDirection",
        "description": "Sets [ formation direction](https://community.bistudio.com/wiki/formationDirection) of a group relative to current direction of the group leader. The group units will change their positions to form new formation if new formation direction is different (approx +/- 15 degrees). Does the same as:\n\n```sqf\n_grp setFormDir getDir leader _grp;\n```\n",
        "syntaxArray": [
            {
                "Syntax": "**resetSubgroupDirection** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - any member of the [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nresetSubgroupDirection myUnit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/resetSubgroupDirection",
        "modifiers": []
    },
    "getcustomsoundcontrollercount": {
        "name": "getCustomSoundControllerCount",
        "description": "Returns current number of custom sound controllers supported by the engine for the given vehicle (currently 32)",
        "syntaxArray": [
            {
                "Syntax": "**getCustomSoundControllerCount** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - A transport type vehicle. Does not work on characters or buildings\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Number of custom controllers"
            }
        ],
        "examples": [
            "\n```sqf\ngetCustomSoundControllerCount vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCustomSoundControllerCount",
        "modifiers": []
    },
    "getcompatiblepylonmagazines": {
        "name": "getCompatiblePylonMagazines",
        "description": "Get array of compatible pylon magazines",
        "syntaxArray": [
            {
                "Syntax": "vehicle **getCompatiblePylonMagazines** pylon",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - aircraft object\n\npylon: [Number](https://community.bistudio.com/wiki/Number) - pylon id or [String](https://community.bistudio.com/wiki/String) - pylon class name from TransportPylonsComponent >> pylons class (see Example 4). 0 or \"\" to return all compatible magazines from all pylons\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "vehicleClass **getCompatiblePylonMagazines** pylon",
                "Params": "vehicleClass: [String](https://community.bistudio.com/wiki/String) - aircraft config class\n\npylon: [Number](https://community.bistudio.com/wiki/Number) - pylon id or [String](https://community.bistudio.com/wiki/String) - pylon class name from\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player getCompatiblePylonMagazines 0; // returns array of arrays containing all compatible magazines\n```\n",
            "\n```sqf\n\"Plane_Fighter_01_Base_F\" getCompatiblePylonMagazines 3; // returns array of compatible magazines for the 3rd pylon\n```\n",
            "\n```sqf\njet1 getCompatiblePylonMagazines \"pylon1\"; // returns array of compatible magazines for the 1st pylon\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCompatiblePylonMagazines",
        "modifiers": []
    },
    "getdir": {
        "name": "getDir",
        "description": "Returns the object heading in the range 0..360.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "getDir object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "pos1 getDir pos2 *since Arma 3 v1.55.133361*",
                "Params": "pos1: [Object](https://community.bistudio.com/wiki/Object), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D) - from where\n\npos2: [Object](https://community.bistudio.com/wiki/Object), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D) - to where\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_azimuth = getDir player;\n```\n",
            "\n```sqf\n_azimuth = player getDir tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDir",
        "modifiers": [
            "Global argument"
        ]
    },
    "nearentities": {
        "name": "nearEntities",
        "description": "\nFinds entities inside a sphere with the given radius. If the alternative syntax is used, only entities of given types or subtypes are listed. Entities returned are not sorted by distance. This command doesn't return dead entities or entities inside vehicles. If you need to return those, use [entities](https://community.bistudio.com/wiki/entities) command.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "position nearEntities radius",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D) - center of the sphere\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - radius of the sphere\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - not sorted"
            },
            {
                "Syntax": "position nearEntities [type, radius]",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D) - center of the sphere\n\n[type, radius]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - type(s) to search for\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - radius of the sphere\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - not sorted"
            }
        ],
        "examples": [
            "\n```sqf\n_list = player nearEntities 20;\n_list = ASLToAGL getPosASL player nearEntities 50;\n_list = player nearEntities [\"Man\", 1000];\n_list = ASLToAGL getPosASL player nearEntities [\"LaserTarget\", 3000];\n_list = player nearEntities [[\"Car\", \"Motorcycle\", \"Tank\"], 50];\n_list = ASLToAGL getPosASL player nearEntities [[\"Man\", \"Air\", \"Car\", \"Motorcycle\", \"Tank\"], 200];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearEntities",
        "modifiers": [
            "Global argument"
        ]
    },
    "addbinocularitem": {
        "name": "addBinocularItem",
        "description": "Adds weapon item, including magazine, directly to the [binocular](https://community.bistudio.com/wiki/binocular) weapon. This is used for infantry weapons.",
        "syntaxArray": [
            {
                "Syntax": "unit **addBinocularItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n player addBinocularItem \"Laserbatteries\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addBinocularItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "waypointsenableduav": {
        "name": "waypointsEnabledUAV",
        "description": "Checks if the UAV has waypoints enabled.",
        "syntaxArray": [
            {
                "Syntax": "waypointsEnabledUAV uav",
                "Params": "uav: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_uav enableUAVWaypoints false;\nhint str waypointsEnabledUAV _uav; // returns false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointsEnabledUAV",
        "modifiers": []
    },
    "waypoints": {
        "name": "waypoints",
        "description": "Returns an array of waypoints for the specified unit/group.",
        "syntaxArray": [
            {
                "Syntax": "**waypoints** groupName",
                "Params": "groupName: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of waypoints each in format [Waypoint](https://community.bistudio.com/wiki/Waypoint)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypoints player;\n```\n",
            "\n```sqf\n_wPosArray = waypoints group10; // could return [[EAST 1-1-A,0],[EAST 1-1-A,1],[EAST 1-1-A,2]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypoints",
        "modifiers": [
            "Global argument"
        ]
    },
    "group": {
        "name": "group",
        "description": "Returns the group a unit is assigned to.",
        "syntaxArray": [
            {
                "Syntax": "**group** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Group](https://community.bistudio.com/wiki/Group) -  \nFor dead units, the returned group equals [grpNull](https://community.bistudio.com/wiki/grpNull)."
            }
        ],
        "examples": [
            "\n```sqf\n_playerGrp = group player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/group",
        "modifiers": [
            "Global argument"
        ]
    },
    "removesecondaryweaponitem": {
        "name": "removeSecondaryWeaponItem",
        "description": "Removes given weapon item, including magazine, from the [secondaryWeapon](https://community.bistudio.com/wiki/secondaryWeapon).",
        "syntaxArray": [
            {
                "Syntax": "unit **removeSecondaryWeaponItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeSecondaryWeaponItem (secondaryWeaponItems player select 0);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeSecondaryWeaponItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "actionname": {
        "name": "actionName",
        "description": "Returns localized name of action.",
        "syntaxArray": [
            {
                "Syntax": "actionName action",
                "Params": "action: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nactionName \"ReloadMagazine\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/actionName",
        "modifiers": []
    },
    "getdammage": {
        "name": "getDammage",
        "description": "Returns the object damage in the range from 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "getDammage object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _damage = getDammage player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDammage",
        "modifiers": []
    },
    "removemagazine": {
        "name": "removeMagazine",
        "description": "Remove magazine from the unit.> ",
        "syntaxArray": [
            {
                "Syntax": "unitName **removeMagazine** magazineName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String) - see [weapons](https://community.bistudio.com/wiki/Category:Weapons)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeMagazine \"M16\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMagazine",
        "modifiers": [
            "Local argument"
        ]
    },
    "selectmax": {
        "name": "selectMax",
        "description": "Returns the array element with [maximum](https://community.bistudio.com/wiki/max) numerical value. Engine solution to [BIS_fnc_greatestNum](https://community.bistudio.com/wiki/BIS_fnc_greatestNum) and [BIS_fnc_findExtreme](https://community.bistudio.com/wiki/BIS_fnc_findExtreme). Therefore it is expected that supplied array consists of [Numbers](https://community.bistudio.com/wiki/Number) only. [Booleans](https://community.bistudio.com/wiki/Boolean) however are also supported and will be evaluated as [Numbers](https://community.bistudio.com/wiki/Number): [true](https://community.bistudio.com/wiki/true) - 1, [false](https://community.bistudio.com/wiki/false) - 0.  [nil](https://community.bistudio.com/wiki/nil) value treated as 0. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**selectMax** array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - array of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - element with [maximum](https://community.bistudio.com/wiki/max) numerical value"
            }
        ],
        "examples": [
            "\n```sqf\n_max = selectMax [1,2,3,4,5]; //5\n```\n",
            "\n```sqf\n// Same as, for example: \n_max = _a max _b max _c max _d;\n// Only faster:\n_max = selectMax [_a,_b,_c,_d];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectMax",
        "modifiers": []
    },
    "addplayerscores": {
        "name": "addPlayerScores",
        "description": "MP server only: Adds player score.",
        "syntaxArray": [
            {
                "Syntax": "unit addPlayerScores values",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvalues: [Array](https://community.bistudio.com/wiki/Array) - killsInfantry , killsSoft, killsArmor, killsAir, killed\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addPlayerScores [0, 1, 0, 0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addPlayerScores",
        "modifiers": [
            "Server execution"
        ]
    },
    "allowcrewinimmobile": {
        "name": "allowCrewInImmobile",
        "description": "If true, units can be in a vehicle with broken tracks/wheels.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **allowCrewInImmobile** bool",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle allowCrewInImmobile true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowCrewInImmobile",
        "modifiers": []
    },
    "agents": {
        "name": "agents",
        "description": "Return a list of agents in the current mission.",
        "syntaxArray": [
            {
                "Syntax": "**agents**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Team Members](https://community.bistudio.com/wiki/Team_Member)"
            }
        ],
        "examples": [
            "\n```sqf\n{agent _x moveTo position player} forEach agents;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/agents",
        "modifiers": []
    },
    "namedproperties": {
        "name": "namedProperties",
        "description": "Returns a list of named properties on Geometry LOD.",
        "syntaxArray": [
            {
                "Syntax": "**namedProperties** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String), in format: [[namedProperty1, propertyValue1], [namedProperty2, propertyValue2], ...]"
            }
        ],
        "examples": [
            "\n```sqf\n_properties = namedProperties _object; // [[\"sbsource\",\"shadowvolume\"],[\"prefershadowvolume\",\"1\"],[\"reversed\",\"1\"],[\"buoyancy\",\"1\"]] \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/namedProperties",
        "modifiers": []
    },
    "tvsetcolor": {
        "name": "tvSetColor",
        "description": "Sets text color on given Tree View Item",
        "syntaxArray": [
            {
                "Syntax": "**tvSetColor** [idc, path, color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Item text color\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **tvSetColor** [path, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - item text color in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetColor [101, [0,0], [1,0,0,1]];\n```\n",
            "\n```sqf\n_ctrl tvSetColor [[0,0], [1,0,0,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetColor",
        "modifiers": []
    },
    "clearweaponcargo": {
        "name": "clearWeaponCargo",
        "description": "Remove all weapons from the given vehicle's weapon cargo space.",
        "syntaxArray": [
            {
                "Syntax": "clearWeaponCargo vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearWeaponCargo _truck;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearWeaponCargo",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setdammage": {
        "name": "setDammage",
        "description": "Damages/hurts or repairs/heals object/unit. Damage 0 means fully functional, damage 1 means completely destroyed / dead. > ",
        "syntaxArray": [
            {
                "Syntax": "object setDammage damage",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ndamage: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 setDammage 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDammage",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "setdebriefingtext": {
        "name": "setDebriefingText",
        "description": "Sets debriefing text for endType defined in [CfgDebriefing](https://community.bistudio.com/wiki/Debriefing#Configuration).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "endType **setDebriefingText** [title, description]",
                "Params": "endType: [String](https://community.bistudio.com/wiki/String)\n\n[title, description]: [Array](https://community.bistudio.com/wiki/Array)\n\ntitle: [String](https://community.bistudio.com/wiki/String)\n\ndescription: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_currentObjective = (taskDescription (currentTask player)) select 2;\n\"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDebriefingText",
        "modifiers": []
    },
    "lbcolor": {
        "name": "lbColor",
        "description": "Returns the text color of the item with the given index of the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO) with IDC of the topmost user [dialog](https://community.bistudio.com/wiki/dialog).",
        "syntaxArray": [
            {
                "Syntax": "**lbColor** [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Format [Color (RGBA)](https://community.bistudio.com/wiki/Color)"
            },
            {
                "Syntax": "control **lbColor** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Color (RGBA)](https://community.bistudio.com/wiki/Color)"
            }
        ],
        "examples": [
            "\n```sqf\n_colour = lbColor [101, 0];\n```\n",
            "\n```sqf\n_color = _control lbColor 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbColor",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "addcuratoreditableobjects": {
        "name": "addCuratorEditableObjects",
        "description": "Register objects which can be edited by a curator.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj addCuratorEditableObjects [objects, addCrew]",
                "Params": "**curatorObj**: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n**objects**: [Array](https://community.bistudio.com/wiki/Array)\n\n**addCrew**: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nMyCuratorModule addCuratorEditableObjects [[MyCar], true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addCuratorEditableObjects",
        "modifiers": [
            "Server execution"
        ]
    },
    "playaction": {
        "name": "playAction",
        "description": "When used on a person, a smooth transition to the given action will be initiated.\n\nFor Arma 3 actions see: [playAction/actions](https://community.bistudio.com/wiki/playAction/actions).",
        "syntaxArray": [
            {
                "Syntax": "soldier **playAction** action",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object) -\n\naction: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne playAction \"SitDown\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playAction",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setformdir": {
        "name": "setFormDir",
        "description": "Sets group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overridden by movement direction. If the new direction is noticeably different from the old direction (approx +/- 15 degrees), units will change positions changing [formationDirection](https://community.bistudio.com/wiki/formationDirection).",
        "syntaxArray": [
            {
                "Syntax": "group **setFormDir** heading",
                "Params": "group: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nheading: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group1 setFormDir 180;\n```\n",
            "\n```sqf\n_unit1 setFormDir random 360;\n```\n",
            "\n```sqf\n//center the main turret\n(group BIS_Crew1) setFormDir (getDir BIS_Armor);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFormDir",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "confignull": {
        "name": "configNull",
        "description": "A non-existing [Config](https://community.bistudio.com/wiki/Config).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "configNull",
                "Params": "",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\n_config = missionNamespace getVariable [\"myConfig\", configNull];\n```\n",
            "\n```sqf\nstr configNull; // returns \"\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configNull",
        "modifiers": []
    },
    "ctfindheaderrows": {
        "name": "ctFindHeaderRows",
        "description": "Takes index of a header as a parameter. Returns array of indices of rows under this header.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctFindHeaderRows** index",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_array = _control ctFindHeaderRows 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctFindHeaderRows",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "allsites": {
        "name": "allSites",
        "description": "Return all sites in map.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**allSites**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_allSites = allSites;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allSites",
        "modifiers": []
    },
    "ctheadercontrols": {
        "name": "ctHeaderControls",
        "description": "Returns array of controls on the header with the given index.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctHeaderControls** index",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_array = _control ctHeaderControls 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctHeaderControls",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "tvsetpicturerightcolorselected": {
        "name": "tvSetPictureRightColorSelected",
        "description": "Sets the color of the right picture of a tree item defined by path when item is selected",
        "syntaxArray": [
            {
                "Syntax": "control tvSetPictureRightColorSelected [path, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, color]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - path to tree view item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - color in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureRightColorSelected",
        "modifiers": []
    },
    "commandstop": {
        "name": "commandStop",
        "description": "Order the given unit(s) to stop via radio. A stop command will never finish, the unit(s) will never be ready.",
        "syntaxArray": [
            {
                "Syntax": "**commandStop** target",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncommandStop _soldier1;\n```\n",
            "\n```sqf\ncommandStop [_soldier1, _soldier2];\n```\n",
            "\n```sqf\ncommandStop (units player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandStop",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "rank": {
        "name": "rank",
        "description": "Returns the rank of the given unit. Rank can be one of the following:\n\n* \"PRIVATE\"\n\n* \"CORPORAL\"\n\n* \"SERGEANT\"\n\n* \"LIEUTENANT\"\n\n* \"CAPTAIN\"\n\n* \"MAJOR\"\n\n* \"COLONEL\"",
        "syntaxArray": [
            {
                "Syntax": "**rank** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_rank = rank player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rank",
        "modifiers": [
            "Global argument"
        ]
    },
    "camerainterest": {
        "name": "cameraInterest",
        "description": "Return camera interest for given entity, as set by [setCameraInterest](https://community.bistudio.com/wiki/setCameraInterest), or as autodetected.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **cameraInterest** entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n camInterest = cameraInterest myUnit;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cameraInterest",
        "modifiers": []
    },
    "setshotparents": {
        "name": "setShotParents",
        "description": "Sets vehicle and instigator pair for the given projectile.",
        "syntaxArray": [
            {
                "Syntax": "projectile setShotParents [vehicle, instigator]",
                "Params": "projectile: [Object](https://community.bistudio.com/wiki/Object) - The actual projectile shot\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object) - Vehicle shooting projectile\n\ninstigator: [Object](https://community.bistudio.com/wiki/Object) - Person pulling the trigger\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyProjectile setShotParents [vehicle bob, bob];\n```\n",
            "\n```sqf\ntank addEventHandler [\"Fired\", {_this select 6 setShotParents [tank, commander tank]}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setShotParents",
        "modifiers": [
            "Global argument",
            "Global effect",
            "Server execution"
        ]
    },
    "tvtext": {
        "name": "tvText",
        "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "tvText [idc, path]",
                "Params": "[idc, path]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing numbers.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control tvText path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ntvText [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvText [0,0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvText",
        "modifiers": []
    },
    "addsecondaryweaponitem": {
        "name": "addSecondaryWeaponItem",
        "description": "Adds weapon item, including magazine, directly to the [secondaryWeapon](https://community.bistudio.com/wiki/secondaryWeapon). This is used for infantry weapons.",
        "syntaxArray": [
            {
                "Syntax": "unit **addSecondaryWeaponItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addSecondaryWeaponItem \"muzzle_snds_L\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addSecondaryWeaponItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "exp": {
        "name": "exp",
        "description": "Let **x** be a number, then **exp (x)** is equal to **e to the power of x** (or e^x)",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **exp** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_result = exp 1\n```\n\n\nreturns 2.7182"
        ],
        "Url": "https://community.bistudio.com/wiki/exp",
        "modifiers": []
    },
    "additem": {
        "name": "addItem",
        "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.",
        "syntaxArray": [
            {
                "Syntax": "unit **addItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbluforUnit addItem \"NVGoggles\";\nbluforUnit assignItem \"NVGoggles\";\nopforUnit addItem \"NVGoggles_OPFOR\";\nopforUnit assignItem \"NVGoggles_OPFOR\";\nindependentUnit addItem \"NVGoggles_INDEP\";\nindependentUnit assignItem \"NVGoggles_INDEP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItem",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "tasktype": {
        "name": "taskType",
        "description": "Returns the type of the given task. A new task returns \"Default\" for the type.",
        "syntaxArray": [
            {
                "Syntax": "**taskType** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_type = taskType (currentTask player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskType",
        "modifiers": []
    },
    "getammocargo": {
        "name": "getAmmoCargo",
        "description": "Returns the amount (1 is full) of ammo resources in the cargo space of a rearm vehicle. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**getAmmoCargo** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - ammo cargo value, -1 if ammo cargo is not supported, 0 if the vehicle is ![alive](https://community.bistudio.com/wiki/alive) or [isNull](https://community.bistudio.com/wiki/isNull)"
            }
        ],
        "examples": [
            "\n```sqf\nvalue = getAmmoCargo myVehicleName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAmmoCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "groupid": {
        "name": "groupId",
        "description": "Returns group name.",
        "syntaxArray": [
            {
                "Syntax": "**groupId** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = groupId (group player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupId",
        "modifiers": [
            "Global argument"
        ]
    },
    "addgroupicon": {
        "name": "addGroupIcon",
        "description": "Adds icon to a group leader. Returns icon ID, Control icons visibility with [setGroupIconsVisible](https://community.bistudio.com/wiki/setGroupIconsVisible).",
        "syntaxArray": [
            {
                "Syntax": "group **addGroupIcon** [iconClass, offset]",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) - group to add icon to\n\n[iconClass, offset] - [Array](https://community.bistudio.com/wiki/Array)\n\niconClass: [String](https://community.bistudio.com/wiki/String) - class name of an icon from CfgGroupIcons\n\noffset (Optional): [Array](https://community.bistudio.com/wiki/Array) - X and Y offsets of the icon in form [offsetX, offsetY]\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Icon ID"
            }
        ],
        "examples": [
            "\n```sqf\ngroupName addGroupIcon [\"b_inf\", [offsetX, offsetY]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addGroupIcon",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "addgoggles": {
        "name": "addGoggles",
        "description": "Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use [addItem](https://community.bistudio.com/wiki/addItem) and [assignItem](https://community.bistudio.com/wiki/assignItem) or just [linkItem](https://community.bistudio.com/wiki/linkItem) for latter.",
        "syntaxArray": [
            {
                "Syntax": "unit **addGoggles** type",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addGoggles \"G_Tactical_Clear\";\n\n```\n",
            "\n```sqf\ndiver addGoggles \"G_Diving\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addGoggles",
        "modifiers": []
    },
    "addmissioneventhandler": {
        "name": "addMissionEventHandler",
        "description": "Adds event handler (EH) attached to the current mission and returns EH handle. If EH has some data to return upon event, it is passed in _this variable. For the list of available mission event handlers see: [Arma 3: Event Handlers/addMissionEventHandler](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers/addMissionEventHandler)\n> ",
        "syntaxArray": [
            {
                "Syntax": "**addMissionEventHandler** [event, expression, args]",
                "Params": "[event, expression, args]: [Array](https://community.bistudio.com/wiki/Array)\n\nevent: [String](https://community.bistudio.com/wiki/String) - event name\n\nexpression: [Code](https://community.bistudio.com/wiki/Code) or [String](https://community.bistudio.com/wiki/String) - expression that will be executed in [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) when EH fires.\n\nargs (Optional): [Array](https://community.bistudio.com/wiki/Array) - additional arguments to be passed to the EH code. Available during code execution via _thisArgs variable. *Since Arma 3 v2.03.147276*\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - The index of the currently added mission event handler is returned."
            }
        ],
        "examples": [
            "\n```sqf\n_id = addMissionEventHandler [\"PlayerDisconnected\", { systemChat str _this }];\n```\n",
            "\n```sqf\n_id = addMissionEventHandler [\"EachFrame\", { systemChat str [_thisArgs, time] }, [time]]; Since Arma 3 v2.03.147276\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMissionEventHandler",
        "modifiers": [
            "Local effect"
        ]
    },
    "commandingmenu": {
        "name": "commandingMenu",
        "description": "Returns the name of the topmost commanding menu or \"\" if the menu is closed. For action menu visibility check see [isActionMenuVisible](https://community.bistudio.com/wiki/isActionMenuVisible).",
        "syntaxArray": [
            {
                "Syntax": "**commandingMenu**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nwaitUntil {commandingMenu == \"RscStatus\"}; hint \"Press 4, I'm bleeding !\";\n```\n",
            "\n```sqf\nif (commandingMenu != \"\") then { hint \"Command menu is opened\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandingMenu",
        "modifiers": []
    },
    "commandmove": {
        "name": "commandMove",
        "description": "Order the given unit(s) to move to the given location (via the radio). Exactly the same as [doMove](https://community.bistudio.com/wiki/doMove), except this command displays a radio message. The command will not put a visible waypoint marker unlike when move command is given via commanding menu.",
        "syntaxArray": [
            {
                "Syntax": "unitName **commandMove** position",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 commandMove getMarkerPos \"Marker1\";\n```\n",
            "\n```sqf\n[_soldier1, _soldier2] commandMove getMarkerPos \"Marker1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandMove",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "tg": {
        "name": "tg",
        "description": "Identical to [tan](https://community.bistudio.com/wiki/tan)",
        "syntaxArray": [
            {
                "Syntax": "**tg** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_tangent = tg 45; // Result is 1 \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tg",
        "modifiers": []
    },
    "lnbsetpicturecolor": {
        "name": "lnbSetPictureColor",
        "description": "Sets the cell picture's colour.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetPictureColor [idc, [row, column], colour]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolour: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetPictureColor [[row, column], colour]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolour: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetPictureColor [1492, [1,0], [0,0.75,0.3,0.5]];\n```\n",
            "\n```sqf\nctrl lnbSetPictureColor [[0, 3], [1,0,0,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetPictureColor",
        "modifiers": []
    },
    "magazines": {
        "name": "magazines",
        "description": "Returns array of type names of all vehicle's magazines. When applied to a unit, the command behaves differently and will omit magazines already loaded into unit's weapons. Use [currentMagazine](https://community.bistudio.com/wiki/currentMagazine) to get this information for a currently loaded magazine.",
        "syntaxArray": [
            {
                "Syntax": "**magazines**",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - Unit or vehicle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "magazines [vehicle, includeEmpty] *Since Arma 3 v2.00*",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - Unit or vehicle\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [True](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_mags = magazines player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazines",
        "modifiers": []
    },
    "reload": {
        "name": "reload",
        "description": "Reload all weapons.",
        "syntaxArray": [
            {
                "Syntax": "**reload** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (needReload player == 1) then { reload player };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/reload",
        "modifiers": []
    },
    "linebreak": {
        "name": "lineBreak",
        "description": "Creates a structured text containing a line break.",
        "syntaxArray": [
            {
                "Syntax": "lineBreak",
                "Params": "",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\nhint composeText [\"First line\", lineBreak, \"Second line\"];\n```\n",
            "\n```sqf\nhint str (composeText [lineBreak] == parseText \"<br/>\"); // true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lineBreak",
        "modifiers": []
    },
    "currentchannel": {
        "name": "currentChannel",
        "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP).\n\nFor Custom Radio, see [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate).",
        "syntaxArray": [
            {
                "Syntax": "**currentChannel**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - channelID"
            }
        ],
        "examples": [
            "\n```sqf\n_selected = currentChannel; // 3 - for example for the Group\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentChannel",
        "modifiers": []
    },
    "attackenabled": {
        "name": "attackEnabled",
        "description": "Return whether a group's leader can issue attack commands to soldiers under his command.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **attackEnabled** name",
                "Params": "name: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (not attackEnabled _soldier) then {_soldier setCombatMode \"Careless\"} \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/attackEnabled",
        "modifiers": [
            "Global argument"
        ]
    },
    "turretlocal": {
        "name": "turretLocal",
        "description": "Checks if a turret is [local](https://community.bistudio.com/wiki/local).",
        "syntaxArray": [
            {
                "Syntax": "vehicle **turretLocal** turretPath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) (or, prior to Arma 3 v1.94, [Nothing](https://community.bistudio.com/wiki/Nothing) if the turret is non-existent)"
            }
        ],
        "examples": [
            "\n```sqf\n_isLocal = vehicle player turretLocal [0];\n```\n",
            "\n```sqf\nif (heli turretLocal [1]) then {heli setVehicleAmmo 1};\n```\n",
            "\n```sqf\nif (isNil {heli turretLocal [5]}) then {hint \"Turret 5 is non-existent\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/turretLocal",
        "modifiers": [
            "Global argument"
        ]
    },
    "markertext": {
        "name": "markerText",
        "description": "Get marker text.",
        "syntaxArray": [
            {
                "Syntax": "[String](https://community.bistudio.com/wiki/String) = **markerText** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"Marker Text: %1\",markerText \"Marker1\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerText",
        "modifiers": [
            "Global argument"
        ]
    },
    "teammembernull": {
        "name": "teamMemberNull",
        "description": "A non-existent [Team Member](https://community.bistudio.com/wiki/Team_Member). To compare non-existent team members use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* teamMemberNull == teamMemberNull; *// false*\n\n* [isNull](https://community.bistudio.com/wiki/isNull) teamMemberNull; *// true*\n\n* teamMemberNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) teamMemberNull; *// true*",
        "syntaxArray": [
            {
                "Syntax": "teamMemberNull",
                "Params": "",
                "Return": "[Team Member](https://community.bistudio.com/wiki/Team_Member)"
            }
        ],
        "examples": [
            "\n```sqf\n!isNull teamMemberNull; // false\n```\n",
            "\n```sqf\nstr teamMemberNull; // <NULL - team member>\n```\n",
            "\n```sqf\nif (_teamMember isEqualTo teamMemberNull) then {\n\thint \"team member is null\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teamMemberNull",
        "modifiers": []
    },
    "collect3denhistory": {
        "name": "collect3DENHistory",
        "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single **collect3DENHistory** block will group them together and the user will need to undo only once to revert the changes.",
        "syntaxArray": [
            {
                "Syntax": "**collect3DENHistory** code",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncollect3DENHistory {\n\t_logic = create3DENEntity [\"Logic\", \"Logic\", position player];\n\tadd3DENConnection [\"Sync\", [_logic], player ];\n};\n```\n\nCreates a logic and connects it to player in one history step."
        ],
        "Url": "https://community.bistudio.com/wiki/collect3DENHistory",
        "modifiers": []
    },
    "leaderboardgetrows": {
        "name": "leaderboardGetRows",
        "description": "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!",
        "syntaxArray": [
            {
                "Syntax": "leaderboardGetRows boardName",
                "Params": "boardName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardGetRows \"TT01\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardGetRows",
        "modifiers": []
    },
    "allow3dmode": {
        "name": "allow3DMode",
        "description": "Allow/dissallow 3D mode., \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **allow3DMode** bool",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/allow3DMode",
        "modifiers": []
    },
    "lbsetselected": {
        "name": "lbSetSelected",
        "description": "Sets the selection state of the given row of the given listbox of style LB_MULTI. The command has to be called for every row which is needed to be selected in multi-selection listbox. For single selection listbox use [lbSetCurSel](https://community.bistudio.com/wiki/lbSetCurSel) instead.",
        "syntaxArray": [
            {
                "Syntax": "control **lbSetSelected** [index, selected]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, selected]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nselected: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control lbSetSelected [0, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetSelected",
        "modifiers": []
    },
    "modeltoworldvisual": {
        "name": "modelToWorldVisual",
        "description": "Converts position from object model space to world space in render time scope. For ASL version see [modelToWorldVisualWorld](https://community.bistudio.com/wiki/modelToWorldVisualWorld).",
        "syntaxArray": [
            {
                "Syntax": "object **modelToWorldVisual** modelPos",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nmodelPos: [Array](https://community.bistudio.com/wiki/Array) - in format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative) ([x,y,z] offset relative to the model centre)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - world position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\n_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/modelToWorldVisual",
        "modifiers": []
    },
    "ctrlsetfonth5b": {
        "name": "ctrlSetFontH5B",
        "description": "Sets H5 bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH5B** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH5B \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH5B",
        "modifiers": []
    },
    "deletemarkerlocal": {
        "name": "deleteMarkerLocal",
        "description": "Destroys the given marker.",
        "syntaxArray": [
            {
                "Syntax": "**deleteMarkerLocal** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteMarkerLocal \"Marker1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteMarkerLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlsettooltipcolorshade": {
        "name": "ctrlSetTooltipColorShade",
        "description": "Sets tooltip background color of given control. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetTooltipColorShade** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetTooltipColorShade [1, 0, 0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTooltipColorShade",
        "modifiers": []
    },
    "deactivatekey": {
        "name": "deActivateKey",
        "description": "Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the [description.ext](https://community.bistudio.com/wiki/Description.ext#keys) file of the missions.",
        "syntaxArray": [
            {
                "Syntax": "**deActivateKey** keyname",
                "Params": "keyname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeActivateKey \"Mission04Key\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deActivateKey",
        "modifiers": []
    },
    "weaponcargo": {
        "name": "weaponCargo",
        "description": "Get array with weapons from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "weaponCargo box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [String](https://community.bistudio.com/wiki/String) - list of present classes"
            }
        ],
        "examples": [
            "\n```sqf\nhint str weaponCargo backpackContainer player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponCargo",
        "modifiers": []
    },
    "drawicon3d": {
        "name": "drawIcon3D",
        "description": "Draws an ingame icon at a given position. Command has to be executed each frame. Use [addMissionEventHandler](https://community.bistudio.com/wiki/addMissionEventHandler) \"Draw3D\" which is executed each frame and if user can see the drawing. In order for the results of this command to be visible through a [ custom camera](https://community.bistudio.com/wiki/camCreate), enable HUD with [cameraEffectEnableHUD](https://community.bistudio.com/wiki/cameraEffectEnableHUD). [showHUD](https://community.bistudio.com/wiki/showHUD) [false](https://community.bistudio.com/wiki/false) will hide icon drawing. In order for arrows to appear, the icon texture should exist. The arrows size is proportionate to icon size.\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**drawIcon3D** [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]",
                "Params": "[texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]: [Array](https://community.bistudio.com/wiki/Array)\n\ntexture: [String](https://community.bistudio.com/wiki/String) - icon image\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - icon color in [r,g,b,a] format or (Since Arma 3 v2.03.147275) icon and text color in [[r,g,b,a],[r,g,b,a]] format\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - icon world position in [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) format\n\nwidth: [Number](https://community.bistudio.com/wiki/Number) - icon width (see description note)\n\nheight: [Number](https://community.bistudio.com/wiki/Number) - icon height (see description note)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - icon rotation angle\n\ntext (Optional, default: \"\"): [String](https://community.bistudio.com/wiki/String) - text label to display next to icon.\n\nshadow (Optional, default: 0): [Number](https://community.bistudio.com/wiki/Number) or [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* 0 = none\n\n* 1 = shadow (not used in this context, used in UI context)\n\n* 2 = outline\n\n* [true](https://community.bistudio.com/wiki/true) - outline\n\n* [false](https://community.bistudio.com/wiki/false) - none.\n\ntextSize (Optional, default: size of system): [Number](https://community.bistudio.com/wiki/Number) - the size of the text.\n\nfont (Optional, default: \"RobotoCondensed\"): [String](https://community.bistudio.com/wiki/String) - font class name from CfgFontFamilies.\n\ntextAlign (Optional, default: \"center\"): [String](https://community.bistudio.com/wiki/String) - \"left\", \"center\", \"right\".\n\ndrawSideArrows (Optional, default: [false](https://community.bistudio.com/wiki/false)): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to draw arrows and the text label at edge of screen when icon moves off screen.\n\noffsetX (Optional, default: 0): [Number](https://community.bistudio.com/wiki/Number) - (Since Arma 3 v2.03.147270) - x offset for the icon text.\n\noffsetY (Optional, default: 0): [Number](https://community.bistudio.com/wiki/Number) - (Since Arma 3 v2.03.147270) - y offset for the icon text.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Icon and text:\n```sqf\naddMissionEventHandler [\"Draw3D\", {\n\tdrawIcon3D [\"targetIcon.paa\", [1,1,1,1], ASLToAGL getPosASL cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"];\n}];\n```\n",
            "Just text:\n\n```sqf\naddMissionEventHandler [\"Draw3D\", {\n\tdrawIcon3D [\"\", [1,0,0,1], ASLToAGL getPosASL cursorTarget, 0, 0, 0, \"Target\", 1, 0.05, \"PuristaMedium\"];\n}];\n```\n",
            "\n```sqf\niconPos = player getPos [10, 0] vectorAdd [0,0,2];\naddMissionEventHandler [\"draw3D\", \n{\n\tdrawIcon3D \n\t[\n\t\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\Radar\\radar_ca.paa\",\n\t\t[0,0,1,1],\n\t\ticonPos,\n\t\t5,\n\t\t5,\n\t\tgetDirVisual player,\n\t\t\"COMPASS\",\n\t\t0,\n\t\t0.3,\n\t\t\"PuristaMedium\",\n\t\t\"center\",\n\t\ttrue\n\t];\n}];\n```\n",
            "Since Arma 3 v 2.03.147270\n```sqf\npos = player getPos [10, 0] vectorAdd [0,0,2];\naddMissionEventHandler [\"draw3D\", \n{\n\t_k = 10 / (player distance pos);\n\tdrawIcon3D \n\t[\n\t\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\Radar\\radar_ca.paa\", \n        [1,0,0,1], \n        pos,\n        1 * _k, \n\t\t1 * _k, \n        0, \n        name player, \n        0, \n        0.04 * _k, \n        \"RobotoCondensed\",\n\t\t\"right\", \n\t\ttrue, \n\t\t0.005 * _k,  \n\t\t-0.035 * _k\n\t]; \n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawIcon3D",
        "modifiers": []
    },
    "enablesatnormalondetail": {
        "name": "enableSatNormalOnDetail",
        "description": "Enables/Disables satellite normal map or detail maps.",
        "syntaxArray": [
            {
                "Syntax": "**enableSatNormalOnDetail** state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n enableSatNormalOnDetail true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableSatNormalOnDetail",
        "modifiers": []
    },
    "checkvisibility": {
        "name": "checkVisibility",
        "description": "Checks if one position is visible from another position and how much. The results can be affected by [getTerrainGrid](https://community.bistudio.com/wiki/getTerrainGrid) value, especially if position is near the ground. Particle effects such as smoke can also affect the results.",
        "syntaxArray": [
            {
                "Syntax": "[ignore, LOD, ignore2] checkVisibility [beg, end]",
                "Params": "[ignore, LOD, ignore2]: [Array](https://community.bistudio.com/wiki/Array)\n\nignore: [Object](https://community.bistudio.com/wiki/Object) - object to exclude from calculations\n\nLOD: [String](https://community.bistudio.com/wiki/String) - level of details to use. Possible values are: \"FIRE\", \"VIEW\", \"GEOM\", \"IFIRE\", \"PHYSX\" - PhysX geometry LOD (since Arma 3 v2.01.146666)\n\nignore2 (Optional): [Object](https://community.bistudio.com/wiki/Object) - second object to exclude from calculations (Since Arma 3 v1.62)\n\n[beg, end]: [Array](https://community.bistudio.com/wiki/Array)\n\nbeg: [Array](https://community.bistudio.com/wiki/Array) - start position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\nend: [Array](https://community.bistudio.com/wiki/Array) - end position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - how much end position is visible to start position in range 0..1, where 1 is fully visible."
            }
        ],
        "examples": [
            "\n```sqf\n_cansee = [objNull, \"VIEW\"] checkVisibility [eyePos player, eyePos unit1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/checkVisibility",
        "modifiers": []
    },
    "getobjectfov": {
        "name": "getObjectFOV",
        "description": "Returns Field of View of the given object in [radians](https://community.bistudio.com/wiki/rad). Static objects return default value, which is 1. FOV of [objNull](https://community.bistudio.com/wiki/objNull) is 0. Object FOV is indirectly connected with optics magnification or player view zoom, the narrower the angle the greater the zoom.\n> ",
        "syntaxArray": [
            {
                "Syntax": "getObjectFOV object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - for units it queries unit weapon optics/zoom, for vehicles - vehicle optics/zoom\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - FOV in [radians](https://community.bistudio.com/wiki/rad)"
            }
        ],
        "examples": [
            "\n```sqf\n_objFOV = getObjectFOV player;\n```\n",
            "\n```sqf\n_objFOVinDegrees = deg getObjectFOV cursorObject;\n```\n",
            "\n```sqf\n_objType = getObjectFOV vehicle player;\n```\n",
            "Perceived distance to an object:\n```sqf\n_vdist = (player distance _obj) * (getObjectFOV player / 0.75);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectFOV",
        "modifiers": []
    },
    "getweaponcargo": {
        "name": "getWeaponCargo",
        "description": "Returns all weapons types and count from the cargo space",
        "syntaxArray": [
            {
                "Syntax": "getWeaponCargo object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - object to check\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [all_types_array, all_counts_array]. Eg: [[\"a\", \"b\"], [3, 2]]"
            }
        ],
        "examples": [
            "\n```sqf\n_content = getWeaponCargo carName;\n```\n",
            "\n```sqf\n_content = getWeaponCargo ammoBoxName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getWeaponCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "tvdata": {
        "name": "tvData",
        "description": "Returns string data from item on given path. IDC means id of parent [CT_TREE](https://community.bistudio.com/wiki/CT_TREE).",
        "syntaxArray": [
            {
                "Syntax": "**tvData** [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array of [numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control **tvData** path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array of [numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ntvData [101, [0]];\n```\n",
            "\n```sqf\n(_display displayCtrl 101) tvData [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvData",
        "modifiers": []
    },
    "private": {
        "name": "private",
        "description": "Sets a variable to the innermost scope as demonstrated in Example 3. See also [param](https://community.bistudio.com/wiki/param) and [params](https://community.bistudio.com/wiki/params).\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "private variableName",
                "Params": "variableName: [String](https://community.bistudio.com/wiki/String) - e.g \"_myVar\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "private variableNameList",
                "Params": "variableNameList: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String), e.g [\"_target\", \"_damage\"]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "private _identifier = value *Since Arma 3 v1.53.132932*",
                "Params": "_identifier: underscored [variable name](https://community.bistudio.com/wiki/Identifier), for example *_myVar*\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything): value to assign to the variable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _varname = \"this is my new variable\"; // since Arma 3 v1.53 only\n\n// identical, but less performant\nprivate \"_varname\";\n_varname = \"this is my new variable\";\n```\n",
            "\n```sqf\nprivate [\"_varname1\", \"_varname2\"];\n_varname1 = \"variable 1\";\n_varname2 = \"variable 2\";\n```\n",
            "\n```sqf\n_lol =  123; call { hint str [_lol] }; // [123]\n_lol =  123; call { private \"_lol\"; hint str [_lol] }; // [any]\n```\n",
            "\n```sqf\n_myvar = 123;\nsystemChat str [_myvar];\t\t// [123]\ncall {\n\tsystemChat str [_myvar];\t// [123]\n\tprivate \"_myvar\";\n\tsystemChat str [_myvar];\t// [any]\n\t_myvar = 345;\n\tsystemChat str [_myvar];\t// [345]\n};\nsystemChat str [_myvar];\t\t// [123]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/private",
        "modifiers": []
    },
    "deletemarker": {
        "name": "deleteMarker",
        "description": "Destroys the given marker.",
        "syntaxArray": [
            {
                "Syntax": "**deleteMarker** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteMarker \"Marker1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteMarker",
        "modifiers": []
    },
    "setcombatmode": {
        "name": "setCombatMode",
        "description": "Sets AI [ group](https://community.bistudio.com/wiki/Group) combat mode (engagement rules). For individual unit's combat mode see [setUnitCombatMode](https://community.bistudio.com/wiki/setUnitCombatMode). Mode may be one of the following: \n\n* \"BLUE\" : Never fire, keep formation\n\n* \"GREEN\" : Hold fire, keep formation\n\n* \"WHITE\" : Hold fire, engage at will/loose formation\n\n* \"YELLOW\" : Fire at will, keep formation\n\n* \"RED\" : Fire at will, engage at will/loose formation\nSee [Combat Modes](https://community.bistudio.com/wiki/Combat_Modes) for more information on combat modes.",
        "syntaxArray": [
            {
                "Syntax": "group setCombatMode mode",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object). If the argument is unit [Object](https://community.bistudio.com/wiki/Object), unit's current group is used.\n\nmode: [String](https://community.bistudio.com/wiki/String) - See description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group1 setCombatMode \"BLUE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCombatMode",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setairportside": {
        "name": "setAirportSide",
        "description": "Set owning side of the airport. [ID](https://community.bistudio.com/wiki/Arma:_Airport_IDs) is the number to identify which airport on the island you want to check.",
        "syntaxArray": [
            {
                "Syntax": "id setAirportSide side",
                "Params": "id: [Number](https://community.bistudio.com/wiki/Number)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "target setAirportSide side *Since Arma 3 v1.68*",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n0 setAirportSide east\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAirportSide",
        "modifiers": []
    },
    "ismultiplayersolo": {
        "name": "isMultiplayerSolo",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) when playing a game in **solo multiplayer** (for example Apex coop campaign PLAY SOLO option).",
        "syntaxArray": [
            {
                "Syntax": "**isMultiplayerSolo**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_state = isMultiplayerSolo;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isMultiplayerSolo",
        "modifiers": []
    },
    "enableropeattach": {
        "name": "enableRopeAttach",
        "description": "Enables or disables the ability to be attached to a rope end for the given entity.",
        "syntaxArray": [
            {
                "Syntax": "entity enableRopeAttach enable",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object) - given entity\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to disable rope attachment\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player enableRopeAttach false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableRopeAttach",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "productversion": {
        "name": "productVersion",
        "description": "Returns the product's friendly name, identifier and version. In Arma 3 it also returns branch identifier, whether or not the game was launched using mods, and the platform.",
        "syntaxArray": [
            {
                "Syntax": "**productVersion**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)\n\n* [String](https://community.bistudio.com/wiki/String) - Product Name\n\n* [String](https://community.bistudio.com/wiki/String) - Product Name Short\n\n* [Number](https://community.bistudio.com/wiki/Number) - Product Version Number\n\n* [Number](https://community.bistudio.com/wiki/Number) - Product Build Number\n\n* [String](https://community.bistudio.com/wiki/String) (Arma 3) - Product Branch\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) (Arma 3) - Product is launched using mods [true](https://community.bistudio.com/wiki/true) or vanilla [false](https://community.bistudio.com/wiki/false)\n\n* [String](https://community.bistudio.com/wiki/String) (Arma 3) - Platform (*\"Windows\"*, *\"Linux\"* or *\"OSX\"*)\n\n* [String](https://community.bistudio.com/wiki/String) (Arma 3) - Architecture - **x64** for 64bit or **x86** for 32bit **Since version 1.67**"
            }
        ],
        "examples": [
            "\n```sqf\nhint str productVersion; // would return [\"Arma 2 OA\", \"arma2oa\", 162, 95208] on Arma 2 OA 1.62.95208\n```\n",
            "\n```sqf\nhint str productVersion; // [\"Arma 3\",\"Arma3\",137,128764,\"Development\",false,\"Windows\"]\n```\n",
            "\n```sqf\nformat [\"%1.%2\",(productVersion#2)/100 toFixed 2,(productVersion#3)]; // returns version e.g.: \"2.00.146773\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/productVersion",
        "modifiers": []
    },
    "setmarkeralphalocal": {
        "name": "setMarkerAlphaLocal",
        "description": "Sets the marker alpha.",
        "syntaxArray": [
            {
                "Syntax": "marker **setMarkerAlphaLocal** alpha",
                "Params": "marker: [String](https://community.bistudio.com/wiki/String)\n\nalpha: [Number](https://community.bistudio.com/wiki/Number) - Alpha value from 0 (invisible) to 1 (fully visible)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"my_marker\" setMarkerAlphaLocal 0.5;\n```\n",
            "\n```sqf\n\"enemy_convoy_marker\" setMarkerAlphaLocal 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerAlphaLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "menusetdata": {
        "name": "menuSetData",
        "description": "Sets data into menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuSetData [idc, path, data]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetData [path, data]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetData [[0, 1], \"[true, player, 'Hello World!', 1337]\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetData",
        "modifiers": []
    },
    "settriggertimeout": {
        "name": "setTriggerTimeout",
        "description": "Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time. \nFor a normal trigger, *min*, *mid* and *max* are used to generate random duration according to [Gaussian Distribution](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Normal_distribution)[[1]](https://community.bistudio.com/wiki/setTriggerTimeout#cite_note-1). For a \"Seized\" type of trigger, the duration value is generated using side ruling power",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTriggerTimeout** [min, mid, max, interruptable]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n[min, mid, max, interruptable]: [Array](https://community.bistudio.com/wiki/Array)\n\nmin: [Number](https://community.bistudio.com/wiki/Number)\n\nmid: [Number](https://community.bistudio.com/wiki/Number)\n\nmax: [Number](https://community.bistudio.com/wiki/Number)\n\ninterruptable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setTriggerTimeout [5, 10, 7, false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerTimeout",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setvehiclevarname": {
        "name": "setVehicleVarName",
        "description": "Sets string representation of an object to a custom string. For example it is possible to return \"MyFerrari\" instead of default \"ce06b00# 164274: offroad_01_unarmed_f.p3d\" when querying object as string: \n\n```sqf\nhint str _offroad; //MyFerrari\n```\n\nWhen a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object. In scripts an extra step is needed to achieve the same effect. See [Example 1](https://community.bistudio.com/wiki/setVehicleVarName#Example_1).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "object **setVehicleVarName** name",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVehicleVarName \"aP\";// Change the string representation and assign it to a variable to work with\naP = player;\n```\n",
            "\n```sqf\n_offroad setVehicleVarName \"\"; // Reset string representation to the default value\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleVarName",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "ctrlsetposition": {
        "name": "ctrlSetPosition",
        "description": "Sets wanted position and size for 2D control animation. Width and height are optional. [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) is required to complete the operation. For 3D control, param is relative [x, y, z] and no [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) is required as it cannot be animated. If target control is inside a [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP), the position needs to be relative to it.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetPosition** [x, y]",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control) - 2D control\n\nx: [Number](https://community.bistudio.com/wiki/Number) - Position in x\n\ny: [Number](https://community.bistudio.com/wiki/Number) - Position in y\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "controlName **ctrlSetPosition** [x, y, w, h]",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control) - 2D control\n\nx: [Number](https://community.bistudio.com/wiki/Number) - Position in x\n\ny: [Number](https://community.bistudio.com/wiki/Number) - Position in y\n\nw: [Number](https://community.bistudio.com/wiki/Number) - Width of the control\n\nh: [Number](https://community.bistudio.com/wiki/Number) - Height of the control\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "controlName **ctrlSetPosition** [x, y, z]",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\nx: [Number](https://community.bistudio.com/wiki/Number) - Position in x\n\ny: [Number](https://community.bistudio.com/wiki/Number) - Position in y (Distance from the screen)\n\nz: [Number](https://community.bistudio.com/wiki/Number) - Position in z\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Move control: \n```sqf\n_control2D ctrlSetPosition [0, 0];\n_control2D ctrlCommit 0;\n```\n",
            "Move control and resize:\n```sqf\n_control2D ctrlSetPosition [0, 0, 1, 1];\n_control2D ctrlCommit 0;\n```\n",
            "\n```sqf\n_control3D ctrlSetPosition [0.5, 1, 0.5]; //centered and 1m away from screen\n```\n",
            "Typewriter effect: \n```sqf\nwith uiNamespace do \t\n{ \n\t[] spawn\n\t{\n\t\t_text1 = \"This is a simple demo of typewriter text effect with various speed.\";\n\t\t_text2 = \"This took 10 seconds.\";\n\t\t_text3 = \"This is a fast one, set for 2 seconds.\";\n\t\t\n\t\tctrl = findDisplay 46 ctrlCreate [\"RscStructuredText\", -1];\n\t\t\n\t\tctrl ctrlSetPosition [0,0,0,0.1];\n\t\tctrl ctrlCommit 0;\n\t\tctrl ctrlSetStructuredText parseText format [\"<t color='#ff0000' size='2.1'>%1</t>\", _text1 splitString \" \" joinString \"&#160;\"];\n\t\tctrl ctrlSetPosition [0,0,ctrlTextWidth ctrl,0.1];\n\t\tctrl ctrlCommit 8;\n\t\t\n\t\twaitUntil {ctrlCommitted ctrl};\n\t\tsleep 0.5;\n\t\t\n\t\tctrl ctrlSetPosition [0,0,0,0.1];  \n\t\tctrl ctrlCommit 0;\n\t\tctrl ctrlSetStructuredText parseText format [\"<t color='#ff0000' size='2.1'>%1</t>\", _text2 splitString \" \" joinString \"&#160;\"];\n\t\tctrl ctrlSetPosition [0,0,ctrlTextWidth ctrl,0.1];\n\t\tctrl ctrlCommit 2;\n\t\t\n\t\twaitUntil {ctrlCommitted ctrl};\n\t\tsleep 2;\n\t\t\n\t\tctrl ctrlSetPosition [0,0,0,0.1];  \n\t\tctrl ctrlCommit 0;\n\t\tctrl ctrlSetStructuredText parseText format [\"<t color='#00ff00' size='2.1'>%1</t>\", _text3 splitString \" \" joinString \"&#160;\"];\n\t\tctrl ctrlSetPosition [0,0,ctrlTextWidth ctrl,0.1]; \n\t\tctrl ctrlCommit 2;\n\t\t\n\t\twaitUntil {ctrlCommitted ctrl};\n\t\tsleep 2;\n\t\t\n\t\tctrlDelete ctrl;\n\t};\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetPosition",
        "modifiers": []
    },
    "waypointshow": {
        "name": "waypointShow",
        "description": "A getter for [showWaypoint](https://community.bistudio.com/wiki/showWaypoint) command.",
        "syntaxArray": [
            {
                "Syntax": "**waypointShow** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - In format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Can return:\n\n* \"NEVER\" - Never show\n\n* \"EASY\" - Show only in cadet mode\n\n* \"ALWAYS\" - Always show\n\n* \"ERROR\" - When set to any different string"
            }
        ],
        "examples": [
            "\n```sqf\n_wpShow = waypointShow [groupOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointShow",
        "modifiers": []
    },
    "removeallmusiceventhandlers": {
        "name": "removeAllMusicEventHandlers",
        "description": "Removes all music track event handlers of given type.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllMusicEventHandlers** type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - \"MusicStart\" or \"MusicStop\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllMusicEventHandlers \"MusicStart\"\n```\n",
            "\n```sqf\nremoveAllMusicEventHandlers \"MusicStop\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllMusicEventHandlers",
        "modifiers": []
    },
    "setmarkersize": {
        "name": "setMarkerSize",
        "description": "Set marker size.\nSize is in format [a-axis, b-axis].\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerSize** [a-axis, b-axis]",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n[a-axis, b-axis]: [Array](https://community.bistudio.com/wiki/Array)\n\na-axis: [Number](https://community.bistudio.com/wiki/Number). 1/2 width of marker\n\nb-axis: [Number](https://community.bistudio.com/wiki/Number). 1/2 height of marker\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerSize [100, 200];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerSize",
        "modifiers": [
            "Global effect"
        ]
    },
    "vectorfromto": {
        "name": "vectorFromTo",
        "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces [ normalised vector](https://community.bistudio.com/wiki/vectorNormalized) between given 2 points. To get a normal vector use [vectorDiff](https://community.bistudio.com/wiki/vectorDiff).",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorFromTo vector2",
                "Params": "vector1: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n[1,2,3] vectorFromTo [4,5,6]; //[0.57735,0.57735,0.57735]\n\n//is the same as\n\nvectorNormalized ([4,5,6] vectorDiff [1,2,3]); //[0.57735,0.57735,0.57735]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorFromTo",
        "modifiers": []
    },
    "all3denentities": {
        "name": "all3DENEntities",
        "description": "Returns an array of all currently placed [Eden Editor entities](https://community.bistudio.com/wiki/Eden_Entity), including groups, waypoints, and markers in following format:\n [objects, groups, triggers, systems, waypoints, markers, layers, comments]\n\n* objects: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n* groups: [Array](https://community.bistudio.com/wiki/Array) of [Groups](https://community.bistudio.com/wiki/Group)\n\n* triggers: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n* systems: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n* waypoints: [Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in [Waypoint](https://community.bistudio.com/wiki/Waypoint) format\n\n* markers: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)\n\n* layers: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n* comments: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)",
        "syntaxArray": [
            {
                "Syntax": "**all3DENEntities**",
                "Params": "",
                "Return": "[Array of Eden Entities](https://community.bistudio.com/wiki/Array_of_Eden_Entities)"
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat str all3DENEntities;\n```\n",
            "\n```sqf\nall3DENEntities params [\"_objects\",\"_groups\",\"_triggers\",\"_systems\",\"_waypoints\",\"_markers\",\"_layers\",\"_comments\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/all3DENEntities",
        "modifiers": []
    },
    "buldozer_enableroaddiag": {
        "name": "buldozer_EnableRoadDiag",
        "description": "Enables road diagnostics in buldozer.",
        "syntaxArray": [
            {
                "Syntax": "buldozer_EnableRoadDiag enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbuldozer_EnableRoadDiag  true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buldozer_EnableRoadDiag",
        "modifiers": []
    },
    "setobjectviewdistance": {
        "name": "setObjectViewDistance",
        "description": "Sets the rendering distance of objects and shadows.",
        "syntaxArray": [
            {
                "Syntax": "**setObjectViewDistance** objectDistance",
                "Params": "objectDistance: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "**setObjectViewDistance**  [objectDistance, shadowDistance]",
                "Params": "objectDistance: [Number](https://community.bistudio.com/wiki/Number)\n\nshadowDistance: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetObjectViewDistance 2000;\n```\n",
            "\n```sqf\nsetObjectViewDistance [2000, 800];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectViewDistance",
        "modifiers": [
            "Local effect"
        ]
    },
    "movetime": {
        "name": "moveTime",
        "description": "Returns the current time of the most important RTM animation currently being played on the soldier.",
        "syntaxArray": [
            {
                "Syntax": "**moveTime** soldier",
                "Params": "soldier:  [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nmoveTime player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveTime",
        "modifiers": []
    },
    "campaignconfigfile": {
        "name": "campaignConfigFile",
        "description": "Returns root of campaign description.ext entries hierarchy.",
        "syntaxArray": [
            {
                "Syntax": "**campaignConfigFile**",
                "Params": "",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\n_config = campaignConfigFile;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/campaignConfigFile",
        "modifiers": []
    },
    "addcamshake": {
        "name": "addCamShake",
        "description": "Creates the camera shaking effect, like when you are near an explosion",
        "syntaxArray": [
            {
                "Syntax": "**addCamShake** [power, duration, frequency]",
                "Params": "power: [Number](https://community.bistudio.com/wiki/Number) - Strength of shake (camera movement), practical range is 0 to 20\n\nduration: [Number](https://community.bistudio.com/wiki/Number) - Duration in seconds\n\nfrequency: [Number](https://community.bistudio.com/wiki/Number) - Frequency of shake, practical range is 0 to 100\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\naddCamShake [10, 1, 25];\n```\n",
            "\n```sqf\nenableCamShake true;\naddCamShake [5, 5, 25];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addCamShake",
        "modifiers": [
            "Local effect"
        ]
    },
    "adduniform": {
        "name": "addUniform",
        "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). To check if uniform is allowed use [isUniformAllowed](https://community.bistudio.com/wiki/isUniformAllowed) and to force add incompatible uniform use [forceAddUniform](https://community.bistudio.com/wiki/forceAddUniform)",
        "syntaxArray": [
            {
                "Syntax": "unit **addUniform** type",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit addUniform \"U_B_CombatUniform_mcam\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addUniform",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "createteam": {
        "name": "createTeam",
        "description": "Creates a [team](https://community.bistudio.com/wiki/Team) and names it.",
        "syntaxArray": [
            {
                "Syntax": "**createTeam** [type, name]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Team Member](https://community.bistudio.com/wiki/Team_Member)"
            }
        ],
        "examples": [
            "\n```sqf\n_team = createTeam [\"USMC_Team\", \"Fire Team Red\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createTeam",
        "modifiers": []
    },
    "setvelocitymodelspace": {
        "name": "setVelocityModelSpace",
        "description": "Sets the velocity (speed vector) of the given vehicle relative to its model.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setVelocityModelSpace** [x, y, z]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[x, y, z]: [Array](https://community.bistudio.com/wiki/Array) - relative direction vector\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncar setVelocityModelSpace [0, 10, 0]; //pushes car forward\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVelocityModelSpace",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "atg": {
        "name": "atg",
        "description": "Returns the **arcus tangens**.[](https://community.bistudio.com/wiki/File:atan.jpg)",
        "syntaxArray": [
            {
                "Syntax": "atg x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Result in degrees"
            }
        ],
        "examples": [
            "\n```sqf\n_atanThreeFifth = atg 3/5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/atg",
        "modifiers": []
    },
    "removeuniform": {
        "name": "removeUniform",
        "description": "Removes uniform from unit.",
        "syntaxArray": [
            {
                "Syntax": "removeUniform unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveUniform player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeUniform",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "moveout": {
        "name": "moveOut",
        "description": "Moves the soldier out of the vehicle.\n\nNotes:\n\n* Works for both AI and player entities\n\n* AI unit gets back in - unless is under player command or combined with other sqf commands ([orderGetIn](https://community.bistudio.com/wiki/orderGetIn) false, [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) false or [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle))\n\n* Respects the vehicle's lock state (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject)) - unlike [doGetOut](https://community.bistudio.com/wiki/doGetOut), [commandGetOut](https://community.bistudio.com/wiki/commandGetOut). It will work for [player](https://community.bistudio.com/wiki/player) entities regardless though\n\n* Still executes when the vehicle is moving/flying (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject)) - unlike [doGetOut](https://community.bistudio.com/wiki/doGetOut), [commandGetOut](https://community.bistudio.com/wiki/commandGetOut)\n\n* Without vehicle's position's get out animation - unlike [action eject](https://community.bistudio.com/wiki/Arma_3_Actions#Eject), [doGetOut](https://community.bistudio.com/wiki/doGetOut), [commandGetOut](https://community.bistudio.com/wiki/commandGetOut)\n\n* Immediately - unlike [action eject](https://community.bistudio.com/wiki/Arma_3_Actions#Eject), [doGetOut](https://community.bistudio.com/wiki/doGetOut), [commandGetOut](https://community.bistudio.com/wiki/commandGetOut)\n\n* Works also on dead units (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) (but one after another)) - unlike [doGetOut](https://community.bistudio.com/wiki/doGetOut), [commandGetOut](https://community.bistudio.com/wiki/commandGetOut)\n\n* Does not work for UAV crew\n\n* Does not work for [remoteControl](https://community.bistudio.com/wiki/remoteControl)'ed units\n\n* Works on [unconscious](https://community.bistudio.com/wiki/setUnconscious) (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) (but one after another)) - unlike [doGetOut](https://community.bistudio.com/wiki/doGetOut), [commandGetOut](https://community.bistudio.com/wiki/commandGetOut) (unless AI under player command)",
        "syntaxArray": [
            {
                "Syntax": "**moveOut** soldier",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n{if (lifeState _x == \"UNCONSCIOUS\") then {moveOut _x}} forEach crew cursorTarget;\n```\n",
            "Move out player just before he dies:\n```sqf\nplayer addEventHandler [\n\t\"HandleDamage\", \n\tformat [\n\t\t'if (switch (_this select 1) do {\n\t\t\tcase \"\": {_this select 2 >= 1};\n\t\t\tcase \"head\": {_this select 2 >= %1};\n\t\t\tcase \"body\": {_this select 2 >= %2};\n\t\t\tdefault {false};\n\t\t}) then {moveOut player}',\n\t\tgetNumber (configFile >> \"CfgFirstAid\" >> \"CriticalHeadHit\"),\n\t\tgetNumber (configFile >> \"CfgFirstAid\" >> \"CriticalBodyHit\")\n\t]\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveOut",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ctrlsetscrollvalues": {
        "name": "ctrlSetScrollValues",
        "description": "Sets scroll values for current scrollbars in range 0...1 for the following controls:\n\n\n* CT_CONTROLS_TABLE\n\n* CT_CONTROLS_GROUP\n\n* CT_TREE\n\n* CT_LISTBOX\n\n* CT_COMBO\n\n* CT_XCOMBO\n\n* CT_LISTNBOX\n\n* CT_LISTNBOX_CHECKABLE",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetScrollValues [vScrollValue, hScrollValue]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[vScrollValue, hScrollValue]: [Array](https://community.bistudio.com/wiki/Array)\n\nvScrollValue: [Number](https://community.bistudio.com/wiki/Number) - vertical scroll value in 0..1 range. -1 to skip\n\nhScrollValue: [Number](https://community.bistudio.com/wiki/Number) - horizontal scroll value in 0..1 range. -1 to skip\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlGrp ctrlSetScrollValues [-1, 0.5];\n```\n",
            "\n```sqf\n// ControlsGroup\nprivate _disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nprivate _ctrlGrp = _disp ctrlCreate [\"RscControlsGroup\", -1]; \nprivate _ctrl = _disp ctrlCreate [\"RscTree\", -1, _ctrlGrp]; \n_ctrl tvAdd [[], \"Root\"];\nfor \"_i\" from 1 to 25 do\n{\n\t_ctrl tvAdd [[0], format [\"Tree Item %1\", _i]];  \n};\n_ctrl ctrlSetPosition [0,0,0.3,1.2]; \n_ctrl ctrlCommit 0;\ntvExpandAll _ctrl;\n_ctrlGrp ctrlSetPosition [0,0,0.2,0.3];\n_ctrlGrp ctrlCommit 0;\n \nuiNamespace setVariable [\"_ctrl\", _ctrlGrp];   \nonEachFrame\n{\n\thintSilent str ctrlScrollValues (uiNamespace getVariable [\"_ctrl\", controlNull]);\n};\n[] spawn\n{\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.3, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.3];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.7, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.7];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetScrollValues",
        "modifiers": []
    },
    "synchronizedtriggers": {
        "name": "synchronizedTriggers",
        "description": "Returns the list of triggers synchronized with a given waypoint.",
        "syntaxArray": [
            {
                "Syntax": "**synchronizedTriggers** waypoint",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nsynchronizedTriggers _someWaypoint;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizedTriggers",
        "modifiers": []
    },
    "isautotrimonrtd": {
        "name": "isAutoTrimOnRTD",
        "description": "Returns state of auto trim functionality. > ",
        "syntaxArray": [
            {
                "Syntax": "isAutoTrimOnRTD helicopter",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if auto trim is enabled"
            }
        ],
        "examples": [
            "\n```sqf\n_state = isAutoTrimOnRTD _myHelicopter;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAutoTrimOnRTD",
        "modifiers": []
    },
    "getpilotcameradirection": {
        "name": "getPilotCameraDirection",
        "description": "Returns model space vector of the object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera) .",
        "syntaxArray": [
            {
                "Syntax": "**getPilotCameraDirection** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [x,y,z] - format [Vector3D](https://community.bistudio.com/wiki/Vector3D) relative to the model centre (In a similar fashion to [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)). Returns [0,0,0] if object has no [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera)."
            }
        ],
        "examples": [
            "\n```sqf\n _pilotCamVector = getPilotCameraDirection vehicle player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPilotCameraDirection",
        "modifiers": [
            "Local argument"
        ]
    },
    "minedetectedby": {
        "name": "mineDetectedBy",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if mine has been detected by a given side",
        "syntaxArray": [
            {
                "Syntax": "mine **mineDetectedBy** faction",
                "Params": "mine: [Object](https://community.bistudio.com/wiki/Object)\n\nfaction: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n(allMines select 0) mineDetectedBy west;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mineDetectedBy",
        "modifiers": []
    },
    "seteditormode": {
        "name": "setEditorMode",
        "description": "Sets map mode to MAP,3D or PREVIEW. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **setEditorMode** mode",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nmode: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/setEditorMode",
        "modifiers": []
    },
    "for": {
        "name": "for",
        "description": "This operator creates a [For Type](https://community.bistudio.com/wiki/For_Type) which is used in the for-constructs.\n> ",
        "syntaxArray": [
            {
                "Syntax": "for arguments",
                "Params": "arguments: [String](https://community.bistudio.com/wiki/String) - declares the index variable name like \"_myVar\". [from](https://community.bistudio.com/wiki/from) and [to](https://community.bistudio.com/wiki/to) are required, [step](https://community.bistudio.com/wiki/step) is optional.\n\n",
                "Return": "[For Type](https://community.bistudio.com/wiki/For_Type)"
            },
            {
                "Syntax": "for [init, condition, codeToExecute]",
                "Params": "init: [Code](https://community.bistudio.com/wiki/Code) - loop variable definition\n\ncondition: [Code](https://community.bistudio.com/wiki/Code) - [called](https://community.bistudio.com/wiki/call) code returns [false](https://community.bistudio.com/wiki/false), leave the for-loop\n\ncodeToExecute: [Code](https://community.bistudio.com/wiki/Code) - code to be run on each loop\n\n",
                "Return": "[For Type](https://community.bistudio.com/wiki/For_Type)"
            }
        ],
        "examples": [
            "\n```sqf\n// will output 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 (the to value being inclusive)\nfor \"_i\" from 1 to 10 do { systemChat str _i; };\n```\n",
            "\n```sqf\nfor \"_i\" from 9 to 1 step -2 do { systemChat str _i; };\n```\n",
            "\n```sqf\nfor [{ _i = 0 }, { _i < 10 }, { _i = _i + 1 }] do { systemChat str _i };\n```\n",
            "\n```sqf\n// BAD CODE\n_i = 100; \nfor [{_i = 0}, {_i < 5}, {_i = _i + 1}] do {}; \nhint str _i; // 5\n\n// GOOD CODE (private keyword is recommended)\n_i = 100; \nfor [{private _i = 0}, {_i < 5}, {_i = _i + 1}] do {}; \nhint str _i; // 100\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/for",
        "modifiers": []
    },
    "sendtaskresult": {
        "name": "sendTaskResult",
        "description": "Send a result of the task to the task sender.",
        "syntaxArray": [
            {
                "Syntax": "task **sendTaskResult** [state,result,sentence]",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task) -\n\n[state,result,sentence]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sendTaskResult",
        "modifiers": []
    },
    "setlocalwindparams": {
        "name": "setLocalWindParams",
        "description": "Sets parameters for helicopter rotor wash. Visually it affects how much the grass, bushes and trees bend and how much the particles blown under a helicopter and how big is the area of the effect. Default [1.0, 1.0].\n> ",
        "syntaxArray": [
            {
                "Syntax": "**setLocalWindParams** [strength, diameter]",
                "Params": "[strength, diameter]: [Array](https://community.bistudio.com/wiki/Array)\n\nstrength: [Number](https://community.bistudio.com/wiki/Number) - down-force wind strength\n\ndiameter: [Number](https://community.bistudio.com/wiki/Number)  - area affected\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetLocalWindParams [10, 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLocalWindParams",
        "modifiers": []
    },
    "simulationenabled": {
        "name": "simulationEnabled",
        "description": "Check if the entity has enabled simulation. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**simulationEnabled** entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nsimulationEnabled player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/simulationEnabled",
        "modifiers": [
            "Global argument"
        ]
    },
    "setvectordirandup": {
        "name": "setVectorDirAndUp",
        "description": " Sets orientation of an object.\nThe command takes 2 vector arrays, one for [vectorDir](https://community.bistudio.com/wiki/vectorDir) and one for [vectorUp](https://community.bistudio.com/wiki/vectorUp).\nDefault object orientation will always have [vectorDir](https://community.bistudio.com/wiki/vectorDir) pointing forward (North) along Y axis and [vectorUp](https://community.bistudio.com/wiki/vectorUp) pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below (see also [BIS_fnc_transformVectorDirAndUp](https://community.bistudio.com/wiki/BIS_fnc_transformVectorDirAndUp)).\nWhen attaching object to an object the axes are relative to the object that gets the attachment.\nIf it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up.\nThe [setDir](https://community.bistudio.com/wiki/setDir) command is incompatible with setVectorDirAndUp and should not be used together on the same object.\n\nUsing setVectorDirAndUp alone should be sufficient for any orientation. ",
        "syntaxArray": [
            {
                "Syntax": "vehicle setVectorDirAndUp [[x1, y1, z1], [x2, y2, z2]]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[[x1, y1, z1], [x2, y2, z2]]: [Array](https://community.bistudio.com/wiki/Array)\n\n[x1, y1, z1]: [Array](https://community.bistudio.com/wiki/Array) - [vectorDir](https://community.bistudio.com/wiki/vectorDir)\n\n[x2, y2, z2]: [Array](https://community.bistudio.com/wiki/Array) - [vectorUp](https://community.bistudio.com/wiki/vectorUp)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n// set exact yaw, pitch, and roll\n_y = 45; _p = -80; _r = 0;\nBRICK setVectorDirAndUp [\n\t[sin _y * cos _p, cos _y * cos _p, sin _p],\n\t[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D\n];\n```\n",
            "To rotate BRICK on Z axis 90 degrees clockwise, change its [vectorDir](https://community.bistudio.com/wiki/vectorDir) but leave [vectorUp](https://community.bistudio.com/wiki/vectorUp) unchanged.\n\n```sqf\nBRICK setVectorDirAndUp [[1,0,0], [0,0,1]];\n```\n",
            "To rotate BRICK on Y axis 90 degrees clockwise, change its [vectorUp](https://community.bistudio.com/wiki/vectorUp) but leave [vectorDir](https://community.bistudio.com/wiki/vectorDir) unchanged.\n\n```sqf\nBRICK setVectorDirAndUp [[0,1,0], [1,0,0]];\n```\n",
            "To rotate BRICK on X axis 90 degrees (tilt forward), change both [vectorDir](https://community.bistudio.com/wiki/vectorDir) and [vectorUp](https://community.bistudio.com/wiki/vectorUp) accordingly.\n\n```sqf\nBRICK setVectorDirAndUp [[0,0,-1], [0,1,0]];\n```\n",
            "More complex orientations\n\n```sqf\n// tilt forward 90 + rotate left 90\nBRICK setVectorDirAndUp [[1,0,0], [0,1,0]];\n// tilt backward 45 degrees\nBRICK setVectorDirAndUp [[0,0.5,0.5], [0,-0.5,0.5]];\n// tilt forward 30 degrees\nBRICK setVectorDirAndUp [[0,0.66,-0.33], [0,0.33,0.66]];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVectorDirAndUp",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "vectordirvisual": {
        "name": "vectorDirVisual",
        "description": "Return object's normalized direction vector in world space ([x,y,z]) in render time scope. \n\n* A unit facing North would return [0,1,0]\n\n* A unit facing East would return [1,0,0]\n\n* A unit facing South would return [0,-1,0]\n\n* A unit facing West would return [-1,0,0]",
        "syntaxArray": [
            {
                "Syntax": "**vectorDirVisual** objectName",
                "Params": "objectName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Vector3D](https://community.bistudio.com/wiki/Vector3D)"
            }
        ],
        "examples": [
            "\n```sqf\n_dirVector = vectorDirVisual _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorDirVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "breakout": {
        "name": "breakOut",
        "description": "Breaks out of the [scope](https://community.bistudio.com/wiki/Variables#Scopes) with given **name**.\n\n* An unknown [scopeName](https://community.bistudio.com/wiki/scopeName) name will cause the script error \n```sqf\nGeneric error in expression\n```\n\n\n* If multiple scopes with the same **name** exist, the command will break out the nearest scope. See **Example 3**.",
        "syntaxArray": [
            {
                "Syntax": "**breakOut** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) - Name of the scope which was previously set with [scopeName](https://community.bistudio.com/wiki/scopeName). \n```sqf\n\"\"\n```\n will exit the current scope.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "value **breakOut** name *Since Arma 3 v1.47*",
                "Params": "value: [Anything](https://community.bistudio.com/wiki/Anything) - A value to return\n\nname: [String](https://community.bistudio.com/wiki/String) - Name of the scope which was previously set with [scopeName](https://community.bistudio.com/wiki/scopeName). \n```sqf\n\"\"\n```\n will exit the current scope.\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - Will return **value**"
            }
        ],
        "examples": [
            "\n```sqf\nscopeName \"main\";\nwhile {true} do {\n\tscopeName \"loop1\";\n\twhile {true} do {\n\t\tscopeName \"loop2\";\n\t\tif (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\"\n\t\tif (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\"\n\t\tsleep 1;\n\t};\n\tsleep 1;\n};\n\n```\n",
            "\n```sqf\ncall {\n\tscopeName \"main\"; \n\tcall {\n\t\t123 breakOut \"main\"\n\t};\n\t345\n}; // call returns 123\n```\n",
            "\n```sqf\ncall {\n\tscopeName \"Main\"; //Parent Main\n\tcall {\n\t\tscopeName \"Main\"; //Child Main\n\t\t\"String\" breakOut \"Main\"; //Will break out of child main and return \"String\" to parent main\n\t};\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/breakOut",
        "modifiers": []
    },
    "nearestlocation": {
        "name": "nearestLocation",
        "description": "Return the closest location of specified class to a given position.Checked range is unlimited (i.e. covers the whole map).",
        "syntaxArray": [
            {
                "Syntax": "nearestLocation [position, locationClass]",
                "Params": "[position, locationClass]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\nlocationClass: [String](https://community.bistudio.com/wiki/String) of a location class name. If \"\" is supplied, any nearest location is returned. See [Location Types](https://community.bistudio.com/wiki/Location#Location_Types)\n\n",
                "Return": "[Location](https://community.bistudio.com/wiki/Location)"
            }
        ],
        "examples": [
            "\n```sqf\n_nearestCity = nearestLocation [getPos player, \"nameCity\"];\n```\n",
            "\n```sqf\n_anyNearestLocation = nearestLocation [player, \"\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestLocation",
        "modifiers": []
    },
    "acos": {
        "name": "acos",
        "description": "ArcCosine of a number, result in [Degrees](https://community.bistudio.com/wiki/Number#Degrees)",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **acos** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_degrees = acos 0.5; // Returns 60\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/acos",
        "modifiers": []
    },
    "assigneddriver": {
        "name": "assignedDriver",
        "description": "Returns the soldier assigned to the given vehicle as a driver.",
        "syntaxArray": [
            {
                "Syntax": "**assignedDriver** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_driver= assignedDriver vehicleName \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedDriver",
        "modifiers": []
    },
    "enableengineartillery": {
        "name": "enableEngineArtillery",
        "description": "Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.",
        "syntaxArray": [
            {
                "Syntax": "**enableEngineArtillery** enabled",
                "Params": "enabled: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableEngineArtillery false; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableEngineArtillery",
        "modifiers": [
            "Local effect"
        ]
    },
    "addmusiceventhandler": {
        "name": "addMusicEventHandler",
        "description": "Adds [playMusic](https://community.bistudio.com/wiki/playMusic) event handler. Returns id of the handler or -1 when failed. Just like [addMissionEventHandler](https://community.bistudio.com/wiki/addMissionEventHandler), music EH is also attached to the mission.",
        "syntaxArray": [
            {
                "Syntax": "**addMusicEventHandler** [type, function]",
                "Params": "[type, function]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - \"MusicStart\" or \"MusicStop\"\n\nfunction: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code). Passed params array:\n\n* 0: [CfgMusic](https://community.bistudio.com/wiki/Description.ext#Music) class name\n\n* 1: this event handler id\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - event handler id"
            }
        ],
        "examples": [
            "\n```sqf\n_ehID = addMusicEventHandler [\"MusicStart\", {hint str _this}];\n```\n",
            "\n```sqf\n_ehID = addMusicEventHandler [\"MusicStop\", {hint str _this}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMusicEventHandler",
        "modifiers": []
    },
    "player": {
        "name": "player",
        "description": "A person object controlled by user. In Intros and Outros this isn't set by default and must be assigned.",
        "syntaxArray": [
            {
                "Syntax": "player",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addRating 500;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/player",
        "modifiers": []
    },
    "simulcloudocclusion": {
        "name": "simulCloudOcclusion",
        "description": "Returns clouds occlusion between two given points.",
        "syntaxArray": [
            {
                "Syntax": "simulCloudOcclusion [pos1, pos2]",
                "Params": "pos1: [Position](https://community.bistudio.com/wiki/Position)\n\npos2: [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "\n\n* [Number](https://community.bistudio.com/wiki/Number) - (0 - no clouds, 1 - full clouds)\n\n* [Nothing](https://community.bistudio.com/wiki/Nothing) - If arguments are incorrect\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [false](https://community.bistudio.com/wiki/false) if simulWeather is disabled"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _posPlayer = getPos player;\nprivate _posAbovePlayer = +_posPlayer; _posAbovePlayer set [2,200];\nsimulCloudOcclusion [_posPlayer, _posAbovePlayer];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/simulCloudOcclusion",
        "modifiers": []
    },
    "setpos": {
        "name": "setPos",
        "description": "Sets object position. The position is clamped to the bound of minXYZ: [-50k,-50k,-50k]; maxXYZ: [500k,500k,500k] (See [Position](https://community.bistudio.com/wiki/Position))",
        "syntaxArray": [
            {
                "Syntax": "object **setPos** pos",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setPos [getPos player select 0, getPos player select 1, (getPos player select 2) +10];\n\n//the same as above using modelToWorld:\nplayer setPos (player modelToWorld [0,0,10]);\n\n//the same as above using vectorAdd:\nplayer setPos (getPos player vectorAdd [0,0,10]);\n\n```\n",
            "\n```sqf\n_obj setPos [getPos _obj select 0, getPos _obj select 1, -5];\n```\n",
            "\n```sqf\nplayer setPos (getPos _obj);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPos",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "allowgetin": {
        "name": "allowGetIn",
        "description": "Set if the units given in the list are allowed to enter vehicles.",
        "syntaxArray": [
            {
                "Syntax": "unitArray **allowGetIn** allow",
                "Params": "unitArray: [Array](https://community.bistudio.com/wiki/Array) of [units](https://community.bistudio.com/wiki/units)\n\nallow: [Boolean](https://community.bistudio.com/wiki/Boolean) - true allows the [units](https://community.bistudio.com/wiki/units) to enter, false denies them\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_soldier1, _soldier2] allowGetIn true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowGetIn",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "addrating": {
        "name": "addRating",
        "description": "Add a number to the [rating](https://community.bistudio.com/wiki/rating) of a unit - negative values can be used to reduce the rating.\nThis command is usually used to reward for completed mission objectives. The rating is given at the end of the mission and is automatically adjusted when killing enemies or friendlies. \n\nWhen the rating gets below -2000, the unit's side switches to \"ENEMY\" ([sideEnemy](https://community.bistudio.com/wiki/sideEnemy)) and the unit is attacked by everyone.(see [Rating Values](https://community.bistudio.com/wiki/ArmA:_Rating_Values))\n\nSee also: [Arma_3:_Event_Handlers#HandleRating](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#HandleRating)",
        "syntaxArray": [
            {
                "Syntax": "unitName **addRating** rating",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nrating: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addRating 2000;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addRating",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "set": {
        "name": "set",
        "description": "Changes the element at the given zero-based index of the [array](https://community.bistudio.com/wiki/Array). If the index is out of bounds, the array will [resize](https://community.bistudio.com/wiki/resize) to incorporate the index as its last value, padding with [nil](https://community.bistudio.com/wiki/nil) as necessary. See [ Example 4](https://community.bistudio.com/wiki/set#Examples).",
        "syntaxArray": [
            {
                "Syntax": "array **set** [index, value]",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "hashMap **set** [key, value] *Since Arma 3 v2.02*",
                "Params": "hashMap : [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nkey: [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [False](https://community.bistudio.com/wiki/false) if the key is new to the hashmap, [true](https://community.bistudio.com/wiki/true) if a value got overwritten"
            }
        ],
        "examples": [
            "\n```sqf\n_arrayOne set [0, \"Hello\"];\n```\n",
            "Append \"Bye\" as last element to _arrayTwo:\n\n```sqf\n_arrayTwo set [count _arrayTwo, \"Bye\"];\n```\n",
            "Replace the last element of _arrayThree with 23:\n\n```sqf\n_arrayThree set [(count _arrayThree) - 1, 23];\n```\n",
            "Using set with an index that is out of bounds:\n\n```sqf\n_array = [\"A\"];\n_array set [2, \"C\"]; // _array is now [\"A\", nil, \"C\"]\n_array set [1, \"B\"]; // _array is now [\"A\", \"B\", \"C\"]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set",
        "modifiers": []
    },
    "break": {
        "name": "break",
        "description": "Skips all loop interations.",
        "syntaxArray": [
            {
                "Syntax": "break",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfor \"_i\" from 0 to 3 do \n{\n    if (_i == 2) then {break}; \n    systemChat str _i;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/break",
        "modifiers": []
    },
    "configof": {
        "name": "configOf",
        "description": "Returns config path of the provided object.",
        "syntaxArray": [
            {
                "Syntax": "configOf object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\nconfigOf player; // returns bin\\config.bin/CfgVehicles/B_W_Soldier_TL_F\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configOf",
        "modifiers": [
            "Global argument"
        ]
    },
    "boundingboxreal": {
        "name": "boundingBoxReal",
        "description": " Returns a raw bounding box of given object in model coordinates space. This command is similar to [boundingBox](https://community.bistudio.com/wiki/boundingBox) but gives more precise measurements.\n[](https://community.bistudio.com/wiki/Category:Arma_3)[1.92](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.92) An alternative syntax was introduced allowing to specify clipping type to be used, which in some cases could make bounding boxes even more precise. The output of both syntaxes was also extended to include bounding sphere diameter, identical to [sizeOf](https://community.bistudio.com/wiki/sizeOf) return value.",
        "syntaxArray": [
            {
                "Syntax": "boundingBoxReal object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - the extreme points of the model in format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative), as well as bounding box sphere diameter, to format [[xmin, ymin, zmin],[xmax, ymax, zmax], boundingSphereDiameter]."
            },
            {
                "Syntax": "clippingType boundingBoxReal object [](https://community.bistudio.com/wiki/Category:Arma_3)[1.92](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.92)",
                "Params": "clippingType: [Number](https://community.bistudio.com/wiki/Number) - can be one of:\n\n* 0 - ClipVisual (could significantly reduce the size of bounding boxes on buildings)\n\n* 1 - ClipShadow\n\n* 2 - ClipGeometry\n\n* 3 - ClipGeneral (same type that is used in main syntax)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - the extreme points of the model in format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative), as well as bounding box sphere diameter, to format [[xmin, ymin, zmin],[xmax, ymax, zmax], boundingSphereDiameter]."
            }
        ],
        "examples": [
            "\n```sqf\n_bbr = boundingBoxReal vehicle player;\n_p1 = _bbr select 0;\n_p2 = _bbr select 1;\n_maxWidth = abs ((_p2 select 0) - (_p1 select 0));\n_maxLength = abs ((_p2 select 1) - (_p1 select 1));\n_maxHeight = abs ((_p2 select 2) - (_p1 select 2));\n\n```\n",
            "\n```sqf\nhint str (0 boundingBoxReal cursorObject);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/boundingBoxReal",
        "modifiers": [
            "Global argument"
        ]
    },
    "clearitemcargoglobal": {
        "name": "clearItemCargoGlobal",
        "description": "Removes all items from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "clearItemCargoGlobal box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearItemCargoGlobal _ammoBox;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearItemCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "clearbackpackcargo": {
        "name": "clearBackpackCargo",
        "description": "Removes all backpacks from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "clearBackpackCargo box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearBackpackCargo myBox;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearBackpackCargo",
        "modifiers": []
    },
    "clientowner": {
        "name": "clientOwner",
        "description": "Returns the [ machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID) of the client executing the command.",
        "syntaxArray": [
            {
                "Syntax": "**clientOwner**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_id = clientOwner;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clientOwner",
        "modifiers": []
    },
    "commandgetout": {
        "name": "commandGetOut",
        "description": "Orders one or multiple units to get out from the vehicle (via the radio). Same as [doGetOut](https://community.bistudio.com/wiki/doGetOut) with latter being silent. \n\nNotes:\n\n* Works for both AI and player entities\n\n* AI unit gets back in - unless is under player command or combined with other sqf commands ([orderGetIn](https://community.bistudio.com/wiki/orderGetIn) false, [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) false or [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle))\n\n* Ignores vehicle's lock state - unlike [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) and [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* AI waits for execution until vehicle has stopped/is no longer flying (unclear if any timeout exists for order to be discarded) - unlike [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) and [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* Plays the vehicle's position's get out animation (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject)) - unlike [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* When execute for multiple units, it waits till the action is completed, before the next to take his turn (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject)) - unlike [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* AI gets back into formation afterwards\n\n* Works only on alive units - unlike [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) (one after another) or [moveOut](https://community.bistudio.com/wiki/moveOut) (instantly)\n\n* Does not work on [unconscious](https://community.bistudio.com/wiki/setUnconscious) - unless the AI is under player command. Unlike [moveOut](https://community.bistudio.com/wiki/moveOut) or [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) (but one after another))",
        "syntaxArray": [
            {
                "Syntax": "**commandGetOut** units(s)",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncommandGetOut _unitOne\n```\n",
            "\n```sqf\ncommandGetOut [_unitOne,_unitTwo]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandGetOut",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "ctrlmapscale": {
        "name": "ctrlMapScale",
        "description": "Returns the current scale of given map control.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlMapScale** ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_control = (findDisplay 12) displayCtrl 51; //Arma 3\n_scale = ctrlMapScale _control; //returns number from 1 to 0.001\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapScale",
        "modifiers": []
    },
    "commandradio": {
        "name": "commandRadio",
        "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec)).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
        "syntaxArray": [
            {
                "Syntax": "unit commandRadio radioName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit to transmit\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[side, identity] commandRadio radioName",
                "Params": "[side, identity]: [Array](https://community.bistudio.com/wiki/Array)\n\nside: [Side](https://community.bistudio.com/wiki/Side) - side to which the transmission will be played\n\nidentity: [String](https://community.bistudio.com/wiki/String) - class name of one of the identities in CfgHQIdentities. Possible identities in Arma 3 are:\n\n* \"Base\"\n\n* \"HQ\"\n\n* \"PAPA_BEAR\"\n\n* \"AirBase\"\n\n* \"BLU\"\n\n* \"OPF\"\n\n* \"IND\"\n\n* \"IND_G\"\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne commandRadio \"messageOne\";\n```\n",
            "\n```sqf\nplayer commandRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n",
            "\n```sqf\n[west, \"Base\"] commandRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandRadio",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "addbackpackcargo": {
        "name": "addBackpackCargo",
        "description": "Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is [here](https://community.bistudio.com/wiki/Arma_2_OA:_Backpacks).\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle addBackpackCargo [backpackClassName, count]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle to add the backpack to\n\n[backpackClassName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nbackpackClassName: [String](https://community.bistudio.com/wiki/String) - backpack classname\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - number of backpacks to add.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nthis addBackpackCargo [\"TK_RPG_Backpack_EP1\", 2];\n```\n",
            "\n```sqf\n_apc addBackpackCargo [\"US_Patrol_Pack_EP1\", 4];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addBackpackCargo",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "delete3denentities": {
        "name": "delete3DENEntities",
        "description": "Delete given entities in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor), including anything that can be placed in editor.",
        "syntaxArray": [
            {
                "Syntax": "**delete3DENEntities** entities",
                "Params": "entities: [Array](https://community.bistudio.com/wiki/Array) of types [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndelete3DENEntities (all3DENEntities select 0);\n// removes all objects\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/delete3DENEntities",
        "modifiers": []
    },
    "default": {
        "name": "default",
        "description": "See [switch do](https://community.bistudio.com/wiki/switch_do).",
        "syntaxArray": [
            {
                "Syntax": "**default** a",
                "Params": "a: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nswitch (_condition) do {\n    case 1: { hint \"1\" };\n    case 2: { hint \"2\" };\n    default { hint \"default\" };\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/default",
        "modifiers": []
    },
    "domove": {
        "name": "doMove",
        "description": "Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). Use [doStop](https://community.bistudio.com/wiki/doStop) to stop units returning to formation.",
        "syntaxArray": [
            {
                "Syntax": "unit(s) **doMove** position",
                "Params": "unit(s): [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 doMove (position _officer);\n```\n",
            "\n```sqf\nthis doMove (getMarkerPos \"Marker1\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doMove",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "ctrlmapanimcommit": {
        "name": "ctrlMapAnimCommit",
        "description": "Plays the map animation.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlMapAnimCommit** mapControl",
                "Params": "mapControl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Center map on player: \n```sqf\n_ctrl ctrlMapAnimAdd [0, 0.05, player];\nctrlMapAnimCommit _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapAnimCommit",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlmapcursor": {
        "name": "ctrlMapCursor",
        "description": "Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. ( NOT in case of Arma 3. Using an empty string will result in an error: \"No entry 'bin\\config.bin/CfgWrapperUI/Cursors.' ). The cursor is the name of a config entry from *CfgWrapperUI / Cursors*. This command has the following specifics:\n\n* When used on Main Map ([findDisplay](https://community.bistudio.com/wiki/findDisplay) 12 [displayCtrl](https://community.bistudio.com/wiki/displayCtrl) 51) it is possible to override multiple default cursors. For example, while leaving default \"Arrow\" intact, it is possible to just override \"Scroll\" with lets say \"Wait\" (Example 3)\n\n* When used on a custom map, for example user made Mini Map, there is only one single cursor \"\" for everything, therefore only this cursor can be overridden (see Example 4 on how to override it)\nSome possible class names (for the whole list see [ctrlMapCursor/cursors](https://community.bistudio.com/wiki/ctrlMapCursor/cursors)):\n\n* Arrow\n\n* Track\n\n* Move\n\n* Scroll\n\n* Rotate\n\n* Track3D\n\n* Move3D\n\n* Rotate3D\n\n* Raise3D\n\n* Wait\n\n* HC_move\n\n* HC_overFriendly\n\n* HC_overEnemy\n\n* HC_overMission\n\n* HC_unsel\n**NOTE1**: Cursor names are **case sensitive**.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlMapCursor** [defaultCursor, newCursor]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - Map control\n\ndefaultCursor: [String](https://community.bistudio.com/wiki/String) - Cursor class name\n\nnewCursor: [String](https://community.bistudio.com/wiki/String) - Cursor class name\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_map ctrlMapCursor [\"Track\", \"Arrow\"];\n```\n",
            "\n```sqf\nuiNamespace setVariable [\"_map\",findDisplay 12 displayCtrl 51];\n(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"];\n```\n",
            "\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlMapCursor [\"Scroll\", \"Wait\"];\n```\n",
            "Cycle through all available cursors over custom map:\n```sqf\n0 = [] spawn \n{\t\n\tdisableSerialization;\n\t_map = findDisplay 46 createDisplay \"RscCredits\" ctrlCreate [\"RscMapControl\", -1];\n\t_map ctrlSetPosition [0,0,1,1];\n\t_map ctrlCommit 0;\n\t{\n\t\t_map ctrlMapCursor [\"\", configName _x]; //<-- the actual usage\n\t\thint format [\"Current cursor: %1\", configName _x];\n\t\tsleep 1;\n\t} \n\tforEach (\"true\" configClasses (configFile >> \"CfgWrapperUI\" >> \"Cursors\"));\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapCursor",
        "modifiers": []
    },
    "ctaddrow": {
        "name": "ctAddRow",
        "description": "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].\n\nNote that rows and headers are indexed separately.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) = **ctAddRow** [Control](https://community.bistudio.com/wiki/Control)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_array = ctAddRow _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctAddRow",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "isarray": {
        "name": "isArray",
        "description": "Check if config entry represents array.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) =  **isArray** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n _ok = isArray (configFile >> \"CfgVehicles\")\n```\n\n\nResult is false"
        ],
        "Url": "https://community.bistudio.com/wiki/isArray",
        "modifiers": []
    },
    "setunittrait": {
        "name": "setUnitTrait",
        "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a [bool](https://community.bistudio.com/wiki/Bool).\nDefault traits are:\n\n* [Number](https://community.bistudio.com/wiki/Number) **audibleCoef** - A lower value means the unit is harder to hear\n\n* [Number](https://community.bistudio.com/wiki/Number) **camouflageCoef** - A lower value means the unit is harder to spot\n\n* [Number](https://community.bistudio.com/wiki/Number) **loadCoef** - Equipment weight multiplier affecting fatigue and stamina\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) **engineer** - Ability to partially repair vehicles with toolkit, equivalent to engineer = 1; in [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles_Config_Reference)\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) **explosiveSpecialist** - Ability to defuse mines with toolkit, equivalent to canDeactivateMines = 1; in CfgVehicles\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) **medic** - Ability to treat self and others with medikit, equivalent to attendant = 1; in CfgVehicles\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) **UAVHacker** - Ability to hack drones, equivalent to uavHacker = 1; in CfgVehicles",
        "syntaxArray": [
            {
                "Syntax": "unit setUnitTrait [skillName, value, isCustom]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - The unit whose trait should be set\n\nskillName: [String](https://community.bistudio.com/wiki/String) - Name of the skill\n\nvalue: [Boolean](https://community.bistudio.com/wiki/Boolean) or [Number](https://community.bistudio.com/wiki/Number) - Value (see above)\n\nisCustom (optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - Must be set to [true](https://community.bistudio.com/wiki/true) in case of custom\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setUnitTrait [\"Medic\",true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitTrait",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "removeallactions": {
        "name": "removeAllActions",
        "description": "Removes all unit's user added actions.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllActions** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit, vehicle or static object\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllActions player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllActions",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "progressloadingscreen": {
        "name": "progressLoadingScreen",
        "description": "If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])",
        "syntaxArray": [
            {
                "Syntax": "progressLoadingScreen progress",
                "Params": "progress: [Number](https://community.bistudio.com/wiki/Number) - in range 0..1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nstartLoadingScreen [\"Loading My Mission\"];\n// \n// batch of code\n// \nprogressLoadingScreen 0.25;\n// \n// batch of code\n// \nprogressLoadingScreen 0.50;\n// \n// batch of code\n// \nprogressLoadingScreen 0.95;\n// \n// batch of code\n// \nendLoadingScreen;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/progressLoadingScreen",
        "modifiers": [
            "Local effect"
        ]
    },
    "remove3denconnection": {
        "name": "remove3DENConnection",
        "description": "Remove [connection](https://community.bistudio.com/wiki/Eden_Editor:_Connecting) between entities.",
        "syntaxArray": [
            {
                "Syntax": "**remove3DENConnection** [type, from, to]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - connection class from *Cfg3DEN >> Connections*\n\nfrom: [Array](https://community.bistudio.com/wiki/Array) of [Eden Entities](https://community.bistudio.com/wiki/Eden_Entity) - entities which has a connection\n\nto: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) - connection target\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the connection was removed"
            }
        ],
        "examples": [
            "\n```sqf\nremove3DENConnection [\"RandomStart\",get3DENSelected \"Object\",\"marker_0\"]\n```\n\nRemove random start on marker \"marker_0\" from all selected objects."
        ],
        "Url": "https://community.bistudio.com/wiki/remove3DENConnection",
        "modifiers": []
    },
    "lockedturret": {
        "name": "lockedTurret",
        "description": "Check whether gunner position of the vehicle turret is locked.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **lockedTurret** turretPath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_locked = tank lockedTurret [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockedTurret",
        "modifiers": []
    },
    "lnbsettextright": {
        "name": "lnbSetTextRight",
        "description": "Sets cell's right-aligned text. Does not replace [cell's text](https://community.bistudio.com/wiki/lnbText).",
        "syntaxArray": [
            {
                "Syntax": "lnbSetTextRight [idc, [row, column], text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetTextRight [[row, column], text]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetTextRight [1492, [1,0], \"right text\"];\n```\n",
            "\n```sqf\nctrl lnbSetTextRight [[0, 3], \"right text\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetTextRight",
        "modifiers": []
    },
    "setskill": {
        "name": "setSkill",
        "description": "Sets the skill level of given unit. The value of a [sub-skill](https://community.bistudio.com/wiki/AI_Sub-skills) is interpolated into a range defined in [CfgAISkill](https://community.bistudio.com/wiki/CfgAISkill).",
        "syntaxArray": [
            {
                "Syntax": "unit setSkill skill",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nskill: [Number](https://community.bistudio.com/wiki/Number) - Skill in range from 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit setSkill [skillName, value] *Since Armed Assault v1.00*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nskillName: [String](https://community.bistudio.com/wiki/String) - Available sub-skills are:\n\n* \"aimingAccuracy\"\n\n* \"aimingShake\"\n\n* \"aimingSpeed\"\n\n* \"endurance\"\n\n* \"spotDistance\"\n\n* \"spotTime\"\n\n* \"courage\"\n\n* \"reloadSpeed\"\n\n* \"commanding\"\n\n* \"general\"\n\nskill: [Number](https://community.bistudio.com/wiki/Number) - Skill in range from 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_hero setSkill 1;\n```\n",
            "\n```sqf\n_finalBoss setSkill [\"reloadSpeed\", 0.8]; _finalBoss setSkill [\"aimingSpeed\", 0.33];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSkill",
        "modifiers": []
    },
    "setvehicleammo": {
        "name": "setVehicleAmmo",
        "description": "Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to [local](https://community.bistudio.com/wiki/local) turrets. To check locality of turret use [turretLocal](https://community.bistudio.com/wiki/turretLocal).\n\nThe value ranges from 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **setVehicleAmmo** value",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - 0: empty, 1: full\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVehicleAmmo 0;\n```\n",
            "\n```sqf\n_vehicle setVehicleAmmo 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleAmmo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "underwater": {
        "name": "underwater",
        "description": "Returns whether the object is fully underwater\n> ",
        "syntaxArray": [
            {
                "Syntax": "**underwater** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - mini-submarine\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if submerged"
            }
        ],
        "examples": [
            "\n```sqf\n_isUnderwater = underwater vehicle player;\n```\n",
            "\n```sqf\n_isUnderwater = eyePos player select 2 < 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/underwater",
        "modifiers": []
    },
    "globalchat": {
        "name": "globalChat",
        "description": "Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec))",
        "syntaxArray": [
            {
                "Syntax": "unitName globalChat chatText",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) - unit transmitting message\n\nchatText: [String](https://community.bistudio.com/wiki/String) - message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne globalChat \"Show this text\";\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [sideChat](https://community.bistudio.com/wiki/sideChat) \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) globalChat \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [groupChat](https://community.bistudio.com/wiki/groupChat) \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [vehicleChat](https://community.bistudio.com/wiki/vehicleChat) \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [commandChat](https://community.bistudio.com/wiki/commandChat) \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [customChat](https://community.bistudio.com/wiki/customChat) [1, \"customChat\"];\n[systemChat](https://community.bistudio.com/wiki/systemChat) \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/globalChat",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "camsetdir": {
        "name": "camSetDir",
        "description": "Sets the orientation of the given camera in the direction of the given vector. Needs [camCommit](https://community.bistudio.com/wiki/camCommit).",
        "syntaxArray": [
            {
                "Syntax": "camera camSetDir direction",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\ndirection:\n\n* [Number](https://community.bistudio.com/wiki/Number) (before [](https://community.bistudio.com/wiki/Category:Arma_3)[0.50](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_0.50)) - camera azimuth\n\n* [Array](https://community.bistudio.com/wiki/Array) in format [x,y,z] (since [](https://community.bistudio.com/wiki/Category:Arma_3)[0.50](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_0.50)) - direction of camera. Must be a valid vector.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Since Arma 3:\n```sqf\nprivate _pos1 = player modelToWorld [0, 5, 5];\nprivate _pos2 = player modelToWorld [0, 50, 50];\n\nprivate _cam = \"camera\" camCreate _pos1;\n_cam cameraEffect [\"INTERNAL\", \"BACK\"];\n\n_cam camSetPos _pos2; \n_cam camSetDir (_pos2 vectorFromTo _pos1);\n_cam camCommit 5;\nwaitUntil { camCommitted _cam };\n\n_cam camSetPos _pos1;\n_cam camCommit 5;\n\n```\n",
            "Before Arma 3:\n```sqf\nprivate _pos1 = player modelToWorld [0, 5, 5];\nprivate _pos2 = player modelToWorld [0, 50, 50];\n\nprivate _cam = \"camera\" camCreate _pos1;\n_cam cameraEffect [\"INTERNAL\", \"BACK\"];\n\n_cam camSetPos _pos2; \n_cam camSetDir 180;\n_cam camCommit 5;\nwaitUntil { camCommitted _cam };\n\n_cam camSetPos _pos1;\n_cam camCommit 5;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetDir",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrladdeventhandler": {
        "name": "ctrlAddEventHandler",
        "description": "Add an event handler to the given control.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlAddEventHandler** [handler, function]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nhandler: [String](https://community.bistudio.com/wiki/String) - Handler name, see [User Interface Event Handlers](https://community.bistudio.com/wiki/User_Interface_Event_Handlers)\n\nfunction: [String](https://community.bistudio.com/wiki/String), since [](https://community.bistudio.com/wiki/Category:Arma_3)[1.06](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.06) also [Code](https://community.bistudio.com/wiki/Code) - Script\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Handler ID or -1 if failed"
            }
        ],
        "examples": [
            "\n```sqf\n_map ctrlAddEventHandler [\"draw\", \"_this call BIS_fnc_strategicMapOpen_draw\"];\n```\n",
            "\n```sqf\n_map ctrlAddEventHandler [\"draw\", {hintSilent str _this}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAddEventHandler",
        "modifiers": []
    },
    "groupowner": {
        "name": "groupOwner",
        "description": "Returns the [ machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID) of the client to which the group is local. This command only works when called from the server. When called from a client, it always returns 0.",
        "syntaxArray": [
            {
                "Syntax": "**groupOwner** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_clientID = groupOwner _someGroup;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupOwner",
        "modifiers": [
            "Global argument",
            "Server execution"
        ]
    },
    "addpublicvariableeventhandler": {
        "name": "addPublicVariableEventHandler",
        "description": "> \nThis event handler will detect if a [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) variable (it is attached to) has been broadcast over network with [publicVariable](https://community.bistudio.com/wiki/publicVariable), [publicVariableClient](https://community.bistudio.com/wiki/publicVariableClient) or [publicVariableServer](https://community.bistudio.com/wiki/publicVariableServer) commands and will execute EH code upon detection. Arguments passed to the code in *_this* array are:\n\n_this select 0: [String](https://community.bistudio.com/wiki/String) - broadcast variable name (same variable name EH is attached to)\n_this select 1: [Anything](https://community.bistudio.com/wiki/Anything) - broadcast variable value \n_this select 2: [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) - target the variable got set on with [setVariable](https://community.bistudio.com/wiki/setVariable)  (see: alternative syntax)\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "varName **addPublicVariableEventHandler** code",
                "Params": "varName: [String](https://community.bistudio.com/wiki/String) - [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) variable name\n\ncode: [Code](https://community.bistudio.com/wiki/Code) - By default, the code is executed in [missionNamespace](https://community.bistudio.com/wiki/missionNamespace)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "varName **addPublicVariableEventHandler** [target, code] *Since Arma 3 v1.46*",
                "Params": "varName: [String](https://community.bistudio.com/wiki/String) - name of the variable set on target with [setVariable](https://community.bistudio.com/wiki/setVariable)\n\n[target, code]: [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"publicThis\" addPublicVariableEventHandler {\n\thint format [\n\t\t\"%1 has been updated to: %2\",\n\t\t_this select 0,\n\t\t_this select 1\n\t]\n};\n```\n",
            "Client:\n```sqf\n\"'^:)123BURP,+=lol\" addPublicVariableEventHandler {hint (\"NUTS are \" + (_this select 1))};\n```\n\nServer:\n```sqf\nmissionNamespace setVariable [\"'^:)123BURP,+=lol\", \"craZZZZy\"];\npublicVariable \"'^:)123BURP,+=lol\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addPublicVariableEventHandler",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "pushbackunique": {
        "name": "pushBackUnique",
        "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.\n> ",
        "syntaxArray": [
            {
                "Syntax": "array **pushBackUnique** element",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nelement: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - index of inserted element or -1"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3];\n_index = _arr pushBackUnique 3;\nhint str [_index, _arr]; //[-1,[1,2,3]]\n```\n",
            "\n```sqf\n_arr = [1,2,3];\n_index = _arr pushBackUnique 4;\nhint str [_index, _arr]; //[3,[1,2,3,4]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pushBackUnique",
        "modifiers": []
    },
    "vestcontainer": {
        "name": "vestContainer",
        "description": "Returns a cargo container of a unit's vest.",
        "syntaxArray": [
            {
                "Syntax": "**vestContainer** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - a soldier\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - cargo container or <NULL-object>"
            }
        ],
        "examples": [
            "\n```sqf\nhint str vestContainer player; //2df7d600# 163942: dummyweapon.p3d\n\n```\n",
            "\n```sqf\nhint str getMagazineCargo vestContainer player;\n```\n\n\n[\n\t[\n\t\t\"30Rnd_65x39_caseless_mag\",\n\t\t\"16Rnd_9x21_Mag\",\n\t\t\"HandGrenade\",\n\t\t\"APERSMine_Range_Mag\",\n\t\t\"SmokeShell\",\n\t\t\"SmokeShellGreen\",\n\t\t\"Chemlight_green\"\n\t],[\n\t\t2,\n\t\t2,\n\t\t2,\n\t\t3,\n\t\t1,\n\t\t1,\n\t\t2\n\t]\n]"
        ],
        "Url": "https://community.bistudio.com/wiki/vestContainer",
        "modifiers": []
    },
    "alldeadmen": {
        "name": "allDeadMen",
        "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.",
        "syntaxArray": [
            {
                "Syntax": "**allDeadMen**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n{ deleteVehicle _x } forEach allDeadMen;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allDeadMen",
        "modifiers": []
    },
    "assignedcommander": {
        "name": "assignedCommander",
        "description": "Returns the soldier assigned to the given vehicle as a commander.",
        "syntaxArray": [
            {
                "Syntax": "**assignedCommander** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_commander = assignedCommander vehicleName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedCommander",
        "modifiers": []
    },
    "assignedcargo": {
        "name": "assignedCargo",
        "description": "Returns the list of soldiers assigned to the given vehicle as a cargo.",
        "syntaxArray": [
            {
                "Syntax": "**assignedCargo** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_list = assignedCargo _vehicleName\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedCargo",
        "modifiers": []
    },
    "ammo": {
        "name": "ammo",
        "description": "Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.56 the command also returns ammo for units in vehicles.",
        "syntaxArray": [
            {
                "Syntax": "unit **ammo** muzzle",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmuzzle: [String](https://community.bistudio.com/wiki/String) - muzzle of a weapon. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_count = player ammo \"M16\"; //returns 30 in case of a full magazine\n```\n",
            "\n```sqf\n_count = player ammo \"M203Muzzle\";\n```\n",
            "\n```sqf\n_count = player ammo primaryWeapon player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ammo",
        "modifiers": [
            "Global argument"
        ]
    },
    "setdestination": {
        "name": "setDestination",
        "description": "Set the destination for path planning of the pilot.\n\nPossible values for planningMode are:\n\n\n* \"DoNotPlan\" - used when not moving\n\n* \"DoNotPlanFormation\" - used in formation when simple path testing is used\n\n* \"LEADER PLANNED\" - used for formation leader (full path finding used)\n\n* \"LEADER DIRECT\" - used for DirectGo (like getin, supply)\n\n* \"FORMATION PLANNED\" - used in formation when full path finding is used\n\n* \"VEHICLE PLANNED\" - used for vehicle driver\n\nWorks best when used on [agents](https://community.bistudio.com/wiki/agents). Using \"LEADER PLANNED\" will trigger \"PathCalculated\" [ Event Handler](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#PathCalculated)",
        "syntaxArray": [
            {
                "Syntax": "object **setDestination** [position, planningMode, forceReplan]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[position, planningMode, forceReplan]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\nplanningMode: [String](https://community.bistudio.com/wiki/String)\n\nforceReplan: [Boolean](https://community.bistudio.com/wiki/Boolean) Specifies if replanning of the path should be forced.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbob setDestination [screenToWorld [0.5,0.5], \"LEADER PLANNED\", true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDestination",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setarmorypoints": {
        "name": "setArmoryPoints",
        "description": "Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to *armoryPoints* entry. If entry doesn't exist, it is created.",
        "syntaxArray": [
            {
                "Syntax": "setArmoryPoints points",
                "Params": "points: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetArmoryPoints (armoryPoints + 20);\n```\n",
            "\n```sqf\nsetArmoryPoints 3.14;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setArmoryPoints",
        "modifiers": []
    },
    "removeheadgear": {
        "name": "removeHeadgear",
        "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.",
        "syntaxArray": [
            {
                "Syntax": "**removeHeadgear** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveHeadgear player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeHeadgear",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ropecut": {
        "name": "ropeCut",
        "description": "Cuts the given rope to the specified length. If some entity was attached to the end of the rope, it will be detached. The rope remains attached to its parent transport and if the length is set to 0 or even negative does not get destroyed. Use [ropeDestroy](https://community.bistudio.com/wiki/ropeDestroy) to remove it completely.\n> ",
        "syntaxArray": [
            {
                "Syntax": "ropeCut [rope, length]",
                "Params": "rope: [Object](https://community.bistudio.com/wiki/Object) - rope object obtained from [ropeCreate](https://community.bistudio.com/wiki/ropeCreate)\n\nlength: [Number](https://community.bistudio.com/wiki/Number) - length of the rope in meters after the cut\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nropeCut [ropes heli1 select 0, 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeCut",
        "modifiers": []
    },
    "ropedetach": {
        "name": "ropeDetach",
        "description": "Detaches attached object from rope (i.e. detaches rope end from attached to it entity). See [ropeAttachTo](https://community.bistudio.com/wiki/ropeAttachTo) for attach operation.",
        "syntaxArray": [
            {
                "Syntax": "attachedObject ropeDetach rope",
                "Params": "attachedObject: [Object](https://community.bistudio.com/wiki/Object) - entity attached to the end of rope\n\nrope: [Object](https://community.bistudio.com/wiki/Object) - rope object to which entity is attached\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player ropeDetach myRope;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeDetach",
        "modifiers": []
    },
    "currentmagazine": {
        "name": "currentMagazine",
        "description": "Returns class name of currently loaded vehicle's / unit's magazine.",
        "syntaxArray": [
            {
                "Syntax": "**currentMagazine** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_magazineClass = currentMagazine player;//Example: \"30Rnd_545x39_AK\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentMagazine",
        "modifiers": []
    },
    "directsay": {
        "name": "directSay",
        "description": "Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of [fadeSound](https://community.bistudio.com/wiki/fadeSound). The message is defined in CfgRadio in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec)). \nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
        "syntaxArray": [
            {
                "Syntax": "unit **directSay** radioName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit to transmit\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer directSay configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/directSay",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "cos": {
        "name": "cos",
        "description": "Cosine of a number, argument in degrees.",
        "syntaxArray": [
            {
                "Syntax": "**cos** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ncos 60;//returns 0.5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cos",
        "modifiers": []
    },
    "camconstuctionsetparams": {
        "name": "camConstuctionSetParams",
        "description": "Sets construction camera parameters. To work with \"camconstruct\" object.",
        "syntaxArray": [
            {
                "Syntax": "camera **camConstuctionSetParams** [[x,y,z], radius, maxAboveLand]",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\n[[x,y,z], radius, maxAboveLand]: [Array](https://community.bistudio.com/wiki/Array)\n\n[x,y,z]: [Position](https://community.bistudio.com/wiki/Position)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\nmaxAboveLand: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_camera camConstuctionSetParams [getPos player, 50, 20];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camConstuctionSetParams",
        "modifiers": []
    },
    "inareaarray": {
        "name": "inAreaArray",
        "description": "Returns given list of [Objects](https://community.bistudio.com/wiki/Object) and/or [Positions](https://community.bistudio.com/wiki/Position) that are in the given area, area defined by a trigger, marker, location or array.",
        "syntaxArray": [
            {
                "Syntax": "positions **inAreaArray** area",
                "Params": "positions: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) and/or [Positions](https://community.bistudio.com/wiki/Position)\n\narea: [Object](https://community.bistudio.com/wiki/Object), [Location](https://community.bistudio.com/wiki/Location) or [String](https://community.bistudio.com/wiki/String) - the defined area:\n\n* [Object](https://community.bistudio.com/wiki/Object) - trigger\n\n* [Location](https://community.bistudio.com/wiki/Location) - location\n\n* [String](https://community.bistudio.com/wiki/String) - marker name\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array): [Objects](https://community.bistudio.com/wiki/Object) and/or [Positions](https://community.bistudio.com/wiki/Position) inside the trigger area"
            },
            {
                "Syntax": "positions **inAreaArray** [center, a, b, angle, isRectangle, c]",
                "Params": "positions: [Array](https://community.bistudio.com/wiki/Array) - [Objects](https://community.bistudio.com/wiki/Object) and/or [Positions](https://community.bistudio.com/wiki/Position) to check\n\ncenter: [Array](https://community.bistudio.com/wiki/Array) - center of the area in format [Position3D](https://community.bistudio.com/wiki/Position3D), [Position2D](https://community.bistudio.com/wiki/Position2D)\n\na: [Number](https://community.bistudio.com/wiki/Number) - x axis (x / 2)\n\nb: [Number](https://community.bistudio.com/wiki/Number) - y axis (y / 2)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 0) rotation angle\n\nisRectangle: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) if rectangle, [false](https://community.bistudio.com/wiki/false) if ellipse\n\nc: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1: unlimited) z axis (z / 2)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array): [Objects](https://community.bistudio.com/wiki/Object) and/or [Positions](https://community.bistudio.com/wiki/Position) inside the area"
            }
        ],
        "examples": [
            "\n```sqf\nvehicles inAreaArray myTrigger;\n```\n",
            "\n```sqf\nallUnits inAreaArray \"myMarker\";\n```\n",
            "\n```sqf\nallPlayers inAreaArray myLocation;\n```\n",
            "\n```sqf\nallDead inAreaArray [[100, 100, 0], 20, 30, 45, false, 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inAreaArray",
        "modifiers": []
    },
    "radiochannelsetlabel": {
        "name": "radioChannelSetLabel",
        "description": "Set the custom radio channel's label.",
        "syntaxArray": [
            {
                "Syntax": "customChannelID radioChannelSetLabel label",
                "Params": "customChannelID: [Number](https://community.bistudio.com/wiki/Number) - [custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command\n\nlabel: [String](https://community.bistudio.com/wiki/String) - label\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n5 radioChannelSetLabel \"Q-dance Radio\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioChannelSetLabel",
        "modifiers": []
    },
    "language": {
        "name": "language",
        "description": "Returns current game language.",
        "syntaxArray": [
            {
                "Syntax": "language",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String) - See [supported languages](https://community.bistudio.com/wiki/Stringtable.xml#Supported_languages) for possible values"
            }
        ],
        "examples": [
            "\n```sqf\n_myLanguage = language; // will return \"English\" if game language is set to English\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/language",
        "modifiers": []
    },
    "comment": {
        "name": "comment",
        "description": "Defines a comment. See [SQF Syntax - Comments](https://community.bistudio.com/wiki/SQF_Syntax#Comments) to learn more about comments.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**comment** text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) - The comment\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncomment \"This is a commented line\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/comment",
        "modifiers": []
    },
    "selectrandom": {
        "name": "selectRandom",
        "description": "Returns a random element from the given array. Engine solution to [BIS_fnc_selectRandom](https://community.bistudio.com/wiki/BIS_fnc_selectRandom)",
        "syntaxArray": [
            {
                "Syntax": "**selectRandom** array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - array of anything\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - random selected value or [Nothing](https://community.bistudio.com/wiki/Nothing) if array is empty"
            }
        ],
        "examples": [
            "\n```sqf\n_randomElement = selectRandom [1,2,3,4,5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectRandom",
        "modifiers": []
    },
    "servercommandexecutable": {
        "name": "serverCommandExecutable",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the [serverCommand](https://community.bistudio.com/wiki/serverCommand) can be performed on the machine and in this exact environment, otherwise [false](https://community.bistudio.com/wiki/false). serverCommand can be executed only from [User Interface Event Handlers](https://community.bistudio.com/wiki/User_Interface_Event_Handlers), and this command also checks if that's the case.",
        "syntaxArray": [
            {
                "Syntax": "serverCommandExecutable command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String) - see [Multiplayer Server Commands](https://community.bistudio.com/wiki/Multiplayer_Server_Commands#Commands) for all available commands\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_canKick = serverCommandAvailable \"#kick\";\n```\n",
            "Add button to the main map to lock server, which could only be activated by admin:\n\n```sqf\nwith uiNamespace do {\n\tctrl = findDisplay 12 ctrlCreate [\"RscButton\", -1];\n\tctrl ctrlSetPosition [0,0,0.5,0.1];\n\tctrl ctrlCommit 0;\n\tctrl ctrlSetText \"LOCK SERVER\";\n\tctrl ctrlAddEventHandler [\"ButtonDown\",\n\t{\t\n\t\tif (serverCommandExecutable \"#lock\") then {\n\t\t\tserverCommand \"#lock\";\n\t\t} else {\n\t\t\thint \"You need to be logged in as admin to do this\";\n\t\t};\n\t}];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/serverCommandExecutable",
        "modifiers": []
    },
    "rad": {
        "name": "rad",
        "description": "Converts given value in degrees to radians. 1 radian equals 180 degrees divided by [pi](https://community.bistudio.com/wiki/pi).",
        "syntaxArray": [
            {
                "Syntax": "**rad** value",
                "Params": "value: [Number](https://community.bistudio.com/wiki/Number) - degrees\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - radians"
            }
        ],
        "examples": [
            "\n```sqf\n_radians = rad 180; // Returns 3.1415 (pi)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rad",
        "modifiers": []
    },
    "alldisplays": {
        "name": "allDisplays",
        "description": "Returns a list of all opened GUI displays. Other displays, such as IGUI displays could be accessed via [uiNamespace](https://community.bistudio.com/wiki/uiNamespace) variable, which is updated every time display is opened or closed. For example, to access IGUI displays:\n\n```sqf\nuiNamespace getVariable [\"IGUI_displays\", []];\n```\n. Other display variables:\n\n* 3DENDisplays_displays\n\n* 3DENDisplaysTemp_displays\n\n* GUI_displays\n\n* IGUI_displays\n\n* Loading_displays\n\n* CuratorDisplays_displays\n\n* BootcampDisplays_displays\n\n* CuratorTitles_displays\n\n* BootcampTitles_displays\n\n* KartDisplays_displays",
        "syntaxArray": [
            {
                "Syntax": "**allDisplays**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of GUI [Displays](https://community.bistudio.com/wiki/Display)"
            }
        ],
        "examples": [
            "\n```sqf\n_allDisps = allDisplays;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allDisplays",
        "modifiers": []
    },
    "playmove": {
        "name": "playMove",
        "description": "When used on a person, smooth transition to given move will be done.\nThe difference between playMove and [playMoveNow](https://community.bistudio.com/wiki/playMoveNow) is that playMove adds another move to the move queue, while [playMoveNow](https://community.bistudio.com/wiki/playMoveNow) replaces the whole move queue with new move (see [Example 2](https://community.bistudio.com/wiki/playMove#Examples)).\n> ",
        "syntaxArray": [
            {
                "Syntax": "unitName playMove moveName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nmoveName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne playMove \"Stand\";\n```\n",
            "\n```sqf\nplayer switchMove \"AmovPercMstpSrasWrflDnon\"; \n[] spawn \n{\n\tsleep 0.5; \n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\"; // player goes prone\n\tplayer playMove \"amovPknlMstpSrasWrflDnon\"; // player gets up on one knee\n};\n```\n\n\n```sqf\nplayer switchMove \"amovpercmstpsraswrfldnon\";\n[] spawn\n{\n\tsleep 0.5; \n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\"; // player never goes prone\n\tplayer playMoveNow \"AmovPknlMstpSrasWrflDnon\"; // player goes down on one knee straight away\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playMove",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "lockeddriver": {
        "name": "lockedDriver",
        "description": "Check whether driver position of the vehicle turret is locked.",
        "syntaxArray": [
            {
                "Syntax": "**lockedDriver** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_driverLocked = lockedDriver vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockedDriver",
        "modifiers": []
    },
    "armorypoints": {
        "name": "armoryPoints",
        "description": "Returns, stored in [USERNAME].ArmaXProfile, value of *armoryPoints* entry. If the entry doesn't exist, it returns 0.",
        "syntaxArray": [
            {
                "Syntax": "**armoryPoints**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_points = armoryPoints;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/armoryPoints",
        "modifiers": []
    },
    "setsimpletasktype": {
        "name": "setSimpleTaskType",
        "description": "Attach type to the simple task. See [Default Task Types](https://community.bistudio.com/wiki/Arma_3_Tasks_Overhaul#Default_Task_Types:_Actions).",
        "syntaxArray": [
            {
                "Syntax": "task **setSimpleTaskType** taskType",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\ntaskType: [String](https://community.bistudio.com/wiki/String) - Type of task\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n(currentTask player) setSimpleTaskType \"attack\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimpleTaskType",
        "modifiers": []
    },
    "admin": {
        "name": "admin",
        "description": "This is dedicated server command, which queries the admin state of any client on the network by their client ([owner](https://community.bistudio.com/wiki/owner)) id. Possible results are:\n\n* 1 - client is admin that is [voted in](https://community.bistudio.com/wiki/server.cfg#Voted_In_Admin)\n\n* 2 - client is admin that is [logged in](https://community.bistudio.com/wiki/server.cfg#Logged_In_Admin)\nIn all other cases it returns 0. To self check the admin state of a local client, use [BIS_fnc_admin](https://community.bistudio.com/wiki/BIS_fnc_admin).",
        "syntaxArray": [
            {
                "Syntax": "**admin** ownerID",
                "Params": "ownerID: [Number](https://community.bistudio.com/wiki/Number) - [clientOwner](https://community.bistudio.com/wiki/clientOwner) id\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - admin state of given client:\n\n* 0 - client is not an admin\n\n* 1 - client is admin that is voted in\n\n* 2 - client is admin that is logged in"
            }
        ],
        "examples": [
            "\n```sqf\n_isLoggedInAdmin = admin 3 == 2;\n```\n",
            "\n```sqf\n_adminState = admin owner unit1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/admin",
        "modifiers": [
            "Server execution"
        ]
    },
    "enableradio": {
        "name": "enableRadio",
        "description": "Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.",
        "syntaxArray": [
            {
                "Syntax": "**enableRadio** state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean) - true to enable the radio, false to disable it\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableRadio false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableRadio",
        "modifiers": [
            "Local effect"
        ]
    },
    "enableweapondisassembly": {
        "name": "enableWeaponDisassembly",
        "description": "Enables or disables disassembly of static weapons. Could be applied to local [player](https://community.bistudio.com/wiki/player), to another unit or to static weapon directly.",
        "syntaxArray": [
            {
                "Syntax": "**enableWeaponDisassembly** enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to prevent local [player](https://community.bistudio.com/wiki/player) from being able to disassemble static weapons\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "entity **enableWeaponDisassembly** enable",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object) - unit or static weapon\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)  - [false](https://community.bistudio.com/wiki/false) to prevent a unit from being able to disassemble static weapons, or to prevent a static weapon from being disassembled by anyone\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n enableWeaponDisassembly false;\n```\n",
            "\n```sqf\n soldier1 enableWeaponDisassembly false;\n```\n",
            "\n```sqf\n mortar1 enableWeaponDisassembly false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableWeaponDisassembly",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "inarea": {
        "name": "inArea",
        "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to [triggerArea](https://community.bistudio.com/wiki/triggerArea) format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and [drawEllipse](https://community.bistudio.com/wiki/drawEllipse). \nAlternatively, use [inAreaArray](https://community.bistudio.com/wiki/inAreaArray) to check multiple positions/objects within area.",
        "syntaxArray": [
            {
                "Syntax": "position inArea trigger",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - position in format [Position3D](https://community.bistudio.com/wiki/Position3D), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object)\n\ntrigger: [Object](https://community.bistudio.com/wiki/Object) - existing trigger\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "position inArea marker",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - position in format [Position3D](https://community.bistudio.com/wiki/Position3D), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object)\n\nmarker: [String](https://community.bistudio.com/wiki/String) - existing marker\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "position inArea location",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - position in format [Position3D](https://community.bistudio.com/wiki/Position3D), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object)\n\nlocation: [Location](https://community.bistudio.com/wiki/Location) - existing location\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "position inArea [center, a, b, angle, isRectangle, c]",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - position in format [Position3D](https://community.bistudio.com/wiki/Position3D), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object)\n\ncenter: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - center of the area in format [Position3D](https://community.bistudio.com/wiki/Position3D), [Position2D](https://community.bistudio.com/wiki/Position2D), [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\na: [Number](https://community.bistudio.com/wiki/Number) - x axis (x / 2)\n\nb: [Number](https://community.bistudio.com/wiki/Number) - y axis (y / 2)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - rotation angle\n\nisRectangle: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if rectangle, [false](https://community.bistudio.com/wiki/false) if ellipse\n\nc (Optional): [Number](https://community.bistudio.com/wiki/Number) - z axis (z / 2). Default: -1 (unlimited) *since Arma 3 v1.60*\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerIsInside = player inArea _myTrigger;\n```\n",
            "\n```sqf\n_positionIsInside = _myPosition inArea [[100, 100, 0], 20, 30, 45, false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inArea",
        "modifiers": []
    },
    "collectivertd": {
        "name": "collectiveRTD",
        "description": "Returns the current position of a helicopter's collective pitch control.\n\n* 0: fully lowered\n\n* 1: fully raised\n> ",
        "syntaxArray": [
            {
                "Syntax": "collectiveRTD helicopterRTD",
                "Params": "helicopterRTD: [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_collective = collectiveRTD vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/collectiveRTD",
        "modifiers": []
    },
    "hostmission": {
        "name": "hostMission",
        "description": "Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog.\nFor example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded.\nYou need to provide the display which is active when the hostMission command is called.",
        "syntaxArray": [
            {
                "Syntax": "hostMission [pConfig, pDisplay]",
                "Params": "[pConfig, pDisplay]: [Array](https://community.bistudio.com/wiki/Array)\n\npConfig: [Config](https://community.bistudio.com/wiki/Config)\n\npDisplay: [Display](https://community.bistudio.com/wiki/Display)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhostMission [configMissionName, display];\n```\n",
            "\n```sqf\nhostMission [configFile >> \"CfgMissions\" >> \"MPMissions\" >> _scenarioClassName, _currentlyActiveDisplay];\n```\n",
            "**Arma 3:** Launch host mission dialog from a client on dedicated server:\n\n```sqf\nhostMission [\n\tconfigFile >> \"CfgMissions\" >> \"MPmissions\" >> \"MP_COOP_m01\",\n\tfindDisplay 46\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hostMission",
        "modifiers": []
    },
    "enablecopilot": {
        "name": "enableCopilot",
        "description": "Enables copilot actions, toggles availability of the actions related to copilots, such as taking over controls, suspending controls, etc. This command triggers the \"ControlsShifted\" event handler.",
        "syntaxArray": [
            {
                "Syntax": "vehicle enableCopilot enable",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle on which to toggle copilot actions\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - enable or disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (!isCopilotEnabled myHeli) then\n{\n\tmyHeli enableCopilot true;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableCopilot",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "alldead": {
        "name": "allDead",
        "description": "Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.",
        "syntaxArray": [
            {
                "Syntax": "allDead",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n{ deleteVehicle _x } forEach allDead;\n```\n",
            "allAlive: \n```sqf\n_all = allUnits + vehicles;\n{\n\t_all pushBack agent _x;\n} forEach (agents - [teamMemberNull]);\nallAlive = _all - allDead;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allDead",
        "modifiers": []
    },
    "cleargroupicons": {
        "name": "clearGroupIcons",
        "description": "Removes all icons from group.",
        "syntaxArray": [
            {
                "Syntax": "**clearGroupIcons** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearGroupIcons (group player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearGroupIcons",
        "modifiers": []
    },
    "setsimpletasktarget": {
        "name": "setSimpleTaskTarget",
        "description": "Attach a target to the simple task.Overrides [setSimpleTaskDestination](https://community.bistudio.com/wiki/setSimpleTaskDestination).",
        "syntaxArray": [
            {
                "Syntax": "task **setSimpleTaskTarget** [target, precisePosition]",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\nprecisePosition: [Boolean](https://community.bistudio.com/wiki/Boolean) - use exact position of the target for map marker / HUD indicator instead of the position known to the owner of the task (depending on the knowledge about the target)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntask setSimpleTaskTarget [targetVehicle, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimpleTaskTarget",
        "modifiers": []
    },
    "worldtomodelvisual": {
        "name": "worldToModelVisual",
        "description": "Converts position from world space to object model space in [render time scope](https://community.bistudio.com/wiki/Simulation_vs_Render_Time_Scope).",
        "syntaxArray": [
            {
                "Syntax": "object worldToModelVisual worldPosition",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nworldPosition: [Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)"
            }
        ],
        "examples": [
            "\n```sqf\n_relPos = myObject worldToModelVisual [0,0,0];\n```\n",
            "\n```sqf\n_relPos = player worldToModelVisual position car;\n```\n",
            "\n```sqf\n_relPos = car worldToModelVisual [12000, 5000];\n```\n",
            "\n```sqf\n_relPos = unit worldToModelVisual position tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/worldToModelVisual",
        "modifiers": []
    },
    "settaskstate": {
        "name": "setTaskState",
        "description": "Set the state of a given task.",
        "syntaxArray": [
            {
                "Syntax": "task **setTaskState** state",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\nstate: [String](https://community.bistudio.com/wiki/String) - State value may be one of:\n\n* \"None\"\n\n* \"Created\"\n\n* \"Assigned\"\n\n* \"Succeeded\"\n\n* \"Failed\"\n\n* \"Canceled\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tskKillSpongebob setTaskState \"Succeeded\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTaskState",
        "modifiers": []
    },
    "setimportance": {
        "name": "setImportance",
        "description": "Sets the importance value of location.",
        "syntaxArray": [
            {
                "Syntax": "location **setImportance** value",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setImportance 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setImportance",
        "modifiers": []
    },
    "everycontainer": {
        "name": "everyContainer",
        "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.",
        "syntaxArray": [
            {
                "Syntax": "**everyContainer** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Vehicle or ammo box\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\neveryContainer cursorTarget;\n```\n\n[\n\t[\"V_PlateCarrier1_rgr\",2bc06b00# 163955: dummyweapon.p3d],\n\t[\"U_B_CombatUniform_mcam\",2bc07900# 163954: dummyweapon.p3d]\n]"
        ],
        "Url": "https://community.bistudio.com/wiki/everyContainer",
        "modifiers": []
    },
    "foreachmember": {
        "name": "forEachMember",
        "description": "Executes the given command recursively for both teams and agents that are members of the given team. For teams only use [forEachMemberTeam](https://community.bistudio.com/wiki/forEachMemberTeam). For agents only use [forEachMemberAgent](https://community.bistudio.com/wiki/forEachMemberAgent).",
        "syntaxArray": [
            {
                "Syntax": "command **forEachMember** team",
                "Params": "command: [Code](https://community.bistudio.com/wiki/Code)\n\nteam: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forEachMember",
        "modifiers": []
    },
    "getterraingrid": {
        "name": "getTerrainGrid",
        "description": "A getter for [setTerrainGrid](https://community.bistudio.com/wiki/setTerrainGrid), returns the current terrain grid.",
        "syntaxArray": [
            {
                "Syntax": "**getTerrainGrid**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - terrain grid value"
            }
        ],
        "examples": [
            "\n```sqf\n_terrainGrid = getTerrainGrid;\n```\n",
            "\n```sqf\nif (getTerrainGrid < 50) then\n{\n   hint \"Grass is enabled\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getTerrainGrid",
        "modifiers": []
    },
    "setviewdistance": {
        "name": "setViewDistance",
        "description": "Set rendering distance. Setting view distance to <= 0 resets the value to the client's options (set in Options → Video → General → Visibility → Overall).\n> \n> \n",
        "syntaxArray": [
            {
                "Syntax": "setViewDistance distance",
                "Params": "distance: [Number](https://community.bistudio.com/wiki/Number) - distance in metres\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetViewDistance 2250;\n```\n",
            "\n```sqf\nsetViewDistance -1; // reset view distance in Arma 3\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setViewDistance",
        "modifiers": [
            "Local effect"
        ]
    },
    "missiletargetpos": {
        "name": "missileTargetPos",
        "description": "Returns a guided missile's target position.",
        "syntaxArray": [
            {
                "Syntax": "missileTargetPos munition",
                "Params": "munition: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = missileTargetPos missile1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missileTargetPos",
        "modifiers": []
    },
    "getallpylonsinfo": {
        "name": "getAllPylonsInfo",
        "description": "Return an array with the vehicle's all pylons info.",
        "syntaxArray": [
            {
                "Syntax": "getAllPylonsInfo vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in format [Pylon index, Pylon name, Assigned turret, Magazine className, Magazine ammo count, [Magazine detail](https://community.bistudio.com/wiki/currentMagazineDetail)]"
            }
        ],
        "examples": [
            "\n```sqf\ngetAllPylonsInfo vehicle player;\n/*\n\tExecuted on an Mi-48 Kajman:\n\t[\n\t\t[1,\"PylonLeft1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000646\"],\n\t\t[2,\"PylonLeft2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000648\"],\n\t\t[3,\"PylonRight2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000649\"],\n\t\t[4,\"PylonRight1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000650\"]\n\t]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAllPylonsInfo",
        "modifiers": []
    },
    "uisleep": {
        "name": "uiSleep",
        "description": "Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.",
        "syntaxArray": [
            {
                "Syntax": "**uiSleep** delay",
                "Params": "delay : [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n uiSleep 0.5 \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/uiSleep",
        "modifiers": []
    },
    "currentweaponturret": {
        "name": "currentWeaponTurret",
        "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **currentWeaponTurret** [turret path]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[turret path]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_weapon = MBT_Kuma currentWeaponTurret [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentWeaponTurret",
        "modifiers": []
    },
    "getdlcusagetime": {
        "name": "getDLCUsageTime",
        "description": "Returns total time the assets of the given DLC have been used. See [Arma 3 DLCs & Expansions](https://community.bistudio.com/wiki/Category:Arma_3_DLCs_%26_Expansions) for a list of DLCs and ids.",
        "syntaxArray": [
            {
                "Syntax": "getDLCUsageTime appId",
                "Params": "appId: [Number](https://community.bistudio.com/wiki/Number) - DLC's Steam appId\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - DLC assets usage time in seconds"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _kartsUsage = getDLCUsageTime 288520;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDLCUsageTime",
        "modifiers": []
    },
    "getpilotcameraposition": {
        "name": "getPilotCameraPosition",
        "description": "Returns model space coordinates of the object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera) .",
        "syntaxArray": [
            {
                "Syntax": "**getPilotCameraPosition** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [x,y,z] offset relative to the model centre, format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative). Returns [0,0,0] if object has no [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera)."
            }
        ],
        "examples": [
            "\n```sqf\n _pilotCamPos = getPilotCameraPosition vehicle player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPilotCameraPosition",
        "modifiers": [
            "Global argument"
        ]
    },
    "getstatvalue": {
        "name": "getStatValue",
        "description": "Returns value of the given stat.\nA list of possible StatNames can be found here: [Arma 3: Stat Names](https://community.bistudio.com/wiki/Arma_3:_Stat_Names)",
        "syntaxArray": [
            {
                "Syntax": "getStatValue name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) (can return [Nothing](https://community.bistudio.com/wiki/Nothing))"
            }
        ],
        "examples": [
            "\n```sqf\ngetStatValue \"ExpWarlockDown\"; // Checks if the \"Warlock Down\" Achivement was already aquired\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getStatValue",
        "modifiers": []
    },
    "getstamina": {
        "name": "getStamina",
        "description": "Get current stamina (~ seconds until depletion)",
        "syntaxArray": [
            {
                "Syntax": "**getStamina** unit;",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ngetStamina player;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getStamina",
        "modifiers": []
    },
    "lbsetdata": {
        "name": "lbSetData",
        "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog) to the given data.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "lbSetData [idc, index, data]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - control's IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control lbSetData [index, data]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetData [101, 1, \"#1\"];\n```\n",
            "\n```sqf\n_control lbSetData [1, \"#1\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetData",
        "modifiers": []
    },
    "playmusic": {
        "name": "playMusic",
        "description": "Plays music defined in [Description.ext's CfgMusic](https://community.bistudio.com/wiki/Description.ext#CfgMusic) or config.cpp. If the *musicName* could not be found a message is logged into the .rpt file: Music <*musicName*> not found.\n\n* [Arma 3 CfgMusic](https://community.bistudio.com/wiki/Arma_3_CfgMusic)\n\n* [Arma 2: CfgMusic](https://community.bistudio.com/wiki/Arma_2:_CfgMusic)\n\n* [ArmA: CfgMusic](https://community.bistudio.com/wiki/ArmA:_CfgMusic)\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "playMusic musicName",
                "Params": "musicName: [String](https://community.bistudio.com/wiki/String) - music classname\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "playMusic [musicName, start]",
                "Params": "musicName: [String](https://community.bistudio.com/wiki/String) - music classname\n\nstart: [Number](https://community.bistudio.com/wiki/Number) - start, in seconds. Can be negative.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayMusic \"RadioAmbient1\";\n```\n",
            "\n```sqf\nplayMusic [\"RadioAmbient3\", 3]; // start to play from 00:00:03\n```\n",
            "Play from 00:00:01 to 00:00:05:\n\n```sqf\n[] spawn {\n\tplayMusic [\"RadioAmbient5\", 1];\n\tsleep 4;\n\tplayMusic \"\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playMusic",
        "modifiers": [
            "Local effect"
        ]
    },
    "lbvalue": {
        "name": "lbValue",
        "description": "Returns the additional integer value of the item with the given index of the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO).",
        "syntaxArray": [
            {
                "Syntax": "**lbValue** [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Only integers"
            },
            {
                "Syntax": "control **lbValue** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Only integers"
            }
        ],
        "examples": [
            "\n```sqf\n_value = lbValue [101, 0];\n```\n",
            "\n```sqf\n_value = _control lbValue 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbValue",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lbsetpicture": {
        "name": "lbSetPicture",
        "description": "Sets the left picture in the row with given index of [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO). The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPicture** [idc, index, path]",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPicture** [index, path]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [String](https://community.bistudio.com/wiki/String) - Path to the picture\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPicture [101, 0, \"iskoda.paa\"];\n```\n",
            "\n```sqf\n_control lbSetPicture [0, \"iskoda.paa\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPicture",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "targetknowledge": {
        "name": "targetKnowledge",
        "description": "Returns unit's knowledge about target. The returned array includes information whether the target is \n\n* known by group\n\n* known by the unit\n\n* last time the target was seen by the unit\n\n* last time the target endangered the unit\n\n* target side\n\n* position error\n\n* target position",
        "syntaxArray": [
            {
                "Syntax": "unit **targetKnowledge** target",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) (7 elements)"
            }
        ],
        "examples": [
            "\n```sqf\n_allInfo = _soldierOne targetKnowledge _jeepOne;\n```\n",
            "\n```sqf\n_posError = (_soldierOne targetKnowledge _jeepOne) select 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/targetKnowledge",
        "modifiers": []
    },
    "unitbackpack": {
        "name": "unitBackpack",
        "description": "Returns unit's backpack",
        "syntaxArray": [
            {
                "Syntax": "**unitBackpack** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _myBackpack = unitBackpack player;\n```\n",
            "\n```sqf\nclearMagazineCargo unitBackpack player;\n```\n",
            "\n```sqf\nplayer action [\"gear\", unitBackpack player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitBackpack",
        "modifiers": []
    },
    "createmine": {
        "name": "createMine",
        "description": "Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**createMine** [type, position, markers, placement]",
                "Params": "[type, position, markers, placement]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - mine type from CfgVehicles\n\nposition: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\nmarkers: [Array](https://community.bistudio.com/wiki/Array)\n\nplacement: [Number](https://community.bistudio.com/wiki/Number) - radius\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_mine = createMine [\"APERSMine\", position player, [], 0];\n```\n",
            "Create satchel charge and give player control over it: \n```sqf\n_charge = createMine [\"SatchelCharge_F\", position player, [], 0];\nplayer addOwnedMine _charge;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createMine",
        "modifiers": []
    },
    "ctsetdata": {
        "name": "ctSetData",
        "description": "Associates metadata (string) with the row determined by the index. Returns Nothing.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctSetData** [index, data]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control) - The respective control\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - The row index\n\ndata: [String](https://community.bistudio.com/wiki/String) - The data to set\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctSetData [0, \"Test\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctSetData",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctsetheadertemplate": {
        "name": "ctSetHeaderTemplate",
        "description": "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.",
        "syntaxArray": [
            {
                "Syntax": "[Control](https://community.bistudio.com/wiki/Control) **ctSetHeaderTemplate** [Config](https://community.bistudio.com/wiki/Config)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctSetHeaderTemplate _configPath;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctSetHeaderTemplate",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "tvsetpictureright": {
        "name": "tvSetPictureRight",
        "description": "Sets right picture on the tree view item defined by path.",
        "syntaxArray": [
            {
                "Syntax": "tvSetPictureRight [idc, path, name]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path to tree view item\n\nname: [String](https://community.bistudio.com/wiki/String) - Picture texture\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvSetPictureRight [path, name]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path to tree view item\n\nname: [String](https://community.bistudio.com/wiki/String) - Picture texture\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetPictureRight [101, [0], \"picture\"];\n```\n",
            "\n```sqf\n_ctrl tvSetPictureRight [[0], \"picture\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureRight",
        "modifiers": []
    },
    "tvcount": {
        "name": "tvCount",
        "description": "Returns children count on given path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "tvCount [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "ctrl tvCount path",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ntvCount [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvCount [1,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvCount",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "onbriefingplan": {
        "name": "onBriefingPlan",
        "description": "Select a sound declared in the [Description.ext](https://community.bistudio.com/wiki/Description.ext#Sound) of the mission to be played the first time the [Plan tab](https://community.bistudio.com/wiki/Briefing.html#Plan) is selected in the [briefing](https://community.bistudio.com/wiki/Briefing.html).",
        "syntaxArray": [
            {
                "Syntax": "**onBriefingPlan** soundName",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonBriefingPlan \"PlanVoiceOver\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onBriefingPlan",
        "modifiers": []
    },
    "kbreact": {
        "name": "kbReact",
        "description": "Pass a non-verbal communication to the receiver. This command does **as if** the sentence was said and triggers the reaction scripts (AI FSM or player's conversation EH). See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.",
        "syntaxArray": [
            {
                "Syntax": "person kbReact [receiver, topicName, sentenceID(, argumentArray1, argumentArray2, …)]",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n[receiver, topicName, sentenceID, argumentArray1, argumentArray2, …]: [Array](https://community.bistudio.com/wiki/Array)\n\nreceiver: [Object](https://community.bistudio.com/wiki/Object)\n\ntopicName: [String](https://community.bistudio.com/wiki/String)\n\nsentenceID: [String](https://community.bistudio.com/wiki/String)\n\nargumentArray1toN (Optional): [Array](https://community.bistudio.com/wiki/Array) - [argumentName, argumentValue, argumentText, argumentSpeech]:\n\n* argumentName: [String](https://community.bistudio.com/wiki/String)\n\n* argumentValue: [Code](https://community.bistudio.com/wiki/Code)\n\n* argumentText: [String](https://community.bistudio.com/wiki/String)\n\n* argumentSpeech: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - each string is an already defined word in config.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n// will trigger as if unit1 said the sentence (via kbTell)\n// unit2's FSM will react accordingly.\nunit1 kbReact [unit2, \"topicName\", \"speech1\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbReact",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "menusetaction": {
        "name": "menuSetAction",
        "description": "Sets new action into menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuSetAction [idc, path, action]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\naction: [String](https://community.bistudio.com/wiki/String) - Expression that should be executed when entry is clicked\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetAction [path, action]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\naction: [String](https://community.bistudio.com/wiki/String) - Expression that should be executed when entry is clicked\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetAction [[0, 1], \"systemChat 'Hello World!'\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetAction",
        "modifiers": []
    },
    "setflagside": {
        "name": "setFlagSide",
        "description": "Sets flag [Side](https://community.bistudio.com/wiki/Side). A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with [setFlagTexture](https://community.bistudio.com/wiki/setFlagTexture), if the command executed where unit is [local](https://community.bistudio.com/wiki/local) effect of the command will be global and [JIP](https://community.bistudio.com/wiki/Multiplayer_Scripting#Join_In_Progress) compatible.",
        "syntaxArray": [
            {
                "Syntax": "flag **setFlagSide** side",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_flag1 setFlagSide east;\n```\n",
            "Capturable OPFOR flag:\n```sqf\nprivate _flag = \"FlagPole_F\" createVehicle position player;\n_flag setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_CSAT_CO.paa\";\n_flag setFlagSide east;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFlagSide",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "moonintensity": {
        "name": "moonIntensity",
        "description": "Returns the intensity of the moon's brightness in range 0...1.",
        "syntaxArray": [
            {
                "Syntax": "**moonIntensity**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_intensity = moonIntensity;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moonIntensity",
        "modifiers": []
    },
    "getcenterofmass": {
        "name": "getCenterOfMass",
        "description": "Returns center of mass of an object.",
        "syntaxArray": [
            {
                "Syntax": "**getCenterOfMass** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - PhysX object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [x,y,z] offset relative to the model centre"
            }
        ],
        "examples": [
            "\n```sqf\n_com = getCenterOfMass _myCar;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCenterOfMass",
        "modifiers": [
            "Global argument"
        ]
    },
    "tvpicture": {
        "name": "tvPicture",
        "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "tvPicture [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "ctrl tvPicture path",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ntvPicture [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvPicture [0,0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvPicture",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "titlecut": {
        "name": "titleCut",
        "description": "> ",
        "syntaxArray": [
            {
                "Syntax": "titleCut [text, type, speed]",
                "Params": "[text, type, speed]: [Array](https://community.bistudio.com/wiki/Array)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - optional, default 1.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntitleCut [\"Hello, how are you?\",\"Plain Down\",3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/titleCut",
        "modifiers": []
    },
    "handgunweapon": {
        "name": "handgunWeapon",
        "description": "Returns the name of a unit's handgun (an empty string if there is none).",
        "syntaxArray": [
            {
                "Syntax": "**handgunWeapon** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint handgunWeapon player; //\"hgun_P07_F\"\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/handgunWeapon",
        "modifiers": [
            "Global argument"
        ]
    },
    "modeltoworldvisualworld": {
        "name": "modelToWorldVisualWorld",
        "description": "Converts position from object model space to world space in render time.",
        "syntaxArray": [
            {
                "Syntax": "obj **modelToWorldVisualWorld** modelPos",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\nmodelPos: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - World position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer modelToWorldVisualWorld [0,1,0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/modelToWorldVisualWorld",
        "modifiers": []
    },
    "execfsm": {
        "name": "execFSM",
        "description": "Execute scripted [FSM](https://community.bistudio.com/wiki/FSM) and return the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. Variables set inside FSMs can be read/modified externally, using [setFSMVariable](https://community.bistudio.com/wiki/setFSMVariable) and [getFSMVariable](https://community.bistudio.com/wiki/getFSMVariable) commands.\n\nThe return value is the FSM handle; it can be used to determine (via [completedFSM](https://community.bistudio.com/wiki/completedFSM)) when the FSM has finished.\n> \n\nScripted FSMs are added into the scheduler just like [exec](https://community.bistudio.com/wiki/exec) scripts, [execVM](https://community.bistudio.com/wiki/execVM) scripts and [spawn](https://community.bistudio.com/wiki/spawn) scripts.\nTo see what FSMs are currently in the scheduler, use [diag_activeMissionFSMs](https://community.bistudio.com/wiki/diag_activeMissionFSMs) command.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "arguments execFSM fsmFilePath",
                "Params": "arguments: [Anything](https://community.bistudio.com/wiki/Anything) - Arguments accessible as _this in the FSM\n\nfsmFilePath: [String](https://community.bistudio.com/wiki/String) - file with FSM code\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - FSM handle"
            },
            {
                "Syntax": "execFSM fsmFilePath",
                "Params": "fsmFilePath: [String](https://community.bistudio.com/wiki/String) - file with FSM code\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - FSM handle"
            }
        ],
        "examples": [
            "\n```sqf\n_id = player execFSM \"test.fsm\";\n```\n",
            "\n```sqf\n_handle = [_a, _b, _c] execFSM \"test.fsm\";\n```\n",
            "\n```sqf\n_handle = execFSM \"test.fsm\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/execFSM",
        "modifiers": []
    },
    "onteamswitch": {
        "name": "onTeamSwitch",
        "description": "Defines an action performed when the team switch is finished.\nCommandset receives the following special variables: *_from* object previous unit, *_to* object current unit.\nConsecutive use of onTeamSwitch command will overwrite previously set commandset. \n> \n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "onTeamSwitch commandset",
                "Params": "commandset:  [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonTeamSwitch { [_from, _to] execVM \"myTeamSwitchScript.sqf\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onTeamSwitch",
        "modifiers": []
    },
    "diag_scope": {
        "name": "diag_scope",
        "description": "Returns script scope depth. When script is directly executed by the engine or a new script is added to the scheduler, the scope depth is 0. The examples of such execution are event handlers, [spawn](https://community.bistudio.com/wiki/spawn), etc. [isNil](https://community.bistudio.com/wiki/isNil) [Code](https://community.bistudio.com/wiki/Code) will also create a parent scope. Any use of [call](https://community.bistudio.com/wiki/call) and such will stack execution creating child scopes and increasing scope depth.",
        "syntaxArray": [
            {
                "Syntax": "**diag_scope**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n[] spawn\n{ \n\tsystemChat str diag_scope; // 0\n\tcall \n\t{ \n\t\tcall\n\t\t{ \n\t\t\tsystemChat str diag_scope; // 2\n\t\t\tisNil \n\t\t\t{ \n\t\t\t\tsystemChat str diag_scope; // 0\n\t\t\t\tcall \n\t\t\t\t{\n\t\t\t\t\tsystemChat str diag_scope; // 1\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_scope",
        "modifiers": []
    },
    "fadespeech": {
        "name": "fadeSpeech",
        "description": "Changes the master speech volume smoothly within the given time. The default volume is 1.0. Some of the sounds that play through speech channel are:\n\n* [ Tactical Ping](https://community.bistudio.com/wiki/Arma_3:_Difficulty_Settings) sound\n\n* [playSound](https://community.bistudio.com/wiki/playSound) when *isSpeech* argument is [true](https://community.bistudio.com/wiki/true)\n\n* [say3D](https://community.bistudio.com/wiki/say3D) when *isSpeech* argument is [true](https://community.bistudio.com/wiki/true)",
        "syntaxArray": [
            {
                "Syntax": "time **fadeSpeech** volume",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - Fade interval in seconds\n\nvolume: [Number](https://community.bistudio.com/wiki/Number) - Speech volume range 0 to 2\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n5 fadeSpeech 0.1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fadeSpeech",
        "modifiers": [
            "Local effect"
        ]
    },
    "random": {
        "name": "random",
        "description": " Random real (floating point) value from 0 (inclusive) to x (not inclusive).\n\nSince Arma 3 v1.56 alternative syntax is added, allowing the definition of [Gaussian Distribution](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Normal_distribution)[[1]](https://community.bistudio.com/wiki/random#cite_note-1) params. Uses the same method as [setTriggerTimeout](https://community.bistudio.com/wiki/setTriggerTimeout) command. Quite useful for spawning loot for example, making more valuable items more rare (**Alternative Syntax 1**)\nSince Arma 3 v1.68 two alternative syntaxes are available:\n\n\n* allowing to generate semi-random number based on provided seed (**Alternative Syntax 2**)\n\n* generating pseudo-random [noise texture](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Perlin_noise) based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied *x* and *y* coordinates (**Alternative Syntax 3**)",
        "syntaxArray": [
            {
                "Syntax": "random x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "random [min, mid, max] *Since Arma 3 v1.55.133393*",
                "Params": "[min, mid, max]: [Array](https://community.bistudio.com/wiki/Array)\n\nmin: [Number](https://community.bistudio.com/wiki/Number)\n\nmid: [Number](https://community.bistudio.com/wiki/Number)\n\nmax: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "seed random x *Since Arma 3 v1.67.139663*",
                "Params": "seed: [Number](https://community.bistudio.com/wiki/Number)\n\nx: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - value from 0 to x"
            },
            {
                "Syntax": "seed random [x, y] *Since Arma 3 v1.67.139663*",
                "Params": "seed: [Number](https://community.bistudio.com/wiki/Number)\n\n[x, y]: [Array](https://community.bistudio.com/wiki/Array) position on the [Perlin noise texture](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Perlin_noise)\n\nx: [Number](https://community.bistudio.com/wiki/Number)\n\ny: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - value from 0 to 1"
            }
        ],
        "examples": [
            "\n```sqf\n_rNumber = random 1;\n```\n",
            "\n```sqf\n_rNumber = random -10;\n```\n",
            "Generate a random position inside a circle (see also [Example Code: Random Area Distribution](https://community.bistudio.com/wiki/Example_Code:_Random_Area_Distribution))\n\n```sqf\n_center getPos [_radius * sqrt random 1, random 360];\n```\n",
            "To select random value from an array:\n\n```sqf\n_array = [\"apples\", \"pears\", \"bananas\", \"M16\"];\n_random = _array select floor random count _array;\n// since Arma 3 v1.55.133393\n_random = selectRandom _array;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/random",
        "modifiers": []
    },
    "addweapon": {
        "name": "addWeapon",
        "description": "Add a weapon to a unit. For a global version of this command see [addWeaponGlobal](https://community.bistudio.com/wiki/addWeaponGlobal).\n\nInfantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored.\n\n>  \n> ",
        "syntaxArray": [
            {
                "Syntax": "object addWeapon weapon",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle to add the weapon to\n\nweapon: [String](https://community.bistudio.com/wiki/String) - weapon class name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addMagazine \"30Rnd_556x45_Stanag\";\nplayer addWeapon \"BAF_L85A2_RIS_SUSAT\";\n```\n",
            "\n```sqf\nAn_2 addMagazine \"100Rnd_762x51_M240\";\nAn_2 addWeapon \"M240_veh\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeapon",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "hcselectgroup": {
        "name": "hcSelectGroup",
        "description": "Select given group in [high command](https://community.bistudio.com/wiki/High_Command) bar.",
        "syntaxArray": [
            {
                "Syntax": "unit **hcSelectGroup** array",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - HC Owner\n\narray: [Array](https://community.bistudio.com/wiki/Array) of [groups](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer hcSelectGroup [group_1,group_2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcSelectGroup",
        "modifiers": []
    },
    "getclientstate": {
        "name": "getClientState",
        "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n",
        "syntaxArray": [
            {
                "Syntax": "getClientState",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Client state (see table above)"
            }
        ],
        "examples": [
            "\n```sqf\n_state = getClientState;\n```\n",
            "\n```sqf\nif (getClientState == \"BRIEFING READ\") then {hint \"Let the show begin!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getClientState",
        "modifiers": []
    },
    "unitpos": {
        "name": "unitPos",
        "description": "Return the unit position rules.\n\nThe return value is always \"Auto\" unless the unit has gotten a [setUnitPos](https://community.bistudio.com/wiki/setUnitPos) command. In that case the value is the last stance the unit was ordered to.\nAvailable modes are listed at [setUnitPos](https://community.bistudio.com/wiki/setUnitPos).",
        "syntaxArray": [
            {
                "Syntax": "**unitPos** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str unitPos _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitPos",
        "modifiers": [
            "Global argument"
        ]
    },
    "iscollisionlighton": {
        "name": "isCollisionLightOn",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if vehicle collision lights are on otherwise [false](https://community.bistudio.com/wiki/false).",
        "syntaxArray": [
            {
                "Syntax": "**isCollisionLightOn** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_collisionLightOn = isCollisionLightOn heli;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isCollisionLightOn",
        "modifiers": [
            "Global argument"
        ]
    },
    "htmlload": {
        "name": "htmlLoad",
        "description": "Load [HTML](https://community.bistudio.com/wiki/HTML_File_Format) from file or Uri using given control. File path is relative to current mission dir or an absolute path (with drive letter etc.). The command is subject to restrictions, imposed by [CfgCommands](https://community.bistudio.com/wiki/CfgCommands) class.\n> ",
        "syntaxArray": [
            {
                "Syntax": "control htmlLoad filename",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nfilename: [String](https://community.bistudio.com/wiki/String) - local file name or remote file URL\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control htmlLoad \"briefing.html\";\n```\n",
            "\n```sqf\n_control htmlLoad \"http://www.bistudio.com/newsfeed/arma3_news.php?build=main&language=English\"; // link\n```\n",
            "Display news item:\n```sqf\n[] spawn {\n\tdisableSerialization;\n\t_html = findDisplay 46 createDisplay \"RscCredits\" ctrlCreate [\"RscHTML\", -1];\n\t_html ctrlSetBackgroundColor [0,0,0,0.8];\n\t_html ctrlSetPosition [safeZoneX, safeZoneY, safeZoneW, safeZoneH];\n\t_html ctrlCommit 0;\n\t_html htmlLoad \"http://www.bistudio.com/newsfeed/arma3_news.php?build=main&language=English\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/htmlLoad",
        "modifiers": []
    },
    "issprintallowed": {
        "name": "isSprintAllowed",
        "description": "Returns true if player is allowed to sprint",
        "syntaxArray": [
            {
                "Syntax": "**isSprintAllowed** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nisSprintAllowed player;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isSprintAllowed",
        "modifiers": []
    },
    "get3denlayerentities": {
        "name": "get3DENLayerEntities",
        "description": "Return all entities and sub-layer in [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) layer.",
        "syntaxArray": [
            {
                "Syntax": "**get3DENLayerEntities** layerID",
                "Params": "layerID: [Number](https://community.bistudio.com/wiki/Number) - layer ID as returned by [add3DENLayer](https://community.bistudio.com/wiki/add3DENLayer) command\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Eden Entities](https://community.bistudio.com/wiki/Eden_Entity)"
            }
        ],
        "examples": [
            "\n```sqf\n_myLayer = -1 add3DENLayer \"CTRG\";\nplayer set3DENLayer _myLayer;\n_entities = get3DENLayerEntities _myLayer;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENLayerEntities",
        "modifiers": []
    },
    "freelook": {
        "name": "freeLook",
        "description": "Returns true if freelook is active.",
        "syntaxArray": [
            {
                "Syntax": "**freeLook**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat (if freeLook then {\"Quit looking around player!\"} else {\"\"});\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/freeLook",
        "modifiers": []
    },
    "inputaction": {
        "name": "inputAction",
        "description": "Return the state of input devices mapped to given input action.\n\nFor Arma 3 inputActions and its bindings see: [inputAction/actions](https://community.bistudio.com/wiki/inputAction/actions).\n\nFor earlier Arma editions  see [Category:Key Actions](https://community.bistudio.com/wiki/Category:Key_Actions).",
        "syntaxArray": [
            {
                "Syntax": "**inputAction** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) - name of the action\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ninputAction \"leanLeft\"\n```\n Returns 1 if the button mapped to \"leanLeft\" is pressed currently else 0.",
            "\n```sqf\n[] spawn {\n\twaitUntil {inputAction \"reloadMagazine\" > 0};  \n\thint \"Reload Key Pressed\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inputAction",
        "modifiers": []
    },
    "getshadowdistance": {
        "name": "getShadowDistance",
        "description": "Gets the shadows rendering distance.",
        "syntaxArray": [
            {
                "Syntax": "**getShadowDistance**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_value = getShadowDistance;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getShadowDistance",
        "modifiers": []
    },
    "wfsidetext": {
        "name": "WFSideText",
        "description": "Returns the un[localized](https://community.bistudio.com/wiki/localize) text value of an object's side / a group's side or a side as:\n\n\n* [east](https://community.bistudio.com/wiki/east), [opfor](https://community.bistudio.com/wiki/opfor) - \"East\"\n\n* [west](https://community.bistudio.com/wiki/west), [blufor](https://community.bistudio.com/wiki/blufor) - \"West\"\n\n* [resistance](https://community.bistudio.com/wiki/resistance), [independent](https://community.bistudio.com/wiki/independent) - \"Resistance\"\n\n* [civilian](https://community.bistudio.com/wiki/civilian) - \"Civilian\"\n\n* [sideUnknown](https://community.bistudio.com/wiki/sideUnknown) - \"Unknown\"\n\n* [sideEnemy](https://community.bistudio.com/wiki/sideEnemy) - \"Unknown\"\n\n* [sideFriendly](https://community.bistudio.com/wiki/sideFriendly) - \"Unknown\"\n\n* [sideLogic](https://community.bistudio.com/wiki/sideLogic) - \"Unknown\"\n\n* [sideEmpty](https://community.bistudio.com/wiki/sideEmpty) - \"Unknown\"\n\n* [sideAmbientLife](https://community.bistudio.com/wiki/sideAmbientLife) - \"Unknown\"\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**WFSideText** param",
                "Params": "param: [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - unlocalized side text value"
            }
        ],
        "examples": [
            "\n```sqf\nWFSideText player;\n```\n",
            "\n```sqf\nWFSideText group player;\n```\n",
            "\n```sqf\nWFSideText west\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/WFSideText",
        "modifiers": []
    },
    "getsoundcontrollerresult": {
        "name": "getSoundControllerResult",
        "description": "Returns the calculated value of [simple expression](https://community.bistudio.com/wiki/simple_expression) defined in config. Config could be any config entry, even [ mission config](https://community.bistudio.com/wiki/missionConfigFile) entry. It is more important that the vehicle is a transport and not any object. If the expression contains sound controllers, the controller values will be taken from the given vehicle.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **getSoundControllerResult** config",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - transport vehicle\n\nconfig: [Config](https://community.bistudio.com/wiki/Config) - path to config entry containing the expression\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_result = (vehicle player) getSoundControllerResult (configFile >> \"cfgVehicles\" >> typeOf (vehicle player) >> \"sounds\" >> \"idle_ext\" >> \"volume\");\n```\n",
            "\n```sqf\n//-- mission config entry to reverse rain strength: myExpression = \"rain factor [1,0]\"; \n_result = \"PaperCar\" createVehicleLocal position player getSoundControllerResult (missionConfigFile >> \"myExpression\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSoundControllerResult",
        "modifiers": []
    },
    "weaponstate": {
        "name": "weaponState",
        "description": "Returns the currently selected weapon state for unit or vehicle.\n> ",
        "syntaxArray": [
            {
                "Syntax": "weaponState unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [weapon, muzzle, firemode, magazine, ammoCount], where:\n\n* weapon: [String](https://community.bistudio.com/wiki/String)\n\n* muzzle: [String](https://community.bistudio.com/wiki/String)\n\n* firemode: [String](https://community.bistudio.com/wiki/String)\n\n* magazine: [String](https://community.bistudio.com/wiki/String)\n\n* ammoCount: [Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "weaponState [vehicle, turretPath, weapon]",
                "Params": "[vehicle, turretPath, weapon]: [Array](https://community.bistudio.com/wiki/Array)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\nweapon (Optional): [String](https://community.bistudio.com/wiki/String) (since Arma 3 v1.70) - weapon or muzzle name\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [weapon, muzzle, firemode, magazine, ammoCount], where:\n\n* weapon: [String](https://community.bistudio.com/wiki/String)\n\n* muzzle: [String](https://community.bistudio.com/wiki/String)\n\n* firemode: [String](https://community.bistudio.com/wiki/String)\n\n* magazine: [String](https://community.bistudio.com/wiki/String)\n\n* ammoCount: [Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_wsPlayer = weaponState player;\t\t\t\t// [\"arifle_MXC_ACO_F\",\"arifle_MXC_ACO_F\",\"Single\",\"30Rnd_65x39_caseless_mag\",30]\n```\n",
            "\n```sqf\n_wsVehicle = weaponState [_apc, [0]];\t\t// [\"autocannon_40mm_CTWS\",\"HE\",\"player\",\"60Rnd_40mm_GPR_Tracer_Red_shells\",60]\n```\n",
            "\n```sqf\n_wsVehicle = weaponState [_apc, [0], \"AP\"];\t// [\"autocannon_40mm_CTWS\",\"AP\",\"player\",\"40Rnd_40mm_APFSDS_Tracer_Red_shells\",40]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponState",
        "modifiers": []
    },
    "setwaypointname": {
        "name": "setWaypointName",
        "description": "Changes the waypoint name.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointName** name",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp,2] setWaypointName \"myName\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointName",
        "modifiers": []
    },
    "visiblewatch": {
        "name": "visibleWatch",
        "description": "Checks if the player has watch opened and visible. Keep in mind that the GPS minimap in Arma 3 also shows the time.",
        "syntaxArray": [
            {
                "Syntax": "**visibleWatch**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (visibleWatch) then {hint \"Watch is visible\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visibleWatch",
        "modifiers": []
    },
    "drawpolygon": {
        "name": "drawPolygon",
        "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw* commands and due to complexity, this command does not support filling of the polygon with color. Use [drawTriangle](https://community.bistudio.com/wiki/drawTriangle) command to construct and fill polygon shape as a workaround.",
        "syntaxArray": [
            {
                "Syntax": "map drawPolygon [polygon, color]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\npolygon: [Array](https://community.bistudio.com/wiki/Array) of [Position3D](https://community.bistudio.com/wiki/Position3D)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Line color in format [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntest_polygon = [];\nfor \"_i\" from 1 to 12 do \n{\n\ttest_polygon pushBack (player getPos [10 + random 100, 360/_i]);\n};\n\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\tparams [\"_control\"];\n\t_control drawPolygon [test_polygon, [0,0,1,1]];\n}];\n```\n",
            "Draw a polygon by adjusting the \n```sqf\n_radius\n```\n and \n```sqf\n_numVertices\n```\n\n```sqf\nvertices = [];\nprivate _numVertices = 2;\nprivate _numVertices = _numVertices max 3;\nprivate _radius = 100;\n\nfor \"_i\" from 1 to _numVertices do\n{\n vertices pushBack (player getRelPos [_radius, 360/_numVertices * _i]);\n};\n\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\",\n{\n params [\"_control\"];\n _control drawPolygon [vertices, [0,0,1,1]];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawPolygon",
        "modifiers": []
    },
    "importallgroups": {
        "name": "importAllGroups",
        "description": "Imports all groups into the RTE. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**importAllGroups** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/importAllGroups",
        "modifiers": []
    },
    "setcuratorcoef": {
        "name": "setCuratorCoef",
        "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **setCuratorCoef** [action,coef]",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\naction: [String](https://community.bistudio.com/wiki/String)\n\ncoef: [Number](https://community.bistudio.com/wiki/Number) or [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule setCuratorCoef [\"Place\", 1]\n```\n",
            "\n```sqf\ncuratorModule setCuratorCoef [\"Delete\", -1e10]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCuratorCoef",
        "modifiers": [
            "Server execution"
        ]
    },
    "deletesite": {
        "name": "deleteSite",
        "description": "Removes the site.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**deleteSite** site",
                "Params": "site: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteSite",
        "modifiers": []
    },
    "enableuavconnectability": {
        "name": "enableUAVConnectability",
        "description": "Enables unit's AV terminal(s) connecting to UAV.",
        "syntaxArray": [
            {
                "Syntax": "object enableUAVConnectability [uav, checkAllItems]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nuav: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ncheckAllItems: [Boolean](https://community.bistudio.com/wiki/Boolean) - True for enabling of all terminals in unit's inventory, false for enabling of terminal assigned to proper slot only.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit enableUAVConnectability [uav, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableUAVConnectability",
        "modifiers": [
            "Local effect"
        ]
    },
    "allunits": {
        "name": "allUnits",
        "description": "Returns a list of all units, **except agents, dead units or units waiting for respawn**, outside and inside vehicles that were created on the following sides [east](https://community.bistudio.com/wiki/east), [west](https://community.bistudio.com/wiki/west), [independent](https://community.bistudio.com/wiki/independent) and [civilian](https://community.bistudio.com/wiki/civilian). \n> ",
        "syntaxArray": [
            {
                "Syntax": "**allUnits**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of [objects](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n{ _x setDamage 0.5; _x groupChat \"Braaains\"; } forEach allUnits;\n```\n",
            "\n```sqf\nallUnits apply { diag_log _x; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allUnits",
        "modifiers": []
    },
    "vehicles": {
        "name": "vehicles",
        "description": "Returns an array of all vehicles available to current client. This command returns both empty and crewed vehicles but not soldiers. It will also return \"WeaponHolderSimulated\" of dead bodies (weapon on the ground). Vehicles created with [createVehicleLocal](https://community.bistudio.com/wiki/createVehicleLocal) will only be returned on the client that created them.",
        "syntaxArray": [
            {
                "Syntax": "**vehicles**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicles = vehicles;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicles",
        "modifiers": [
            "Local effect"
        ]
    },
    "enableattack": {
        "name": "enableAttack",
        "description": "Set if leader can issue attack commands to the soldiers in his group.",
        "syntaxArray": [
            {
                "Syntax": "group **enableAttack** enable",
                "Params": "group: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group1 enableAttack true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAttack",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "set3denmodelsvisible": {
        "name": "set3DENModelsVisible",
        "description": "Enables or disables lines visibility in 3DEN",
        "syntaxArray": [
            {
                "Syntax": "set3DENModelsVisible [map, scene]",
                "Params": "map: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\nscene: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENModelsVisible [true, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENModelsVisible",
        "modifiers": []
    },
    "removecuratorcameraarea": {
        "name": "removeCuratorCameraArea",
        "description": "Removes curator camera area.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **removeCuratorCameraArea** cameraAreaID",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\ncameraAreaID: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCurator removeCuratorCameraArea 3;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeCuratorCameraArea",
        "modifiers": [
            "Server execution"
        ]
    },
    "setfuelcargo": {
        "name": "setFuelCargo",
        "description": "Sets fuel amount in cargo space of refuel vehicles. Note that the carrying capacity of each side's refuel trucks differ.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setFuelCargo** amount",
                "Params": "vehicle : [Object](https://community.bistudio.com/wiki/Object)\n\namount : [Number](https://community.bistudio.com/wiki/Number) - From 0 (empty) to 1 (full)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_refuelTruck setFuelCargo 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFuelCargo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "set3denlogictype": {
        "name": "set3DENLogicType",
        "description": "Sets the new type of Logic object(s). For other objects use [set3DENObjectType](https://community.bistudio.com/wiki/set3DENObjectType)",
        "syntaxArray": [
            {
                "Syntax": "objects **set3DENLogicType** classname",
                "Params": "objects: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\nclassname: [String](https://community.bistudio.com/wiki/String) - name of the cfgVehicles class\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[get3DENSelected \"logic\" select 0] set3DENLogicType \"MiscOR_F\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENLogicType",
        "modifiers": []
    },
    "setwaypointspeed": {
        "name": "setWaypointSpeed",
        "description": "Switches the group speed mode when the waypoint becomes active.\n\n\nPossible values are:\n\n* \"UNCHANGED\"\n\n* \"LIMITED\"\n\n* \"NORMAL\"\n\n* \"FULL\"",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointSpeed** mode",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nmode: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointSpeed \"FULL\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointSpeed",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "getartillerycomputersettings": {
        "name": "getArtilleryComputerSettings",
        "description": "Returns settings from artillery computer currently opened by player.",
        "syntaxArray": [
            {
                "Syntax": "**getArtilleryComputerSettings**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str getArtilleryComputerSettings; //[\"Semi (medium)\",\"HE Mortar Shells\",0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getArtilleryComputerSettings",
        "modifiers": []
    },
    "dofsm": {
        "name": "doFSM",
        "description": "Orders a unit to process command defined by [FSM](https://community.bistudio.com/wiki/FSM) file (silently). \n\nUnlike with execFSM where *_this* is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:\n\n\nleader of subgroup with this command\n\ncommand destination/position\n\ncommand target\n\nlist of all persons in subgroup",
        "syntaxArray": [
            {
                "Syntax": "unit **doFSM** [fsmName, position, target]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) or [objects](https://community.bistudio.com/wiki/Object)\n\nfsmName: [String](https://community.bistudio.com/wiki/String)\n\nposition: [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne doFSM [\"move.fsm\", position player, player];\n```\n",
            "\n```sqf\nunits player doFSM [\"move.fsm\", position player, player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doFSM",
        "modifiers": []
    },
    "toarray": {
        "name": "toArray",
        "description": "Converts the supplied [String](https://community.bistudio.com/wiki/String) into an [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number). The numbers in the created array are the decimal [Unicode](https://community.bistudio.comhttp://en.wikipedia.org/wiki/Unicode) representations of characters.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**toArray** string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "**toArray** hashMap *Since Arma 3 v2.04*",
                "Params": "hashMap: [HashMap](https://community.bistudio.com/wiki/HashMap)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array in format [[key, key, ...], [value, value, ...]]"
            },
            {
                "Syntax": "hashMap **toArray** splitArrays *Since Arma 3 v2.04*",
                "Params": "hashMap: [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nsplitArrays: [Boolean](https://community.bistudio.com/wiki/Boolean) - See return value\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array in either one of the following formats:\n\n* splitArrays: [true](https://community.bistudio.com/wiki/true) - \n```sqf\n[[key1, key2, ...], [value1, value2, ...]]\n```\n\n\n* splitArrays: [false](https://community.bistudio.com/wiki/false) - \n```sqf\n[[key1, value1], [key2, value2], ...]\n```\n This is **very inefficient** since the engine has to create many small arrays"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"%1\", toArray \"AaŒ\"];// Returns \"[65,97,338]\"\n```\n",
            "\n```sqf\ntoArray _hashMap params [\"_keys\", \"_values\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toArray",
        "modifiers": []
    },
    "text": {
        "name": "text",
        "description": "Creates a structured text containing the given plain text if argument is [String](https://community.bistudio.com/wiki/String). Use [setAttributes](https://community.bistudio.com/wiki/setAttributes) to set additional [ attributes](https://community.bistudio.com/wiki/Structured_Text#Attributes) on the text. If the argument is [location](https://community.bistudio.com/wiki/location), returns location's text value (see Alt Syntax).",
        "syntaxArray": [
            {
                "Syntax": "**text** string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            },
            {
                "Syntax": "**text** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_stxt2 = text \"Hello world.\";\n```\n",
            "\n```sqf\n_townName = text myTownLocation;\n```\n",
            "\n```sqf\n_loc = text nearestLocation [position player, \"NameMarine\"]; //\"Marina Bay\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/text",
        "modifiers": []
    },
    "forcefollowroad": {
        "name": "forceFollowRoad",
        "description": "Forces the vehicle to stay on road.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **forceFollowRoad** state",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean) - true: Force on road, false: default behaviour\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncar forceFollowRoad true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceFollowRoad",
        "modifiers": []
    },
    "getplayervonvolume": {
        "name": "getPlayerVoNVolume",
        "description": "Gets provided player's Voice over Network (VoN) volume.",
        "syntaxArray": [
            {
                "Syntax": "getPlayerVoNVolume unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the other player's unit\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) in range 0..1, -1 in case of error (e.g provided a non-human)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _volume = getPlayerVoNVolume (units player select 1);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPlayerVoNVolume",
        "modifiers": [
            "Global argument"
        ]
    },
    "canadd": {
        "name": "canAdd",
        "description": "Checks if given object can be stored in inventory of given object or any inventory container ([uniform](https://community.bistudio.com/wiki/uniform), [vest](https://community.bistudio.com/wiki/vest), [backpack](https://community.bistudio.com/wiki/backpack)) of given unit.",
        "syntaxArray": [
            {
                "Syntax": "object canAdd item",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - unit or container\n\nitem: [String](https://community.bistudio.com/wiki/String) - Config class\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "object canAdd [item, count] *Since Arma 3 v1.55.133607*",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - unit or container\n\n[item, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitem: [String](https://community.bistudio.com/wiki/String) - Config class\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - desired quantity\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (player canAdd \"FirstAidKit\") then {\n   player addItem \"FirstAidKit\";\n} else {\n   hint \"Not enough space\";\n};\n\n```\n",
            "\n```sqf\nif (_box canAdd \"FirstAidKit\") then {\n   _box addWeaponCargo [\"FirstAidKit\", 1];\n} else {\n   hint \"Not enough space\";\n};\n\n```\n",
            "\n```sqf\ncar canAdd [currentWeapon player, 50];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canAdd",
        "modifiers": []
    },
    "backpackspacefor": {
        "name": "backpackSpaceFor",
        "description": "Returns how much space is in backpack for given weapon or magazine",
        "syntaxArray": [
            {
                "Syntax": "backpack backpackSpaceFor weaponName",
                "Params": "backpack: [Object](https://community.bistudio.com/wiki/Object)\n\nweaponName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n(backpack player) backpackSpaceFor \"m16\"; // [weapons, magazines]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/backpackSpaceFor",
        "modifiers": []
    },
    "systemtime": {
        "name": "systemTime",
        "description": "Returns system time.",
        "syntaxArray": [
            {
                "Syntax": "systemTime",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [year, month, day, hour, minute, second, millisecond]"
            }
        ],
        "examples": [
            "\n```sqf\n_currentTime = systemTime;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/systemTime",
        "modifiers": []
    },
    "isobjectrtd": {
        "name": "isObjectRTD",
        "description": "Returns true if RTD model is loaded.> ",
        "syntaxArray": [
            {
                "Syntax": "isObjectRTD helicopter",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_heliRTD = isObjectRTD vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isObjectRTD",
        "modifiers": []
    },
    "isobjecthidden": {
        "name": "isObjectHidden",
        "description": "Checks visibility of a given object on the local machine.",
        "syntaxArray": [
            {
                "Syntax": "**isObjectHidden** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - object to test\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if hidden, [false](https://community.bistudio.com/wiki/false) if visible"
            }
        ],
        "examples": [
            "\n```sqf\n_bobIsHidden = isObjectHidden bob;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isObjectHidden",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "removeweapon": {
        "name": "removeWeapon",
        "description": "Remove weapon from a unit. The unit must be [local](https://community.bistudio.com/wiki/local) to the computer where command is executed. For a global version of this command see [removeWeaponGlobal](https://community.bistudio.com/wiki/removeWeaponGlobal).\n\n**Note**: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeWeapon** weapon",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\nweapon: [String](https://community.bistudio.com/wiki/String) - weapon class name\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeWeapon \"BAF_L85A2_RIS_SUSAT\";\n```\n",
            "\n```sqf\nAn_2 removeWeapon \"M240_veh\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeWeapon",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "getposatl": {
        "name": "getPosATL",
        "description": "Returns the position of an object relative to the terrain.",
        "syntaxArray": [
            {
                "Syntax": "**getPosATL** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionATL](https://community.bistudio.com/wiki/PositionATL)"
            }
        ],
        "examples": [
            "\n```sqf\n_objPosition = getPosATL player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosATL",
        "modifiers": [
            "Global argument"
        ]
    },
    "getposaslw": {
        "name": "getPosASLW",
        "description": "Returns the object position height above sea surface (waves included).",
        "syntaxArray": [
            {
                "Syntax": "**getPosASLW** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [PositionASLW](https://community.bistudio.com/wiki/PositionASLW)"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = getPosASLW _diver;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosASLW",
        "modifiers": [
            "Global argument"
        ]
    },
    "lockedinventory": {
        "name": "lockedInventory",
        "description": "Get a vehicle's inventory lock state. Can also be used on a unit's backback (see [lockInventory](https://community.bistudio.com/wiki/lockInventory)).",
        "syntaxArray": [
            {
                "Syntax": "lockedInventory vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isInventoryLocked = lockedInventory vehicle player;\n```\n",
            "\n```sqf\n_isBackpackLocked = lockedInventory backpackContainer player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockedInventory",
        "modifiers": []
    },
    "inrangeofartillery": {
        "name": "inRangeOfArtillery",
        "description": "Returns true if all given units are able to fire at given position with given magazineType.",
        "syntaxArray": [
            {
                "Syntax": "pos **inRangeOfArtillery** [[unit], magazineType]",
                "Params": "pos: [Position](https://community.bistudio.com/wiki/Position)\n\n[[unit], magazineType]: [Array](https://community.bistudio.com/wiki/Array)\n\n[unit]: [Array](https://community.bistudio.com/wiki/Array) - Array of units.\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\nmagazineType **(Case Sensitive)**: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery [[myArty], \"32Rnd_155mm_Mo_shells\"]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inRangeOfArtillery",
        "modifiers": [
            "Global argument"
        ]
    },
    "isnull": {
        "name": "isNull",
        "description": "Checks whether the tested item is null.\nWhich null type the item has to be equal to depends on the type of game entity tested:\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "isNull entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object), [Control](https://community.bistudio.com/wiki/Control), [Display](https://community.bistudio.com/wiki/Display), [Group](https://community.bistudio.com/wiki/Group), [Location](https://community.bistudio.com/wiki/Location), [Task](https://community.bistudio.com/wiki/Task), [Script](https://community.bistudio.com/wiki/Script), [Config](https://community.bistudio.com/wiki/Config) or [Diary Record](https://community.bistudio.com/wiki/Diary_Record)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isNull obj) then {hint \"doesn't exist\";};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isNull",
        "modifiers": [
            "Global argument"
        ]
    },
    "removeallcuratoreditingareas": {
        "name": "removeAllCuratorEditingAreas",
        "description": "Delete all curator edit areas.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllCuratorEditingAreas** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllCuratorEditingAreas myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllCuratorEditingAreas",
        "modifiers": [
            "Server execution"
        ]
    },
    "setwppos": {
        "name": "setWPPos",
        "description": "Sets waypoint position \n> ",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWPPos** pos",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_groupOne, 1] setWPPos markerPos \"MarkerOne\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWPPos",
        "modifiers": []
    },
    "skillfinal": {
        "name": "skillFinal",
        "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).",
        "syntaxArray": [
            {
                "Syntax": "unit skillFinal skillName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nskillName: [String](https://community.bistudio.com/wiki/String) - See [sub-skill](https://community.bistudio.com/wiki/AI_Sub-skills). Possible values are:\n\n* \"aimingAccuracy\"\n\n* \"aimingShake\"\n\n* \"aimingSpeed\"\n\n* \"endurance\" (Has no effect in Arma 3)\n\n* \"spotDistance\"\n\n* \"spotTime\"\n\n* \"courage\"\n\n* \"reloadSpeed\"\n\n* \"commanding\"\n\n* \"general\"\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_unitTrueCourage = unit1 skillFinal \"courage\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/skillFinal",
        "modifiers": []
    },
    "shownhud": {
        "name": "shownHUD",
        "description": "Returns array of [Booleans](https://community.bistudio.com/wiki/Boolean) corresponding to the visibility of various HUD elements (see extended [showHUD](https://community.bistudio.com/wiki/showHUD)).",
        "syntaxArray": [
            {
                "Syntax": "**shownHUD**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [hud, info, radar, compass, direction, menu, group, cursors, panels, kills, icon3d]"
            }
        ],
        "examples": [
            "\n```sqf\n_hudStatus = shownHUD;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownHUD",
        "modifiers": []
    },
    "speedmode": {
        "name": "speedMode",
        "description": "Returns speed mode of the group, which can be any of the following: \n\n* **\"LIMITED\"**\n\n* **\"NORMAL\"**\n\n* **\"FULL\"**",
        "syntaxArray": [
            {
                "Syntax": "[String](https://community.bistudio.com/wiki/String) = **speedMode** groupName",
                "Params": "groupName: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_speed = speedMode group player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/speedMode",
        "modifiers": []
    },
    "taskdestination": {
        "name": "taskDestination",
        "description": "Returns the position of the task (as specified by destination parameter in config).",
        "syntaxArray": [
            {
                "Syntax": "**taskDestination** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) (A3 1.28 Returns [Nothing](https://community.bistudio.com/wiki/Nothing) if identity is [taskNull](https://community.bistudio.com/wiki/taskNull))"
            }
        ],
        "examples": [
            "\n```sqf\nif (!isNull currentTask player) then {taskDestination currentTaskplayer}; //return Position (Array)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskDestination",
        "modifiers": []
    },
    "getobjectargument": {
        "name": "getObjectArgument",
        "description": "Return name of object argument in mission editor.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **getObjectArgument** [object, argument]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\nargument: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n// returns string \"[1009.0351, 1319.4928]\"\n(findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"]\n\n// returns array [1009.0351, 1319.4928]\n(findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]\n\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectArgument",
        "modifiers": []
    },
    "switch": {
        "name": "switch",
        "description": "Creates a switch type that can be used inside a [switch-do](https://community.bistudio.com/wiki/switch_do) block.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "switch condition",
                "Params": "condition: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Switch Type](https://community.bistudio.com/wiki/Switch_Type)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _mySwitch = switch \"Test\";\n_mySwitch do { /* Something */ };\n```\n",
            "\n```sqf\nswitch (_condition) do {\n    case 1: { hint \"1\" };\n    case 2: { hint \"2\" };\n    default { hint \"default\" };\n};\n```\n",
            "\n```sqf\nswitch (_condition) do {\n    case \"string1\";\n    case \"string2\": { hint \"string1 or string2\" };\n    case \"string3\";\n    case \"string4\": { hint \"string3 or string4\" };\n    default { hint \"default\" };\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/switch",
        "modifiers": []
    },
    "userinputdisabled": {
        "name": "userInputDisabled",
        "description": "Returns true if user input is disabled",
        "syntaxArray": [
            {
                "Syntax": "**userInputDisabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "Toggles user input\n```sqf\ndisableUserInput !userInputDisabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/userInputDisabled",
        "modifiers": []
    },
    "startloadingscreen": {
        "name": "startLoadingScreen",
        "description": "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed (50ms per frame instead of 3ms per frame for [Scheduled Scripts](https://community.bistudio.com/wiki/Scheduler)).\n\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "startLoadingScreen [text, resource]",
                "Params": "text: [String](https://community.bistudio.com/wiki/String)\n\nresource (Optional): [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nstartLoadingScreen [\"Loading My Mission, please wait...\"];\n```\n",
            "\n```sqf\nstartLoadingScreen [\"Can't skip loading time...\", \"MyLoadingRsc\"];\n```\n",
            "\n```sqf\nstartLoadingScreen [\"Loading My Mission\"];\n// code\nprogressLoadingScreen 0.5;\n// code\nendLoadingScreen;\n```\n",
            "\n```sqf\n// this structure prevents error-prone or lengthy code to miss endLoadingScreen.\nprivate _maxTime = diag_tickTime + 30; // max 30s of loading\n\nstartLoadingScreen [\"Loading\"];\nprivate _handle = [] spawn {\n\t// code that may crash or take too long\n};\n\nwaitUntil { uiSleep .1; scriptDone _handle || diag_tickTime > _maxTime };\nendLoadingScreen;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/startLoadingScreen",
        "modifiers": []
    },
    "vectoradd": {
        "name": "vectorAdd",
        "description": "Adds two 3D vectors. Replaces [BIS_fnc_vectorAdd](https://community.bistudio.com/wiki/BIS_fnc_vectorAdd).",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorAdd vector2",
                "Params": "vector1: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str (velocity unit1 vectorAdd velocity unit2);\n```\n",
            "\n```sqf\n[5,10,5] vectorAdd [5,5,10]; // returns [10,15,15]\n```\n",
            "\n```sqf\n[0,0] vectorAdd [1,-2]; // returns [1,-2,0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorAdd",
        "modifiers": []
    },
    "allturrets": {
        "name": "allTurrets",
        "description": "Returns array of available turret paths from vehicle object.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "allTurrets vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "allTurrets [vehicle, includeFFV]",
                "Params": "[vehicle, includeFFV]: [Array](https://community.bistudio.com/wiki/Array)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nincludeFFV: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to include FFV (Firing From Vehicle) positions, [false](https://community.bistudio.com/wiki/false) to exclude them\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_turretPaths = allTurrets _mySlammerUP;\t\t\t\t// [[0],[0,0]]\n_turretPaths = allTurrets [_mySlammerUP, true];\t\t// [[0],[0,0]] <- Commander turret is also an FFV turret\n_turretPaths = allTurrets [_mySlammerUP, false];\t// [[0]]\n```\n",
            "Return FFV turrets only:\n\n```sqf\n_FFVTurrets = allTurrets [tank, true] - allTurrets [tank, false]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allTurrets",
        "modifiers": []
    },
    "unitaddons": {
        "name": "unitAddons",
        "description": "Returns list with addons the unit belongs to.",
        "syntaxArray": [
            {
                "Syntax": "unitAddons className",
                "Params": "className: [String](https://community.bistudio.com/wiki/String) - class name of a unit/vehicle or object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - addon names"
            }
        ],
        "examples": [
            "\n```sqf\nhint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitAddons",
        "modifiers": []
    },
    "isgamepaused": {
        "name": "isGamePaused",
        "description": "Returns the state of game simulation. Simulation can get paused by pressing ALT + TAB or a system dialog opening (e.g. ESC menu). Simulation will not get paused if -noPause [startup parameter](https://community.bistudio.com/wiki/Arma_3:_Startup_Parameters) is used.\n> ",
        "syntaxArray": [
            {
                "Syntax": "isGamePaused",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if game simulation is paused, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nonEachFrame \n{\n\tif (isGamePaused) exitWith {}; \n\t// ...do stuff\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isGamePaused",
        "modifiers": []
    },
    "triggertimeout": {
        "name": "triggerTimeout",
        "description": "Returns trigger timeout in the form [min, mid, max, interruptable].\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**triggerTimeout** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_timeOut = triggerTimeout someTrigger;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerTimeout",
        "modifiers": [
            "Global argument"
        ]
    },
    "showsubtitles": {
        "name": "showSubtitles",
        "description": "Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.",
        "syntaxArray": [
            {
                "Syntax": "**showSubtitles** enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nshowSubtitles false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showSubtitles",
        "modifiers": [
            "Local effect"
        ]
    },
    "showuavfeed": {
        "name": "showUAVFeed",
        "description": "Shows/hides video feed transmitted from UAV in [its custom info panel](https://community.bistudio.com/wiki/Arma_3_Custom_Info).",
        "syntaxArray": [
            {
                "Syntax": "showUAVFeed show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - always [true](https://community.bistudio.com/wiki/true) unless error"
            }
        ],
        "examples": [
            "\n```sqf\nshowUAVFeed true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showUAVFeed",
        "modifiers": []
    },
    "hudmovementlevels": {
        "name": "HUDMovementLevels",
        "description": "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]",
        "syntaxArray": [
            {
                "Syntax": "**HUDMovementLevels**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nHUDMovementLevels;//[0,0,0,0,0,0,[0,0,0]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/HUDMovementLevels",
        "modifiers": []
    },
    "useaisteeringcomponent": {
        "name": "useAISteeringComponent",
        "description": "Enable the new [AI driving](https://community.bistudio.comhttps://forums.bistudio.com/topic/191515-ai-driving-feedback-topic/), used to test the old and new AI driving.",
        "syntaxArray": [
            {
                "Syntax": "useAISteeringComponent state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nuseAISteeringComponent true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/useAISteeringComponent",
        "modifiers": [
            "Global effect"
        ]
    },
    "showwatch": {
        "name": "showWatch",
        "description": "Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default [true](https://community.bistudio.com/wiki/true))",
        "syntaxArray": [
            {
                "Syntax": "**showWatch** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowWatch false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showWatch",
        "modifiers": []
    },
    "showchat": {
        "name": "showChat",
        "description": "Shows/hides the whole chat window.",
        "syntaxArray": [
            {
                "Syntax": "**showChat** bool",
                "Params": "bool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowChat false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showChat",
        "modifiers": [
            "Local effect"
        ]
    },
    "enableai": {
        "name": "enableAI",
        "description": "Enables parts of the AI behavior that was disabled by [disableAI](https://community.bistudio.com/wiki/disableAI). \n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **enableAI** skilltype",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nskilltype: [String](https://community.bistudio.com/wiki/String) - See [disableAI](https://community.bistudio.com/wiki/disableAI) for possible values.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne enableAI \"Move\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAI",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "saveoverlay": {
        "name": "saveOverlay",
        "description": "Save the current overlay.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**saveOverlay** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nsaveOverlay _map\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveOverlay",
        "modifiers": []
    },
    "getpos": {
        "name": "getPos",
        "description": "Returns object or location position. If the argument is the object, the return value is in format [PositionAGLS](https://community.bistudio.com/wiki/PositionAGLS). Z value is height over the surface underneath.\nThe alternative syntax gets the position given distance and heading away from provided object or position - the equivalent of [BIS_fnc_relPos](https://community.bistudio.com/wiki/BIS_fnc_relPos).",
        "syntaxArray": [
            {
                "Syntax": "getPos object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionAGLS](https://community.bistudio.com/wiki/PositionAGLS)"
            },
            {
                "Syntax": "getPos location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [x,y,z], where z is -1 * [getTerrainHeightASL](https://community.bistudio.com/wiki/getTerrainHeightASL) at the location"
            },
            {
                "Syntax": "origin getPos [distance, heading] *Since Arma 3 v1.55.133361*",
                "Params": "origin: [Object](https://community.bistudio.com/wiki/Object), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\ndistance: [Number](https://community.bistudio.com/wiki/Number) - distance from position\n\nheading: [Number](https://community.bistudio.com/wiki/Number) - in which compass direction\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [x,y,z], where z is land surface position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\nhintSilent str getPos player;\n```\n",
            "getPos vs. other methods (over sea)\n\n```sqf\ndiag_log getPos ship;\t\t\t\t// [2412.01, 6036.33, -0.839965]\ndiag_log getPosATL ship;\t\t\t// [2412.01, 6036.33, 19.4266]\ndiag_log getPosASL ship;\t\t\t// [2412.01, 6036.33, -0.920066]\ndiag_log getPosASLW ship;\t\t\t// [2412.01, 6036.33, -0.865981]\ndiag_log visiblePosition ship;\t\t// [2412.02, 6036.33, -0.837952]\ndiag_log visiblePositionASL ship;\t// [2412.02, 6036.33, -0.91798]\ndiag_log position ship;\t\t\t\t// [2412.01, 6036.33, -0.839965]\n```\n",
            "getPos vs. other methods (over land)\n\n```sqf\ndiag_log getPos car;\t\t\t\t// [2508.64, 5681.47, 0.0609589]\ndiag_log getPosATL car;\t\t\t\t// [2508.64, 5681.47, 0.0356369]\ndiag_log getPosASL car;\t\t\t\t// [2508.64, 5681.47, 71.718]\ndiag_log getPosASLW car;\t\t\t// [2508.64, 5681.47, 71.718]\ndiag_log visiblePosition car;\t\t// [2508.64, 5681.47, 0.0609512]\ndiag_log visiblePositionASL car;\t// [2508.64, 5681.47, 71.718]\ndiag_log position car;\t\t\t\t// [2508.64, 5681.47, 0.0609589]\n```\n",
            "Find position 100 metres and 45 degrees from player position:\n```sqf\nplayer getPos [100, 45];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPos",
        "modifiers": [
            "Global argument"
        ]
    },
    "geteditorobjectscope": {
        "name": "getEditorObjectScope",
        "description": "Returns the editor object scope of the specified editor object.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **getEditorObjectScope** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/getEditorObjectScope",
        "modifiers": []
    },
    "infopanels": {
        "name": "infoPanels",
        "description": "Returns array all info panels configured for given object or object and turret path.",
        "syntaxArray": [
            {
                "Syntax": "infoPanels unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [[infoPanelId1, infoPanelShortcutId1], [infoPanelId2, infoPanelShortcutId2], …]:\n\n* infoPanelId: [String](https://community.bistudio.com/wiki/String) - name of the info panel class as defined in vehicle config\n\n* infopanelShortcutId: [String](https://community.bistudio.com/wiki/String) - shortcut representation of *infopanelId*, currently are supported only shortcuts \"left\" and \"right\""
            },
            {
                "Syntax": "infoPanels [unit, turretPath]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - turret index\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [[infoPanelId1, infoPanelShortcutId1], [infoPanelId2, infoPanelShortcutId2], …]:\n\n* infoPanelId: [String](https://community.bistudio.com/wiki/String) - name of the info panel class as defined in vehicle config\n\n* infopanelShortcutId: [String](https://community.bistudio.com/wiki/String) - shortcut representation of *infopanelId*, currently are supported only shortcuts \"left\" and \"right\""
            }
        ],
        "examples": [
            "\n```sqf\ninfoPanels [vehicle player, [0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/infoPanels",
        "modifiers": []
    },
    "enablesimulationglobal": {
        "name": "enableSimulationGlobal",
        "description": "MP command. Enable or disable simulation for given entity, globally. Call this only from the server. Has the same effect as [enableSimulation](https://community.bistudio.com/wiki/enableSimulation) when used in SP.",
        "syntaxArray": [
            {
                "Syntax": "entity enableSimulationGlobal enable",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myObject enableSimulationGlobal false;\n```\n",
            "\n```sqf\n[_object, false] remoteExec [\"enableSimulationGlobal\", 2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableSimulationGlobal",
        "modifiers": [
            "Global argument",
            "Global effect",
            "Server execution"
        ]
    },
    "inpolygon": {
        "name": "inPolygon",
        "description": "Checks whether position is inside given polygon",
        "syntaxArray": [
            {
                "Syntax": "position **inPolygon** polygon",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - format [Position3D](https://community.bistudio.com/wiki/Position3D)\n\npolygon: [Array](https://community.bistudio.com/wiki/Array) - array of [Position3D](https://community.bistudio.com/wiki/Position3D) positions in format: [position1, position2...., positionN]\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inPolygon",
        "modifiers": []
    },
    "formleader": {
        "name": "formLeader",
        "description": "Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.",
        "syntaxArray": [
            {
                "Syntax": "[Object](https://community.bistudio.com/wiki/Object) = **formLeader** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) -  \nthe leader of the formation is returned. If used on a dead unit, the returned value is [objNull](https://community.bistudio.com/wiki/objNull)"
            }
        ],
        "examples": [
            "? (formLeader player != leader player) :\n hint \"The formation leader is different to the group leader!\"\nreturns X"
        ],
        "Url": "https://community.bistudio.com/wiki/formLeader",
        "modifiers": [
            "Global argument"
        ]
    },
    "ismanualfire": {
        "name": "isManualFire",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with [action](https://community.bistudio.com/wiki/action) \"ManualFire\" and \"ManualFireCancel\". Always returns [false](https://community.bistudio.com/wiki/false) for a soldier.",
        "syntaxArray": [
            {
                "Syntax": "**isManualFire** vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = isManualFire vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isManualFire",
        "modifiers": [
            "Global argument"
        ]
    },
    "iscopilotenabled": {
        "name": "isCopilotEnabled",
        "description": "Returns true if copilots actions are enabled.",
        "syntaxArray": [
            {
                "Syntax": "**isCopilotEnabled** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (!isCopilotEnabled myHeli) then {\n    myHeli enableCopilot true;\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isCopilotEnabled",
        "modifiers": [
            "Global argument"
        ]
    },
    "vehicleradio": {
        "name": "vehicleRadio",
        "description": "Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec)).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
        "syntaxArray": [
            {
                "Syntax": "unit **vehicleRadio** radioName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit to transmit\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne vehicleRadio \"messageOne\";\n```\n",
            "\n```sqf\nplayer vehicleRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleRadio",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "fullcrew": {
        "name": "fullCrew",
        "description": "Returns an array with all crew inside given vehicle, with or without empty seats.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "fullCrew vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - list of arrays in format [unit, role, cargoIndex, turretPath, personTurret]:\n\n* unit: [Object](https://community.bistudio.com/wiki/Object)\n\n* role: [String](https://community.bistudio.com/wiki/String) - not always lowercase (from 2.03 always lower case)\n\n* cargoIndex: [Number](https://community.bistudio.com/wiki/Number)\n\n* turretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n* personTurret: [Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "fullCrew [vehicle, type, includeEmpty]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String) - role filter (case-insensitive). An invalid value (e.g \"\") will return all positions. Available values:\n\n* \"driver\"\n\n* \"commander\"\n\n* \"gunner\"\n\n* \"turret\"\n\n* \"cargo\"\n\n[](https://community.bistudio.com/wiki/Category:Arma_3)[1.56](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.56) includeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) include empty crew seats *Since Arma 3 v1.55.133810*\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - list of arrays in format [unit, role, cargoIndex, turretPath, personTurret]:\n\n* unit: [Object](https://community.bistudio.com/wiki/Object)\n\n* role: [String](https://community.bistudio.com/wiki/String) - not always lowercase (from 2.03 always lower case)\n\n* cargoIndex: [Number](https://community.bistudio.com/wiki/Number)\n\n* turretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n* personTurret: [Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_list = fullCrew vehicle player;\n```\n",
            "\n```sqf\n_list = fullCrew [vehicle player, \"turret\"];\n```\n",
            "\n```sqf\nprivate _actionCompatibleCargoIndexes = fullCrew [heli, \"cargo\", true];\n/*\n\treturns for example (on an armed WY-55 Hellcat):\n\t[\n\t\t[objNull, \"cargo\" ,2, [], false],\n\t\t[objNull, \"cargo\", 3, [], false],\n\t\t[objNull, \"cargo\", 4, [], false],\n\t\t[objNull, \"cargo\", 5, [], false]\n\t]\n\tusing the element's index is compatible with action cargo commands - see below\n*/\n\n// the following commands will put the player in the same seat:\nplayer moveInCargo [heli, 2];\nplayer action [\"GetInCargo\", heli, 0];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fullCrew",
        "modifiers": [
            "Global argument"
        ]
    },
    "waituntil": {
        "name": "waitUntil",
        "description": "Suspends execution of [scheduled](https://community.bistudio.com/wiki/Scheduler) script until the given condition satisfied. \n\n* This command will loop and call the code inside {} **mostly every frame**, depends on complexity of the condition and the overall engine load, until the [code](https://community.bistudio.com/wiki/Code) returns [true](https://community.bistudio.com/wiki/true)\n\n\n* If the very first execution of the code returns [true](https://community.bistudio.com/wiki/true) the command will exit immediately, therefore it will not produce any \"Suspending not allowed in this context\" error when used inside [non-scheduled](https://community.bistudio.com/wiki/Scheduler#Unscheduled_Environment) script. For all other uses it must be executed in environment that allows [suspension](https://community.bistudio.com/wiki/Scheduler#Suspension) ([canSuspend](https://community.bistudio.com/wiki/canSuspend)), such as [spawned](https://community.bistudio.com/wiki/spawn) or [execVMed](https://community.bistudio.com/wiki/execVM) code\n\n\n* Avoid doing \n```sqf\nwaitUntil {time > 20};\n```\n and use \n```sqf\nsleep 20;\n```\n instead!\n\n\n* If you can, add a [sleep](https://community.bistudio.com/wiki/sleep) to the condition to save some cpu cycles \n```sqf\nwaitUntil {sleep 1; !alive player};\n```\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "waitUntil condition",
                "Params": "condition: [Code](https://community.bistudio.com/wiki/Code) - The expression that **must** return a [Boolean](https://community.bistudio.com/wiki/Boolean), [true](https://community.bistudio.com/wiki/true) to finish waiting or [false](https://community.bistudio.com/wiki/false) to continue waiting\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - The value the condition evaluates to when the wait is over (normally [true](https://community.bistudio.com/wiki/true))"
            }
        ],
        "examples": [
            "\n```sqf\nwaitUntil { not alive player };\n```\n",
            "\n```sqf\n_i = 0; waitUntil { _i = _i + 1; _i >= 100 }; \n```\n",
            "\n```sqf\nwaitUntil {sleep 1; not alive player }; // Checks every 1 second\n```\n",
            "An on-the-fly custom *[event handler](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers)*:\n\n```sqf\n_myEH = [\"ZoomIn\"] spawn {\n\twhile { true } do {\n\t\twaitUntil {\n\t\t\tinputAction (_this select 0) == 1;\n\t\t};\n\t\tdiag_log format [\"%1 @ %2\", _this select 0, diag_tickTime];\n\t};\n};\n```\n\nAlthough perhaps better to use [onEachFrame](https://community.bistudio.com/wiki/BIS_fnc_addStackedEventHandler), depending on the application.",
            "Use [getVariable](https://community.bistudio.com/wiki/getVariable) with default value to prevent unexcepted script errors:\n\n```sqf\nwaitUntil { bank getVariable [\"money\", 0] > 0 };\nwaitUntil { missionNamespace getVariable [\"isready\", false] };\n```\n",
            "Always return [Boolean](https://community.bistudio.com/wiki/Boolean):\n```sqf\n// bad\nwaitUntil { if (not alive player) exitWith {}; _time = _time + 1 };\n// good\nwaitUntil { if (not alive player) exitWith { true }; _time = _time + 1; false };\n// perfect\nwaitUntil { not alive player };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waitUntil",
        "modifiers": []
    },
    "getobjectscale": {
        "name": "getObjectScale",
        "description": "Returns the render scale of the object relative to the original model.",
        "syntaxArray": [
            {
                "Syntax": "getObjectScale object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Object to return scale of. Can also be a [terrain object](https://community.bistudio.com/wiki/nearestTerrainObjects)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Scale relative to the original model"
            }
        ],
        "examples": [
            "\n```sqf\n_scale = getObjectScale _object;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectScale",
        "modifiers": []
    },
    "velocity": {
        "name": "velocity",
        "description": "Returns the velocity of the object as vector in m/s.",
        "syntaxArray": [
            {
                "Syntax": "velocity object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Vector3D](https://community.bistudio.com/wiki/Vector3D)"
            }
        ],
        "examples": [
            "\n```sqf\n_vector = velocity jeep;\n```\n",
            "\n```sqf\nif ((velocity _plane1 select 2) > 50) then { hint \"Aircraft is climbing up too fast!\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/velocity",
        "modifiers": []
    },
    "vectormodeltoworldvisual": {
        "name": "vectorModelToWorldVisual",
        "description": "Converts vector from model to world space in render time scope.",
        "syntaxArray": [
            {
                "Syntax": "object **vectorModelToWorldVisual** modelDir",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nmodelDir: [Array](https://community.bistudio.com/wiki/Array) - vector direction in model space in format [x,y,z]\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - vector direction in world space in format [x,y,z]"
            }
        ],
        "examples": [
            "Convert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: \n\n```sqf\n_airplane vectorModelToWorldVisual [0,-10,4];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorModelToWorldVisual",
        "modifiers": []
    },
    "shownscoretable": {
        "name": "shownScoretable",
        "description": "Returns the state of the score table set with [showScoretable](https://community.bistudio.com/wiki/showScoretable) command. \n> ",
        "syntaxArray": [
            {
                "Syntax": "shownScoretable",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - 0: Force hidden, 1: Force shown, -1: Default"
            }
        ],
        "examples": [
            "\n```sqf\n_state = shownScoretable;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownScoretable",
        "modifiers": []
    },
    "leavevehicle": {
        "name": "leaveVehicle",
        "description": "Ceases the using of the vehicle by a group and unassigns vehicle from the group. If the argument is a single unit, the vehicle will be unassigned from unit's group. After vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.\nIn short the command could be hypothetically presented as:\nleaveVehicle = un-[addVehicle](https://community.bistudio.com/wiki/addVehicle) + [unassignVehicle](https://community.bistudio.com/wiki/unassignVehicle) [forEach](https://community.bistudio.com/wiki/forEach) [crew](https://community.bistudio.com/wiki/crew) \nHowever, to make it more reliable, it is best to move unit out of the vehicle manually with [moveOut](https://community.bistudio.com/wiki/moveOut) command and force unassign the vehicle with [unassignVehicle](https://community.bistudio.com/wiki/unassignVehicle)",
        "syntaxArray": [
            {
                "Syntax": "group **leaveVehicle** vehicle",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object), in which case, object's [Group](https://community.bistudio.com/wiki/Group) is used\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit leaveVehicle _vehicle\n```\n",
            "\n```sqf\n_grp leaveVehicle _vehicle\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaveVehicle",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getcontainermaxload": {
        "name": "getContainerMaxLoad",
        "description": "Returns max load value of given container. Currently works only with uniform, vest and backpack classes.",
        "syntaxArray": [
            {
                "Syntax": "**getContainerMaxLoad** containerClass",
                "Params": "containerClass: [String](https://community.bistudio.com/wiki/String) - uniform, vest or backpack class\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - load value, -1 if not available."
            }
        ],
        "examples": [
            "\n```sqf\n_maxLoadUniform = getContainerMaxLoad uniform player;\n_maxLoadVest = getContainerMaxLoad vest player;\n_maxLoadBackpack = getContainerMaxLoad backpack player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getContainerMaxLoad",
        "modifiers": []
    },
    "missionnamesource": {
        "name": "missionNameSource",
        "description": "Return workshop-compatible currently loaded mission file (path to mission.pbo, relative to game exe).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "missionNameSource",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"You are playing mission \"\"%1\"\"\", missionNameSource];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionNameSource",
        "modifiers": []
    },
    "namesound": {
        "name": "nameSound",
        "description": "Returns the nameSound of a person.",
        "syntaxArray": [
            {
                "Syntax": "**nameSound** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nnameSound player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nameSound",
        "modifiers": []
    },
    "tvcollapse": {
        "name": "tvCollapse",
        "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "**tvCollapse** [idc, path]",
                "Params": "[idc, path]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Item [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path). [] will collapse the whole tree and it will disappear\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **tvCollapse** path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Item [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path). [] will collapse the whole tree and it will disappear\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvCollapse [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvCollapse [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvCollapse",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "addweaponitem": {
        "name": "addWeaponItem",
        "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.\n\n* Since Arma 3 v1.95 it is possible to add item instantly skipping the animation by providing optional boolean",
        "syntaxArray": [
            {
                "Syntax": "unit **addWeaponItem** [weaponName, itemName, instant]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[weaponName, itemName, instant]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String) - name of the weapon to add magazine to\n\nitemName: [String](https://community.bistudio.com/wiki/String) - class name of the item to add (if magazine, muzzle will be autodetected)\n\ninstant (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to skip animation. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit **addWeaponItem** [weaponName, [itemName, ammoCount, muzzleName], instant]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[weaponName, [magazineName, ammoCount, muzzleName], instant]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String) - name of the weapon to add magazine to\n\n[itemName, ammoCount, muzzleName]: [Array](https://community.bistudio.com/wiki/Array)\n\nitemName: [String](https://community.bistudio.com/wiki/String) - class name of the item to add (if magazine, muzzle will be autodetected unless specified)\n\nammoCount (Optional): [Number](https://community.bistudio.com/wiki/Number) - optional amount of ammo in magazine\n\nmuzzleName (Optional): [String](https://community.bistudio.com/wiki/String) - optional target muzzle to add magazine to\n\ninstant (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to skip animation. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addWeaponItem [\"arifle_MX_GL_ACO_F\", \"1Rnd_HE_Grenade_shell\"];\n```\n",
            "\n```sqf\nplayer addWeaponItem [\"arifle_MX_GL_ACO_F\", [\"1Rnd_HE_Grenade_shell\", 1, \"GL_3GL_F\"]];\n```\n",
            "\n```sqf\nplayer addWeaponItem [\"Laserdesignator\", \"Laserbatteries\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "overcastforecast": {
        "name": "overcastForecast",
        "description": "Return the overcast forecast.",
        "syntaxArray": [
            {
                "Syntax": "**overcastForecast**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_forecast = overcastForecast;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/overcastForecast",
        "modifiers": []
    },
    "mapanimdone": {
        "name": "mapAnimDone",
        "description": "Check if map animation is finished.",
        "syntaxArray": [
            {
                "Syntax": "mapAnimDone",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _isDone = mapAnimDone;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mapAnimDone",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "do": {
        "name": "do",
        "description": "Executes *code*. Used as part of a construct, such as [while](https://community.bistudio.com/wiki/while), [with](https://community.bistudio.com/wiki/with), [for](https://community.bistudio.com/wiki/for) and [switch](https://community.bistudio.com/wiki/switch). The *code* is always executed in [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) unless do is used with [with](https://community.bistudio.com/wiki/with) as an argument.",
        "syntaxArray": [
            {
                "Syntax": "construct do code",
                "Params": "construct: [While Type](https://community.bistudio.com/wiki/While_Type) ([while](https://community.bistudio.com/wiki/while)), [With Type](https://community.bistudio.com/wiki/With_Type) ([with](https://community.bistudio.com/wiki/with)), [For Type](https://community.bistudio.com/wiki/For_Type) ([for](https://community.bistudio.com/wiki/for)), [Switch Type](https://community.bistudio.com/wiki/Switch_Type) ([switch](https://community.bistudio.com/wiki/switch))\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nwhile { b > a } do { a = a + 1 };\n```\n",
            "Repair all members of a group to such a level that they are able to stand up:\n\n```sqf\n{\n\twhile {!canStand _x && alive _x} do {\n\t\t_x setDamage (damage _x - 0.01);\n\t};\n} forEach units group unitname;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/do",
        "modifiers": []
    },
    "removevest": {
        "name": "removeVest",
        "description": "Removes vest from unit.",
        "syntaxArray": [
            {
                "Syntax": "removeVest unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveVest player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeVest",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ctfindrowheader": {
        "name": "ctFindRowHeader",
        "description": "Takes index of a row as a parameter. Returns index of the closest header above this row.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctFindRowHeader** row",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_index = _control ctFindRowHeader 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctFindRowHeader",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "commandchat": {
        "name": "commandChat",
        "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec))",
        "syntaxArray": [
            {
                "Syntax": "unitName commandChat chatText",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) - unit transmitting message\n\nchatText: [String](https://community.bistudio.com/wiki/String) - message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[side, identity] commandChat chatText",
                "Params": "[side, identity]: [Array](https://community.bistudio.com/wiki/Array)\n\nside: [Side](https://community.bistudio.com/wiki/Side) - side to which the message will be seen\n\nidentity: [String](https://community.bistudio.com/wiki/String) - class name of one of the identities in CfgHQIdentities. Possible identities in Arma 3 are:\n\n* \"Base\"\n\n* \"HQ\"\n\n* \"PAPA_BEAR\"\n\n* \"AirBase\"\n\n* \"BLU\"\n\n* \"OPF\"\n\n* \"IND\"\n\n* \"IND_G\"\n\nchatText: [String](https://community.bistudio.com/wiki/String) - message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne commandChat \"Show this text\";\n```\n",
            "\n```sqf\n[playerSide, \"HQ\"] commandChat \"Do this! That's an order!\";\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [sideChat](https://community.bistudio.com/wiki/sideChat) \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [globalChat](https://community.bistudio.com/wiki/globalChat) \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [groupChat](https://community.bistudio.com/wiki/groupChat) \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [vehicleChat](https://community.bistudio.com/wiki/vehicleChat) \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) commandChat \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [customChat](https://community.bistudio.com/wiki/customChat) [1, \"customChat\"];\n[systemChat](https://community.bistudio.com/wiki/systemChat) \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandChat",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "binocular": {
        "name": "binocular",
        "description": "Returns class name of currently used binocular weapon.",
        "syntaxArray": [
            {
                "Syntax": "**binocular** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_binocs = binocular player; //Rangefinder\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/binocular",
        "modifiers": []
    },
    "enablevehiclecargo": {
        "name": "enableVehicleCargo",
        "description": "Enable/disable option to transport other vehicles (if configured) or be transported.",
        "syntaxArray": [
            {
                "Syntax": "vehicle enableVehicleCargo enable",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle enableVehicleCargo true;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableVehicleCargo",
        "modifiers": []
    },
    "removeweaponattachmentcargo": {
        "name": "removeWeaponAttachmentCargo",
        "description": "Remove attachment linked to a weapon from the vehicle cargo space. \n> ",
        "syntaxArray": [
            {
                "Syntax": "object **removeWeaponAttachmentCargo** [weaponID,creatorID,\"attachment\"]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Vehicle or ammo box\n\n[weaponID,creatorID,\"attachment\"]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nrearmTruckOne removeWeaponAttachmentCargo [weaponID, creatorID, \"attachment\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeWeaponAttachmentCargo",
        "modifiers": []
    },
    "addresources": {
        "name": "addResources",
        "description": "Adds resources to a team member.",
        "syntaxArray": [
            {
                "Syntax": "teamMember **addResources** [resource1, resource2, ...]",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\nresource1: [String](https://community.bistudio.com/wiki/String)\n\nresource2: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/addResources",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "doartilleryfire": {
        "name": "doArtilleryFire",
        "description": "Orders an artillery unit to fire a burst on the given position (silently).",
        "syntaxArray": [
            {
                "Syntax": "unit doArtilleryFire [position, type, rounds]",
                "Params": "**unit**: [Object](https://community.bistudio.com/wiki/Object)\n\n**position**: [Position](https://community.bistudio.com/wiki/Position)\n\n**type**: [String](https://community.bistudio.com/wiki/String) - Magazine class name from [CfgMagazines](https://community.bistudio.com/wiki/Arma_3:_CfgMagazines) (case sensitive).\n\n**rounds**: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nMortar doArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doArtilleryFire",
        "modifiers": []
    },
    "markercolor": {
        "name": "markerColor",
        "description": "Returns marker color for given marker. See also [setMarkerColor](https://community.bistudio.com/wiki/setMarkerColor).",
        "syntaxArray": [
            {
                "Syntax": "markerColor markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nif (markerColor \"Marker1\" == \"ColorRed\") then { hint \"Marker1 is red!\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerColor",
        "modifiers": []
    },
    "weaponsturret": {
        "name": "weaponsTurret",
        "description": "Returns all weapons of given turret. Use turret path [-1] for driver's turret.",
        "syntaxArray": [
            {
                "Syntax": "vehicle weaponsTurret turretPath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_weapons = vehicle player weaponsTurret [0,0]\n```\n",
            "\n```sqf\n_weapons = _tank weaponsTurret [0]\n```\n",
            "\n```sqf\n_driverWeapon = _ka50pilot weaponsTurret [-1]\n```\n",
            "\n```sqf\n_weaponsForAnyTurrentPosition = (vehicle player) weaponsTurret ((assignedVehicleRole player) select 1)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponsTurret",
        "modifiers": [
            "Global argument"
        ]
    },
    "setinfopanel": {
        "name": "setInfoPanel",
        "description": "Opens given component or first component of given component type on specified info panel.",
        "syntaxArray": [
            {
                "Syntax": "setInfoPanel [infopanelId, componentClassOrType];",
                "Params": "infoPanelId: [String](https://community.bistudio.com/wiki/String) - info panel classname, or \"left\" or \"right\"\n\ncomponentClassOrType: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if panel was successfully opened, [false](https://community.bistudio.com/wiki/false) otherwise (e.g. opening GPS on player without GPS item or setting panel to vehicle that doesn't have such capability configured)"
            }
        ],
        "examples": [
            "\n```sqf\n// opens slingload assistant on right panel\n_result = setInfoPanel [\"VehicleSystemsDisplayManagerComponentRight\", \"SlingLoadDisplayComponent\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setInfoPanel",
        "modifiers": []
    },
    "waypointposition": {
        "name": "waypointPosition",
        "description": "Returns [Position](https://community.bistudio.com/wiki/Position) of the given waypoint. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**waypointPosition** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\n_wPos = waypointPosition [_groupOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointPosition",
        "modifiers": []
    },
    "ctrlsetfonth2": {
        "name": "ctrlSetFontH2",
        "description": "Sets H2 font of given HTML control",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH2** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH2 \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH2",
        "modifiers": []
    },
    "listvehiclesensors": {
        "name": "listVehicleSensors",
        "description": "Returns an array of the sensors in the given vehicle's config (configfile >> CfgVehicles >> vehicle >> Components >> SensorsManagerComponent >> Components).",
        "syntaxArray": [
            {
                "Syntax": "**listVehicleSensors** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_sensors = listVehicleSensors (vehicle player);\nhint str _sensors;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/listVehicleSensors",
        "modifiers": []
    },
    "matrixtranspose": {
        "name": "matrixTranspose",
        "description": "Returns [transposed](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Transpose) version of the given matrix. The matrix is an [Array](https://community.bistudio.com/wiki/Array) of rows. Each row is an [Array](https://community.bistudio.com/wiki/Array) of corresponding column values for the row. The minimum number of rows is 1.\n\n[](https://community.bistudio.com/wiki/File:matrixTranspose.jpg)\n",
        "syntaxArray": [
            {
                "Syntax": "matrixTranspose matrix",
                "Params": "matrix: [Array](https://community.bistudio.com/wiki/Array) - given matrix\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - transposed matrix"
            }
        ],
        "examples": [
            "\n```sqf\nmatrixTranspose \n[\n\t[1,2,3], \n\t[3,1,2], \n\t[2,3,1]\n]; \n/* returns \n[\n\t[1,3,2], \n\t[2,1,3], \n\t[3,2,1]\n] */\n```\n",
            "\n```sqf\nmatrixTranspose \n[\n\t[1,2,3]\n]; \n/* returns \n[\n\t[1],\n\t[2],\n\t[3]\n] */\n```\n",
            "\n```sqf\nmatrixTranspose \n[\n\t[1],\n\t[2],\n\t[3]\n]; \n/* returns \n[\n\t[1,2,3]\n] */\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/matrixTranspose",
        "modifiers": []
    },
    "ctrlsetchecked": {
        "name": "ctrlSetChecked",
        "description": "Sets checked state of a [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES) control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetChecked** checked",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES) control. If control contain multiple checkboxes, only checkbox with index 0 is queried.\n\nchecked: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to check, [false](https://community.bistudio.com/wiki/false) to uncheck the checkbox\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **ctrlSetChecked** [index, checked] *Since Arma 3 v1.71.141591*",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES) control\n\n[index, checked]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - checkbox index\n\nchecked: [Boolean](https://community.bistudio.com/wiki/Boolean)- [true](https://community.bistudio.com/wiki/true) to check, [false](https://community.bistudio.com/wiki/false) to uncheck the checkbox\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetChecked true;\n```\n",
            "\n```sqf\n_control ctrlSetChecked [3, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetChecked",
        "modifiers": []
    },
    "sliderspeed": {
        "name": "sliderSpeed",
        "description": "Returns speed of [CT_SLIDER](https://community.bistudio.com/wiki/CT_SLIDER) or [CT_XSLIDER](https://community.bistudio.com/wiki/CT_XSLIDER).",
        "syntaxArray": [
            {
                "Syntax": "**sliderSpeed** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number): Idc of the control\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [minSpeed, maxSpeed]"
            },
            {
                "Syntax": "**sliderSpeed** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [minSpeed, maxSpeed]"
            }
        ],
        "examples": [
            "\n```sqf\nsliderSpeed _ctrlSlider params [\"_min\", \"_max\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sliderSpeed",
        "modifiers": []
    },
    "typeof": {
        "name": "typeOf",
        "description": "Returns the config class name of given object or \n```sqf\n\"\"\n```\n if object does not have a config class.",
        "syntaxArray": [
            {
                "Syntax": "typeOf object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Config class or \n```sqf\n\"\"\n```\n"
            }
        ],
        "examples": [
            "\n```sqf\nif (typeOf vehicle player == \"B_Heli_Light_01_armed_F\") then { hint \"Player is in a AH-9 Pawnee\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/typeOf",
        "modifiers": []
    },
    "allowfileoperations": {
        "name": "allowFileOperations",
        "description": "Allow/dissallow file ops (load/save etc).\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **allowFileOperations** bool",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/allowFileOperations",
        "modifiers": []
    },
    "getcustomsoundcontroller": {
        "name": "getCustomSoundController",
        "description": "Returns current value set to the controller (see [setCustomSoundController](https://community.bistudio.com/wiki/setCustomSoundController))",
        "syntaxArray": [
            {
                "Syntax": "**getCustomSoundController** [vehicle, controller]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - A transport type vehicle. Does not work on characters or buildings\n\ncontroller: [String](https://community.bistudio.com/wiki/String) - Name of custom sound controller. Need to be full string like i.e. \"CustomSoundController1\". Currently you can pick from \"CustomSoundController1\" to \"CustomSoundController32\"\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ngetCustomSoundController [vehicle player, \"CustomSoundController1\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCustomSoundController",
        "modifiers": []
    },
    "ishidden": {
        "name": "isHidden",
        "description": "Return whether the person is hidden (reached the hiding position). For command that tests general visibility of an object use [isObjectHidden](https://community.bistudio.com/wiki/isObjectHidden)",
        "syntaxArray": [
            {
                "Syntax": "**isHidden** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bobIsHidden = isHidden bob;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isHidden",
        "modifiers": [
            "Global argument"
        ]
    },
    "getpilotcameratarget": {
        "name": "getPilotCameraTarget",
        "description": "Returns the target of the object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera) tracking.",
        "syntaxArray": [
            {
                "Syntax": "**getPilotCameraTarget** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [isTracking, targetPosition, targetObject]; returns [false,[0,0,0],<NULL-object>] if camera is not in a tracking mode or if object has no [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera). \n\n* isTracking: [Boolean](https://community.bistudio.com/wiki/Boolean) - returns whether the camera is in a tracking mode\n\n* targetPosition: [Array](https://community.bistudio.com/wiki/Array) - format [PositionASL](https://community.bistudio.com/wiki/PositionASL), returns the position of the tracked area or object\n\n* targetObject: [Object](https://community.bistudio.com/wiki/Object) - returns the tracked object, [objNull](https://community.bistudio.com/wiki/objNull) if camera is only tracking an area"
            }
        ],
        "examples": [
            "\n```sqf\n_pilotCamTrack = (getPilotCameraTarget vehicle player) select 0;\n_pilotCamTargetPos = (getPilotCameraTarget vehicle player) select 1;\n_pilotCamTarget = (getPilotCameraTarget vehicle player) select 2;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPilotCameraTarget",
        "modifiers": [
            "Local argument"
        ]
    },
    "blufor": {
        "name": "blufor",
        "description": "Pre-defined variable for the blufor [side](https://community.bistudio.com/wiki/Side).",
        "syntaxArray": [
            {
                "Syntax": "**blufor**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side player == blufor) then\n{\n    hint \"BLUFOR\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/blufor",
        "modifiers": []
    },
    "setplayervonvolume": {
        "name": "setPlayerVoNVolume",
        "description": "Sets provided player's Voice over Network (VoN) volume.",
        "syntaxArray": [
            {
                "Syntax": "unit setPlayerVoNVolume volume",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the other player's unit\n\nvolume: [Number](https://community.bistudio.com/wiki/Number) - the wanted volume\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_loudPlayer setPlayerVoNVolume 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPlayerVoNVolume",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "handgunitems": {
        "name": "handgunItems",
        "description": "Returns array with all items assigned to the [handgunWeapon](https://community.bistudio.com/wiki/handgunWeapon) except magazines. Use [handgunMagazine](https://community.bistudio.com/wiki/handgunMagazine) command for the latter. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**handgunItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [silencer, laserpointer/flashlight, optics, bipod]"
            }
        ],
        "examples": [
            "\n```sqf\nhandgunItems player; \n/*\n[\n\t\"muzzle_snds_L\",\t//silencer\n\t\"\",\t\t\t//laser\n\t\"\",\t\t\t//optics\n\t\"\"\t\t\t//bipod\n]\n*/\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/handgunItems",
        "modifiers": [
            "Global argument"
        ]
    },
    "setparticlerandom": {
        "name": "setParticleRandom",
        "description": "Sets randomization of particle source parameters. Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleRandom\n[\n\tlifeTimeVar,\n\tpositionVar,\n\tmoveVelocityVar,\n\trotationVelocityVar,\n\tsizeVar,\n\tcolorVar,\n\trandomDirectionPeriodVar,\n\trandomDirectionIntensityVar,\n\tangleVar,\n\tbounceOnSurfaceVar\n];\n```\n",
        "syntaxArray": [
            {
                "Syntax": "particleSource setParticleRandom [lifeTime, position, moveVelocity, rotationVelocity, size, color, directionPeriod, directionIntensity, angle, bounceOnSurface]",
                "Params": "particleSource: [Object](https://community.bistudio.com/wiki/Object)\n\nlifeTime: [Number](https://community.bistudio.com/wiki/Number)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) in format [randomX, randomY, randomZ]\n\nmoveVelocity: [Array](https://community.bistudio.com/wiki/Array) in format [randomX, randomY, randomZ]\n\nrotationVelocity: [Number](https://community.bistudio.com/wiki/Number)\n\nsize: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\ndirectionPeriod: [Number](https://community.bistudio.com/wiki/Number)\n\ndirectionIntensity: [Number](https://community.bistudio.com/wiki/Number)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) (Optional)\n\nbounceOnSurface: [Number](https://community.bistudio.com/wiki/Number) (Optional) *Since Arma 3 v0.74*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _particleSource setParticleRandom [0, [0.1, 0.1, 0.1], [0, 0, 0.5], 0, 0.1, [0, 0, 0, 0], 0, 0, 45, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setParticleRandom",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "list": {
        "name": "list",
        "description": "List of units that would activate given [Trigger](https://community.bistudio.com/wiki/Triggers).\n\nIt returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a **[pointer](https://community.bistudio.com/wiki/Array#Array_references)** to the trigger's list after the simulation started.Since this is just a *reference* this means that the value in your local variable will change as the content of the trigger area changes. To permanently copy the returned list to a different variable, use _mylist = +(list triggerOne).\n\nThe second example can be used inside the trigger (in that case, no need to name your trigger).\n\nThe list returned for trigger of type \"Not present\" is the same as that returned for type \"present\". \n\n**NOTE:** While the command can query any trigger, local or remote, the result will be only for the trigger condition set on the local client. See [createTrigger](https://community.bistudio.com/wiki/createTrigger) for more info.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) =  **list** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) or [Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tlist = list _triggerOne; \n```\n",
            "\n```sqf\nhint format [\"%1\", thisList]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/list",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "combatbehaviour": {
        "name": "combatBehaviour",
        "description": "Returns combat behaviour of unit or group. To set unit or group behaviour see [setCombatBehaviour](https://community.bistudio.com/wiki/setCombatBehaviour). The behaviour is one of:\n\n* \"CARELESS\"\n\n* \"SAFE\"\n\n* \"AWARE\"\n\n* \"COMBAT\"\n\n* \"STEALTH\"\n\n* \"ERROR\" - when not available",
        "syntaxArray": [
            {
                "Syntax": "combatBehaviour unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - AI unit\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - unit behaviour, see description"
            },
            {
                "Syntax": "combatBehaviour group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) - AI group\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - group behaviour, see description"
            }
        ],
        "examples": [
            "\n```sqf\nunit1 setCombatBehaviour \"CARELESS\";\ncombatBehaviour unit1; //\"CARELESS\"\n```\n",
            "\n```sqf\ngroup unit1 setCombatBehaviour \"SAFE\";\ncombatBehaviour group unit1; //\"SAFE\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/combatBehaviour",
        "modifiers": [
            "Global argument"
        ]
    },
    "additemcargoglobal": {
        "name": "addItemCargoGlobal",
        "description": "Creates new items and stores them in the given container. Works with items, weapons and magazines.",
        "syntaxArray": [
            {
                "Syntax": "box **addItemCargoGlobal** [item, count]",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n[item, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsupplyBox addItemCargoGlobal [\"optic_Arco\", 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItemCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "clearitemcargo": {
        "name": "clearItemCargo",
        "description": "Removes all items from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "clearItemCargo box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearItemCargo myBox;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearItemCargo",
        "modifiers": []
    },
    "canadditemtovest": {
        "name": "canAddItemToVest",
        "description": "Checks if given object can be stored into soldier's vest.",
        "syntaxArray": [
            {
                "Syntax": "unit canAddItemToVest item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "unit canAddItemToVest [item, count] *Since Arma 3 v1.55.133607*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[item, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_item = \"HandGrenade\";\nprivate _fits = player canAddItemToVest _item;\nif (_fits) then {\n\tplayer addItemToVest _item;\n} else {\n\thint \"no room!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canAddItemToVest",
        "modifiers": []
    },
    "kbadddatabasetargets": {
        "name": "kbAddDatabaseTargets",
        "description": "Register target list knowledge base database to given person. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.\n> ",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = person kbAddDatabaseTargets fileName",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nfileName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_hasBeenAdded = _unit kbAddDatabaseTargets \"chat.txt\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbAddDatabaseTargets",
        "modifiers": []
    },
    "addcuratoraddons": {
        "name": "addCuratorAddons",
        "description": "Allow curator use of given addon.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **addCuratorAddons** addons",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\naddons: [Array](https://community.bistudio.com/wiki/Array) of CfgPatches classes\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];\n```\n",
            "\n```sqf\ncuratorObj addCuratorAddons [\"A3_Modules_F_Curator_Lightning\"];\n```\n",
            "Addons can be stacked:\n```sqf\ncuratorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];\ncuratorObj addCuratorAddons [\"A3_Modules_F_Curator_Lightning\"];\ndiag_log curatorAddons curatorObj;\n```\n\n\n\n```sqf\n[\n\t\"A3_Armor_F_AMV\",\n\t\"A3_Armor_F_Panther\",\n\t\"A3_Modules_F_Curator_Lightning\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addCuratorAddons",
        "modifiers": [
            "Server execution"
        ]
    },
    "simulinclouds": {
        "name": "simulInClouds",
        "description": "Returns if given position is in clouds.",
        "syntaxArray": [
            {
                "Syntax": "**simulInClouds** pos",
                "Params": "pos: [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) -  [True](https://community.bistudio.com/wiki/true) if given position is in clouds\n\n* [Nothing](https://community.bistudio.com/wiki/Nothing) - If given arguments are incorrect"
            }
        ],
        "examples": [
            "\n```sqf\nsimulInClouds getPos player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/simulInClouds",
        "modifiers": []
    },
    "activatekey": {
        "name": "activateKey",
        "description": "Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the [description.ext](https://community.bistudio.com/wiki/Description.ext#keys) file of the missions.",
        "syntaxArray": [
            {
                "Syntax": "**activateKey** keyname",
                "Params": "keyname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nactivateKey \"Mission04Key\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/activateKey",
        "modifiers": []
    },
    "configfile": {
        "name": "configFile",
        "description": "Return root of config entries hierarchy.",
        "syntaxArray": [
            {
                "Syntax": "**configFile**",
                "Params": "",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\n_isMyClassActive = isClass (configFile >> \"CfgPatches\" >> \"MyClass\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configFile",
        "modifiers": []
    },
    "clearweaponcargoglobal": {
        "name": "clearWeaponCargoGlobal",
        "description": "Removes all weapons from the vehicle cargo space. MP synchronized.",
        "syntaxArray": [
            {
                "Syntax": "clearWeaponCargoGlobal unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearWeaponCargoGlobal jeepOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearWeaponCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "waypointloiterradius": {
        "name": "waypointLoiterRadius",
        "description": "Gets the waypoint loiter radius. Waypoint uses format [Waypoint](https://community.bistudio.com/wiki/Waypoint).",
        "syntaxArray": [
            {
                "Syntax": "**waypointLoiterRadius** Waypoint",
                "Params": "Waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_radius = waypointLoiterRadius [groupOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointLoiterRadius",
        "modifiers": []
    },
    "editorseteventhandler": {
        "name": "editorSetEventHandler",
        "description": "Sets given event handler of given editor.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **editorSetEventHandler** [handler name,function]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[handler name,function]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n_map editorSetEventHandler [\"SelectObject\",\"\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/editorSetEventHandler",
        "modifiers": []
    },
    "setdirection": {
        "name": "setDirection",
        "description": "Set's the orientation of a location. It's area and map icon (if it is type uses an icon) will be rotated to this orientation.",
        "syntaxArray": [
            {
                "Syntax": "location **setDirection** direction",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\ndirection: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlocation1 = createLocation [\"VegetationPalm\", getPos player, 200, 200];  \nlocation1 setText \"Benargee's Palm Tree\"; \nlocation1 setDirection 45;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDirection",
        "modifiers": []
    },
    "set3denattribute": {
        "name": "set3DENAttribute",
        "description": "Set one of entity [attributes](https://community.bistudio.com/wiki/Eden_Editor:_Entity_Attributes). For the list of all attributes with their properties, see [Setting Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Attributes).\n> ",
        "syntaxArray": [
            {
                "Syntax": "entity **set3DENAttribute** [class, value]",
                "Params": "entity: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\nclass: [String](https://community.bistudio.com/wiki/String) - attribute name\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - new attribute value\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the value was set"
            }
        ],
        "examples": [
            "\n```sqf\nplayer set3DENAttribute [\"allowDamage\",false ];\n```\n\nMark player as invincible"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENAttribute",
        "modifiers": []
    },
    "onpreloadstarted": {
        "name": "onPreloadStarted",
        "description": "Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**onPreloadStarted** command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonPreloadStarted {diag_log \"preload started\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onPreloadStarted",
        "modifiers": []
    },
    "waypointvisible": {
        "name": "waypointVisible",
        "description": "A getter for [setWaypointVisible](https://community.bistudio.com/wiki/setWaypointVisible) command.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**waypointVisible** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_visible = waypointVisible [groupOne, 1];\n```\n",
            "\n```sqf\n_visible = waypointVisible [group player, currentWaypoint group player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointVisible",
        "modifiers": []
    },
    "creategroup": {
        "name": "createGroup",
        "description": "Creates a new [Group](https://community.bistudio.com/wiki/Group) for the given [Side](https://community.bistudio.com/wiki/Side).\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "createGroup side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Group](https://community.bistudio.com/wiki/Group)"
            },
            {
                "Syntax": "createGroup [side, deleteWhenEmpty] *Since Arma 3 v1.67*",
                "Params": "[side, deleteWhenEmpty]: [Array](https://community.bistudio.com/wiki/Array)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\ndeleteWhenEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to [delete the group when empty](https://community.bistudio.com/wiki/deleteGroupWhenEmpty).\n\n* If set to [true](https://community.bistudio.com/wiki/true), *deleteWhenEmpty* forces a group to get deleted when empty - it does **not** prevent its deletion by other commands when set to [false](https://community.bistudio.com/wiki/false).\n\n* Deletion may take up to a minute after the last unit is removed.\n\n",
                "Return": "[Group](https://community.bistudio.com/wiki/Group)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _group = createGroup east;\n```\n",
            "\n```sqf\nprivate _group = createGroup [east, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createGroup",
        "modifiers": [
            "Global effect"
        ]
    },
    "backpackitems": {
        "name": "backpackItems",
        "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.",
        "syntaxArray": [
            {
                "Syntax": "backpackItems unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nbackpackItems player; // returns e.g [\"hgun_P07_F\", \"Titan_AT\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/backpackItems",
        "modifiers": []
    },
    "addbackpackglobal": {
        "name": "addBackpackGlobal",
        "description": "Adds a backpack to a unit (even non-local).\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **addBackpackGlobal** backpack",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - soldier\n\nbackpack: [String](https://community.bistudio.com/wiki/String) - backpack class name\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addBackpackGlobal \"B_AssaultPack_khk\";\n```\n",
            "\n```sqf\n_unit spawn \n{\n\tif (!isNull backpackContainer _this) then\n\t{\n\t\tremoveBackpackGlobal _this;\n\t\twaitUntil { isNull backpackContainer _this };\n\t};\n\t_this addBackpackGlobal \"B_AssaultPack_khk\";\n\twaitUntil { !isNull backpackContainer _this };\n\tbackpackContainer _this addMagazineCargoGlobal [\"30Rnd_556x45_Stanag\",5];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addBackpackGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "land": {
        "name": "land",
        "description": "Forces a helicopter landing.",
        "syntaxArray": [
            {
                "Syntax": "helicopter **land** mode",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\nmode: [String](https://community.bistudio.com/wiki/String) - Can be:\n\n* \"LAND\" - Ccomplete stop\n\n* \"GET IN\" - Hovering very low, for another unit to get in\n\n* \"GET OUT\" - Hovering low, for another unit to get out\n\n* \"NONE\" - Cancel a landing, **since Arma 2**\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_cobraOne land \"LAND\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/land",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setcustomaimcoef": {
        "name": "setCustomAimCoef",
        "description": "Set custom aim precision coefficient for weapon sway",
        "syntaxArray": [
            {
                "Syntax": "unit **setCustomAimCoef** coef",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ncoef: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setCustomAimCoef 1;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCustomAimCoef",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "sizeof": {
        "name": "sizeOf",
        "description": "Returns the diameter of bounding sphere of the object of given classname in meters. Size returned is usually bigger than the biggest size of the object along any of the axes. For example if object is 10 x 4 x 5 the sizeOf value returned expected to be around 10. If you need to estimate the size of the object more precisely, use [boundingBox](https://community.bistudio.com/wiki/boundingBox) or [boundingBoxReal](https://community.bistudio.com/wiki/boundingBoxReal).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**sizeOf** classname",
                "Params": "classname: [String](https://community.bistudio.com/wiki/String) - object classname\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_dimension = sizeOf \"M1Abrams\"; //returns 10.7833\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sizeOf",
        "modifiers": []
    },
    "terrainintersectatasl": {
        "name": "terrainIntersectAtASL",
        "description": "Checks for intersection of terrain between two ASL positions. Same as [terrainIntersectASL](https://community.bistudio.com/wiki/terrainIntersectASL), only returns intersect position instead of [Boolean](https://community.bistudio.com/wiki/Boolean)",
        "syntaxArray": [
            {
                "Syntax": "**terrainIntersectAtASL** [pos1, pos2]",
                "Params": "[pos1, pos2]: [Array](https://community.bistudio.com/wiki/Array)\n\npos1: [Array](https://community.bistudio.com/wiki/Array) - start position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\npos2: [Array](https://community.bistudio.com/wiki/Array) - end position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - intersect position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\n_posASL = terrainIntersectAtASL [eyePos player, getPosASL chopper];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/terrainIntersectAtASL",
        "modifiers": []
    },
    "getusermfdtext": {
        "name": "getUserMFDText",
        "description": "Returns array of user text variables used in MFD.",
        "syntaxArray": [
            {
                "Syntax": "getUserMFDText vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ngetUserMFDText _vehicle;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getUserMFDText",
        "modifiers": []
    },
    "removemagazineglobal": {
        "name": "removeMagazineGlobal",
        "description": "Removes the magazine from the unit.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeMagazineGlobal** magazineName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMagazineGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "waypointscript": {
        "name": "waypointScript",
        "description": "Gets the waypoint script.",
        "syntaxArray": [
            {
                "Syntax": "**waypointScript** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointScript [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointScript",
        "modifiers": []
    },
    "addweaponturret": {
        "name": "addWeaponTurret",
        "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.",
        "syntaxArray": [
            {
                "Syntax": "vehicle addWeaponTurret [weaponName, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[weaponName, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tank addWeaponTurret [\"LMG_M200\", [0,0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "removeprimaryweaponitem": {
        "name": "removePrimaryWeaponItem",
        "description": "Removes given weapon item, including magazine, from the [primaryWeapon](https://community.bistudio.com/wiki/primaryWeapon).",
        "syntaxArray": [
            {
                "Syntax": "unit **removePrimaryWeaponItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removePrimaryWeaponItem \"acc_flashlight\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removePrimaryWeaponItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "tvtooltip": {
        "name": "tvTooltip",
        "description": "Gets the tooltip text associated with the specified tree view path.",
        "syntaxArray": [
            {
                "Syntax": "tvTooltip [idc, path]",
                "Params": "[idc, path]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) - IDC of the tree view control.\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing path numbers.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Tooltip text"
            },
            {
                "Syntax": "ctrl tvTooltip path",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing path numbers.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Tooltip text"
            }
        ],
        "examples": [
            "\n```sqf\n_text = tvTooltip [101, [0,2]];\n```\n",
            "\n```sqf\n_text = _treeCtrl tvTooltip [0,2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvTooltip",
        "modifiers": []
    },
    "ctrlfade": {
        "name": "ctrlFade",
        "description": "Returns the current fade factor of control.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **ctrlFade** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "_scale = ctrlFade _control"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlFade",
        "modifiers": []
    },
    "lookat": {
        "name": "lookAt",
        "description": "Control what the unit(s) is/are looking at (target or [Position](https://community.bistudio.com/wiki/Position)). If target is used, it will get revealed fully.",
        "syntaxArray": [
            {
                "Syntax": "unit(s) **lookAt** position",
                "Params": "unit(s): [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _someSoldier lookAt _otherSoldier \n```\n",
            "\n```sqf\n [_someSoldier, _otherSoldier] lookAt markerPos \"markerOne\" \n```\n",
            "\n```sqf\nhint \"R U N !\";\nBFG = \"B_AAA_System_01_F\" createVehicle position player;\ncreateVehicleCrew BFG;\nt = time + 10;\nonEachFrame\n{\n\tBFG lookAt (unitAimPosition player vectorAdd (velocity player vectorMultiply 0.2));\n\tif (time > t && alive player) then\n\t{\n\t\t[BFG,\"weapon_Cannon_Phalanx\",[0]] call BIS_fnc_fire;\n\t};\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lookAt",
        "modifiers": []
    },
    "ropes": {
        "name": "ropes",
        "description": "Returns all ropes attached to a ropes owner transport in an [Array](https://community.bistudio.com/wiki/Array), otherwise an empty array [] is returned.",
        "syntaxArray": [
            {
                "Syntax": "ropes ropesOwner",
                "Params": "ropesOwner: [Object](https://community.bistudio.com/wiki/Object) - a transport from which the ropes originate\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of the actual rope objects"
            }
        ],
        "examples": [
            "\n```sqf\nhint str (ropes vehicle player);\n```\n",
            "\n```sqf\n_rope1 = (ropes heli1) select 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropes",
        "modifiers": []
    },
    "countside": {
        "name": "countSide",
        "description": "Returns how many units in the given array belong to given side.",
        "syntaxArray": [
            {
                "Syntax": "side **countSide** array",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\narray: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) and/or [Groups](https://community.bistudio.com/wiki/Group)\n> \n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_num = west countSide list _triggerOne;\n```\n",
            "\n```sqf\n_numCivPlayable = civilian countSide playableUnits;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/countSide",
        "modifiers": [
            "Global argument"
        ]
    },
    "currenttask": {
        "name": "currentTask",
        "description": "Return current task of given person.",
        "syntaxArray": [
            {
                "Syntax": "**currentTask** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Task](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "\n```sqf\n_currTask = currentTask player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentTask",
        "modifiers": []
    },
    "configsourceaddonlist": {
        "name": "configSourceAddonList",
        "description": "Returns an array of addons ([CfgPatches](https://community.bistudio.com/wiki/CfgPatches)) in which the given config class is defined.",
        "syntaxArray": [
            {
                "Syntax": "**configSourceAddonList** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_addons = configSourceAddonList (configFile >> \"CfgVehicles\" >> \"Man\");\nhint str _addons; // [\"A3_Data_F\",\"A3_Characters_F\",\"A3_Data_F_Curator\",\"A3_Air_F_Heli\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configSourceAddonList",
        "modifiers": []
    },
    "flaganimationphase": {
        "name": "flagAnimationPhase",
        "description": "Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole. The result is local to the PC on which command is executed",
        "syntaxArray": [
            {
                "Syntax": "**flagAnimationPhase** flag",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object) - flag pole of the type \"FlagCarrier\"\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - 0...1"
            }
        ],
        "examples": [
            "\n```sqf\nflagAnimationPhase _flag1; //0.5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flagAnimationPhase",
        "modifiers": [
            "Global argument"
        ]
    },
    "getcameraviewdirection": {
        "name": "getCameraViewDirection",
        "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from [eyePos](https://community.bistudio.com/wiki/eyePos) unit, for human player the origin should be taken from player camera position [positionCameraToWorld](https://community.bistudio.com/wiki/positionCameraToWorld) [0,0,0]",
        "syntaxArray": [
            {
                "Syntax": "**getCameraViewDirection** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - 3D Vector"
            }
        ],
        "examples": [
            "Draw AI eye direction (green), weapon direction (red) and camera direction (blue) in 3D: \n```sqf\nbob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"];\nbob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"];\nonEachFrame\n{\n\t_beg = ASLToAGL eyePos bob;\n\t_endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100));\n\tdrawLine3D [ _beg, _endE, [0,1,0,1]];\n\t_endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endW, [1,0,0,1]];\n\t_endV = (_beg vectorAdd (getCameraViewDirection bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endV, [0,0,1,1]];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCameraViewDirection",
        "modifiers": [
            "Global argument"
        ]
    },
    "edit3denmissionattributes": {
        "name": "edit3DENMissionAttributes",
        "description": "Open a window with [scenario attribute](https://community.bistudio.com/wiki/Eden_Editor:_Scenario_Atttributes) in given section.",
        "syntaxArray": [
            {
                "Syntax": "**edit3DENMissionAttributes** section",
                "Params": "section: [String](https://community.bistudio.com/wiki/String) - attribute section\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nedit3DENMissionAttributes \"Multiplayer\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/edit3DENMissionAttributes",
        "modifiers": []
    },
    "camcommit": {
        "name": "camCommit",
        "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. For camPrepareXXX commands use [camCommitPrepared](https://community.bistudio.com/wiki/camCommitPrepared).",
        "syntaxArray": [
            {
                "Syntax": "camera **camCommit** time",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\ntime: [Number](https://community.bistudio.com/wiki/Number) - time in seconds during which the changes shall be done\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "**[SQS](https://community.bistudio.com/wiki/SQS_Syntax)**\n```sqf\n; create a camera object\n_cam = \"camera\" camCreate [5600,4800,10]\n_cam camSetTarget player\n_cam cameraEffect [\"internal\", \"BACK\"]\n_cam camCommit 0\n\n; smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [5680,4720,20]\n_cam camCommit 6\n@camCommitted _cam\n\n; proceed\n```\n",
            "**[SQF](https://community.bistudio.com/wiki/SQF_Syntax)**\n```sqf\nprivate \"_cam\";\n\ncomment \"create a camera object\";\n_cam = \"camera\" camCreate [position player select 0, position player select 1, 2];\n_cam camSetTarget player;\n_cam cameraEffect [\"internal\", \"BACK\"];\n_cam camCommit 0;\n\ncomment \"smoothly move the camera to its new position in 6 seconds\";\n_cam camSetPos [position player select 0, (position player select 1) + 10, 20];\n_cam camCommit 6;\nwaitUntil { camCommitted _cam; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camCommit",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "enabledebriefingstats": {
        "name": "enableDebriefingStats",
        "description": "Enable debriefing score table.",
        "syntaxArray": [
            {
                "Syntax": "enableDebriefingStats [left, top, width, height]",
                "Params": "left: [Number](https://community.bistudio.com/wiki/Number)\n\ntop: [Number](https://community.bistudio.com/wiki/Number)\n\nwidth: [Number](https://community.bistudio.com/wiki/Number)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableDebriefingStats [0.1, 0.1, 0.8, 0.8];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableDebriefingStats",
        "modifiers": []
    },
    "configname": {
        "name": "configName",
        "description": "Returns name of config entry.",
        "syntaxArray": [
            {
                "Syntax": "[String](https://community.bistudio.com/wiki/String) = **configName** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = configName (configFile >> \"CfgVehicles\");\n```\n\nResult is \"CfgVehicles\""
        ],
        "Url": "https://community.bistudio.com/wiki/configName",
        "modifiers": []
    },
    "triggerattachedvehicle": {
        "name": "triggerAttachedVehicle",
        "description": "Returns vehicle attached to the trigger (for example using [triggerAttachVehicle](https://community.bistudio.com/wiki/triggerAttachVehicle)).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**triggerAttachedVehicle** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nreturn = triggerAttachedVehicle triggerName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerAttachedVehicle",
        "modifiers": [
            "Global argument"
        ]
    },
    "lockinventory": {
        "name": "lockInventory",
        "description": "Lock or unlock a vehicle's inventory access. This command can also lock backpack a unit is wearing to prevent access by a third party. If you set it [true](https://community.bistudio.com/wiki/true) (locked), the inventory won't be accessed via hotkey or action menu.",
        "syntaxArray": [
            {
                "Syntax": "vehicle lockInventory lock",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nlock: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player lockInventory true;\n```\n",
            "\n```sqf\nbackpackContainer player lockInventory true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockInventory",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setunitability": {
        "name": "setUnitAbility",
        "description": "Sets skill of given unit. Unlike [setSkill](https://community.bistudio.com/wiki/setSkill), setUnitAbility can set values > 1. Even though the [skill](https://community.bistudio.com/wiki/skill) command will correctly return set value, the actual unit ability will be capped to max available.",
        "syntaxArray": [
            {
                "Syntax": "unit setUnitAbility value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit setUnitAbility 1;\n```\n",
            "\n```sqf\nbob setUnitAbility -log 0;\nhint str skill bob; //1.#INF\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitAbility",
        "modifiers": []
    },
    "allgroups": {
        "name": "allGroups",
        "description": "Return a list of all groups created on the following sides [east](https://community.bistudio.com/wiki/east), [west](https://community.bistudio.com/wiki/west), [resistance](https://community.bistudio.com/wiki/resistance)/[independent](https://community.bistudio.com/wiki/independent) and [civilian](https://community.bistudio.com/wiki/civilian) only. Does not contain groups of [sideLogic](https://community.bistudio.com/wiki/sideLogic).",
        "syntaxArray": [
            {
                "Syntax": "**allGroups**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n{(leader _x) sideChat \"Go ! Go ! Go !\"} forEach allGroups;\n```\n",
            "All groups with players: \n```sqf\nprivate _allGroupsWithPlayers = [];\n{_allGroupsWithPlayers pushBackUnique group _x} forEach allPlayers;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allGroups",
        "modifiers": []
    },
    "addheadgear": {
        "name": "addHeadgear",
        "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.",
        "syntaxArray": [
            {
                "Syntax": "unit **addHeadgear** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addHeadgear \"H_HelmetB\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addHeadgear",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "dofollow": {
        "name": "doFollow",
        "description": "Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). Also is used to resume unit formation after [doStop](https://community.bistudio.com/wiki/doStop), just doFollow leader even if it is the leader himself you want to resume (see Example 2).",
        "syntaxArray": [
            {
                "Syntax": "unitName **doFollow** unitName2",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nunitName2: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 doFollow _soldier2\n```\n",
            "\n```sqf\nunits _group doFollow leader _group;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doFollow",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setunitloadout": {
        "name": "setUnitLoadout",
        "description": "Creates a loadout from given inventory structure and applies it to a unit. When [String](https://community.bistudio.com/wiki/String) for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If [Config](https://community.bistudio.com/wiki/Config) is given, it will search given config (including [ mission config](https://community.bistudio.com/wiki/missionConfigFile)) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\n",
        "syntaxArray": [
            {
                "Syntax": "unit setUnitLoadout loadout",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nloadout: [Array](https://community.bistudio.com/wiki/Array) - [Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit setUnitLoadout [loadout, fullMagazines]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nloadout: [Array](https://community.bistudio.com/wiki/Array) - [Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)\n\nfullMagazines: [Boolean](https://community.bistudio.com/wiki/Boolean) - Partially emptied magazines will be refilled when the loadout is applied\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit setUnitLoadout name",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String) - Class name (see description)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit setUnitLoadout config",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config) - Config class (see description)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer_2 setUnitLoadout (getUnitLoadout player_1); // Copies loadout from player_1 and applies it to player_2 \n```\n",
            "\n```sqf\nplayer_2 setUnitLoadout [getUnitLoadout player_1, true]; // Copies loadout from player_1 and applies it to player_2 while topping up all magazines\n```\n",
            "\n```sqf\n_unit setUnitLoadout \"B_Soldier_F\";\n```\n",
            "\n```sqf\n_unit setUnitLoadout (configFile >> \"CfgVehicles\" >> \"B_Soldier_F\");\n```\n",
            "\n```sqf\n_unit setUnitLoadout (missionConfigFile >> \"MyLoadout\");\n```\n",
            "Strip unit of everything *Since Arma 3 v1.94*\n```sqf\n_unit setUnitLoadout (configFile >> \"EmptyLoadout\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitLoadout",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "rating": {
        "name": "rating",
        "description": "Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see [Rating Values](https://community.bistudio.com/wiki/ArmA:_Rating_Values)). Can be changed via [addRating](https://community.bistudio.com/wiki/addRating) by the mission designer. \n\nThe rating of the player is displayed as the \"score\" at the end of the mission. Via [Description.ext](https://community.bistudio.com/wiki/Description.ext) one can define how many points it takes to get a perfect score, as well as the number of stars.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **rating** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_score = rating player \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rating",
        "modifiers": [
            "Global argument"
        ]
    },
    "count": {
        "name": "count",
        "description": "Can be used to count:\n\n* The number of elements in array (Returns the already internally known array size)\n\n* The number of elements in array with condition\n\n* The number of sub-entries in a config entry\n\n* The number of characters in an ANSI string\n\n* If Unicode support is desired, see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode) *Since Arma 3 v1.28*",
        "syntaxArray": [
            {
                "Syntax": "count array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array), [String](https://community.bistudio.com/wiki/String), [Config](https://community.bistudio.com/wiki/Config) or [HashMap](https://community.bistudio.com/wiki/HashMap)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "condition count array",
                "Params": "condition: [Code](https://community.bistudio.com/wiki/Code) - Condition that must return [true](https://community.bistudio.com/wiki/true) for the tested element to be counted. The variable [_x](https://community.bistudio.com/wiki/Magic_Variables#x) will contain the currently tested element\n> \n\narray: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ncount [0, 0, 1, 2]; // returns 4\ncount units group player; // returns number of units in player group\n```\n",
            "\n```sqf\nprivate _cnt = { _x == 4 } count [1, 9, 8, 3, 4, 4, 4, 5, 6]; // returns 3\n_cnt = { alive _x } count allUnits; // returns the number of alive units\n```\n",
            "\n```sqf\nprivate _cnt = count (configFile >> \"CfgVehicles\");\n```\n",
            "\n```sqf\nhint str count \"japa is the man!\"; // 16\n```\n",
            "\n```sqf\nif (count _myHashMap < 1) then { hint \"empty hashmap!\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/count",
        "modifiers": []
    },
    "sethit": {
        "name": "setHit",
        "description": "Set damage on a part of an object.\n> ",
        "syntaxArray": [
            {
                "Syntax": "object setHit [part, damage, useEffects]",
                "Params": "[part, damage, useEffects]: [Array](https://community.bistudio.com/wiki/Array)\n\nobject: [Object](https://community.bistudio.com/wiki/Object) - [local](https://community.bistudio.com/wiki/local) object\n\npart: [String](https://community.bistudio.com/wiki/String) - Name of the part ([selection](https://community.bistudio.com/wiki/Named_Selection) name)\n\ndamage: [Number](https://community.bistudio.com/wiki/Number) - Damage value ranging 0..1, 0 being fully functional, 1 being destroyed\n\n[](https://community.bistudio.com/wiki/Category:Arma_3)[1.68](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.68) useEffects: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [false](https://community.bistudio.com/wiki/false) to skip destruction effects\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setHit [\"motor\", 1];\n```\n",
            "\n```sqf\nvehicle player setHit [\"mala vrtule\", 0.95];\n```\n",
            "\n```sqf\nif (local _heli) then {\n\t_heli setHit [\"velka vrtule\", 0];\n} else {\n\thint (\"Vehicle \" + str _heli + \" must be local to this machine to do that!\");\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setHit",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "ctrlsetfonth6": {
        "name": "ctrlSetFontH6",
        "description": "Sets H6 font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH6** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH6 \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH6",
        "modifiers": []
    },
    "findcover": {
        "name": "findCover",
        "description": "Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional.\n> ",
        "syntaxArray": [
            {
                "Syntax": "object **findCover** [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\nhidePosition: [Array](https://community.bistudio.com/wiki/Array) - format [getHideFrom](https://community.bistudio.com/wiki/getHideFrom). Position of that which the unit should hide from\n\nmaxDist: [Number](https://community.bistudio.com/wiki/Number)\n\nminDist: [Number](https://community.bistudio.com/wiki/Number) (Optional)\n\nvisibilityPosition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position) (Optional) used to select cover that unit can see in that direction from\n\nignoreObject: [Object](https://community.bistudio.com/wiki/Object) (Optional) Ignore this object in visibility check\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - always [objNull](https://community.bistudio.com/wiki/objNull)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/findCover",
        "modifiers": []
    },
    "hasinterface": {
        "name": "hasInterface",
        "description": "Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.",
        "syntaxArray": [
            {
                "Syntax": "hasInterface",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isHC = !(hasInterface || isDedicated);\n```\n",
            "\n```sqf\n_isHC = !hasInterface && !isDedicated;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hasInterface",
        "modifiers": []
    },
    "addmagazines": {
        "name": "addMagazines",
        "description": "Adds multiple magazines to the unit. For cargo containers use [addMagazineCargoGlobal](https://community.bistudio.com/wiki/addMagazineCargoGlobal) command.",
        "syntaxArray": [
            {
                "Syntax": "unit **addMagazines** [magazineName, count]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - a soldier\n\n[magazineName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - Number of magazines.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addMagazines [\"30Rnd_65x39_caseless_mag\", 3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazines",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "halt": {
        "name": "halt",
        "description": "This command was meant to break the script into debugger, however currently **it does not do anything** except displaying and logging the following error: Error Debugger breakpoint hit.",
        "syntaxArray": [
            {
                "Syntax": "**halt**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Always returns [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\nif (_displayAnError) then {halt};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/halt",
        "modifiers": []
    },
    "lnbsettooltip": {
        "name": "lnbSetTooltip",
        "description": "Sets tooltip on the item with the given row and column of [CT_LISTNBOX](https://community.bistudio.com/wiki/CT_LISTNBOX).\n> ",
        "syntaxArray": [
            {
                "Syntax": "lnbSetTooltip [idc, [row, column], text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control's IDC\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Row where the tooltip should be shown\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Column where tooltip should be shown. By default it is set for every column, see description\n\ntext: [String](https://community.bistudio.com/wiki/String) - Tooltip text\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetTooltip [[row, column], text]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control) - Control\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Row where the tooltip should be shown\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Column where tooltip should be shown. By default it is set for every column, see description\n\ntext: [String](https://community.bistudio.com/wiki/String) - Tooltip text\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetTooltip [1234, [1,0], \"tip\"];\n```\n",
            "\n```sqf\n_ctrl lnbSetTooltip [[3,0], \"top\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetTooltip",
        "modifiers": []
    },
    "lookatpos": {
        "name": "lookAtPos",
        "description": "Point the camera and center the map on the position.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **lookAtPos** position",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nposition: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 12 lookAtPos [0,0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lookAtPos",
        "modifiers": []
    },
    "loadmagazine": {
        "name": "loadMagazine",
        "description": "Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime.\nThe turret has to be manned. One can also change the magazine if its respective weapon is not selected.",
        "syntaxArray": [
            {
                "Syntax": "transport loadMagazine [turretPath, weaponName, magazineName]",
                "Params": "transport: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player loadMagazine [[0], \"m256\", \"20Rnd_120mmHE_M1A2\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadMagazine",
        "modifiers": []
    },
    "countfriendly": {
        "name": "countFriendly",
        "description": "Count how many units in the array are considered friendly to the given unit.",
        "syntaxArray": [
            {
                "Syntax": "unitName **countFriendly** arrayName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\narrayName: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_num = player countFriendly list _triggerOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/countFriendly",
        "modifiers": [
            "Global argument"
        ]
    },
    "attachedobjects": {
        "name": "attachedObjects",
        "description": "Returns a list of objects attached to the given object.",
        "syntaxArray": [
            {
                "Syntax": "**attachedObjects** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object) - given object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) attached to the given object"
            }
        ],
        "examples": [
            "\n```sqf\n{\n  detach _x;\n} forEach attachedObjects player;\n```\n",
            "\n```sqf\nif (count attachedObjects player == 0) then {\n  hint \"There are no objects attached to player\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/attachedObjects",
        "modifiers": []
    },
    "updateobjecttree": {
        "name": "updateObjectTree",
        "description": "Update the editor object tree.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**updateObjectTree** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nupdateObjectTree _ctrlMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/updateObjectTree",
        "modifiers": []
    },
    "creategeardialog": {
        "name": "createGearDialog",
        "description": "Opens gear dialog for given unit. Alternatively use [action](https://community.bistudio.com/wiki/action) command:\n\n```sqf\nplayer action [\"Gear\", player];\n```\n",
        "syntaxArray": [
            {
                "Syntax": "**createGearDialog** [unit, resource]",
                "Params": "[unit, resource]: [Array](https://community.bistudio.com/wiki/Array) -\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\nresource (Optional): [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncreateGearDialog [player];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createGearDialog",
        "modifiers": []
    },
    "formationdirection": {
        "name": "formationDirection",
        "description": "Return the direction in degrees of the 'unit' watching in formation.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **formationDirection** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "_degrees = FormationDirection _unit"
        ],
        "Url": "https://community.bistudio.com/wiki/formationDirection",
        "modifiers": [
            "Local argument"
        ]
    },
    "abs": {
        "name": "abs",
        "description": "Returns absolute (positive) value of a real number.",
        "syntaxArray": [
            {
                "Syntax": "abs x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_n = abs -3; // Returns 3\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/abs",
        "modifiers": []
    },
    "assignedtarget": {
        "name": "assignedTarget",
        "description": "Returns the target assigned to an unit or the vehicle's [effectiveCommander](https://community.bistudio.com/wiki/effectiveCommander). The target can be assigned by the group/vehicle/formation leader (as player via [quick command menu](https://community.bistudio.com/wiki/Arma_3_Field_Manual_-_Commanding#Target_Assignment) or [\"target\" complex command menu](https://community.bistudio.com/wiki/Operation_Flashpoint:_Commander_Guide#TARGET_.282.29)).\nTo unassign the target use [doWatch](https://community.bistudio.com/wiki/doWatch) [objNull](https://community.bistudio.com/wiki/objNull) or [commandWatch](https://community.bistudio.com/wiki/commandWatch) [objNull](https://community.bistudio.com/wiki/objNull) or as player and group leader order \"no target\" in the [\"target\" complex command menu](https://community.bistudio.com/wiki/Operation_Flashpoint:_Commander_Guide#TARGET_.282.29).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**assignedTarget** vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_target = assignedTarget _T72\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedTarget",
        "modifiers": [
            "Local argument"
        ]
    },
    "joinas": {
        "name": "joinAs",
        "description": "Joins the unit to the given group, if position id is available, this one is used.",
        "syntaxArray": [
            {
                "Syntax": "unit **joinAs** [group, id]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[group, id]: [Array](https://community.bistudio.com/wiki/Array)\n\ngroup: [Group](https://community.bistudio.com/wiki/Group)\n\nid: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer joinAs [_group, 4];\n```\n",
            "To get the position id: \n```sqf\ngetUnitPositionId = {\n\tprivate [\"_vvn\", \"_str\"];\n\t_vvn = vehicleVarName _this;\n\t_this setVehicleVarName \"\";\n\t_str = str _this;\n\t_this setVehicleVarName _vvn;\n\tparseNumber (_str select [(_str find \":\") + 1])\n};\nplayer joinAs [createGroup west, 5];\n_id = player call getUnitPositionId;\nhint str _id; //5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/joinAs",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "istouchingground": {
        "name": "isTouchingGround",
        "description": "Returns true if object is touching the ground.",
        "syntaxArray": [
            {
                "Syntax": "**isTouchingGround** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isTouchingGround player) then {hint \"Terraferma!\";};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isTouchingGround",
        "modifiers": [
            "Global argument"
        ]
    },
    "islaseron": {
        "name": "isLaserOn",
        "description": "Returns true if the vehicle has its laser turned on. Not to be confused with [isIRLaserOn](https://community.bistudio.com/wiki/isIRLaserOn) which is for units",
        "syntaxArray": [
            {
                "Syntax": "**isLaserOn** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean): True when laser is on, otherwise false"
            }
        ],
        "examples": [
            "\n```sqf\n_on = isLaserOn _vehicle;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isLaserOn",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "isrealtime": {
        "name": "isRealTime",
        "description": "Returns true if the mission editor is operating in real time mode. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**isRealTime** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isRealTime = isRealTime _map\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isRealTime",
        "modifiers": []
    },
    "isplayer": {
        "name": "isPlayer",
        "description": "Checks if given person is a [player](https://community.bistudio.com/wiki/player). Returns [true](https://community.bistudio.com/wiki/true) for headless clients as well.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**isPlayer** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isPlayer _Soldier1) then {\n    _Soldier1 setDamage 1;\n};\n```\n",
            "\n```sqf\n_playerCount = {isPlayer _x} count playableUnits;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isPlayer",
        "modifiers": [
            "Global argument"
        ]
    },
    "leaderboardrequestrowsfriends": {
        "name": "leaderboardRequestRowsFriends",
        "description": "Requests given leaderboard to download friends rows from the given leaderboard",
        "syntaxArray": [
            {
                "Syntax": "leaderboardRequestRowsFriends  boardName",
                "Params": "boardName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardRequestRowsFriends \"TT01\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardRequestRowsFriends",
        "modifiers": []
    },
    "isuavconnectable": {
        "name": "isUAVConnectable",
        "description": "Returns true if UAV is connectable by AV terminal(s).",
        "syntaxArray": [
            {
                "Syntax": "object isUAVConnectable [uav, checkAllItems]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nuav: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ncheckAllItems: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to check all terminals in unit's inventory, [false](https://community.bistudio.com/wiki/false) to only check assigned terminal.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _canConnect = myUnit isUAVConnectable [myUav, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isUAVConnectable",
        "modifiers": []
    },
    "lbsetpicturerightcolorselected": {
        "name": "lbSetPictureRightColorSelected",
        "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). Color which consists from only zeros means disable this override.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureRightColorSelected** [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureRightColorSelected** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureRightColorSelected [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_ctrl lbSetPictureRightColorSelected [0, [1, 1, 1, 1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureRightColorSelected",
        "modifiers": []
    },
    "lnbcurselrow": {
        "name": "lnbCurSelRow",
        "description": "Returns the index of the selected row id 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbCurSelRow idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "lnbCurSelRow ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbCurSelRow _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbCurSelRow",
        "modifiers": []
    },
    "menushortcut": {
        "name": "menuShortcut",
        "description": "Returns shortcut related to menu entry on given path. Returns the shortcut in form of a bitflag. To get the shortcut text use [menuShortcutText](https://community.bistudio.com/wiki/menuShortcutText) command.",
        "syntaxArray": [
            {
                "Syntax": "menuShortcut [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "control menuShortcut path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuShortcut [0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuShortcut",
        "modifiers": []
    },
    "menudata": {
        "name": "menuData",
        "description": "Returns data stored in menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuData [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control menuData path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n// Create an entry which will return its data once clicked\nprivate _ctrlMenuStrip = findDisplay 313 displayCtrl 120;\nprivate _indexMain = _ctrlMenuStrip menuAdd [[], \"Custom Tools\"];\nprivate _indexData = _ctrlMenuStrip menuAdd [[_indexMain],\"This entry will print its data to system chat when clicked\"];\n_ctrlMenuStrip menuSetData [[_indexMain,_indexData], \"[objNull,'Some String',true]\"];\n_ctrlMenuStrip menuSetAction [[_indexMain,_indexData], \"systemChat (findDisplay 313 displayCtrl 120 menuData (menuHover (findDisplay 313 displayCtrl 120)));\"];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuData",
        "modifiers": []
    },
    "nmenuitems": {
        "name": "nMenuItems",
        "description": "Returns the total number of user-added menu items belonging to the given menu. > ",
        "syntaxArray": [
            {
                "Syntax": "map **nMenuItems** menuName",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\nmenuName: [String](https://community.bistudio.com/wiki/String) - \"file\" or \"view\"\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "map **nMenuItems** index",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/nMenuItems",
        "modifiers": []
    },
    "nextweatherchange": {
        "name": "nextWeatherChange",
        "description": "Return the remaining time (in seconds) over which the current weather change will occur.\n\nWhen a weather change finishes, the game engine will automatically generate a new random weather change over a realistic time period (minimum of 90 minutes).",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **nextWeatherChange**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_seconds = nextWeatherChange;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nextWeatherChange",
        "modifiers": []
    },
    "markerdir": {
        "name": "markerDir",
        "description": "Get marker direction.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **markerDir** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_mPos = markerDir \"markerOne\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerDir",
        "modifiers": [
            "Global argument"
        ]
    },
    "menudelete": {
        "name": "menuDelete",
        "description": "Deletes menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuDelete [idc,path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuDelete path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(findDisplay 313 displayCtrl 120) menuDelete [1]; // Removes second entry from Eden Editor menu strip. Restart Eden Editor to reset the menu.\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuDelete",
        "modifiers": []
    },
    "moveincommander": {
        "name": "moveInCommander",
        "description": "Move soldier into vehicle commander position (Immediate, no animation).",
        "syntaxArray": [
            {
                "Syntax": "unitName **moveInCommander** vehicle",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne moveInCommander _tankOne \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveInCommander",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "showcinemaborder": {
        "name": "showCinemaBorder",
        "description": "Forces drawing of cinema borders when using custom camera [camCreate](https://community.bistudio.com/wiki/camCreate). This is normally used in cutscenes to indicate player has no control.",
        "syntaxArray": [
            {
                "Syntax": "**showCinemaBorder** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowCinemaBorder false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showCinemaBorder",
        "modifiers": []
    },
    "shownpad": {
        "name": "shownPad",
        "description": "Checks if client has Notepad enabled.",
        "syntaxArray": [
            {
                "Syntax": "**shownPad**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (shownPad) then {hint \"You have Notepad enabled.\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownPad",
        "modifiers": []
    },
    "splitstring": {
        "name": "splitString",
        "description": "An SQF version of C++ [strtok](https://community.bistudio.comhttp://www.cplusplus.com/reference/cstring/strtok/). Splits given ANSI string *str* into an array of tokens according to given *delimiters*. In addition, if empty string \"\" is used for *delimiters*, *str* is split by each character. If Unicode support is desired, see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode).",
        "syntaxArray": [
            {
                "Syntax": "str **splitString** delimiters",
                "Params": "str: [String](https://community.bistudio.com/wiki/String) - A string to split\n\ndelimiters: [String](https://community.bistudio.com/wiki/String) - one or more characters, each used as a separate delimiter.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"]\n_str joinString \" \"; // \"This is a sample string\"\n```\n",
            "\n```sqf\n\"\\A3\\ui_f\\data\\map\\vehicleicons\\iconLogic_ca.paa\" splitString \"\\.\"; \n// [\"A3\",\"ui_f\",\"data\",\"map\",\"vehicleicons\",\"iconLogic_ca\",\"paa\"]\n```\n",
            "\n```sqf\n\"1:2:3\" splitString \":\"; // [\"1\",\"2\",\"3\"]\n```\n",
            "\n```sqf\n\"Japa is the best!\" splitString \"\" joinString \" \"; // \"J a p a   i s   t h e   b e s t !\"\n```\n",
            "\n```sqf\n_cmd = currentMagazineDetail player; //\"9mm 16Rnd Mag(13/16)[id/cr:10000011/0]\"\n_cmd splitString \"([ ]/:)\"; //[\"9mm\",\"16Rnd\",\"Mag\",\"13\",\"16\",\"id\",\"cr\",\"10000011\",\"0\"]\n```\n",
            "Remove all \\r\\n from file:\n```sqf\nloadFile \"somefile.txt\" splitString toString [13,10] joinString \" \"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/splitString",
        "modifiers": []
    },
    "size": {
        "name": "size",
        "description": "Returns a location's size.",
        "syntaxArray": [
            {
                "Syntax": "**size** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) = in format [x,y] in meters"
            }
        ],
        "examples": [
            "\n```sqf\n_locSize = size myLocation\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/size",
        "modifiers": []
    },
    "showcommandingmenu": {
        "name": "showCommandingMenu",
        "description": "Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.\nIf commanding menu has \"expression\" set up, the expression will receive the following arguments when user activated the menu item:\n\n* Local variable  _target: [Object](https://community.bistudio.com/wiki/Object) - Target under the cursor. This works in both 3D and 2D (when cursor is over the unit icon on the map).\n\n* Local variable _pos: [Array](https://community.bistudio.com/wiki/Array) - Cursor position.\n\n* Local variable _is3D: [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) if cursor is over the map, otherwise [true](https://community.bistudio.com/wiki/true).",
        "syntaxArray": [
            {
                "Syntax": "**showCommandingMenu** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) - Class name or user menu name (with \"#USER:\" prefix and \"_#\" page number suffix, where # is the page number starting with 0).\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowCommandingMenu \"\";\n```\n",
            "\n```sqf\nshowCommandingMenu \"MyClassName\";\n```\n",
            "\n```sqf\nshowCommandingMenu \"#USER:Tag_Menu_myMenu_0\";\n```\n",
            "\n```sqf\nshowCommandingMenu \"RscMainMenu\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showCommandingMenu",
        "modifiers": []
    },
    "findemptyposition": {
        "name": "findEmptyPosition",
        "description": "Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [radius] from the [center] and looks as far away as [radius + maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned. This command ignores moving objects present within search area. The search area could be preloaded with [findEmptyPositionReady](https://community.bistudio.com/wiki/findEmptyPositionReady) command. See also: [BIS_fnc_findSafePos](https://community.bistudio.com/wiki/BIS_fnc_findSafePos).",
        "syntaxArray": [
            {
                "Syntax": "center **findEmptyPosition** [radius, maxDistance, vehicleType]",
                "Params": "center: [Array](https://community.bistudio.com/wiki/Array) - Search area center position in format [x,y] or [x,y,z] in which case z is ignored. Accepts [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n[radius, maxDistance, vehicleType]: [Array](https://community.bistudio.com/wiki/Array)\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - Start searching no closer than radius from the center\n\nmaxDistance: [Number](https://community.bistudio.com/wiki/Number) - Stop searching no further than radius + maxDistance from the center\n\nvehicleType: (optional): [String](https://community.bistudio.com/wiki/String) - Class name of a vehicle to accommodate\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - A suitable empty position in format [Position3D](https://community.bistudio.com/wiki/Position3D) or [] if not found"
            }
        ],
        "examples": [
            "\n```sqf\n_position = (getPosATL player) findEmptyPosition [0,100];\n```\n",
            "\n```sqf\n_position = _center findEmptyPosition [10,100,\"UH60M_EP1\"];\n```\n",
            "Check if exact position is empty:\n\n```sqf\n_position = _center findEmptyPosition [0,0,\"B_Boat_Armed_01_minigun_F\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/findEmptyPosition",
        "modifiers": []
    },
    "isvehiclesensorenabled": {
        "name": "isVehicleSensorEnabled",
        "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled",
        "syntaxArray": [
            {
                "Syntax": "vehicle **isVehicleSensorEnabled** componentName",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\ncomponentName : [String](https://community.bistudio.com/wiki/String) - The component's name (can either be it is \"real name\" or it is className)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n vehicle player isVehicleSensorEnabled  \"PassiveRadarSensorComponent\"; // [ [\"PassiveRadarSensorComponent\",true] ] \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isVehicleSensorEnabled",
        "modifiers": []
    },
    "speed": {
        "name": "speed",
        "description": "Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:3.6 * ([velocityModelSpace](https://community.bistudio.com/wiki/velocityModelSpace) _obj [select](https://community.bistudio.com/wiki/select) 1)",
        "syntaxArray": [
            {
                "Syntax": "**speed** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nif (speed _truck1 >= 100) then {hint \"You're going too fast!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/speed",
        "modifiers": []
    },
    "lbsetpicturecolordisabled": {
        "name": "lbSetPictureColorDisabled",
        "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). Color which consists from only zeros means disable this override.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureColorDisabled** [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureColorDisabled** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];\n```\n",
            "\n```sqf\n_ctrl lbSetPictureColorDisabled [0, [1, 1, 1, 0.25]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureColorDisabled",
        "modifiers": []
    },
    "isstaminaenabled": {
        "name": "isStaminaEnabled",
        "description": "Check if stamina depletion is enabled.",
        "syntaxArray": [
            {
                "Syntax": "**isStaminaEnabled** unit;",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nisStaminaEnabled player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isStaminaEnabled",
        "modifiers": [
            "Global argument"
        ]
    },
    "lbsortbyvalue": {
        "name": "lbSortByValue",
        "description": "Sorts the ListBox entries by [lbValue](https://community.bistudio.com/wiki/lbValue). The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.",
        "syntaxArray": [
            {
                "Syntax": "**lbSortByValue** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "**lbSortByValue** idc *Since Arma 3 v1.67*",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSortByValue _control;\n```\n",
            "\n```sqf\nlbSortByValue 101;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSortByValue",
        "modifiers": []
    },
    "lbsetpicturecolor": {
        "name": "lbSetPictureColor",
        "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). Color which consists from only zeros means disable this override.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureColor** [idc, index, color]",
                "Params": "[idc, index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureColor** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureColor [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_ctrl lbSetPictureColor [0, [1, 1, 1, 1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureColor",
        "modifiers": []
    },
    "lbtext": {
        "name": "lbText",
        "description": "Returns the shown text of the item with the given index of the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO).",
        "syntaxArray": [
            {
                "Syntax": "lbText [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control lbText index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_text = lbText [101, 0];\n```\n",
            "\n```sqf\n_text = _control lbText 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbText",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "iswalking": {
        "name": "isWalking",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if walk is **toggled** (default W+S in Arma 3).\n> ",
        "syntaxArray": [
            {
                "Syntax": "isWalking unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = isWalking player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isWalking",
        "modifiers": [
            "Global argument"
        ]
    },
    "localize": {
        "name": "localize",
        "description": "Used to internationalize text messages. A string is returned from [Stringtable.csv](https://community.bistudio.com/wiki/Stringtable.csv) (or [Stringtable.xml](https://community.bistudio.com/wiki/Stringtable.xml)) which corresponds to the *stringName*.",
        "syntaxArray": [
            {
                "Syntax": "localize stringName",
                "Params": "stringName: [String](https://community.bistudio.com/wiki/String) - String which leads to localisation. Casing does not matter. Since Arma 3 v2.04 a string starting with \"$\" is supported as well\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) -  Text found in corresponding entry in stringtable file. If the key could not be found an empty string \"\" is returned and an entry is added to .rpt file, for example String STR_DN_SNAKE not found"
            }
        ],
        "examples": [
            "\n```sqf\nhint localize \"STR_WEST\"; // Returns \"BLUFOR\"\n```\n",
            "\n```sqf\nhint format [\"Go %1\", localize \"STR_Q_NORTH\"]; // Returns \"Go North\"\n```\n",
            "\n```sqf\nhint format \n[\n  localize \"STR_ACTION_DROP_WEAPON\", // \"STR_ACTION_DROP_WEAPON\" contains \"Drop %1\"\n  localize \"STR_SN_RIFLE\" // \"STR_SN_RIFLE\" contains \"Rifle\"\n]; // Returns \"Drop Rifle\"\n```\n",
            "\n```sqf\nlocalize \"$STR_USRACT_ADJUST\"; // Since Arma 3 v2.04, Returns \"Adjust\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/localize",
        "modifiers": []
    },
    "lnbpicture": {
        "name": "lnbPicture",
        "description": "Returns the picture name or path of the item with the given position of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "**lnbPicture** [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Number of [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of Row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of Column\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control **lnbPicture** [row, column]",
                "Params": "Control: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of Row in given Control\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of Column in given Control\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbPicture [200, [1, 1]];\n```\n",
            "\n```sqf\n_control lnbPicture [1, 1]; // \"a3\\ui_f\\data\\gui\\cfg\\ranks\\corporal_gs.paa\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbPicture",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lockwp": {
        "name": "lockWP",
        "description": "Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.",
        "syntaxArray": [
            {
                "Syntax": "groupName **lockWP** lock",
                "Params": "groupName: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nlock: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_groupOne lockWP true;\n```\n",
            "\n```sqf\n_Soldier lockWP true;\n```\n",
            "\n```sqf\n_MyTank lockWP false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockWP",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "menusetshortcut": {
        "name": "menuSetShortcut",
        "description": "Sets shortcut of given menu strip entry.",
        "syntaxArray": [
            {
                "Syntax": "menuSetShortcut [idc, path, shortcut]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nshortcut: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetShortcut [path, shortcut]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nshortcut: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlMenuStrip menuSetShortcut [[0,0],2048 + 0x16]; // ALT + U\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetShortcut",
        "modifiers": []
    },
    "menuclear": {
        "name": "menuClear",
        "description": "Removes all entries from given menu strip.",
        "syntaxArray": [
            {
                "Syntax": "menuClear idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "menuClear control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmenuClear (findDisplay 313 displayCtrl 120); // Removes all entries from Eden Editor. Restart the editor to reset the menu.\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuClear",
        "modifiers": []
    },
    "worldtomodel": {
        "name": "worldToModel",
        "description": "Converts position from world space to object model space.",
        "syntaxArray": [
            {
                "Syntax": "model worldToModel position",
                "Params": "model: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - World position, format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Position relative to model, format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)"
            }
        ],
        "examples": [
            "\n```sqf\n_relPos = myObject worldToModel [0,0,0];\n```\n",
            "\n```sqf\n_relPos = player worldToModel ASLToAGL getPosASL car;\n```\n",
            "\n```sqf\n_relPos = car worldToModel [12000,5000]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/worldToModel",
        "modifiers": []
    },
    "setbrakesrtd": {
        "name": "setBrakesRTD",
        "description": "Enable landing gear wheel brakes for a helicopter.\n\n* value 0: brakes off\n\n* value 1: brakes on\n\n\n* index 1: left wheels\n\n* index 2: right wheels\n\n* index 3: both sides\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD **setBrakesRTD** [value, wheelIndex]",
                "Params": "helicopterRTD: [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - value of the brakes\n\nwheelIndex: [Number](https://community.bistudio.com/wiki/Number) - wheel index\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopterRTD setBrakesRTD [1, 3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setBrakesRTD",
        "modifiers": []
    },
    "setcurrenttask": {
        "name": "setCurrentTask",
        "description": "Set the task as a current task of the person.",
        "syntaxArray": [
            {
                "Syntax": "object **setCurrentTask** task",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - the unit having the task\n\ntask: [Task](https://community.bistudio.com/wiki/Task) - the task you want to select\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setCurrentTask tskKillSpongebob;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCurrentTask",
        "modifiers": []
    },
    "profilename": {
        "name": "profileName",
        "description": "Returns currently chosen user profile name. For Steam profile name see [profileNameSteam](https://community.bistudio.com/wiki/profileNameSteam).",
        "syntaxArray": [
            {
                "Syntax": "**profileName**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_myInGameProfileName = profileName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/profileName",
        "modifiers": []
    },
    "slidersetspeed": {
        "name": "sliderSetSpeed",
        "description": "Sets speed of [CT_SLIDER](https://community.bistudio.com/wiki/CT_SLIDER) or [CT_XSLIDER](https://community.bistudio.com/wiki/CT_XSLIDER) with given idc of topmost user [dialog](https://community.bistudio.com/wiki/dialog). \n\n* Click to arrow - move by line\n\n* Click to scale outside thumb - move by page.",
        "syntaxArray": [
            {
                "Syntax": "**sliderSetSpeed** [idc, line, page]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control's idc\n\nline: [Number](https://community.bistudio.com/wiki/Number) - Value delta to move the slider when clicking on the outer arrows\n\npage: [Number](https://community.bistudio.com/wiki/Number) - Value delta to move the slider when clicking inside the slider bar\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **sliderSetSpeed** [line, page]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nline: [Number](https://community.bistudio.com/wiki/Number) - Value delta to move the slider when clicking on the outer arrows\n\npage: [Number](https://community.bistudio.com/wiki/Number) - Value delta to move the slider when clicking inside the slider bar\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsliderSetSpeed [101, 0.5, 2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sliderSetSpeed",
        "modifiers": []
    },
    "titlersc": {
        "name": "titleRsc",
        "description": "Displays a resource defined in RscTitles. Also see [cutRsc](https://community.bistudio.com/wiki/cutRsc), with these two commands you can show two different resources at once.\n> ",
        "syntaxArray": [
            {
                "Syntax": "titleRsc [text, type, speed, showInMap]",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) - The class name of the resource. (\"Default\" will remove the current resource.)\n\ntype: [String](https://community.bistudio.com/wiki/String) - Can be: \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) Time in seconds to fade in resource\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [|False](https://community.bistudio.com/wiki/false) to hide the text when the map is opened.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntitleRsc [\"BIS\", \"PLAIN\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/titleRsc",
        "modifiers": [
            "Local effect"
        ]
    },
    "setmissiletargetpos": {
        "name": "setMissileTargetPos",
        "description": "Sets a guided munition target position. The munition must have \n```sqf\nmanualControl\n```\n config to use this command. The target position has to be inside configured missile targeting cone for command to work.",
        "syntaxArray": [
            {
                "Syntax": "munition setMissileTargetPos position",
                "Params": "munition: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmissile1 setMissileTargetPos unitAimPosition tank1;\n```\n",
            "\n```sqf\n_missile = createVehicle [\"M_Scalpel_AT\",(player modelToWorld [0,0,100]),[],0,\"CAN_COLLIDE\"];\n_missile setMissileTargetPos (player modelToWorld [0,100,0]);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMissileTargetPos",
        "modifiers": []
    },
    "settargetage": {
        "name": "setTargetAge",
        "description": "Sets how the target is known to the other centers. They behave like the target was seen age seconds ago.\n\nPossible age values are: \"ACTUAL\", \"5 MIN\", \"10 MIN\", \"15 MIN\", \"30 MIN\", \"60 MIN\", \"120 MIN\" or \"UNKNOWN\".",
        "syntaxArray": [
            {
                "Syntax": "object **setTargetAge** age",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nage: [String](https://community.bistudio.com/wiki/String) As above\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setTargetAge \"10 MIN\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTargetAge",
        "modifiers": []
    },
    "getcargoindex": {
        "name": "getCargoIndex",
        "description": "Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **getCargoIndex** unit",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer moveInCargo heli;\nhint str (heli getCargoIndex player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCargoIndex",
        "modifiers": [
            "Global argument"
        ]
    },
    "distance2d": {
        "name": "distance2D",
        "description": "Returns a 2D distance ([distance](https://community.bistudio.com/wiki/distance) projected to X,Y plane) in meters between two [Objects](https://community.bistudio.com/wiki/Object) or two [Positions](https://community.bistudio.com/wiki/Position) or [Object](https://community.bistudio.com/wiki/Object) and [Position](https://community.bistudio.com/wiki/Position).\n\n[](https://community.bistudio.com/wiki/File:distance2D.jpg)",
        "syntaxArray": [
            {
                "Syntax": "param1 **distance2D** param2",
                "Params": "param1: [Object](https://community.bistudio.com/wiki/Object), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\nparam2: [Object](https://community.bistudio.com/wiki/Object), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) -  Distance in meters or 1e10 if distance cannot be calculated"
            }
        ],
        "examples": [
            "\n```sqf\n_meters = player distance2D heli;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/distance2D",
        "modifiers": [
            "Global argument"
        ]
    },
    "airdensitycurvertd": {
        "name": "airDensityCurveRTD",
        "description": "Returns array with air density data.> ",
        "syntaxArray": [
            {
                "Syntax": "**airDensityCurveRTD**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) with [arrays](https://community.bistudio.com/wiki/Array): Returns air density graph \nEach array consists of:\n\n* 0: Altitude (-60000 metres to 10^7 metres)\n\n* 1: Air density"
            }
        ],
        "examples": [
            "\n```sqf\n_array = airDensityCurveRTD;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/airDensityCurveRTD",
        "modifiers": []
    },
    "ctrlsettextcolor": {
        "name": "ctrlSetTextColor",
        "description": "Sets text color of given control. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). As of Arma 3 v1.40 this command can also be used to change fill-color of a [CT_PROGRESS](https://community.bistudio.com/wiki/CT_PROGRESS) control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetTextColor** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetTextColor [1, 0, 0, 1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTextColor",
        "modifiers": []
    },
    "getmarkersize": {
        "name": "getMarkerSize",
        "description": "Returns the size of the given marker. A getter for [setMarkerSize](https://community.bistudio.com/wiki/setMarkerSize) and an alias of [markerSize](https://community.bistudio.com/wiki/markerSize).",
        "syntaxArray": [
            {
                "Syntax": "**getMarkerSize** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [a-axis, b-axis], where:\n\n* a-axis: [Number](https://community.bistudio.com/wiki/Number) - 1/2 width of marker\n\n* b-axis: [Number](https://community.bistudio.com/wiki/Number) - 1/2 height of marker"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerSize [100,200];\n_size = getMarkerSize \"MarkerOne\"; //returns [100,200]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMarkerSize",
        "modifiers": [
            "Global argument"
        ]
    },
    "netid": {
        "name": "netId",
        "description": "Unique ID of object or group.  As this command is MP only, you can use [BIS_fnc_netId](https://community.bistudio.com/wiki/BIS_fnc_netId), which extends the use to SP as well. See also: [BIS_fnc_objectVar](https://community.bistudio.com/wiki/BIS_fnc_objectVar)",
        "syntaxArray": [
            {
                "Syntax": "**netId** var",
                "Params": "var: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerNetId = netId player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/netId",
        "modifiers": []
    },
    "atan2": {
        "name": "atan2",
        "description": " ArcTangent of *x/y*. Used to determine the angle of a vector *[x,y]*. Result in [Degrees](https://community.bistudio.com/wiki/Number#Degrees) between -180 and 180.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "x atan2 y",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\ny: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_xy = [5,3];\n_degrees = (_xy select 0) atan2 (_xy select 1); // 59.0362\n```\n",
            "Get direction from _obj1 to _obj2:\n```sqf\n_vd = getPosASL _obj2 vectorDiff getPosASL _obj1;\n_dir = (_vd select 0) atan2 (_vd select 1); // _dir range from -180 to +180\nif (_dir < 0) then {_dir = 360 + _dir}; // _dir range from 0 to 360\n```\n",
            "Get relative direction from _obj1 to _obj2:\n```sqf\n_xy = _obj1 worldToModel getPosASL _obj2;\n_dir = (_xy select 0) atan2 (_xy select 1); // _dir range from -180 to +180\nif (_dir < 0) then {_dir = 360 + _dir}; // _dir range from 0 to 360\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/atan2",
        "modifiers": []
    },
    "eyepos": {
        "name": "eyePos",
        "description": "Returns the object's eyes / main turret position.",
        "syntaxArray": [
            {
                "Syntax": "**eyePos** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\neyePos player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/eyePos",
        "modifiers": [
            "Global argument"
        ]
    },
    "inflame": {
        "name": "inflame",
        "description": "Sets the state of a fireplace.",
        "syntaxArray": [
            {
                "Syntax": "fireplace **inflame** burn",
                "Params": "fireplace: [Object](https://community.bistudio.com/wiki/Object)\n\nburn: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to let it burn, [false](https://community.bistudio.com/wiki/false) to extinguish it.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_fireplaceOne inflame true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inflame",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "getmodelinfo": {
        "name": "getModelInfo",
        "description": "Returns object's model info. Model path is suitable for use with [createSimpleObject](https://community.bistudio.com/wiki/createSimpleObject) command.",
        "syntaxArray": [
            {
                "Syntax": "**getModelInfo** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array in format [modelName, modelPath, hasSkeleton]"
            }
        ],
        "examples": [
            "\n```sqf\n_modelInfo = getModelInfo player; // [\"b_soldier_03.p3d\", \"a3\\characters_f\\blufor\\b_soldier_03.p3d\", true]\n```\n",
            "\n```sqf\n_modelInfo = getModelInfo cursorObject;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getModelInfo",
        "modifiers": []
    },
    "lifestate": {
        "name": "lifeState",
        "description": "Returns the life state of the given unit.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "lifeState unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _lifeState = lifeState player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lifeState",
        "modifiers": [
            "Global argument"
        ]
    },
    "ismultiplayer": {
        "name": "isMultiplayer",
        "description": "Return true if multiPlayer.",
        "syntaxArray": [
            {
                "Syntax": "**isMultiplayer**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "if (isMultiplayer) then {\n\t//...block\n}"
        ],
        "Url": "https://community.bistudio.com/wiki/isMultiplayer",
        "modifiers": []
    },
    "lockturret": {
        "name": "lockTurret",
        "description": "Lock the gunner position of the vehicle turret. This command must be executed where vehicle is [local](https://community.bistudio.com/wiki/local). This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike [lock](https://community.bistudio.com/wiki/lock) command",
        "syntaxArray": [
            {
                "Syntax": "vehicle **lockTurret** [turret path,lock]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\n[turret path,lock]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nvehicleName lockTurret [[0,0], true];\n```\n",
            "\n```sqf\nvehicle player lockTurret [[0],true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "assignasdriver": {
        "name": "assignAsDriver",
        "description": "Assign a unit as driver of a vehicle. Used together with [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the driver place of the vehicle.",
        "syntaxArray": [
            {
                "Syntax": "unitName **assignAsDriver** vehicleName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_soldier1 assignAsDriver _tank\n[_soldier1] orderGetIn true"
        ],
        "Url": "https://community.bistudio.com/wiki/assignAsDriver",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "triggertype": {
        "name": "triggerType",
        "description": "Returns trigger type (see [setTriggerType](https://community.bistudio.com/wiki/setTriggerType)). \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**triggerType** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_type = triggerType tr1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerType",
        "modifiers": [
            "Global argument"
        ]
    },
    "setdate": {
        "name": "setDate",
        "description": "Sets mission date and time. Players joining after mission start will get the current server [date](https://community.bistudio.com/wiki/date) including the year.",
        "syntaxArray": [
            {
                "Syntax": "setDate date",
                "Params": "date: [Date](https://community.bistudio.com/wiki/Date) - format [year, month, day, hour, minute]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetDate [1986, 2, 25, 16, 0]; // 4:00pm February 25, 1986\n```\n",
            "\n```sqf\n// Set the real date (MP only):// postInit = 1;\nif (isServer) then\n{\n\twaitUntil {time > 0};\n\t[missionStart select [0,5]] remoteExec [\"setDate\"];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDate",
        "modifiers": [
            "Local effect"
        ]
    },
    "removeallitems": {
        "name": "removeAllItems",
        "description": "Removes all special items from the unit.",
        "syntaxArray": [
            {
                "Syntax": "removeAllItems unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllItems unitName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllItems",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setwaypointloiteraltitude": {
        "name": "setWaypointLoiterAltitude",
        "description": "Assignes loiter altitude to waypoint",
        "syntaxArray": [
            {
                "Syntax": "waypoint setWaypointLoiterAltitude loiterAltitude",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array)\n\nloiterAltitude: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointLoiterAltitude 100\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointLoiterAltitude",
        "modifiers": []
    },
    "setvisibleiftreecollapsed": {
        "name": "setVisibleIfTreeCollapsed",
        "description": "Sets whether or not the object is visible even if the tree is collapsed.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **setVisibleIfTreeCollapsed** [object, visible]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n[object, visible]: [Array](https://community.bistudio.com/wiki/Array)\n\nobject: [ EditorObject](https://community.bistudio.com/wiki/Editor_Object)\n\nvisible: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_map setVisibleIfTreeCollapsed [\"_unit_0\", true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVisibleIfTreeCollapsed",
        "modifiers": []
    },
    "setoxygenremaining": {
        "name": "setOxygenRemaining",
        "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.",
        "syntaxArray": [
            {
                "Syntax": "unit **setOxygenRemaining** value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setOxygenRemaining 0; // Drowns player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setOxygenRemaining",
        "modifiers": []
    },
    "removeitems": {
        "name": "removeItems",
        "description": "Removes all items with given template from the inventory.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeItems** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeItems \"FirstAidKit\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeItems",
        "modifiers": []
    },
    "setvelocity": {
        "name": "setVelocity",
        "description": "Sets [velocity](https://community.bistudio.com/wiki/velocity) vector of an object in m/s.",
        "syntaxArray": [
            {
                "Syntax": "object setVelocity vector",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nvector: [Array](https://community.bistudio.com/wiki/Array) - [Vector3D](https://community.bistudio.com/wiki/Vector3D)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_truck1 setVelocity [20, 0, 0];\n```\n",
            "Advanced method used for relative acceleration:\n\n```sqf\n_vel = velocity _vehicle;\n_dir = direction _vehicle;\n_speed = 10; comment \"Added speed\";\n_vehicle setVelocity [\n\t(_vel select 0) + (sin _dir * _speed), \n\t(_vel select 1) + (cos _dir * _speed), \n\t(_vel select 2)\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVelocity",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "headgear": {
        "name": "headgear",
        "description": "Returns headgear of unit.",
        "syntaxArray": [
            {
                "Syntax": "**headgear** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint headgear player; //H_HelmetB\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/headgear",
        "modifiers": [
            "Global argument"
        ]
    },
    "getgraphvalues": {
        "name": "getGraphValues",
        "description": "Generate graph y - coordinates of all input values within specific x and y range.",
        "syntaxArray": [
            {
                "Syntax": "getGraphValues [[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset], x1, y1, x2, y2, ... xn, yn]",
                "Params": "graphMinX: [Number](https://community.bistudio.com/wiki/Number) - minimum x-axis value\n\ngraphMaxX: [Number](https://community.bistudio.com/wiki/Number) - maximum x-axis value\n\ngraphMinY: [Number](https://community.bistudio.com/wiki/Number) - minimum y-axis value\n\ngraphMaxY: [Number](https://community.bistudio.com/wiki/Number) - maximum y-axis value\n\nvalueCount: [Number](https://community.bistudio.com/wiki/Number) - number of values the returned array should have\n\nrandomOffset: [Number](https://community.bistudio.com/wiki/Number) - random range for returned y value\n\nx1..n: [Number](https://community.bistudio.com/wiki/Number) - nth x value\n\ny1..n: [Number](https://community.bistudio.com/wiki/Number) - nth y value\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) - to format [arrayOfYvalues, arrayOfXvalues]"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _minX = 0;\nprivate _maxX = 10;\nprivate _minY = 0;\nprivate _maxY = 100;\nprivate _count = 11;\nprivate _random = 0;\n\ngetGraphValues [\n\t[_minX, _maxX, _minY, _maxY, _count, _random],\n\t0, 5,\n\t1, 10,\n\t2, 100,\n\t3, 50,\n\t4, 30,\n\t5, 100,\n\t6, 10,\n\t7, 50,\n\t8, 75,\n\t9, 100,\n\t10, 100\n];\n/*\n\treturns [[0.05, 0.1, 1, 0.5, 0.3, 1, 0.1, 0.5, 0.75, 1, 1], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]\n\tsupposedly [array of 1-based Y values, array of X values]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getGraphValues",
        "modifiers": []
    },
    "hintcadet": {
        "name": "hintCadet",
        "description": "Shows a text hint only when in [cadetMode](https://community.bistudio.com/wiki/cadetMode).\n\nThe text can contain several lines. \\n is used to indicate the end of a line.",
        "syntaxArray": [
            {
                "Syntax": "**hintCadet** text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhintCadet \"Press W to move forward\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hintCadet",
        "modifiers": [
            "Local effect"
        ]
    },
    "classname": {
        "name": "className",
        "description": "Returns short name of location.",
        "syntaxArray": [
            {
                "Syntax": "className location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_shortName = className myLocation;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/className",
        "modifiers": []
    },
    "getbackpackcargo": {
        "name": "getBackpackCargo",
        "description": "Returns all backpack types and count from the cargo space.",
        "syntaxArray": [
            {
                "Syntax": "getBackpackCargo object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - object to check\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of Arrays - Format [[\"5BackpacksType1\", \"10BackpacksType2\"], [5, 10]]"
            }
        ],
        "examples": [
            "\n```sqf\n_content = getBackpackCargo carName;\n```\n",
            "\n```sqf\n_content = getBackpackCargo ammoBoxName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getBackpackCargo",
        "modifiers": []
    },
    "flagside": {
        "name": "flagSide",
        "description": "Returns [Side](https://community.bistudio.com/wiki/Side) of the [local](https://community.bistudio.com/wiki/local) instance of the flag. A getter for [setFlagSide](https://community.bistudio.com/wiki/setFlagSide).",
        "syntaxArray": [
            {
                "Syntax": "flagSide flag",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object) - flag\n\n",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\n_flagSide =  flagSide flag;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flagSide",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "if": {
        "name": "if",
        "description": "This operator creates a [If Type](https://community.bistudio.com/wiki/If_Type) which is used in the if-construct as described [here](https://community.bistudio.com/wiki/Control_Structures#if-Statement).",
        "syntaxArray": [
            {
                "Syntax": "**if** condition",
                "Params": "condition: [Boolean](https://community.bistudio.com/wiki/Boolean) expression. If it evaluates as 'true', the 'then' clause is executed.  Otherwise, the 'else' clause (if present) is executed.\n\n",
                "Return": "[If Type](https://community.bistudio.com/wiki/If_Type) - Predicate which will execute 1st or 2nd option when used. This predicate is used in [then](https://community.bistudio.com/wiki/then) or [exitWith](https://community.bistudio.com/wiki/exitWith) commands."
            }
        ],
        "examples": [
            "\n```sqf\n_retVal = if (1 > 0) then { \"It's true\" } else { \"It's false\" };\nhint str _retVal\n```\n",
            "\n```sqf\n_val = if (true) then [ { \"true\" }, { \"false\" } ];\nhint _val;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/if",
        "modifiers": []
    },
    "calculatepath": {
        "name": "calculatePath",
        "description": "Spawns an agent that will execute an AI path calculation and fire the \"PathCalculated\" [ event handler](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#PathCalculated). The vehicle type to simulate could be one of the following presets:\n\n* \"man\" (will use \"C_man_1\")\n\n* \"car\" (will use \"C_Offroad_01_F\")\n\n* \"tank\" (will use \"B_MBT_01_cannon_F\")\n\n* \"wheeled_APC\" (will use \"B_APC_Tracked_01_rcws_F\")\n\n* \"boat\" (will use \"C_Rubberboat\")\n\n* \"plane\" (will use \"B_Plane_CAS_01_dynamicLoadout_F\")\n\n* \"helicopter\" (will use \"B_Heli_Light_01_F\")\nIf the given vehicle type is not one of the above presets, the exact given type is used.\n> ",
        "syntaxArray": [
            {
                "Syntax": "calculatePath [type, behaviour, from, to]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - Vehicle type to simulate (see description)\n\nbehaviour: [String](https://community.bistudio.com/wiki/String) - AI [behaviour](https://community.bistudio.com/wiki/behaviour), one of \"CARELESS\", \"SAFE\", \"AWARE\", \"COMBAT\" or \"STEALTH\"\n\nfrom: [Array](https://community.bistudio.com/wiki/Array) - Start position in format [x,y,z]\n\nto: [Array](https://community.bistudio.com/wiki/Array) - End position in format [x,y,z]\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - The agent to [add](https://community.bistudio.com/wiki/addEventHandler) the [\"PathCalculated\" Event Handler](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#PathCalculated) to."
            }
        ],
        "examples": [
            "\n```sqf\ncalculatePath [\"car\", \"safe\", [2150.67,5778.19,0], [2184.11,5802.28,0]]\n```\n",
            "Draws the path from South West to North East of Agia Marina:\n\n```sqf\n(calculatePath [\"man\",\"safe\",[2832.9,5927.79,0],[3107.46,6036.61,0]]) addEventHandler [\"PathCalculated\", {\n\t{\n\t\tprivate _marker = createMarker [\"marker\" + str _forEachIndex, _x];\n\t\t_marker setMarkerType \"mil_dot\";\n\t\t_marker setMarkerText str _forEachIndex;\n\t} forEach (_this select 1);\n}]\n```\n",
            "Alternative usage of calculatePath functionality that is free of double execution bug (and calculatePath command):\n\n```sqf\nprivate _agent = createAgent [typeOf player, position player, [], 0, \"NONE\"]; \n_agent addEventHandler [\"PathCalculated\",\n{ \n\t{ \n\t\tprivate _marker = createMarker [\"marker\" + str _forEachIndex, _x]; \n\t\t_marker setMarkerType \"mil_dot\"; \n\t\t_marker setMarkerText str _forEachIndex; \n\t} \n\tforEach (_this select 1);\n}];\n_agent setDestination [player getRelPos [500, 0], \"LEADER PLANNED\", true];\n```\n",
            "Same as above but for a vehicle: \n```sqf\nprivate _agent = createAgent [typeOf player, position player, [], 0, \"NONE\"];\nprivate _car = \"B_Quadbike_01_F\" createVehicle position player;\n_agent moveInDriver _car;\n_agent addEventHandler [\"PathCalculated\",\n{ \n\t{ \n\t\tprivate _marker = createMarker [\"marker\" + str _forEachIndex, _x]; \n\t\t_marker setMarkerType \"mil_dot\"; \n\t\t_marker setMarkerText str _forEachIndex; \n\t} \n\tforEach (_this select 1);\n}];\n_agent setDestination [player getRelPos [500, 0], \"LEADER PLANNED\", true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/calculatePath",
        "modifiers": []
    },
    "scudstate": {
        "name": "scudState",
        "description": "Current state of given Scud launcher. Following states are recognized: \n\n\n* 0 - No activity\n\n* 1 - Launch preparation,\n\n* 2 - Launch prepared\n\n* 3 - Ignition\n\n* 4 - Launched.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) =  **scudState** scudName",
                "Params": "scudName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nif ((scudState _scud) == 3) exitWith \n{ \n  player sideChat \"SCUD Launch status: Missile Ignition\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/scudState",
        "modifiers": []
    },
    "benchmark": {
        "name": "benchmark",
        "description": "Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **benchmark**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "? (benchmark>2000) : setViewDistance 2000"
        ],
        "Url": "https://community.bistudio.com/wiki/benchmark",
        "modifiers": []
    },
    "ctrlsettext": {
        "name": "ctrlSetText",
        "description": "Sets the text of a control of the currently active user dialog or display. This command can be used for static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\nRead [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs and controls.\nUse [endl](https://community.bistudio.com/wiki/endl) to insert line breaks.\n> ",
        "syntaxArray": [
            {
                "Syntax": "ctrlSetText [idc, text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\ntext: [String](https://community.bistudio.com/wiki/String) - Text or image path, depending on the control type\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control ctrlSetText text",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlSetText [100, \"Hello world\"]; // for Dialogs\n```\n",
            "\n```sqf\n_control ctrlSetText \"Hello world.\"; // for Displays\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetText",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "breakto": {
        "name": "breakTo",
        "description": "Breaks block to scope named **name**. Nil is returned.\n\nScope name can be assigned using [scopeName](https://community.bistudio.com/wiki/scopeName) command.",
        "syntaxArray": [
            {
                "Syntax": "**breakTo** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nscopeName \"main\";\nwhile {true} do {\n\tscopeName \"loop1\";\n\twhile {true} do {\n\t\tscopeName \"loop2\";\n\t\tif (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\"\n\t\tif (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\"\n\t\tsleep 1;\n\t};\n\tsleep 1;\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/breakTo",
        "modifiers": []
    },
    "atltoasl": {
        "name": "ATLToASL",
        "description": "Converts a position from [PositionATL](https://community.bistudio.com/wiki/PositionATL) to [PositionASL](https://community.bistudio.com/wiki/PositionASL)",
        "syntaxArray": [
            {
                "Syntax": "ATLToASL pos",
                "Params": "pos: [PositionATL](https://community.bistudio.com/wiki/PositionATL) - position to convert\n\n",
                "Return": "[PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\nATLToASL (getPosATL player) isEqualTo getPosASL player\n```\n",
            "\n```sqf\n_camPosASL = ATLToASL positionCameraToWorld [0,0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ATLToASL",
        "modifiers": []
    },
    "enginesisonrtd": {
        "name": "enginesIsOnRTD",
        "description": "Returns which engines are producing some work.> ",
        "syntaxArray": [
            {
                "Syntax": "enginesIsOnRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  [[Boolean](https://community.bistudio.com/wiki/Boolean) value for each engine]"
            }
        ],
        "examples": [
            "\n```sqf\n_enginesTaru = enginesIsOnRTD _taru// Returns [true,true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enginesIsOnRTD",
        "modifiers": []
    },
    "hcleader": {
        "name": "hcLeader",
        "description": "Returns group's [high command](https://community.bistudio.com/wiki/High_Command) commander.",
        "syntaxArray": [
            {
                "Syntax": "**hcLeader** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) -\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_leader = hcLeader groupName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcLeader",
        "modifiers": []
    },
    "copyfromclipboard": {
        "name": "copyFromClipboard",
        "description": "Return ANSI content of the (text) clipboard. If Unicode support is desired, see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode).",
        "syntaxArray": [
            {
                "Syntax": "**copyFromClipboard**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint copyFromClipboard;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/copyFromClipboard",
        "modifiers": []
    },
    "lnbsetcolorright": {
        "name": "lnbSetColorRight",
        "description": "Sets the right color.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetColorRight [idc, [row, column], color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetColorRight [[row, column], color]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control lnbSetColorRight [[0, 0], [1,1,1,0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetColorRight",
        "modifiers": []
    },
    "setwind": {
        "name": "setWind",
        "description": "Set current (forced == false) or permanent (forced == true) wind vector.\n**NOTE**: The effect is global only if command is executed on the server. Wind set locally will sync back to server value in a while.",
        "syntaxArray": [
            {
                "Syntax": "**setWind** [x, y, forced]",
                "Params": "[x, y, forced]: [Array](https://community.bistudio.com/wiki/Array)\n\nx: [Number](https://community.bistudio.com/wiki/Number) Easterly component (in m/s, positive = to the east)\n\ny: [Number](https://community.bistudio.com/wiki/Number) Northerly component (in m/s, positive = to the north)\n\nforced: [Boolean](https://community.bistudio.com/wiki/Boolean) true: wind constantly blows in set direction, false: wind can change direction (default)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetWind [10, 10, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWind",
        "modifiers": [
            "Global effect"
        ]
    },
    "opensteamapp": {
        "name": "openSteamApp",
        "description": "Opens a Steam application, returns false if it was not possible to run the application.",
        "syntaxArray": [
            {
                "Syntax": "openSteamApp appID",
                "Params": "appID: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nopenSteamApp 553228\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/openSteamApp",
        "modifiers": []
    },
    "overcast": {
        "name": "overcast",
        "description": "Return the current overcast level. Zero is clear skies, one is maximum cloud cover.",
        "syntaxArray": [
            {
                "Syntax": "**overcast**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n _cloudLevel = overcast \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/overcast",
        "modifiers": []
    },
    "listobjects": {
        "name": "listObjects",
        "description": "Return the list of all objects of given type.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **listObjects** type",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\ntype: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/listObjects",
        "modifiers": []
    },
    "rankid": {
        "name": "rankId",
        "description": "Return the rank of the given unit for comparison.\n\nValue may be :\n\n* **0** - Private\n\n* **1** - Corporal\n\n* **2** - Sergeant\n\n* **3** - Lieutenant\n\n* **4** - Captain\n\n* **5** - Major\n\n* **6** - Colonel",
        "syntaxArray": [
            {
                "Syntax": "**rankId** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_myIdRank = rankId player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rankId",
        "modifiers": []
    },
    "ctrlsetfonth4": {
        "name": "ctrlSetFontH4",
        "description": "Sets H4 font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH4** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH4 \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH4",
        "modifiers": []
    },
    "failmission": {
        "name": "failMission",
        "description": "Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use [endMission](https://community.bistudio.com/wiki/endMission) to end the mission.\n\nThe end type can be:\n\n* \"CONTINUE\"\n\n* \"KILLED\"\n\n* \"LOSER\"\n\n* \"END1\"\n\n* \"END2\"\n\n* \"END3\"\n\n* \"END4\"\n\n* \"END5\"\n\n* \"END6\"\n\n**Mission saves won't be deleted**.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**failMission** endtype",
                "Params": "endtype: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfailMission \"LOSER\"; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/failMission",
        "modifiers": []
    },
    "tvvalue": {
        "name": "tvValue",
        "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "**tvValue** [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - integer"
            },
            {
                "Syntax": "ctrl tvValue path",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - integer"
            }
        ],
        "examples": [
            "\n```sqf\ntvValue [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvValue [0,0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvValue",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "onplayerdisconnected": {
        "name": "onPlayerDisconnected",
        "description": "This command will execute attached code whenever a player is leaving an MP session. The code will receive a number of special variables:",
        "syntaxArray": [
            {
                "Syntax": "**onPlayerDisconnected** code",
                "Params": "code: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code) - Code executed. The code will receive a number of special variables:\n\n* _id: [Number](https://community.bistudio.com/wiki/Number) - Is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.\n\n\n* _uid: [String](https://community.bistudio.com/wiki/String) - Is [getPlayerUID](https://community.bistudio.com/wiki/getPlayerUID) of the leaving player. In Arma 3 it is also the same as Steam ID.\n\n\n* _name: [String](https://community.bistudio.com/wiki/String) - Is [profileName](https://community.bistudio.com/wiki/profileName) of the leaving player.\n\n\n* _jip: [Boolean](https://community.bistudio.com/wiki/Boolean) - Is a flag that indicated whether or not the player joined after the mission has started (**J**oined **I**n **P**rogress). [true](https://community.bistudio.com/wiki/true) - if the player was JIP, otherwise [false](https://community.bistudio.com/wiki/false). *Since Arma 3 v1.50*\n\n\n* _owner: [Number](https://community.bistudio.com/wiki/Number) - Is [owner](https://community.bistudio.com/wiki/owner) id of the leaving player. Can be used for kick or ban purposes or just for [publicVariableClient](https://community.bistudio.com/wiki/publicVariableClient).  *Since Arma 3 v1.50*\n\n\n* _idstr:  [String](https://community.bistudio.com/wiki/String) - Same as _id but in string format, so could be exactly compared to [ user marker](https://community.bistudio.com/wiki/allMapMarkers) ids.  *Since Arma 3 v1.96*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonPlayerDisconnected {diag_log [_id, _uid, _name]};\n```\n",
            "\n```sqf\nonPlayerDisconnected {\n\tif (count allPlayers == 0) then {\n\t\tendMission \"END1\";\n\t};\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onPlayerDisconnected",
        "modifiers": [
            "Server execution"
        ]
    },
    "registeredtasks": {
        "name": "registeredTasks",
        "description": "Returns array with all registered task types for the given agent. The values are the names set in CfgTasks classes name property. The same names are used for [unregisterTask](https://community.bistudio.com/wiki/unregisterTask)",
        "syntaxArray": [
            {
                "Syntax": "**registeredTasks** teamMember",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member) - [teamMember](https://community.bistudio.com/wiki/teamMember) [agent](https://community.bistudio.com/wiki/agent)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - names of tasks"
            }
        ],
        "examples": [
            "\n```sqf\ntasklist = registeredTasks teamMember _agent;\n```\n",
            "\n```sqf\n_rabbit = createAgent [\"Rabbit_F\", position player,[], 0, \"None\"];\nhint str registeredTasks teamMember _rabbit;\n```\n\nHint shows [\"Animal Main Task\"] in Arma 3."
        ],
        "Url": "https://community.bistudio.com/wiki/registeredTasks",
        "modifiers": []
    },
    "waypointcompletionradius": {
        "name": "waypointCompletionRadius",
        "description": "Gets the radius around the waypoint where the waypoint is completed.",
        "syntaxArray": [
            {
                "Syntax": "**waypointCompletionRadius** waypoint",
                "Params": "waypoint:  [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_radius = waypointCompletionRadius [groupOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointCompletionRadius",
        "modifiers": []
    },
    "tvadd": {
        "name": "tvAdd",
        "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) for more information.",
        "syntaxArray": [
            {
                "Syntax": "tvAdd [idc, pathParent, text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npathParent: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of parent item or [] if no parent exists\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Index of the added item relative to the branch it was added to"
            },
            {
                "Syntax": "control tvAdd [pathParent, text]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npathParent: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of parent item or [] if no parent exists\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Index of the added item relative to the branch it was added to"
            }
        ],
        "examples": [
            "\n```sqf\n_index = _ctrl tvAdd [[], \"Parent Item\"];\n```\n",
            "\n```sqf\n_index = tvAdd [101, [0], \"First item\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvAdd",
        "modifiers": []
    },
    "windrtd": {
        "name": "windRTD",
        "description": "Returns wind strength and direction.\n> ",
        "syntaxArray": [
            {
                "Syntax": "windRTD",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_wind = windRTD;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/windRTD",
        "modifiers": []
    },
    "flag": {
        "name": "flag",
        "description": "Returns the original flag pole of the flag the unit is carrying.",
        "syntaxArray": [
            {
                "Syntax": "flag unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - Flag pole object the flag belongs to. If the unit carries no flag, [objNull](https://community.bistudio.com/wiki/objNull) is returned."
            }
        ],
        "examples": [
            "\n```sqf\n_flag = flag _soldier;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flag",
        "modifiers": [
            "Global argument"
        ]
    },
    "estimatedtimeleft": {
        "name": "estimatedTimeLeft",
        "description": "Sets the estimated time left in the game that is shown in the \"Game in progress\" screen or in the master browser.\n> ",
        "syntaxArray": [
            {
                "Syntax": "estimatedTimeLeft seconds",
                "Params": "seconds: [Number](https://community.bistudio.com/wiki/Number) - Estimated time in seconds\n\n* Prior to Arma 3 v1.70: 7200 seconds (2 hours)\n\n* Since Arma 3 v1.70: 36000 (10 hours)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nestimatedTimeLeft 600; // 10 min\n```\n",
            "**Operation Flashpoint:** for missions with a hard set limit adjusted via *[param1](https://community.bistudio.com/wiki/Description.ext#titleParam.25.2C_valuesParam.25.2C_defValueParam.25.2C_textParam.25)*, the following example can be used in the [init.sqs](https://community.bistudio.com/wiki/Event_Scripts) file:\n\n```sqf\nestimatedTimeLeft param1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/estimatedTimeLeft",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "waypointdescription": {
        "name": "waypointDescription",
        "description": "Gets the waypoint description.",
        "syntaxArray": [
            {
                "Syntax": "**waypointDescription** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointDescription [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointDescription",
        "modifiers": []
    },
    "detectedmines": {
        "name": "detectedMines",
        "description": "Returns an array of all mines detected by a given side",
        "syntaxArray": [
            {
                "Syntax": "**detectedMines** side",
                "Params": "side: [side](https://community.bistudio.com/wiki/side)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\ndetectedMines west;\n```\n",
            "\n```sqf\ndetectedMines side player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/detectedMines",
        "modifiers": []
    },
    "setgroupiconparams": {
        "name": "setGroupIconParams",
        "description": "Set group icons parameters. [color,string,float,bool]",
        "syntaxArray": [
            {
                "Syntax": "group **setGroupIconParams** properties",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) -\n\nproperties: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_grp setGroupIconParams [_color,_text,_scale,_visible];\n_grp setGroupIconParams [[0,0,0,0],\"\",1,false];"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupIconParams",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setmissiletarget": {
        "name": "setMissileTarget",
        "description": "Sets a guided missile target. Doesn't work for all types of missiles. If target is dead, target is ignored. The target has to be inside configured missile targeting cone for command to work.",
        "syntaxArray": [
            {
                "Syntax": "munition setMissileTarget target",
                "Params": "munition: [Object](https://community.bistudio.com/wiki/Object)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if succeessful"
            }
        ],
        "examples": [
            "\n```sqf\nmissile1 setMissileTarget tank1;\n```\n",
            "\n```sqf\n_missile = createVehicle [\"Missile_AGM_01_F\",player modelToWorld [0,0,50],[],0,\"CAN_COLLIDE\"];\n_missile setDir getDir player;\n_tgt = createVehicle [\"O_APC_Wheeled_02_rcws_v2_F\",player modelToWorld [0,300,0],[],0,\"CAN_COLLIDE\"];\n_tgt setVehicleTiPars [1,1,1];\n[_missile,_tgt] spawn {\n\tparams [\"_missile\",\"_tgt\"];\n\tsleep 0.1;\n\t_missile setMissileTarget _tgt;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMissileTarget",
        "modifiers": []
    },
    "reverse": {
        "name": "reverse",
        "description": "Reverses given array by reference (modifies the original array, just like [resize](https://community.bistudio.com/wiki/resize)). The alternative syntax can be used to reverse a ANSI [string](https://community.bistudio.com/wiki/String). If Unicode support is desired, see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode).",
        "syntaxArray": [
            {
                "Syntax": "reverse array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "reverse string [](https://community.bistudio.com/wiki/Category:Arma_3)[2.02](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_2.02)",
                "Params": "string: [String](https://community.bistudio.com/wiki/String) - String to be reversed\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Reversed string"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3];\nreverse _arr;\nhint str _arr; // [3,2,1]\n```\n",
            "\n```sqf\n_wordArr = toArray \"gateman\";\nreverse _wordArr;\nhint toString _wordArr; // nametag\n```\n",
            "\n```sqf\nreverse \"treboR\"; // Returns \"Robert\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/reverse",
        "modifiers": []
    },
    "merge": {
        "name": "merge",
        "description": "Merges two [HashMaps](https://community.bistudio.com/wiki/HashMap).",
        "syntaxArray": [
            {
                "Syntax": "hashMap1 merge hashMap2",
                "Params": "hashMap1: [HashMap](https://community.bistudio.com/wiki/HashMap) - This HashMap will be modified\n\nhashMap2: [HashMap](https://community.bistudio.com/wiki/HashMap) - All key-value pairs from this HashMap are added to *hashMap1*. If a key from *hashMap2* already exists in *hashMap1*, then its value is overwritten with the corresponding value from *hashMap2*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "hashMap1 merge [hashMap2, overwriteExisting]",
                "Params": "hashMap1: [HashMap](https://community.bistudio.com/wiki/HashMap) - This HashMap will be modified\n\nhashMap2: [HashMap](https://community.bistudio.com/wiki/HashMap) - All key-value pairs from this HashMap are added to *hashMap1*\n\noverwriteExisting (Optional, default: [false](https://community.bistudio.com/wiki/false)): [Boolean](https://community.bistudio.com/wiki/Boolean) - If [true](https://community.bistudio.com/wiki/true), keys from *hashMap1* that also exist in *hashMap2* are overwritten. When set to [true](https://community.bistudio.com/wiki/true), merging is faster\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_hashMap merge _otherHashMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/merge",
        "modifiers": []
    },
    "setcamshakeparams": {
        "name": "setCamShakeParams",
        "description": "Sets camera shake parameters. Will not have any effect until shake is started via [addCamShake](https://community.bistudio.com/wiki/addCamShake).",
        "syntaxArray": [
            {
                "Syntax": "**setCamShakeParams**  [posCoef, vertCoef, horzCoef, bankCoef, interpolation]",
                "Params": "posCoef: [Number](https://community.bistudio.com/wiki/Number) - Strength of positional movement (how far the whole position can change in X,Y&Z). Should not be bigger than \n```sqf\n0.1\n```\n to prevent the camera from moving into or behind the player\n\nvertCoef: [Number](https://community.bistudio.com/wiki/Number) - Strength of vertical camera pan (up/down), practical range: 0-10\n\nhorzCoef: [Number](https://community.bistudio.com/wiki/Number) - Strength of horizontal camera pan (left/right), practical range: 0-10\n\nbankCoef: [Number](https://community.bistudio.com/wiki/Number) - Strength of camera tilt/bank, practical range: 0-20\n\ninterpolation: [Boolean](https://community.bistudio.com/wiki/Boolean) - If [true](https://community.bistudio.com/wiki/true), then transitions in the different shaking directions will be smoother\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetCamShakeParams [0.1, 1, 1, 1, true]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCamShakeParams",
        "modifiers": [
            "Local effect"
        ]
    },
    "clearoverlay": {
        "name": "clearOverlay",
        "description": "Clear the current overlay.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**clearOverlay** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nclearOverlay _map,\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearOverlay",
        "modifiers": []
    },
    "magazinesdetailbackpack": {
        "name": "magazinesDetailBackpack",
        "description": "Returns an array with the type names of all the unit's backpack magazines.",
        "syntaxArray": [
            {
                "Syntax": "**magazinesDetailBackpack** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "magazinesDetailBackpack [unit, includeEmpty] *Since Arma 3 v1.99.146475*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nmagazinesDetailBackpack player;\n/*\n[\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000011/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/2]\",\n\t\"Chemlight (Green)(1/1)[id/cr:10000027/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000013/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000014/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000015/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000016/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000017/2]\",\n\t\"9 mm 16Rnd Mag(16/16)[id/cr:10000019/2]\",\n\t\"9 mm 16Rnd Mag(16/16)[id/cr:10000020/2]\",\n\t\"RGO Grenade(1/1)[id/cr:10000021/2]\",\n\t\"RGO Grenade(1/1)[id/cr:10000022/2]\",\n\t\"IR Grenade [NATO](1/1)[id/cr:10000023/2]\",\n\t\"IR Grenade [NATO](1/1)[id/cr:10000024/2]\",\n\t\"Smoke Grenade (White)(1/1)[id/cr:10000025/2]\",\n\t\"Smoke Grenade (Green)(1/1)[id/cr:10000026/2]\",\n\t\"Chemlight (Green)(1/1)[id/cr:10000028/2]\"\n]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesDetailBackpack",
        "modifiers": []
    },
    "servercommand": {
        "name": "serverCommand",
        "description": "Executes the given [server command](https://community.bistudio.com/wiki/Multiplayer_Server_Commands).\n\n* Available commands for execution can be found with [serverCommandAvailable](https://community.bistudio.com/wiki/serverCommandAvailable).\n\n* Commands that can be executed can be found with [serverCommandExecutable](https://community.bistudio.com/wiki/serverCommandExecutable).",
        "syntaxArray": [
            {
                "Syntax": "**serverCommand**",
                "Params": "command : [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "password serverCommand command [](https://community.bistudio.com/wiki/Category:Arma_3)[1.40](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.40) [SEServer](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)",
                "Params": "password : [String](https://community.bistudio.com/wiki/String) - password defined in [server.cfg](https://community.bistudio.com/wiki/server.cfg) with serverCommandPassword param\n\ncommand : [String](https://community.bistudio.com/wiki/String) - server command\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if password is correct"
            }
        ],
        "examples": [
            "\n```sqf\nserverCommand \"#logout\";\n```\n",
            "Create button on the main map which will show userlist to anyone who clicks on it:\n\n```sqf\nwith uiNamespace do \n{\n\tctrl = findDisplay 12 ctrlCreate [\"RscButton\", -1];\n\tctrl ctrlSetPosition [0,0,0.5,0.1];\n\tctrl ctrlSetText \"USERLIST\";\n\tctrl ctrlCommit 0;\n\tctrl ctrlAddEventHandler [\"ButtonDown\", \n\t{\n\t\tserverCommand \"#userlist\";\n\t}];\n};\n```\n",
            "\n```sqf\nserverCommand format [\"#kick %1\",_name];\n```\n",
            "\n```sqf\n_passwordWasOK = \"MyServerCommandPassword\" serverCommand \"#lock\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/serverCommand",
        "modifiers": []
    },
    "menuurl": {
        "name": "menuURL",
        "description": "Returns current URL set in entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuURL [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control menuURL path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuURL [7, 0]; // Returns \"https://community.bistudio.com/wiki/Eden_Editor\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuURL",
        "modifiers": []
    },
    "set3denmissionattribute": {
        "name": "set3DENMissionAttribute",
        "description": "Set [scenario attribute](https://community.bistudio.com/wiki/Eden_Editor:_Scenario_Atttributes).\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see [Setting Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Attributes).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "<section> **set3DENMissionAttribute** [<class>,<value>]",
                "Params": "section: [String](https://community.bistudio.com/wiki/String) - attribute section\n\nclass: [String](https://community.bistudio.com/wiki/String) - attribute name\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - new attribute value\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the value was set"
            }
        ],
        "examples": [
            "\n```sqf\n\"Multiplayer\" set3DENMissionAttribute [\"respawn\",3];\n```\n\nSet respawn type to 3"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENMissionAttribute",
        "modifiers": []
    },
    "lnbsetcolumnspos": {
        "name": "lnbSetColumnsPos",
        "description": "Sets relative screen X for ListNBox control columns positions. Setter for [lnbGetColumnsPosition](https://community.bistudio.com/wiki/lnbGetColumnsPosition).",
        "syntaxArray": [
            {
                "Syntax": "lnbSetColumnsPos [idc, positions]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - idc of the control\n\npositions: [Array](https://community.bistudio.com/wiki/Array) - positions of the columns\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetColumnsPos positions",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control) - lnb control\n\npositions: [Array](https://community.bistudio.com/wiki/Array) - positions of the columns\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetColumnsPos [101, [0.1,0.5,0.7]];\n```\n",
            "\n```sqf\n_ctrl lnbSetColumnsPos [0.1,0.5,0.7];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetColumnsPos",
        "modifiers": []
    },
    "nearestterrainobjects": {
        "name": "nearestTerrainObjects",
        "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). \nIn contrast to [nearestObjects](https://community.bistudio.com/wiki/nearestObjects) this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.\nPossible type names:\"TREE\", \"SMALL TREE\", \"BUSH\", \"BUILDING\", \"HOUSE\", \"FOREST BORDER\", \"FOREST TRIANGLE\", \"FOREST SQUARE\", \"CHURCH\", \"CHAPEL\", \"CROSS\", \"BUNKER\", \"FORTRESS\", \"FOUNTAIN\", \"VIEW-TOWER\", \"LIGHTHOUSE\", \"QUAY\", \"FUELSTATION\", \"HOSPITAL\", \"FENCE\", \"WALL\", \"HIDE\", \"BUSSTOP\", \"ROAD\", \"FOREST\", \"TRANSMITTER\", \"STACK\", \"RUIN\", \"TOURISM\", \"WATERTOWER\", \"TRACK\", \"MAIN ROAD\", \"ROCK\", \"ROCKS\", \"POWER LINES\", \"RAILWAY\", \"POWERSOLAR\", \"POWERWAVE\", \"POWERWIND\", \"SHIPWRECK\", \"TRAIL\"\n\nSince Arma 3 v1.62 it is possible to switch the sorting algorithm off by providing optional param, which significantly increases the performance of this command, especially if the search is performed with large radius.\n\nSince Arma 3 v1.66 it is possible to switch search and sorting mode between 2D and 3D.\n\nSince Arma 3 v2.00 this command also returns missing roads: \"ROAD\", \"MAIN ROAD\", \"TRACK\", \"TRAIL\" \n\n\n[Terrain object counts](https://community.bistudio.com/wiki/nearestTerrainObjects#)\n\n\n",
        "syntaxArray": [
            {
                "Syntax": "nearestTerrainObjects [position, types, radius, sort, 2Dmode]",
                "Params": "position:  [Object](https://community.bistudio.com/wiki/Object), [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D) - where to find objects, center position\n\ntypes: [Array](https://community.bistudio.com/wiki/Array) - list of case-insensitive types of the objects to search for. [] to search without filters\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - range from center position to search for objects\n\nsort: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) sort objects by distance to the center or not *Since Arma 3 v1.61.136035*\n\n2Dmode: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) the object search and sorting mode: [true](https://community.bistudio.com/wiki/true) - 2D, [false](https://community.bistudio.com/wiki/false) - 3D *Since Arma 3 v1.65.138818*\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of terrain objects"
            }
        ],
        "examples": [
            "\n```sqf\nnearestTerrainObjects [player, [\"Tree\", \"Bush\"], 200];\n```\n",
            "\n```sqf\nnearestTerrainObjects [player, [\"House\"], 200];\n```\n",
            "\n```sqf\nnearestTerrainObjects [[2716,2949,0], [\"Chapel\", \"Fuelstation\"], 100];\n```\n",
            "Return every terrain object in 50 metres radius around player sorted, closest first:\n```sqf\nnearestTerrainObjects [player, [], 50];\n```\n",
            "Return every terrain object in 50 metres radius around player unsorted:\n```sqf\nnearestTerrainObjects [player, [], 50, false];\n```\n",
            "Hide all terrain objects nearestTerrainObjects could find:\n\n```sqf\nif (isServer) then\n{\n\tprivate _allTerrainObjects = nearestTerrainObjects\n\t[\n\t\t[worldSize / 2, worldSize / 2],\n\t\t[],\n\t\tworldSize * sqrt 2 / 2,\n\t\tfalse\n\t];\n\n\t{ _x hideObjectGlobal true } forEach _allTerrainObjects;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestTerrainObjects",
        "modifiers": []
    },
    "ondoubleclick": {
        "name": "onDoubleClick",
        "description": "Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **onDoubleClick** command",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\ncommand: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/onDoubleClick",
        "modifiers": []
    },
    "lbsort": {
        "name": "lbSort",
        "description": "Sorts listbox entries alphabetically ascending by their [lbText](https://community.bistudio.com/wiki/lbText).",
        "syntaxArray": [
            {
                "Syntax": "lbSort control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "lbSort [control, sortOrder] *Since Arma 3 v1.18*",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nsortOrder: [String](https://community.bistudio.com/wiki/String) - \"ASC\": ascending, \"DESC\": descending\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "lbSort idc *Since Arma 3 v1.67*",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "lbSort [idc, sortOrder] *Since Arma 3 v1.67*",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nsortOrder: [String](https://community.bistudio.com/wiki/String) - \"ASC\": ascending, \"DESC\": descending\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSort _myControl;\n```\n",
            "\n```sqf\nlbSort [_myControl, \"DESC\"];\n```\n",
            "\n```sqf\nlbSort 101;\n```\n",
            "\n```sqf\nlbSort [101, \"DESC\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSort",
        "modifiers": []
    },
    "menuvalue": {
        "name": "menuValue",
        "description": "Returns current value set in menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuValue [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/menuValue",
        "modifiers": []
    },
    "dostop": {
        "name": "doStop",
        "description": "Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit. The units will still respond to orders from their group leader (like engage, rearm, board a vehicle), but all of their actions will be separate from the group formation. To resume group default behaviour, use [doFollow](https://community.bistudio.com/wiki/doFollow) command. For example: [units](https://community.bistudio.com/wiki/units) _group [doFollow](https://community.bistudio.com/wiki/doFollow) [leader](https://community.bistudio.com/wiki/leader) _group;",
        "syntaxArray": [
            {
                "Syntax": "**doStop** unit(s)",
                "Params": "unit(s): [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndoStop _soldier1;\n```\n",
            "\n```sqf\ndoStop [_soldier1, _soldier2];\n```\n",
            "\n```sqf\ndoStop (units player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doStop",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "customradio": {
        "name": "customRadio",
        "description": "Sends the message to the custom radio channel. The message is defined in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or radio protocol.",
        "syntaxArray": [
            {
                "Syntax": "unit **customRadio** [customChannelID, message]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ncustomChannelID: [Number](https://community.bistudio.com/wiki/Number) - [custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command\n\nmessage: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne customRadio [1, \"WordEnemy\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/customRadio",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "removeownedmine": {
        "name": "removeOwnedMine",
        "description": "Removes ownership over a remotely detonatable mine from the unit.",
        "syntaxArray": [
            {
                "Syntax": "unit removeOwnedMine mine",
                "Params": "Unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmine: [Object](https://community.bistudio.com/wiki/Object) - The mine object\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeOwnedMine SuperMine;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeOwnedMine",
        "modifiers": []
    },
    "enablemimics": {
        "name": "enableMimics",
        "description": "Enables/disables mimics on a given unit.",
        "syntaxArray": [
            {
                "Syntax": "unit **enableMimics** enabled",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nenabled: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncursorTarget enableMimics false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableMimics",
        "modifiers": []
    },
    "removealleventhandlers": {
        "name": "removeAllEventHandlers",
        "description": "Removes all event handlers of given type that were added by [addEventHandler](https://community.bistudio.com/wiki/addEventHandler) **and** resets event handler's creation index to 0.",
        "syntaxArray": [
            {
                "Syntax": "object removeAllEventHandlers handlerType",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nhandlerType: [String](https://community.bistudio.com/wiki/String) - See [Event Handlers](https://community.bistudio.com/wiki/Category:Event_Handlers)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeAllEventHandlers \"Killed\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllEventHandlers",
        "modifiers": [
            "Local effect"
        ]
    },
    "setcuratorcameraareaceiling": {
        "name": "setCuratorCameraAreaCeiling",
        "description": "Sets maximal ([ATL](https://community.bistudio.com/wiki/Position#PositionATL)) height to which curator camera can move.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj setCuratorCameraAreaCeiling height",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - [Curator](https://community.bistudio.com/wiki/Arma_3_Curator) module\n\nheight: [Number](https://community.bistudio.com/wiki/Number) - [ATL](https://community.bistudio.com/wiki/Position#PositionATL), in metres\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCurator setCuratorCameraAreaCeiling 50;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCuratorCameraAreaCeiling",
        "modifiers": [
            "Server execution"
        ]
    },
    "isgroupdeletedwhenempty": {
        "name": "isGroupDeletedWhenEmpty",
        "description": "Checks if the given group marked for auto-deletion when empty. See [deleteGroupWhenEmpty](https://community.bistudio.com/wiki/deleteGroupWhenEmpty).",
        "syntaxArray": [
            {
                "Syntax": "**isGroupDeletedWhenEmpty** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) the group is marked for auto-deletion when empty"
            }
        ],
        "examples": [
            "\n```sqf\n_isMarked = isGroupDeletedWhenEmpty _group;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isGroupDeletedWhenEmpty",
        "modifiers": []
    },
    "setsimulweatherlayers": {
        "name": "setSimulWeatherLayers",
        "description": "Sets number of simul weather layers, affects quality of simul weather clouds.",
        "syntaxArray": [
            {
                "Syntax": "**setSimulWeatherLayers** layers",
                "Params": "layers: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetSimulWeatherLayers 0; // Very flat clouds\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimulWeatherLayers",
        "modifiers": []
    },
    "canfire": {
        "name": "canFire",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the given vehicle is still able to fire. For the command to return [true](https://community.bistudio.com/wiki/true), vehicle must be alive, have weapon operator and the weapon cannot be damaged ≥ 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or [setVehicleAmmo](https://community.bistudio.com/wiki/setVehicleAmmo) 0 command is executed on the vehicle, then canFire will always report [false](https://community.bistudio.com/wiki/false) for it.",
        "syntaxArray": [
            {
                "Syntax": "canFire unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if able to fire"
            }
        ],
        "examples": [
            "\n```sqf\nif (not canFire _tank) then\n{\n\tplayer sideChat \"Tank disabled!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canFire",
        "modifiers": [
            "Global argument"
        ]
    },
    "enabledynamicsimulationsystem": {
        "name": "enableDynamicSimulationSystem",
        "description": "Enables or disables the whole [Arma 3: Dynamic Simulation](https://community.bistudio.com/wiki/Arma_3:_Dynamic_Simulation) system",
        "syntaxArray": [
            {
                "Syntax": "**enableDynamicSimulationSystem** enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableDynamicSimulationSystem true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableDynamicSimulationSystem",
        "modifiers": []
    },
    "vectorlinearconversion": {
        "name": "vectorLinearConversion",
        "description": "Interpolates vector between the given \"vectorFrom\" and \"vectorTo\" value according to the given range value",
        "syntaxArray": [
            {
                "Syntax": "vectorLinearConversion [rangeFrom, rangeTo, rangeValue, vectorFrom, vectorTo, clip]",
                "Params": "[rangeFrom, rangeTo, rangeValue, vectorFrom, vectorTo, clip]: [Array](https://community.bistudio.com/wiki/Array)\n\nrangeFrom: [Number](https://community.bistudio.com/wiki/Number) - start \"from\" range\n\nrangeTo: [Number](https://community.bistudio.com/wiki/Number) - end \"to\" range\n\nrangeValue: [Number](https://community.bistudio.com/wiki/Number) - variable range value\n\nvectorFrom: [Array](https://community.bistudio.com/wiki/Array) - start \"from\" vector\n\nvectorTo: [Array](https://community.bistudio.com/wiki/Array) - end \"to\" vector\n\nclip (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - if [true](https://community.bistudio.com/wiki/true), range value will be clipped to stay within \"from\" - \"to\" range. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - interpolated vector"
            }
        ],
        "examples": [
            "\n```sqf\nvectorLinearConversion [0,1,0.5,[0,0,0],[25,50,100],false]; // [12.5,25,50]\n```\n",
            "\n```sqf\nvectorLinearConversion [0,1,100,[0,0,0],[25,50,100],true]; // [25,50,100]\n```\n",
            "\n```sqf\nvectorLinearConversion [0,1,100,[0,0,0],[25,50,100],false]; // [2500,5000,10000]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorLinearConversion",
        "modifiers": []
    },
    "neartargets": {
        "name": "nearTargets",
        "description": "Returns a list of targets within the defined range. \"Targets\" are not restricted to enemy units.",
        "syntaxArray": [
            {
                "Syntax": "unit **nearTargets** range",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nrange: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of arrays in format:\n\n* 0: _position (perceived, includes judgment and memory errors)\n\n* 1: _type (perceived, gives only what was recognized)\n\n* 2: _side (perceived side)\n\n* 3: _subjectiveCost (positive for enemies, more positive for more important or more dangerous enemies)\n\n* 4: _object (object type, can be used to get more information if needed)\n\n* 5: _positionAccuracy (assumed accuracy of the perceived position)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer nearTargets 100;// Could return something like this: [[[2555.33,2535.33,1.32708],\"SoldierEB\",EAST,214222,EAST 1-1-A:1],[[2550.39,2482.5,1.32696],\"SoldierWB\",WEST,0,WEST 1-1-A:2]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearTargets",
        "modifiers": []
    },
    "setstatvalue": {
        "name": "setStatValue",
        "description": "Sets a value to a given stat. \nA list of possible StatNames can be found here: [Arma 3: Stat Names](https://community.bistudio.com/wiki/Arma_3:_Stat_Names)\nIts important to note that most Stats are restricted to scripts and missions in certain paths.\nFor example \"ExpWarlockDown\" is restricted to scripts in any subdirectory of \"a3\\Missions_F_Exp\\Campaign\\Missions\\\"",
        "syntaxArray": [
            {
                "Syntax": "setStatValue [name, value]",
                "Params": "[name, value]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nsetStatValue [\"ExpWarlockDown\", 1]; // Unlocks the \"Warlock Down\" Steam achivement\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setStatValue",
        "modifiers": []
    },
    "uavcontrol": {
        "name": "UAVControl",
        "description": "Returns array with current operator of UAV and his vehicle role in UAV. If nobody is controlling the UAV, the command tries to find any person with connected terminal to this UAV, in which case the vehicle role is an empty string. If command cannot find anyone, output is [[objNull](https://community.bistudio.com/wiki/objNull), \"\"].\n\nSince Arma 3 v1.96 this command returns both driver and gunner units if the UAV is controlled by 2 players. Here is the list of all expected outputs:\n\n* [player1, \"DRIVER\"] - player1 is controlling the UAV and is the pilot\n\n* [player2, \"GUNNER\"] - player2 is controlling the UAV and is the gunner\n\n* [player1, \"DRIVER\", player2, \"GUNNER\"] - player1 is controlling the UAV and is the pilot, player2 is controlling UAV and is the gunner\n\n* [player3, \"\"] - no one is controlling the UAV, player3 is connected to the UAV via terminal, but not controlling it yet\n\n* [[objNull](https://community.bistudio.com/wiki/objNull), \"\"] - nobody is controlling or connected to the UAV\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "UAVControl uav",
                "Params": "uav: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [unit, vehicleRole] (or sometimes [unit1, vehicleRole, unit2, vehicleRole], see description), where:\n\n* unit: [Object](https://community.bistudio.com/wiki/Object) - UAV operator\n\n* vehicleRole: [String](https://community.bistudio.com/wiki/String) - vehicle role of the operator in UAV. Could be \"DRIVER\", \"GUNNER\" or \"\" (see description)"
            }
        ],
        "examples": [
            "\n```sqf\nUAVControl uav;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/UAVControl",
        "modifiers": []
    },
    "lockcamerato": {
        "name": "lockCameraTo",
        "description": "Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target.",
        "syntaxArray": [
            {
                "Syntax": "vehicle lockCameraTo [target, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - UAV\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) or [PositionASL](https://community.bistudio.com/wiki/PositionASL) - use [objNull](https://community.bistudio.com/wiki/objNull) for unlocking\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - path to the turret with required camera\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nuav lockCameraTo [vehicle, [0,0]];\n```\n",
            "\n```sqf\nuav lockCameraTo [objNull, [0,0]]; // unlocks the turret\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockCameraTo",
        "modifiers": []
    },
    "ctrlchecked": {
        "name": "ctrlChecked",
        "description": "Returns the current state of given [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES) control. Since Arma 3 v1.72 it is possible to query multiple checkboxes by providing checkbox index. For more information see [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**ctrlChecked** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES) control. If control contain multiple checkboxes, only checkbox with index 0 is queried.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) checked, [false](https://community.bistudio.com/wiki/false) unchecked"
            },
            {
                "Syntax": "control **ctrlChecked** index *Since Arma 3 v1.71.141591*",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_CHECKBOXES](https://community.bistudio.com/wiki/CT_CHECKBOXES) control\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - checkbox index\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) checked, [false](https://community.bistudio.com/wiki/false) unchecked"
            }
        ],
        "examples": [
            "\n```sqf\nctrlChecked _control;\n```\n",
            "\n```sqf\n_control ctrlChecked 3;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlChecked",
        "modifiers": []
    },
    "allsimpleobjects": {
        "name": "allSimpleObjects",
        "description": "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.\n> ",
        "syntaxArray": [
            {
                "Syntax": "allSimpleObjects classes",
                "Params": "classes: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - classnames array. Use [] to return all simple objects\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of [simple objects](https://community.bistudio.com/wiki/createSimpleObject)"
            }
        ],
        "examples": [
            "\n```sqf\nallSimpleObjects [\"Box_NATO_Equip_F\", \"Land_CampingChair_V2_F\"];\n```\n",
            "\n```sqf\n_allSimpleObjects = allSimpleObjects [];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allSimpleObjects",
        "modifiers": []
    },
    "vestitems": {
        "name": "vestItems",
        "description": "Get array with all items (of any kind, even weapons) from vest.",
        "syntaxArray": [
            {
                "Syntax": "**vestItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nvestItems player;\n```\n\n\n\n```sqf\n[\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"16Rnd_9x21_Mag\",\n\t\"16Rnd_9x21_Mag\",\n\t\"HandGrenade\",\n\t\"HandGrenade\",\n\t\"SmokeShell\",\n\t\"SmokeShellGreen\",\n\t\"Chemlight_green\",\n\t\"Chemlight_green\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vestItems",
        "modifiers": []
    },
    "countunknown": {
        "name": "countUnknown",
        "description": "Count how many units in the array are unknown to the given unit.",
        "syntaxArray": [
            {
                "Syntax": "unitName **countUnknown** arrayName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\narrayName: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_num = player countUnknown list _triggerOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/countUnknown",
        "modifiers": [
            "Global argument"
        ]
    },
    "deletevehicle": {
        "name": "deleteVehicle",
        "description": "Deletes an object. Only objects inserted in the mission editor and objects created during the game's progress can be deleted by this command. Island objects and player cannot be removed.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**deleteVehicle** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteVehicle _house1;\n```\n",
            "Deleting a vehicle with crew: \n```sqf\n// might want to make sure that the car is local\n{car deleteVehicleCrew _x} forEach crew car;\ndeleteVehicle car;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteVehicle",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "createmenu": {
        "name": "createMenu",
        "description": "Creates a previously added menu.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **createMenu** index",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nindex: [Number](https://community.bistudio.com/wiki/Number) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/createMenu",
        "modifiers": []
    },
    "opengps": {
        "name": "openGPS",
        "description": "Opens or closes minimap if player has \"ItemGPS\" linked in inventory and \"MinimapDisplayComponent\" is not disabled with [enableInfoPanelComponent](https://community.bistudio.com/wiki/enableInfoPanelComponent). Returns [true](https://community.bistudio.com/wiki/true) on success. If more than one minimap is open (see [infoPanels](https://community.bistudio.com/wiki/infoPanels), [infoPanel](https://community.bistudio.com/wiki/infoPanel)) each call to the command will close only 1 minimap. Visibility of minimap can be checked with [visibleGPS](https://community.bistudio.com/wiki/visibleGPS) command.",
        "syntaxArray": [
            {
                "Syntax": "openGPS open",
                "Params": "open: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to open, [false](https://community.bistudio.com/wiki/false) to close\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\nplayer linkItem \"ItemGPS\";\nprivate _success = openGPS true;\n```\n",
            "To close all opened minimaps:\n```sqf\nwhile { openGPS false } do { };\n// or\nwhile { visibleGPS } do { openGPS false };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/openGPS",
        "modifiers": []
    },
    "getnumber": {
        "name": "getNumber",
        "description": "Extract number from config entry.",
        "syntaxArray": [
            {
                "Syntax": "**getNumber** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_value = getNumber (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"maxSpeed\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getNumber",
        "modifiers": []
    },
    "profilenamespace": {
        "name": "profileNamespace",
        "description": "Returns the global namespace attached to the active user profile. Use [setVariable](https://community.bistudio.com/wiki/setVariable) and [getVariable](https://community.bistudio.com/wiki/getVariable) to save and load data to and from this [Namespace](https://community.bistudio.com/wiki/Namespace). A variable can be deleted by setting its value to [nil](https://community.bistudio.com/wiki/nil). By default the variables set in this namespace will exist while the game is running and variables are saved persistently when the game is closed. Saving can also be forced by using [saveProfileNamespace](https://community.bistudio.com/wiki/saveProfileNamespace).\nThe variables are stored next to the user profile in a file named myUsername.vars.GAMENAME.",
        "syntaxArray": [
            {
                "Syntax": "**profileNamespace**",
                "Params": "",
                "Return": "[Namespace](https://community.bistudio.com/wiki/Namespace)"
            }
        ],
        "examples": [
            "\n```sqf\n_namespace = profileNamespace;\n```\n",
            "\n```sqf\nprofileNamespace setVariable [\"var_kills\",10000];\n_playerKills = profileNamespace getVariable \"var_kills\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/profileNamespace",
        "modifiers": []
    },
    "setdynamicsimulationdistancecoef": {
        "name": "setDynamicSimulationDistanceCoef",
        "description": "Sets activation distance multiplier of [Arma 3: Dynamic Simulation](https://community.bistudio.com/wiki/Arma_3:_Dynamic_Simulation) for the given class",
        "syntaxArray": [
            {
                "Syntax": "class **setDynamicSimulationDistanceCoef** multiplier",
                "Params": "class: [String](https://community.bistudio.com/wiki/String) - Multiplier class, currently only:\n\n* \"IsMoving\" - Multiplies the entity activation distance by set value if the entity is moving. Default: 2\n\nmultiplier: [Number](https://community.bistudio.com/wiki/Number) - Distance multiplier\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"IsMoving\" setDynamicSimulationDistanceCoef 3;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDynamicSimulationDistanceCoef",
        "modifiers": []
    },
    "diag_log": {
        "name": "diag_log",
        "description": "Dumps the argument's value to the [report file](https://community.bistudio.com/wiki/arma.RPT). Each call creates a new line in the file.",
        "syntaxArray": [
            {
                "Syntax": "**diag_log** output",
                "Params": "output: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_log time;\n```\n",
            "\n```sqf\ndiag_log format [\"%1, %2\", player, time];\n```\n",
            "\n```sqf\n_array = [1, \"foo\", player, \"bar\"];\n{\n\tdiag_log _x;\n} forEach _array ; // creates 4 entries on 4 lines\n```\n",
            "\n```sqf\n_array = [1, \"foo\", player, \"bar\"];\ndiag_log _array ; // Creates one entry of e.g. [1,\"foo\",B Alpha 1-1:1 (Player Name),\"bar\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_log",
        "modifiers": []
    },
    "ctrldelete": {
        "name": "ctrlDelete",
        "description": "Deletes given control. The control has to be created either by script with [ctrlCreate](https://community.bistudio.com/wiki/ctrlCreate) or to have deletable property in config set to [true](https://community.bistudio.com/wiki/true). Use [ctrlShow](https://community.bistudio.com/wiki/ctrlShow) [false](https://community.bistudio.com/wiki/false) and [ctrlEnable](https://community.bistudio.com/wiki/ctrlEnable) [false](https://community.bistudio.com/wiki/false) to disable controls that cannot be deleted. Returns [Boolean](https://community.bistudio.com/wiki/Boolean) indicating  whether the deletion was successful.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlDelete** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlDelete ((findDisplay 20000) displayCtrl 20001);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlDelete",
        "modifiers": []
    },
    "apply": {
        "name": "apply",
        "description": "Applies given code to each element of the array and returns resulting array. The value of the current array element, to which the code will be applied, is stored in variable [_x](https://community.bistudio.com/wiki/Magic_Variables#x).",
        "syntaxArray": [
            {
                "Syntax": "array **apply** code",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - array of [Anything](https://community.bistudio.com/wiki/Anything)\n\ncode: [Code](https://community.bistudio.com/wiki/Code) - code to be executed on each element of the array. Current element value is stored in variable [_x](https://community.bistudio.com/wiki/Magic_Variables#x)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - resulting array"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3,4,5,6,7,8,9,0] apply {[1,0] select (_x % 2 == 0)}; //[1,0,1,0,1,0,1,0,1,0]\n```\n",
            "\n```sqf\n_arr = [1,2,3,4,5,6,7,8,9,0] apply {_x ^ _x}; //[1,4,27,256,3125,46656,823543,16777216,387420480,1]\n```\n",
            "\n```sqf\n_arr1 = [];\n_arr1 resize 20;\n_arr2 = _arr1 apply {0}; //[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n```\n",
            "\n```sqf\n[0,1,2,3,4] apply {str _x}; // Returns [\"0\",\"1\",\"2\",\"3\",\"4\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/apply",
        "modifiers": []
    },
    "tvsortall": {
        "name": "tvSortAll",
        "description": "Sorts all children, including trees deriving from given path. Text of [Tree View](https://community.bistudio.com/wiki/CT_TREE) entries is used for sorting.",
        "syntaxArray": [
            {
                "Syntax": "control tvSortAll [path, reversed]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path to start sorting from\n\nreversed: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to reverse sort it.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncontrol tvSortAll [[], false]; // Sorts the complete Tree View\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSortAll",
        "modifiers": []
    },
    "waypointloiteraltitude": {
        "name": "waypointLoiterAltitude",
        "description": "Gets the waypoint loiter altitude. Waypoint uses format Waypoint.",
        "syntaxArray": [
            {
                "Syntax": "waypointLoiterAltitude waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointLoiterAltitude [groupOne, 1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointLoiterAltitude",
        "modifiers": []
    },
    "ctrlsetfontheighth4": {
        "name": "ctrlSetFontHeightH4",
        "description": "Sets H3 font size of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontHeightH4** height",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightH4 0.05"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightH4",
        "modifiers": []
    },
    "ctrlshown": {
        "name": "ctrlShown",
        "description": "Returns whether given control is shown.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **ctrlShown** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = ctrlShown _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlShown",
        "modifiers": []
    },
    "cutfadeout": {
        "name": "cutFadeOut",
        "description": "Terminates the effect in the given layer by fading it out according to the given duration. If named layer is used and it doesn't exist, it will be allocated. For title layer see [titleFadeOut](https://community.bistudio.com/wiki/titleFadeOut).\n> ",
        "syntaxArray": [
            {
                "Syntax": "layer **cutFadeOut** duration",
                "Params": "layer: [Number](https://community.bistudio.com/wiki/Number)\n\nduration: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "layerName **cutFadeOut** duration *Since Arma 3 v1.57.134673*",
                "Params": "layerName: [String](https://community.bistudio.com/wiki/String) - effect layer name. Layer names are CaSe SeNsItIvE\n\nduration: [Number](https://community.bistudio.com/wiki/Number) - fade out time\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - number of the corresponding layer"
            }
        ],
        "examples": [
            "\n```sqf\n0 cutFadeOut 2;\n```\n",
            "\n```sqf\n_layer = \"layer1\" cutFadeOut 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cutFadeOut",
        "modifiers": []
    },
    "enablediaglegend": {
        "name": "enableDiagLegend",
        "description": "Enable or disable the legend for diagnostics. **Internal dev only!**",
        "syntaxArray": [
            {
                "Syntax": "**enableDiagLegend** enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableDiagLegend false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableDiagLegend",
        "modifiers": []
    },
    "ctrlsetfont": {
        "name": "ctrlSetFont",
        "description": "Sets the font for given control (see [Fonts](https://community.bistudio.com/wiki/Fonts#Available_Fonts))\nAvailable Arma 3 fonts\n\n* \"EtelkaMonospacePro\"\n\n* \"EtelkaMonospaceProBold\"\n\n* \"EtelkaNarrowMediumPro\"\n\n* \"LCD14\"\n\n* \"LucidaConsoleB\"\n\n* \"PuristaBold\"\n\n* \"PuristaLight\"\n\n* \"PuristaMedium\"\n\n* \"PuristaSemibold\"\n\n* \"RobotoCondensed\"\n\n* \"RobotoCondensedBold\"\n\n* \"RobotoCondensedLight\"\n\n* \"TahomaB\"",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetFont** fontName",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String) - one of the fonts defined in CfgFontFamilies\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFont \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFont",
        "modifiers": []
    },
    "verifysignature": {
        "name": "verifySignature",
        "description": "Check if file is signed by any key present in game keys folders. On clients, it does not check against the keys accepted by server.",
        "syntaxArray": [
            {
                "Syntax": "**verifySignature** filename",
                "Params": "filename: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nverifySignature \"@MyAddon\\Addons\\SomeAddon.pbo\";\n```\n",
            "\n```sqf\nverifySignature \"@MyAddon\\Somefnc.dll\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/verifySignature",
        "modifiers": []
    },
    "matrixmultiply": {
        "name": "matrixMultiply",
        "description": "Returns resulting matrix from the [multiplication](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Matrix_multiplication) of two matrices. First matrix must be of the size n ✕ **k**, while the second must be of the size **k** ✕ m, i.e columns matrix1 == rows matrix2. The resulting matrix will be of the size n ✕ m. If the shapes do not match, empty array [] will be returned.\n[](https://community.bistudio.com/wiki/File:matrixMultiply.jpg)",
        "syntaxArray": [
            {
                "Syntax": "matrix1 matrixMultiply matrix2",
                "Params": "matrix1: [Array](https://community.bistudio.com/wiki/Array) - matrix of the size n*(rows)* ✕ k*(columns)*\n\nmatrix2: [Array](https://community.bistudio.com/wiki/Array) - matrix of the size k*(rows)* ✕ m*(columns)*\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - resulting matrix of the size n*(rows)* ✕ m*(columns)*"
            }
        ],
        "examples": [
            "\n```sqf\n[\n\t[2],\n\t[2]\n] \nmatrixMultiply \n[ \n\t[3] \n]\n/* returns \n[\n\t[6],\n\t[6]\n] */\n```\n",
            "\n```sqf\n[\n\t[-1,0,0],\n\t[0,-1,0]\n] \nmatrixMultiply \n[\n\t[1,2],\n\t[3,1],\n\t[2,3]\n] \n/* returns \n[\n\t[-1,-2],\n\t[-3,-1]\n] */\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/matrixMultiply",
        "modifiers": []
    },
    "trim": {
        "name": "trim",
        "description": "Trims a [string](https://community.bistudio.com/wiki/String).",
        "syntaxArray": [
            {
                "Syntax": "trim stringValue",
                "Params": "stringValue: [String](https://community.bistudio.com/wiki/String) - string to be trimmed. spaces, tabs and line returns are removed from both ends of *stringValue*.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - trimmed string"
            },
            {
                "Syntax": "string trim [chars, where]",
                "Params": "string: [String](https://community.bistudio.com/wiki/String) - string to be trimmed\n\nchars: [String](https://community.bistudio.com/wiki/String) - list of characters to be trimmed\n\nwhere: [Number](https://community.bistudio.com/wiki/Number) - Can be:\n\n* 0 - trim at the beginning (left) and the end (right)\n\n* 1 - trim at the beginning (left)\n\n* 2 - trim at the end (right)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - trimmed string"
            }
        ],
        "examples": [
            "\n```sqf\ntrim \"\t\thello, how are you?  \"; // returns \"hello, how are you?\"\n```\n",
            "\n```sqf\n\"hewosentence!123\" trim [\"3e1o2hw\", 0]; // returns \"sentence!\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/trim",
        "modifiers": []
    },
    "getfriend": {
        "name": "getFriend",
        "description": "Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it is friendly. See also [Side relations](https://community.bistudio.com/wiki/Side_relations).",
        "syntaxArray": [
            {
                "Syntax": "side1 **getFriend** side2",
                "Params": "side1: [Side](https://community.bistudio.com/wiki/Side)\n\nside2: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Decimal value between 0.0 to 1.0"
            }
        ],
        "examples": [
            "\n```sqf\nvalue = west getFriend east;\n```\n",
            "\n```sqf\n_isEnemy = side _killer getFriend side _victim < 0.6;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getFriend",
        "modifiers": [
            "Global argument"
        ]
    },
    "lnbdeleterow": {
        "name": "lnbDeleteRow",
        "description": "Removes row with the given index from the given listbox or combobox.",
        "syntaxArray": [
            {
                "Syntax": "_ctrl lnbDeleteRow row",
                "Params": "_ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbDeleteRow 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbDeleteRow",
        "modifiers": []
    },
    "datetonumber": {
        "name": "dateToNumber",
        "description": "Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st  23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274 \nThis is how this command works. The 365 days of the year are presented in range 0...1. So each day will be:\n1 / 365 =  0.00273973 \nIn a leap year there are 366 days, so the range will increase by 1 day:\n1 / 365  *  366 = 1.00274\nIn short, in a normal year the command returns in range 0...1 in a leap year it will return in range 0...1.00274",
        "syntaxArray": [
            {
                "Syntax": "**dateToNumber** date",
                "Params": "date: [Array](https://community.bistudio.com/wiki/Array) - array in [date](https://community.bistudio.com/wiki/date) format\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_float = dateToNumber [2035,7,6,12,0]; //0.510959\n```\n",
            "\n```sqf\ndateToNumber date; //will return float number for the current date.\n```\n",
            "Calculate days from 1/1/1970: \n```sqf\nfnc_daysFromEpoc = \n{\n\tprivate _year = param [0];\n\tprivate _days = 0;\n\tfor \"_i\" from 1970 to _year - 1 do \n\t{\n\t\t_days = _days + round linearConversion [0, 1, dateToNumber [_i, 12, 31, 23, 59], 0, 365, false];\n\t};\n\t_days + linearConversion [0, 1, dateToNumber _this, 0, 365, false];\n};\n\nhint str (date call fnc_daysFromEpoc);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dateToNumber",
        "modifiers": []
    },
    "weaponinertia": {
        "name": "weaponInertia",
        "description": "Returns current rate of how much the weapon view is distorted because of quick aiming.",
        "syntaxArray": [
            {
                "Syntax": "weaponInertia unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - In format [x_sway, y_sway]"
            }
        ],
        "examples": [
            "\n```sqf\n_inertia = weaponInertia player; //[-0.0126307,0.038023]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponInertia",
        "modifiers": []
    },
    "parsesimplearray": {
        "name": "parseSimpleArray",
        "description": "Converts given, formatted as simple array, [String](https://community.bistudio.com/wiki/String) into a valid [Array](https://community.bistudio.com/wiki/Array). Simple array is array consisting of [Numbers](https://community.bistudio.com/wiki/Number), [Strings](https://community.bistudio.com/wiki/String), [Booleans](https://community.bistudio.com/wiki/Boolean) and [Arrays](https://community.bistudio.com/wiki/Array) of all of the above. For example: [1,\"2\",true,[4,\"five\",false]]. The string representation of this array compatible with parseSimpleArray will be \"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\" accordingly. This command is almost **4x faster** than similar uncached [call](https://community.bistudio.com/wiki/call) [compile](https://community.bistudio.com/wiki/compile) method. And because [call](https://community.bistudio.com/wiki/call) [compile](https://community.bistudio.com/wiki/compile) is not required, it is also **more secure** and primarily intended for use with [callExtension](https://community.bistudio.com/wiki/callExtension) to parse the [String](https://community.bistudio.com/wiki/String) output into [Array](https://community.bistudio.com/wiki/Array).\nSince Arma 3 v1.96 the command will tolerate extra spaces and supports single quotes. The only recognised keywords (case **in**sensitive) are:\n\n* true - translates into [true](https://community.bistudio.com/wiki/true)\n\n* false - translates into [false](https://community.bistudio.com/wiki/false)\n\n* nil - translates into [nil](https://community.bistudio.com/wiki/nil)\n\n* null - translates into [nil](https://community.bistudio.com/wiki/nil)\n\n* <null> - translates into [nil](https://community.bistudio.com/wiki/nil)\n\n* any - translates into [nil](https://community.bistudio.com/wiki/nil)",
        "syntaxArray": [
            {
                "Syntax": "**parseSimpleArray** stringArray",
                "Params": "stringArray: [String](https://community.bistudio.com/wiki/String) - string formatted as simple array\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - valid array"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = parseSimpleArray \"[1,2,3]\";\n```\n",
            "\n```sqf\n_bool = true;\n_num = 123.45;\n_str = \"ok\";\n_arr = [1,false,\"cool\"];\n_res = parseSimpleArray format [\"[%1,%2,%3,%4]\", _bool, _num, str _str, str _arr]; \n// Note how _bool and _num do not need str, however if used anyway, the result in this case would be identical\nhint str _res;  // Returns [true,123.45,\"ok\",[1,false,\"cool\"]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/parseSimpleArray",
        "modifiers": []
    },
    "menutext": {
        "name": "menuText",
        "description": "Returns current text set in menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuText [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control menuText path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlMenuStrip menuText [1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuText",
        "modifiers": []
    },
    "taskmarkeroffset": {
        "name": "taskMarkerOffset",
        "description": "Returns model space position for the task marker",
        "syntaxArray": [
            {
                "Syntax": "taskMarkerOffset unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - offset in format [x, y, z]"
            }
        ],
        "examples": [
            "\n```sqf\n_offset = taskMarkerOffset player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskMarkerOffset",
        "modifiers": []
    },
    "reportremotetarget": {
        "name": "reportRemoteTarget",
        "description": "Shares the target vehicle via datalink to the [Side](https://community.bistudio.com/wiki/Side) center for a given time.",
        "syntaxArray": [
            {
                "Syntax": "side reportRemoteTarget [target, time]",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\ntime: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nblufor reportRemoteTarget [vehicle player, 60];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/reportRemoteTarget",
        "modifiers": [
            "Local argument"
        ]
    },
    "moveingunner": {
        "name": "moveInGunner",
        "description": "Move soldier into vehicle gunner position (Immediate, no animation).",
        "syntaxArray": [
            {
                "Syntax": "unitName **moveInGunner** vehicle",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne moveInGunner tankOne \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveInGunner",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setfeaturetype": {
        "name": "setFeatureType",
        "description": "Enable/disable object as a feature/landmark. Possible feature types:\n\n* 0 - Feature disabled\n\n* 1 - Object is always visible within object view distance\n\n* 2 - Object is always visible within terrain view distance\nThe limit is 500 map/static objects and 200 dynamic objects including config features and auto features (flying helicopters, airplanes). When limit is reached, function returns false.",
        "syntaxArray": [
            {
                "Syntax": "object setFeatureType type",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [Number](https://community.bistudio.com/wiki/Number) - the desired feature type\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "Set a building to be always rendered:\n\n```sqf\n building setFeatureType 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFeatureType",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setenginerpmrtd": {
        "name": "setEngineRpmRTD",
        "description": "Sets the RPM of given engines. > ",
        "syntaxArray": [
            {
                "Syntax": "helicopter setEngineRpmRTD [rpm, engineIndex]",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\nrpm: [Number](https://community.bistudio.com/wiki/Number) - Wanted RPM\n\nengineIndex: [Number](https://community.bistudio.com/wiki/Number) - Index of the engine\n\n* engine index 0: engine #1\n\n* engine index 1: engine #2\n\n* engine index 2: engine #3\n\n* engine index -1: all engines\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopter setEngineRpmRTD [1337, -1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setEngineRpmRTD",
        "modifiers": []
    },
    "setgroupiconsvisible": {
        "name": "setGroupIconsVisible",
        "description": "Sets if group icons added with [addGroupIcon](https://community.bistudio.com/wiki/addGroupIcon) are visible on map and in the HUD.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**setGroupIconsVisible** [showOnMap, showOnHUD]",
                "Params": "[showOnMap, showOnHUD]: [Array](https://community.bistudio.com/wiki/Array)\n\nshowOnMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to show on map. Default - [false](https://community.bistudio.com/wiki/false)\n\nshowOnHUD: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to show on HUD. Default - [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing) (prior to Arma 3 v1.94 this command returned [Object](https://community.bistudio.com/wiki/Object) of [ null](https://community.bistudio.com/wiki/objNull) value)"
            }
        ],
        "examples": [
            "\n```sqf\nsetGroupIconsVisible [true,true];  \n(group player) addGroupIcon [\"b_inf\", [0, 0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupIconsVisible",
        "modifiers": [
            "Local effect"
        ]
    },
    "setsoundeffect": {
        "name": "setSoundEffect",
        "description": "Defines the different sound effects. \n\n\n* Sound - plays a 2D sound as if [playSound](https://community.bistudio.com/wiki/playSound) was used from CfgSounds (mission or main config)\n\n* Voice - attaches a 3D sound from CfgSounds (mission or main config) to the object that activated the trigger and plays it as if [say3D](https://community.bistudio.com/wiki/say3D) was used\n\n* SoundEnv - [Triggers only] plays an environmental sound from CfgEnvSounds (mission or main config)\n\n* SoundDet - [Triggers only] creates a dynamic sound object attached to a trigger defined in [CfgSFX](https://community.bistudio.com/wiki/CfgSFX) (mission or main config)\n\nTo stop any sound, deactivate the trigger (might take up to 0.5 sec to stop) or delete the trigger (immediate). \n\nAlso use \"$NONE$\" to skip the sound (1st item), when there is none to be used (Example 3, 4, 5).\n> ",
        "syntaxArray": [
            {
                "Syntax": "trigger **setSoundEffect** [sound, voice, soundEnv, soundDet]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n[sound, voice, soundEnv, soundDet]: [Array](https://community.bistudio.com/wiki/Array) of strings, see description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "waypoint **setSoundEffect** [sound, voice]",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n[sound, voice]: [Array](https://community.bistudio.com/wiki/Array) of strings, see description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setSoundEffect [\"Alarm\", \"\", \"\", \"\"];\n```\n",
            "\n```sqf\n [_group1,2] setSoundEffect [\"Alarm\", \"\"];\n```\n",
            "\n```sqf\n_trigger setSoundEffect [\"$NONE$\", \"Alarm\", \"\", \"\"];\n```\n",
            "\n```sqf\n_trigger setSoundEffect [\"$NONE$\", \"\", \"BattlefieldExplosions3\", \"\"];\n```\n",
            "\n```sqf\n_trigger setSoundEffect [\"$NONE$\", \"\", \"\", \"Owl\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSoundEffect",
        "modifiers": []
    },
    "modeltoworldworld": {
        "name": "modelToWorldWorld",
        "description": "Converts position from object model space to world space (usable by [setPosWorld](https://community.bistudio.com/wiki/setPosWorld) for example).",
        "syntaxArray": [
            {
                "Syntax": "obj modelToWorldWorld modelPos",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\nmodelPos: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array):"
            }
        ],
        "examples": [
            "\n```sqf\nplayer modelToWorldWorld [0,1,0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/modelToWorldWorld",
        "modifiers": []
    },
    "showwarrant": {
        "name": "showWarrant",
        "description": "Enable ID card. > ",
        "syntaxArray": [
            {
                "Syntax": "**showWarrant** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean) - (default [false](https://community.bistudio.com/wiki/false))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/showWarrant",
        "modifiers": []
    },
    "isagent": {
        "name": "isAgent",
        "description": "Check if team member is an agent.",
        "syntaxArray": [
            {
                "Syntax": "**isAgent** teamMember",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nisAgent teamMember _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAgent",
        "modifiers": []
    },
    "stop": {
        "name": "stop",
        "description": "Stop AI unit.Stopped unit will not be able to move, fire, or change its orientation to follow a watched object.It may still change the stance if deemed appropriate (e.g. under fire).Use [disableAI](https://community.bistudio.com/wiki/disableAI) to disable specific AI capabilities.",
        "syntaxArray": [
            {
                "Syntax": "unitName **stop** toggle",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\ntoggle: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nloon1 stop true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/stop",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "allmines": {
        "name": "allMines",
        "description": "Returns an array of all mines in the mission",
        "syntaxArray": [
            {
                "Syntax": "**allMines**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nallMines\n```\n",
            "\n```sqf\n(allMines select 0) mineDetectedBy west;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allMines",
        "modifiers": []
    },
    "setflagtexture": {
        "name": "setFlagTexture",
        "description": "Sets flag texture.\n\nIf texture is \"\", flag is not drawn.\nCustom texture can be used, as long as it is in *.jpg format and has dimensions of 200×200px, or *.paa (Arma 3 standard: 512×256px).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "flag setFlagTexture texture",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object)\n\ntexture: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_flagE setFlagTexture \"\\ca\\misc\\data\\sever_vlajka.paa\";\n```\n",
            "\n```sqf\n_flagW setFlagTexture \"\\ca\\misc\\data\\usa_vlajka.paa\";\n```\n",
            "\n```sqf\nflag1 setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";\n```\n",
            "\n```sqf\ncustomFlag setFlagTexture \"myMissionFlag.paa\";\n```\n",
            "\n```sqf\nflagARMA3 setFlagTexture \"\\a3\\ui_f\\data\\Logos\\arma3_expansion_ca.paa\";\n```\n",
            "Capturable OPFOR flag:\n```sqf\nprivate _flag = \"FlagPole_F\" createVehicle position player;\n_flag setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_CSAT_CO.paa\";\n_flag setFlagSide east;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFlagTexture",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "modeltoworld": {
        "name": "modelToWorld",
        "description": "Translates relative position from object model space into world position.\nThis command will take into account [vectorUp](https://community.bistudio.com/wiki/vectorUp) of the object when calculating relative coordinates.\nFor ASL version see [modelToWorldWorld](https://community.bistudio.com/wiki/modelToWorldWorld)",
        "syntaxArray": [
            {
                "Syntax": "model modelToWorld position",
                "Params": "model: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Position](https://community.bistudio.com/wiki/Position) - [x,y,z] offset relative to the model centre, format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - translated world position, format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\n_aboveAndBehindPlayer = player modelToWorld [0,-1,3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/modelToWorld",
        "modifiers": []
    },
    "isinremainscollector": {
        "name": "isInRemainsCollector",
        "description": "Checks if unit or vehicle is queued for disposal after death.",
        "syntaxArray": [
            {
                "Syntax": "**isInRemainsCollector** remain",
                "Params": "remain: [Object](https://community.bistudio.com/wiki/Object) - vehicle or unit\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isInRemainsCollector",
        "modifiers": [
            "Global argument"
        ]
    },
    "assigneditems": {
        "name": "assignedItems",
        "description": "Get array with all assigned items. The resulting Array is sorted like: [<Map>, <Compass>, <Watch>, <Radio>, <GPS>, <NVG>, <Binoculars>]. But if something is missing it get's omitted so you can not be sure that some element is at a constant index. To return stored items see [items](https://community.bistudio.com/wiki/items) and [itemsWithMagazines](https://community.bistudio.com/wiki/itemsWithMagazines).",
        "syntaxArray": [
            {
                "Syntax": "**assignedItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n hint str assignedItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedItems",
        "modifiers": []
    },
    "score": {
        "name": "score",
        "description": "Returns the person's score in MP.",
        "syntaxArray": [
            {
                "Syntax": "**score** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_pScore = score player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/score",
        "modifiers": []
    },
    "islighton": {
        "name": "isLightOn",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if vehicle headlights are on otherwise [false](https://community.bistudio.com/wiki/false).  \n> ",
        "syntaxArray": [
            {
                "Syntax": "isLightOn vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle with headlights\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "isLightOn [vehicle, turret]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle with search light on a turret\n\nturret: [Array](https://community.bistudio.com/wiki/Array) - turret path\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_headlightsOn = isLightOn vehicle player;\n```\n",
            "\n```sqf\n_pilotLightOn = isLightOn heli;\n```\n",
            "\n```sqf\n_searchLightOn = isLightOn [heli, [0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isLightOn",
        "modifiers": [
            "Global argument"
        ]
    },
    "lnbsetcurselrow": {
        "name": "lnbSetCurSelRow",
        "description": "Selects the row with the given index of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetCurSelRow [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetCurSelRow index",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndisableSerialization;\n_ctrl = (findDisplay 300) displayCtrl 304;\n_ctrl lnbSetCurSelRow 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetCurSelRow",
        "modifiers": []
    },
    "setgroupicon": {
        "name": "setGroupIcon",
        "description": "Sets group icon properties.",
        "syntaxArray": [
            {
                "Syntax": "group **setGroupIcon** [id, icon, offset]",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n[id, icon, offset] : [Array](https://community.bistudio.com/wiki/Array)\n\nid: [Number](https://community.bistudio.com/wiki/Number) - The icon ID returned by [addGroupIcon](https://community.bistudio.com/wiki/addGroupIcon)\n\nicon: [String](https://community.bistudio.com/wiki/String) - Class name of desired icon from CfgGroupIcons\n\noffset: [Array](https://community.bistudio.com/wiki/Array) (Optional) - X and Y offsets of the icon in form [offsetX, offsetY]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_target setGroupIcon [_icon, \"hc_selectedEnemy\"];\n_target setGroupIcon [_icon, \"flag\"];\n_grp setGroupIcon [_iconsize, _iconsizeclass, _offset];\n_grp setGroupIcon [_newid, _icon, _offset];\n_grp setGroupIcon [_icon, _iconclass];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupIcon",
        "modifiers": []
    },
    "lnbsetdata": {
        "name": "lnbSetData",
        "description": "Sets the additional text (invisible) on the item with the given position of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetData [idc, [row, column], data]",
                "Params": "[idc, [row, column], data]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\n[row, column]: [Array](https://community.bistudio.com/wiki/Array)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String) - The invisible text to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetData [[row, column], data]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n[[row, column], data]: [Array](https://community.bistudio.com/wiki/Array)\n\n[row, column]: [Array](https://community.bistudio.com/wiki/Array)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String) - The invisible text to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetData [123, [0,0],\"#1\"];\n```\n",
            "\n```sqf\n_ctrl lnbSetData [[0,0],\"#1\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetData",
        "modifiers": []
    },
    "setvehicleid": {
        "name": "setVehicleId",
        "description": "Sets ID to vehicle. By this ID vehicle is referenced by triggers and waypoints.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **setVehicleId** id",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nid: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVehicleId 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleId",
        "modifiers": []
    },
    "lock": {
        "name": "lock",
        "description": "Lock vehicle (disable mounting / dismounting) for player.\nThis command will remove user get in/get out actions but will not stop player getting into or out of vehicle via script commands (e.g [moveInCargo](https://community.bistudio.com/wiki/moveInCargo)).\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicleName lock locked",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nlocked: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to lock, [false](https://community.bistudio.com/wiki/false) to unlock\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "vehicleName lock lockstate *Since Arma 3 v0.50*",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nlockstate: [Number](https://community.bistudio.com/wiki/Number) - Can be one of the following:\n0 - Unlocked\n1 - Default (player subordinate cannot enter until his leader says so)\n2 - Locked\n3 - Locked for player\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_jeepOne lock true;\n```\n",
            "\n```sqf\nheli lock true;\nlocked heli; // 2\n\nheli lock false;\nlocked heli; // 0\n\nheli lock 1;\nlocked heli; // 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lock",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "unitaimposition": {
        "name": "unitAimPosition",
        "description": "Returns the position on the unit other units can aim at. Same as [aimPos](https://community.bistudio.com/wiki/aimPos) only returns position in [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) format and has render scope alternative [unitAimPositionVisual](https://community.bistudio.com/wiki/unitAimPositionVisual).",
        "syntaxArray": [
            {
                "Syntax": "**unitAimPosition** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\nunitAimPosition player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitAimPosition",
        "modifiers": [
            "Global argument"
        ]
    },
    "setmarkerposlocal": {
        "name": "setMarkerPosLocal",
        "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like [createVehicle](https://community.bistudio.com/wiki/createVehicle), [createUnit](https://community.bistudio.com/wiki/createUnit), [createAgent](https://community.bistudio.com/wiki/createAgent), [createMine](https://community.bistudio.com/wiki/createMine), [setVehiclePosition](https://community.bistudio.com/wiki/setVehiclePosition) for example. When [Object](https://community.bistudio.com/wiki/Object) is used for position, [PositionWorld](https://community.bistudio.com/wiki/PositionWorld) of the object is used.",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerPosLocal** pos",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [Position2D](https://community.bistudio.com/wiki/Position2D), [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Object](https://community.bistudio.com/wiki/Object) (since Arma 3 v1.94)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerPosLocal getMarkerPos \"MarkerTwo\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerPosLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "radiochannelcreate": {
        "name": "radioChannelCreate",
        "description": "Create a custom radio channel with the given color, label, call sign and registered characters. The **[custom channel ID](https://community.bistudio.com/wiki/Channel_IDs)** returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see [getPlayerChannel](https://community.bistudio.com/wiki/getPlayerChannel)). The command will find an unused index in this range and create it when found.",
        "syntaxArray": [
            {
                "Syntax": "radioChannelCreate [color, label, callSign, units, sentenceType]",
                "Params": "color: [Array](https://community.bistudio.com/wiki/Array) - RGBA color values\n\nlabel: [String](https://community.bistudio.com/wiki/String) - label\n\ncallSign: [String](https://community.bistudio.com/wiki/String) - call sign\n\nunits: [Array](https://community.bistudio.com/wiki/Array) - list of units in the channel\n\nsentenceType (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) (Default: [true](https://community.bistudio.com/wiki/true)) \n\n* [true](https://community.bistudio.com/wiki/true) - use *Protocol* message color from [getArray](https://community.bistudio.com/wiki/getArray) ([configFile](https://community.bistudio.com/wiki/configFile) >> \"RscChatListDefault\" >> \"colorMessageProtocol\")\n\n* [false](https://community.bistudio.com/wiki/false) - use *Normal* message color from [getArray](https://community.bistudio.com/wiki/getArray) ([configFile](https://community.bistudio.com/wiki/configFile) >> \"RscChatListDefault\" >> \"colorMessage\")\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - created **[custom channel ID](https://community.bistudio.com/wiki/Channel_IDs)** (used in [customChat](https://community.bistudio.com/wiki/customChat) command), 0 if failed"
            }
        ],
        "examples": [
            "\n```sqf\n_channelID= radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player1, player2]];\n```\n",
            "\n```sqf\n_channelID = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player1, player2], true];\n// using true also disables automatic quotes for chat in channel (Arma 3)\n```\n",
            "Create custom channel and add all players to it, present and JIP:\n```sqf\nif (isServer) then\n{\n\tprivate _channelName = \"Q-dance Radio\";\n\tprivate _channelID = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], _channelName, \"%UNIT_NAME\", []];\n\tif (_channelID == 0) exitWith {diag_log format [\"Custom channel '%1' creation failed!\", _channelName]};\n\t[_channelID, {_this radioChannelAdd [player]}] remoteExec [\"call\", [0, -2] select isDedicated, _channelName];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioChannelCreate",
        "modifiers": [
            "Global argument",
            "Global effect",
            "Server execution"
        ]
    },
    "selectbestplaces": {
        "name": "selectBestPlaces",
        "description": "Find the places with the maximum value of *expression* in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.",
        "syntaxArray": [
            {
                "Syntax": "selectBestPlaces [position, radius, expression, precision, sourcesCount]",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\nexpression: [String](https://community.bistudio.com/wiki/String) - Arithmetic expression. Simple expression var names containing values from 0 to 1 depending on location (see also [Ambient Parameters](https://community.bistudio.com/wiki/Ambient_Parameters)):\n\n* forest\n\n* trees\n\n* meadow\n\n* hills\n\n* houses\n\n* sea\n\n* night\n\n* rain\n\n* windy\n\n* deadBody\n\n* waterDepth\n\n* camDepth\n\nprecision: [Number](https://community.bistudio.com/wiki/Number)\n\nsourcesCount: [Number](https://community.bistudio.com/wiki/Number) - max results to return. **maximum 50**\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in Format [[position: [Position2D](https://community.bistudio.com/wiki/Position2D), expressionResult: [Number](https://community.bistudio.com/wiki/Number)], ...]"
            }
        ],
        "examples": [
            "\n```sqf\nmyPlaces = selectBestPlaces [position player, 50, \"meadow + 2*hills\", 1, 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectBestPlaces",
        "modifiers": []
    },
    "kbadddatabase": {
        "name": "kbAddDatabase",
        "description": "Register knowledge base database to given person. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.\n> ",
        "syntaxArray": [
            {
                "Syntax": "person kbAddDatabase fileName",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nfileName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_hasBeenAdded = _unit kbAddDatabase \"chat.txt\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbAddDatabase",
        "modifiers": []
    },
    "setsuppression": {
        "name": "setSuppression",
        "description": "Sets the given suppression value for the given unit. The value range is from 0 to 1.   \n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **setSuppression** value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - suppression value from 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n AI_unit_1 setSuppression 1;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSuppression",
        "modifiers": [
            "Local argument"
        ]
    },
    "titleobj": {
        "name": "titleObj",
        "description": "Shows object defined in global config in CfgTitles",
        "syntaxArray": [
            {
                "Syntax": "**titleObj** [class, type, speed, showInMap]",
                "Params": "[class, type, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - defined in [configFile](https://community.bistudio.com/wiki/configFile) >> \"CfgTitles\" >> class\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed (Optional): [Number](https://community.bistudio.com/wiki/Number) - Time in seconds to fade in resource. Default: -1\n\nshowInMap (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened. Default: [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntitleObj [\"BISLogo\", \"PLAIN\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/titleObj",
        "modifiers": []
    },
    "ctrltooltip": {
        "name": "ctrlTooltip",
        "description": "Returns the tooltip property of a button control. Getter for [ctrlSetTooltip](https://community.bistudio.com/wiki/ctrlSetTooltip).",
        "syntaxArray": [
            {
                "Syntax": "ctrlTooltip control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlTooltip _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlTooltip",
        "modifiers": []
    },
    "removeallweapons": {
        "name": "removeAllWeapons",
        "description": "Removes all weapons and magazines from the given unit. Does not remove map, compass, radio. You can use unitname [removeWeapon](https://community.bistudio.com/wiki/removeWeapon) \"itemMap\";\nfor example. Doesn't quite work with vehicles. If you need to remove all weapons from a vehicle, remove each weapon individually:\n{tank [removeWeapon](https://community.bistudio.com/wiki/removeWeapon) _x} [forEach](https://community.bistudio.com/wiki/forEach) [weapons](https://community.bistudio.com/wiki/weapons) tank;",
        "syntaxArray": [
            {
                "Syntax": "**removeAllWeapons** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllWeapons player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllWeapons",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "ctrltextwidth": {
        "name": "ctrlTextWidth",
        "description": "Returns the width of the control text including left and right margins (0.008 each). Supported control [types](https://community.bistudio.com/wiki/ctrlType) are:\n\n* [CT_STATIC](https://community.bistudio.com/wiki/DialogControls-Text) 0\n\n* [CT_EDIT](https://community.bistudio.com/wiki/CT_EDIT) 2\n\n* [CT_STRUCTURED_TEXT](https://community.bistudio.com/wiki/DialogControls-Text) 13\n> ",
        "syntaxArray": [
            {
                "Syntax": "**ctrlTextWidth** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_w = ctrlTextWidth _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlTextWidth",
        "modifiers": []
    },
    "lognetwork": {
        "name": "logNetwork",
        "description": "Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the Arma 3 root folder.\n> ",
        "syntaxArray": [
            {
                "Syntax": "logNetwork logFile",
                "Params": "logFile: [String](https://community.bistudio.com/wiki/String) - Where to store the log\n\nfilter: [Array](https://community.bistudio.com/wiki/Array) of [strings](https://community.bistudio.com/wiki/String) - ????\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - handle for the logging"
            }
        ],
        "examples": [
            "\n```sqf\n_handle = logNetwork [\"myLog.txt\",[\"\"]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/logNetwork",
        "modifiers": []
    },
    "setspeech": {
        "name": "setSpeech",
        "description": "Add speech to location.",
        "syntaxArray": [
            {
                "Syntax": "location **setSpeech** speech",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nspeech: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_location setSpeech \"SomeSpeech\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSpeech",
        "modifiers": []
    },
    "playmission": {
        "name": "playMission",
        "description": "The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.",
        "syntaxArray": [
            {
                "Syntax": "**playMission** [campaign, mission, skipBriefing]",
                "Params": "campaign: [String](https://community.bistudio.com/wiki/String)\n\nmission: [String](https://community.bistudio.com/wiki/String) or [Config](https://community.bistudio.com/wiki/Config)\n\nskipBriefing (optional): [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayMission [\"XOutrage\",\"x05Negotiator.Noe\"];\n```\n",
            "\n```sqf\nplayMission [\"\", configFile >> \"CfgMissions\" >> \"Missions\" >> \"Armory1\"];\n```\n",
            "\n```sqf\nplayMission [\"\",\"\\A3\\Missions_F_Bootcamp\\Scenarios\\Arsenal.VR\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playMission",
        "modifiers": []
    },
    "setwaypointtype": {
        "name": "setWaypointType",
        "description": "Sets the waypoint type of given waypoint. \n\n\n\nMore details at [Waypoints](https://community.bistudio.com/wiki/Waypoints).",
        "syntaxArray": [
            {
                "Syntax": "**setWaypointType**",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\ntype: [String](https://community.bistudio.com/wiki/String) - Waypoint type. Can be:\n\n* \"MOVE\"\n\n* \"DESTROY\"\n\n* \"GETIN\"\n\n* \"SAD\" *(Seek And Destroy)*\n\n* \"JOIN\"\n\n* \"LEADER\"\n\n* \"GETOUT\"\n\n* \"CYCLE\"\n\n* \"LOAD\"\n\n* \"UNLOAD\"\n\n* \"TR UNLOAD\"\n\n* \"HOLD\"\n\n* \"SENTRY\"\n\n* \"GUARD\" *(for use with GUARDED BY trigger or [createGuardedPoint](https://community.bistudio.com/wiki/createGuardedPoint))*\n\n* \"TALK\"\n\n* \"SCRIPTED\"\n\n* \"SUPPORT\"\n\n* \"GETIN NEAREST\"\n\n* \"DISMISS\"\n\n* \"LOITER\" *(new in Arma 3)*\n\n* \"HOOK\" *(new in Arma 3)* - slingload object\n\n* \"UNHOOK\" *(new in Arma 3)* - drop slingload\n\n* \"AND\" *(only for game logics)*\n\n* \"OR\" *(only for game logics)*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myWaypoint setWaypointType \"HOLD\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointType",
        "modifiers": []
    },
    "setparticlefire": {
        "name": "setParticleFire",
        "description": "Set fire parameters to particle effect.\n\nNote: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands [setParticleClass](https://community.bistudio.com/wiki/setParticleClass) or [setParticleParams](https://community.bistudio.com/wiki/setParticleParams) to do so (see example). Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleFire\n[\n\tcoreIntensity,\n\tcoreDistance,\n\tdamageTime\n];\n```\n",
        "syntaxArray": [
            {
                "Syntax": "source **setParticleFire** [coreIntensity, coreDistance, damageTime]",
                "Params": "source: [Object](https://community.bistudio.com/wiki/Object)\n\n[coreIntensity, coreDistance, damageTime]: [Array](https://community.bistudio.com/wiki/Array)\n\ncoreIntensity: [Number](https://community.bistudio.com/wiki/Number) - damage in the center of fire\n\ncoreDistance: [Number](https://community.bistudio.com/wiki/Number) - how far can unit get damage\n\ndamageTime: [Number](https://community.bistudio.com/wiki/Number) - how often is unit getting damage\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_emitter = \"#particlesource\" createVehicleLocal (getPos player);\n_emitter setParticleClass \"MediumSmoke\";\n_emitter setParticleFire [0.3,1.0,0.1];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setParticleFire",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setweaponreloadingtime": {
        "name": "setWeaponReloadingTime",
        "description": "Sets reloading states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time.",
        "syntaxArray": [
            {
                "Syntax": "vehicle setWeaponReloadingTime [gunner, muzzleName, reloadTime]",
                "Params": "**vehicle**: [Object](https://community.bistudio.com/wiki/Object)\n\n**gunner**: [Object](https://community.bistudio.com/wiki/Object) - alive and able gunner operating desired turret\n\n**muzzleName**: [String](https://community.bistudio.com/wiki/String) - muzzle on desired turret\n\n**reloadTime**: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if given weapon is found"
            }
        ],
        "examples": [
            "\n```sqf\n_success = _vehicle setWeaponReloadingTime [gunner (vehicle player), currentMuzzle (gunner (vehicle player)), 0.5];\n```\n",
            "Boost RPM: \n```sqf\nunit addEventHandler [\"Fired\", {\n\t_this # 0 setWeaponReloadingTime [_this # 0, _this # 2, 1/3];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWeaponReloadingTime",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "setwaves": {
        "name": "setWaves",
        "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\n**NOTE**: This command will have no effect (even though the value of [waves](https://community.bistudio.com/wiki/waves) changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.\n",
        "syntaxArray": [
            {
                "Syntax": "time **setWaves** value",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n180 setWaves .5;\n```\n",
            "\n```sqf\n0 setWaves 1;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaves",
        "modifiers": [
            "Local effect"
        ]
    },
    "setwindforce": {
        "name": "setWindForce",
        "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.",
        "syntaxArray": [
            {
                "Syntax": "time **setWindForce** wind",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)\n\nwind: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n1800 setWindForce 0.5\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWindForce",
        "modifiers": []
    },
    "wingsforcesrtd": {
        "name": "wingsForcesRTD",
        "description": ">  Returns force produced by wings.",
        "syntaxArray": [
            {
                "Syntax": "**wingsForcesRTD** RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_wingForce = wingsForcesRTD _rtdHelo\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/wingsForcesRTD",
        "modifiers": []
    },
    "visiblecompass": {
        "name": "visibleCompass",
        "description": "Checks if the player has compass opened and visible. Keep in mind that the GPS minimap in Arma 3 also shows the direction.",
        "syntaxArray": [
            {
                "Syntax": "**visibleCompass**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (visibleCompass) then {hint \"Compass is visible\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visibleCompass",
        "modifiers": []
    },
    "ctrlsetforegroundcolor": {
        "name": "ctrlSetForegroundColor",
        "description": "Sets foreground color of given control. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetForegroundColor** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetForegroundColor [1, 0, 0, 1]"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetForegroundColor",
        "modifiers": []
    },
    "closedisplay": {
        "name": "closeDisplay",
        "description": "Closes given display with exit code. It does not instantly close the display but does it on next simulation cycle. Most common exit codes are:\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "display closeDisplay exitCode",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\nexitCode: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_display closeDisplay 1;\n```\n",
            "\n```sqf\n#define IDC_OK 1\n_display closeDisplay IDC_OK;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/closeDisplay",
        "modifiers": []
    },
    "setposatl": {
        "name": "setPosATL",
        "description": "Sets the position of an object relative to the terrain.",
        "syntaxArray": [
            {
                "Syntax": "object **setPosATL** pos",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [PositionATL](https://community.bistudio.com/wiki/PositionATL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setPosATL [getPosATL player select 0, (getPosATL player select 1) - 10, getPosATL player select 2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPosATL",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "disablenvgequipment": {
        "name": "disableNVGEquipment",
        "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use [disableTIEquipment](https://community.bistudio.com/wiki/disableTIEquipment).",
        "syntaxArray": [
            {
                "Syntax": "vehicle **disableNVGEquipment** state",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyTank disableNVGEquipment true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableNVGEquipment",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ppeffectcommit": {
        "name": "ppEffectCommit",
        "description": "Commit [post process effect](https://community.bistudio.com/wiki/Post_process_effects) in given time.",
        "syntaxArray": [
            {
                "Syntax": "effect **ppEffectCommit** commit",
                "Params": "effect: [String](https://community.bistudio.com/wiki/String) - name of the effect\n\ncommit: [Number](https://community.bistudio.com/wiki/Number) - duration\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "handle **ppEffectCommit** commit",
                "Params": "handle: [Number](https://community.bistudio.com/wiki/Number) - handle of the effect\n\ncommit: [Number](https://community.bistudio.com/wiki/Number) - duration\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "handles **ppEffectCommit** commit",
                "Params": "handles: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) - list of handles\n\ncommit: [Number](https://community.bistudio.com/wiki/Number) - duration\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"colorCorrection\" ppEffectCommit 3;\n```\n",
            "\n```sqf\n_hndl ppEffectCommit 3;\n```\n",
            "\n```sqf\n[_hndl1, _hndl2] ppEffectCommit 3;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectCommit",
        "modifiers": []
    },
    "settext": {
        "name": "setText",
        "description": "Sets the text associated with a location. This text will be displayed on the game map at the location's position.",
        "syntaxArray": [
            {
                "Syntax": "location **setText** text",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setText \"Rahmadi Village\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setText",
        "modifiers": []
    },
    "setusermfdtext": {
        "name": "setUserMFDText",
        "description": "Stored user text value in MFD, limit is 50, user0...user49",
        "syntaxArray": [
            {
                "Syntax": "vehicle setUserMFDText [index, value]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle with MFD\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle setUserMFDText [0, \"some text\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUserMFDText",
        "modifiers": []
    },
    "echo": {
        "name": "echo",
        "description": "Sends any text into the debugger console or the logfile. This command is only **present in internal version ** not in the retail version. Use [diag_log](https://community.bistudio.com/wiki/diag_log) instead!",
        "syntaxArray": [
            {
                "Syntax": "**echo** text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\necho \"Text in logfile\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/echo",
        "modifiers": []
    },
    "setvehiclereportownposition": {
        "name": "setVehicleReportOwnPosition",
        "description": "Sets that the vehicle will share its own position via datalink to the [Side](https://community.bistudio.com/wiki/Side) center.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setVehicleReportOwnPosition** report",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nreport: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(vehicle player) setVehicleReportOwnPosition true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleReportOwnPosition",
        "modifiers": []
    },
    "keyname": {
        "name": "keyName",
        "description": "Returns the name of a button (on the keyboard, mouse or joystick) with the given code.",
        "syntaxArray": [
            {
                "Syntax": "**keyName** dikCode",
                "Params": "dikCode: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = keyName 28; // result is \"Enter\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/keyName",
        "modifiers": []
    },
    "systemofunits": {
        "name": "systemOfUnits",
        "description": "Returns the currently selected system of units.\n\n* 0: Metric\n\n* 1: Mixed (ground vehicles use Metric / air vehicles use Imperial)\n\n* 2: Imperial",
        "syntaxArray": [
            {
                "Syntax": "**systemOfUnits**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_system = systemOfUnits;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/systemOfUnits",
        "modifiers": []
    },
    "gettextraw": {
        "name": "getTextRaw",
        "description": "Returns raw text from config entry. If entry is subject to [ localization](https://community.bistudio.com/wiki/localize), the translation key is returned. To obtain the [ localized](https://community.bistudio.com/wiki/isLocalized) text, see [getText](https://community.bistudio.com/wiki/getText).",
        "syntaxArray": [
            {
                "Syntax": "getTextRaw config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - raw text value"
            }
        ],
        "examples": [
            "\n```sqf\n_text = getTextRaw (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); // \"$STR_ACTION_GETIN_DRIVER\"\n_key = _text select [1]; // \"STR_ACTION_GETIN_DRIVER\"\n_localized = localize _key; // \"Get in %1 as Driver\"\n_localized == getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); // true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getTextRaw",
        "modifiers": []
    },
    "setmarkershapelocal": {
        "name": "setMarkerShapeLocal",
        "description": "Selects shape (actual type) of the local marker.",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerShapeLocal** shape",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\nshape: [String](https://community.bistudio.com/wiki/String) - The shape, can be one of:\n\n* \"ICON\"\n\n* \"RECTANGLE\"\n\n* \"ELLIPSE\"\n\n* \"POLYLINE\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerShapeLocal \"RECTANGLE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerShapeLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "displayremovealleventhandlers": {
        "name": "displayRemoveAllEventHandlers",
        "description": "Remove all event handlers from the given display.",
        "syntaxArray": [
            {
                "Syntax": "display displayRemoveAllEventHandlers eventName",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\neventName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(findDisplay 46) displayRemoveAllEventHandlers \"KeyDown\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displayRemoveAllEventHandlers",
        "modifiers": []
    },
    "getposaslvisual": {
        "name": "getPosASLVisual",
        "description": "Returns an object's rendered [3D position ASL](https://community.bistudio.com/wiki/PositionASL) (z value above sea level) in render time scope. Alias of [visiblePositionASL](https://community.bistudio.com/wiki/visiblePositionASL).",
        "syntaxArray": [
            {
                "Syntax": "**getPosASLVisual** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object): - name of the object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerRenderedPosASL = getPosASLVisual player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosASLVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "openyoutubevideo": {
        "name": "openYoutubeVideo",
        "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with **watch?v=...**. If the user has Steam overlay disabled, the command will display appropriate message to the user and return [false](https://community.bistudio.com/wiki/false).",
        "syntaxArray": [
            {
                "Syntax": "**openYoutubeVideo** youTubeUrl",
                "Params": "youTubeUrl: [String](https://community.bistudio.com/wiki/String) - for parameters see: [https://developers.google.com/youtube/player_parameters](https://community.bistudio.comhttps://developers.google.com/youtube/player_parameters)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n//Open http://www.youtube.com/watch?v=UBIAbm7Rt78\n_isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/openYoutubeVideo",
        "modifiers": []
    },
    "confighierarchy": {
        "name": "configHierarchy",
        "description": "Returns hierarchy of the given config class. Just like with [inheritsFrom](https://community.bistudio.com/wiki/inheritsFrom), only complete config classes are supported",
        "syntaxArray": [
            {
                "Syntax": "**configHierarchy** configClass",
                "Params": "configClass: [Config](https://community.bistudio.com/wiki/Config) - target config class\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of parent configs"
            }
        ],
        "examples": [
            "\n```sqf\n_hierarchy = configHierarchy (configFile >> \"CfgVehicles\" >> \"Car\");\n//[bin\\config.bin,bin\\config.bin/CfgVehicles,bin\\config.bin/CfgVehicles/Car]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configHierarchy",
        "modifiers": []
    },
    "setwindstr": {
        "name": "setWindStr",
        "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "syntaxArray": [
            {
                "Syntax": "time **setWindStr** value",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - new value in range 1...0\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n 60 setWindStr 0.8; // set the wind strength to 0.8 gradually over the next 60 seconds\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWindStr",
        "modifiers": []
    },
    "lbpictureright": {
        "name": "lbPictureRight",
        "description": "Returns the right picture name of the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog).",
        "syntaxArray": [
            {
                "Syntax": "**lbPictureRight** [idc, index]",
                "Params": "[idc, index]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) - idc of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control **lbPictureRight** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_picture = lbPictureRight [101, 0];\n```\n",
            "\n```sqf\n_picture = _control lbPictureRight 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbPictureRight",
        "modifiers": []
    },
    "worldname": {
        "name": "worldName",
        "description": "Return the name of the currently loaded world.",
        "syntaxArray": [
            {
                "Syntax": "**worldName**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = worldName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/worldName",
        "modifiers": []
    },
    "flyinheightasl": {
        "name": "flyInHeightASL",
        "description": "Sets the minimal ASL height. Final height is \n```sqf\nflyInHeight max flyInHeightASL\n```\n - the higher altitude has priority.",
        "syntaxArray": [
            {
                "Syntax": "aircraft flyInHeightASL [standardAltitude, combatAltitude, stealthAltitude]",
                "Params": "aircraft: [Object](https://community.bistudio.com/wiki/Object) - helicopter, airplane\n\nstandardAltitude: [Number](https://community.bistudio.com/wiki/Number) - base altitude used when [behaviour](https://community.bistudio.com/wiki/behaviour) is neither \"COMBAT\" or \"STEALTH\"\n\ncombatAltitude: [Number](https://community.bistudio.com/wiki/Number) -  altitude used when [behaviour](https://community.bistudio.com/wiki/behaviour) is \"COMBAT\"\n\nstealthAltitude: [Number](https://community.bistudio.com/wiki/Number) - altitude used when [behaviour](https://community.bistudio.com/wiki/behaviour) is \"STEALTH\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncobraOne flyInHeightASL [200, 100, 400];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flyInHeightASL",
        "modifiers": []
    },
    "gettrimoffsetrtd": {
        "name": "getTrimOffsetRTD",
        "description": "Returns controls trim offset.> ",
        "syntaxArray": [
            {
                "Syntax": "**getTrimOffsetRTD** RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object) - Helicopter with advanced flight model enabled\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Offsets in format [x,y,z]"
            }
        ],
        "examples": [
            "\n```sqf\n_array = getTrimOffsetRTD vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getTrimOffsetRTD",
        "modifiers": []
    },
    "shownartillerycomputer": {
        "name": "shownArtilleryComputer",
        "description": "Checks whether the player has the artillery computer currently open.",
        "syntaxArray": [
            {
                "Syntax": "**shownArtilleryComputer**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif ( shownArtilleryComputer ) then { hint \"Artillery Computer shown on screen\"; };\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownArtilleryComputer",
        "modifiers": []
    },
    "objnull": {
        "name": "objNull",
        "description": "A non-existent [Object](https://community.bistudio.com/wiki/Object). To compare non-existent objects use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* objNull == objNull; // false\n\n* [isNull](https://community.bistudio.com/wiki/isNull) objNull; // true\n\n* objNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) objNull; // true",
        "syntaxArray": [
            {
                "Syntax": "**objNull**",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer == player; // false if player is null\n```\n",
            "\n```sqf\nisNull player; // true if player is null\n```\n",
            "\n```sqf\nstr objNull // <NULL-object>\n```\n",
            "\n```sqf\nposition objNull // [0,0,0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/objNull",
        "modifiers": []
    },
    "clearmagazinepool": {
        "name": "clearMagazinePool",
        "description": "Removes all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.",
        "syntaxArray": [
            {
                "Syntax": "**clearMagazinePool**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearMagazinePool;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearMagazinePool",
        "modifiers": []
    },
    "toupperansi": {
        "name": "toUpperANSI",
        "description": "Converts the supplied string to all upper case characters fast (could be 3x faster than [toUpper](https://community.bistudio.com/wiki/toUpper)). [ANSI](https://community.bistudio.comhttps://stackoverflow.com/questions/701882/what-is-ansi-format/701920) in this case refers to [ISO-8859-1](https://community.bistudio.comhttps://en.wikipedia.org/wiki/ISO/IEC_8859-1) code page. The command is primary designed to convert characters with [ codes](https://community.bistudio.com/wiki/toArray) 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage. For Unicode alternative see [toUpper](https://community.bistudio.com/wiki/toUpper).",
        "syntaxArray": [
            {
                "Syntax": "toUpperANSI string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String) - string to convert\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - all upper case string"
            }
        ],
        "examples": [
            "\n```sqf\nhint toUpperANSI \"AaBb1\"; // returns \"AABB1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toUpperANSI",
        "modifiers": []
    },
    "sendtask": {
        "name": "sendTask",
        "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
        "syntaxArray": [
            {
                "Syntax": "sender **sendTask** [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]",
                "Params": "sender:  [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n[receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Task](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sendTask",
        "modifiers": []
    },
    "getallownedmines": {
        "name": "getAllOwnedMines",
        "description": "Gets all mine objects this unit has ownership over.",
        "syntaxArray": [
            {
                "Syntax": "getAllOwnedMines unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of mine object"
            }
        ],
        "examples": [
            "\n```sqf\n_mines = getAllOwnedMines player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAllOwnedMines",
        "modifiers": []
    },
    "worldtoscreen": {
        "name": "worldToScreen",
        "description": "Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.",
        "syntaxArray": [
            {
                "Syntax": "worldToScreen position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - World position 2D [x,y] or [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Screen position [x,y] (see [SafeZone](https://community.bistudio.com/wiki/SafeZone) for more info) - [] if not on-screen"
            }
        ],
        "examples": [
            "\n```sqf\n_screenPos = worldToScreen getPos soldier1;\n```\n",
            "\n```sqf\n_screenPos = worldToScreen (player modelToWorld [0,10,0]);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/worldToScreen",
        "modifiers": []
    },
    "combatmode": {
        "name": "combatMode",
        "description": "Returns the combat mode of the given AI [ group](https://community.bistudio.com/wiki/Group). See [setCombatMode](https://community.bistudio.com/wiki/setCombatMode) for more information about combat modes.",
        "syntaxArray": [
            {
                "Syntax": "combatMode group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object). If the argument is unit [Object](https://community.bistudio.com/wiki/Object), unit's current group is used.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) -  \nOne of \"BLUE\", \"GREEN\", \"WHITE\", \"YELLOW\" and \"RED\" or \"ERROR\""
            }
        ],
        "examples": [
            "\n```sqf\nif (combatMode _grp1 == \"BLUE\") then {_grp1 setCombatMode \"GREEN\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/combatMode",
        "modifiers": [
            "Global argument"
        ]
    },
    "uniform": {
        "name": "uniform",
        "description": "Returns name of uniform.",
        "syntaxArray": [
            {
                "Syntax": "uniform unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_uniform = uniform _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/uniform",
        "modifiers": [
            "Global argument"
        ]
    },
    "setvehicleradar": {
        "name": "setVehicleRadar",
        "description": "Sets the AI rule of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setVehicleRadar** rule",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - An AI-controlled vehicle\n\nrule: [Number](https://community.bistudio.com/wiki/Number) - Can be one of the following:\n\n* 0 - automatic\n\n* 1 - forced on\n\n* 2 - forced off\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle setVehicleRadar 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleRadar",
        "modifiers": []
    },
    "ctrltextselection": {
        "name": "ctrlTextSelection",
        "description": "Returns edit control text selection in format [start, length, selectedText]. \n> ",
        "syntaxArray": [
            {
                "Syntax": "ctrlTextSelection control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [start, length, selectedText] where:\n\n* start: [Number](https://community.bistudio.com/wiki/Number) - position in text selection started\n\n* length: [Number](https://community.bistudio.com/wiki/Number) - number of the highlighted characters (this number could be negative, see description)\n\n* selectedText: [String](https://community.bistudio.com/wiki/String) - selected text"
            }
        ],
        "examples": [
            "Selection is made from left to right:\n```sqf\nctrlTextSelection _control; //[0, 11, \"Hello World\"]\n```\n",
            "Selection is made from right to left:\n```sqf\nctrlTextSelection _control; //[11, -11, \"Hello World\"]\n```\n",
            "Find cursor position:\n```sqf\nctrlTextSelection _control params [\"_start\", \"_length\"];\nprivate _cursorPos = _start + _length;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlTextSelection",
        "modifiers": []
    },
    "progressposition": {
        "name": "progressPosition",
        "description": "Returns the current position in the progress bar.",
        "syntaxArray": [
            {
                "Syntax": "**progressPosition** control",
                "Params": "control:  [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = progressPosition _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/progressPosition",
        "modifiers": []
    },
    "setlightintensity": {
        "name": "setLightIntensity",
        "description": "Sets intensity of light.",
        "syntaxArray": [
            {
                "Syntax": "light setLightIntensity value",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightIntensity 4;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightIntensity",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "groupchat": {
        "name": "groupChat",
        "description": "Types text to the group radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec))",
        "syntaxArray": [
            {
                "Syntax": "unitName groupChat chatText",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) - unit transmitting message\n\nchatText: [String](https://community.bistudio.com/wiki/String) - message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne groupChat \"Show this text\";\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [sideChat](https://community.bistudio.com/wiki/sideChat) \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [globalChat](https://community.bistudio.com/wiki/globalChat) \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) groupChat \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [vehicleChat](https://community.bistudio.com/wiki/vehicleChat) \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [commandChat](https://community.bistudio.com/wiki/commandChat) \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [customChat](https://community.bistudio.com/wiki/customChat) [1, \"customChat\"];\n[systemChat](https://community.bistudio.com/wiki/systemChat) \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupChat",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "waypointstatements": {
        "name": "waypointStatements",
        "description": "Gets the waypoint statements.",
        "syntaxArray": [
            {
                "Syntax": "**waypointStatements** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointStatements [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointStatements",
        "modifiers": []
    },
    "displayseteventhandler": {
        "name": "displaySetEventHandler",
        "description": "Sets given event handler of given display.\n\nThe return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it is default code should be executed. \n\nSee [User Interface Event Handlers](https://community.bistudio.com/wiki/User_Interface_Event_Handlers) for the full list of handler names.\n\nIf applicable, see [DIK_KeyCodes](https://community.bistudio.com/wiki/DIK_KeyCodes) for a list of key code constants, which are relevant to key related user interface events like: [KeyDown](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onKeyDown) & [KeyUp](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onKeyUp).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "display **displaySetEventHandler** [handlerName, function]",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\n[handlerName, function]: [Array](https://community.bistudio.com/wiki/Array)\n\nhandlerName: [String](https://community.bistudio.com/wiki/String)\n\nfunction: [String](https://community.bistudio.com/wiki/String). {Code}\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control displaySetEventHandler [\"KeyDown\", \"\"] ",
            "init.sqf keyspressed = compile preprocessFile \"keyspressed.sqf\";\n_display = findDisplay 46;\n_display displaySetEventHandler [\"KeyDown\",\"_this call keyspressed\"];\n\n\nkeyspressed.sqf private['_handled'];\n_handled = false;\nswitch (_this select 1) do\n{\n\t//F key\n\tcase 33: \n\t{\n\t\t// code here\n\t\t_handled = true;\n\t};\n};\n_handled;\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displaySetEventHandler",
        "modifiers": []
    },
    "getunittrait": {
        "name": "getUnitTrait",
        "description": "Gets the current value of a trait of the given unit.\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit getUnitTrait skillName",
                "Params": "Unit: [Object](https://community.bistudio.com/wiki/Object)\n\nskillName: [String](https://community.bistudio.com/wiki/String) - Name of the skill\n\n",
                "Return": "\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) or [Number](https://community.bistudio.com/wiki/Number) - trait's value\n\n* [Nothing](https://community.bistudio.com/wiki/Nothing) - if *unit* is invalid, e.g an empty vehicle"
            }
        ],
        "examples": [
            "\n```sqf\nplayer getUnitTrait \"Medic\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getUnitTrait",
        "modifiers": [
            "Global argument"
        ]
    },
    "getmissionlayerentities": {
        "name": "getMissionLayerEntities",
        "description": "Returns all entities within specific [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) layer. To be used when the scenario is running, not in the editor workspace.\n\nUseful for disabling / enabling whole parts of the scenario which you add to specific layer while editing.\n> ",
        "syntaxArray": [
            {
                "Syntax": "getMissionLayerEntities layerName",
                "Params": "layerName: [String](https://community.bistudio.com/wiki/String) - Layer name in the editor. If multiple layers with the same name are present in the scenario, the first found one is used.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format \n```sqf\n[objects:Array, markers:Array]\n```\n"
            },
            {
                "Syntax": "getMissionLayerEntities layerID",
                "Params": "layerID: [Number](https://community.bistudio.com/wiki/Number) - Layer ID in the editor.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format \n```sqf\n[objects:Array, markers:Array]\n```\n"
            }
        ],
        "examples": [
            "\n```sqf\n_base = getMissionLayerEntities \"Base\";\n```\n",
            "\n```sqf\nwaitUntil {(player distance _someObject) > 800};\n{\n\tdeleteVehicle _x;\n} forEach ((getMissionLayerEntities \"Simple Objects\") select 0); // Deletes all objects within that layer after the player is over 800m away from _someObject\n```\n",
            "\n```sqf\n_layer1337Entities = getMissionLayerEntities 1337;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMissionLayerEntities",
        "modifiers": [
            "Server execution"
        ]
    },
    "globalradio": {
        "name": "globalRadio",
        "description": "Sends the audio message to the global radio channel. The message is defined in CfgRadio in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec)).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
        "syntaxArray": [
            {
                "Syntax": "unit **globalRadio** radioName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit to transmit\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne globalRadio \"messageOne\";\n```\n",
            "\n```sqf\nplayer globalRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/globalRadio",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "stopenginertd": {
        "name": "stopEngineRTD",
        "description": "Instant engines stop. \n> ",
        "syntaxArray": [
            {
                "Syntax": "stopEngineRTD heli",
                "Params": "heli: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "stopEngineRTD myHeli"
        ],
        "Url": "https://community.bistudio.com/wiki/stopEngineRTD",
        "modifiers": []
    },
    "connecttoserver": {
        "name": "connectToServer",
        "description": "Connects the client to the provided server.\n> ",
        "syntaxArray": [
            {
                "Syntax": "connectToServer [ip, port, password]",
                "Params": "ip: [String](https://community.bistudio.com/wiki/String)\n\nport: [Number](https://community.bistudio.com/wiki/Number)\n\npassword: [String](https://community.bistudio.com/wiki/String) - \"\" if no password\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nconnectToServer [\"192.168.0.2\", 2302, \"test\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/connectToServer",
        "modifiers": []
    },
    "markerpolyline": {
        "name": "markerPolyline",
        "description": "Returns a polyline marker's path data.",
        "syntaxArray": [
            {
                "Syntax": "markerPolyline marker",
                "Params": "marker: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [x1, y1, x2, y2, ... xn, yn]"
            }
        ],
        "examples": [
            "\n```sqf\nmarkerPolyline \"_USER_DEFINED #0/0/1\"; // Returns your first polyline's data in Singleplayer\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerPolyline",
        "modifiers": []
    },
    "addtoremainscollector": {
        "name": "addToRemainsCollector",
        "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in [description.ext](https://community.bistudio.com/wiki/description.ext)",
        "syntaxArray": [
            {
                "Syntax": "**addToRemainsCollector** remains",
                "Params": "remains: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - array of vehicles/units\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\naddToRemainsCollector [unit1, unit2, vehicle1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addToRemainsCollector",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "mapanimcommit": {
        "name": "mapAnimCommit",
        "description": "Play map animation.",
        "syntaxArray": [
            {
                "Syntax": "**mapAnimCommit**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmapAnimCommit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mapAnimCommit",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "isgamefocused": {
        "name": "isGameFocused",
        "description": "Returns the state of game focus changed by pressing ALT + TAB or similar action.",
        "syntaxArray": [
            {
                "Syntax": "isGameFocused",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if game window is focused, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nif (!isGameFocused) then { endMission \"End\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isGameFocused",
        "modifiers": []
    },
    "backpackcontainer": {
        "name": "backpackContainer",
        "description": "Returns a cargo container of a unit's backpack.",
        "syntaxArray": [
            {
                "Syntax": "backpackContainer unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - a soldier\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - cargo container or [objNull](https://community.bistudio.com/wiki/objNull)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str backpackContainer player; // 1a5f7900# 163944: backpack_fast.p3d\n```\n",
            "\n```sqf\nhint str getMagazineCargo backpackContainer player;\n```\n\n\n[\n\t[\n\t\t\"APERSBoundingMine_Range_Mag\",\n\t\t\"ClaymoreDirectionalMine_Remote_Mag\",\n\t\t\"SLAMDirectionalMine_Wire_Mag\",\n\t\t\"DemoCharge_Remote_Mag\"\n\t],[\n\t\t3,\n\t\t2,\n\t\t2,\n\t\t1\n\t]\n]",
            "\n```sqf\n(backpackContainer player) addWeaponCargoGlobal [weapons player select 0,1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/backpackContainer",
        "modifiers": []
    },
    "animatebay": {
        "name": "animateBay",
        "description": "Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle **animateBay** [bay, animphase, instant]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[bay, animphase, instant] : [Array](https://community.bistudio.com/wiki/Array)\n\nbay: [Number](https://community.bistudio.com/wiki/Number) - bay index (index starts from 1 and different from pylon index)\n\nanimphase: [Number](https://community.bistudio.com/wiki/Number) - animation phase (0...1)\n\ninstant (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - animate immediately\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player animateBay [1, 0.5];\n```\n",
            "\n```sqf\nvehicle player animateBay [1, 1, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animateBay",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "aimedattarget": {
        "name": "aimedAtTarget",
        "description": "Returns how good the weapon of the vehicle is aimed at the target.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **aimedAtTarget** [target, weapon]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[target, weapon]: [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\nweapon: [String](https://community.bistudio.com/wiki/String) - (optional)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - 0...1"
            }
        ],
        "examples": [
            "\n```sqf\n _aimingQuality = heli aimedAtTarget [target];\n```\n",
            "\n```sqf\n _aimingQuality = heli aimedAtTarget [target,\"M197\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/aimedAtTarget",
        "modifiers": []
    },
    "removempeventhandler": {
        "name": "removeMPEventHandler",
        "description": "Removes MP event handler added by [addMPEventHandler](https://community.bistudio.com/wiki/addMPEventHandler).",
        "syntaxArray": [
            {
                "Syntax": "unitName **removeMPEventHandler** [event, index]",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nevent: [String](https://community.bistudio.com/wiki/String)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index returned by [addMPEventHandler](https://community.bistudio.com/wiki/addMPEventHandler)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeMPEventHandler [\"MPKilled\", 0]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMPEventHandler",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ctrlmouseposition": {
        "name": "ctrlMousePosition",
        "description": "Returns position of the mouse on the screen relative to UI Control in UI coordinates. Also works within [CT_CONTROLS_GROUPs](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP). In that case, returned position is relative to the position of the group.",
        "syntaxArray": [
            {
                "Syntax": "ctrlMousePosition control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_mousePos = ctrlMousePosition _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMousePosition",
        "modifiers": []
    },
    "goggles": {
        "name": "goggles",
        "description": "Returns name of currently used goggles (for NVGoggles use [hmd](https://community.bistudio.com/wiki/hmd)).",
        "syntaxArray": [
            {
                "Syntax": "**goggles** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_goggles = goggles assaultDiver; //G_Diving\n\n```\n",
            "\n```sqf\n_goggles = goggles reconTeamLeader; //G_Shades_Black\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/goggles",
        "modifiers": [
            "Global argument"
        ]
    },
    "ropeendposition": {
        "name": "ropeEndPosition",
        "description": "Returns start and end positions for the given [ rope](https://community.bistudio.com/wiki/ropeCreate). If command fails, empty array [] is returned.",
        "syntaxArray": [
            {
                "Syntax": "ropeEndPosition rope",
                "Params": "rope: [Object](https://community.bistudio.com/wiki/Object) - rope object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array in format [startPos, endPos], where:\n\n* startPos: [Array](https://community.bistudio.com/wiki/Array) - rope start position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n* endPos: [Array](https://community.bistudio.com/wiki/Array) - rope end position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\n_ends = ropeEndPosition (ropes heli1 select 0);\n_start = _ends select 0;\n_end = _ends select 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeEndPosition",
        "modifiers": []
    },
    "showgps": {
        "name": "showGPS",
        "description": "Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default [false](https://community.bistudio.com/wiki/false)). > ",
        "syntaxArray": [
            {
                "Syntax": "**showGPS** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowGPS true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showGPS",
        "modifiers": []
    },
    "pushback": {
        "name": "pushBack",
        "description": "Insert an element to the back of the given array. This command modifies the original array. (see also: [pushBackUnique](https://community.bistudio.com/wiki/pushBackUnique))",
        "syntaxArray": [
            {
                "Syntax": "array **pushBack** element",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nelement: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - index of inserted element"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3];\n_arr pushBack 4;\nhint str _arr; //[1,2,3,4]\n```\n",
            "\n```sqf\n_arr = [1,[2,4],3];\n(_arr select 1) pushBack [5,6];\nhint str _arr //[1,[2,4,[5,6]],3]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pushBack",
        "modifiers": []
    },
    "setpylonspriority": {
        "name": "setPylonsPriority",
        "description": "Overrides default pylons priorities",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setPylonsPriority** [priority pylon1, priority pylon2, ...]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[priority pylon 1, priority pylon 2,..., priority pylon n] : [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(vehicle player) setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPylonsPriority",
        "modifiers": []
    },
    "setvehicleposition": {
        "name": "setVehiclePosition",
        "description": "Moves the object to a given position (same as [createVehicle](https://community.bistudio.com/wiki/createVehicle) placement algorithm). Uses either the position that's defined by the *position* param, or one of the marker positions from the markers array. The object is placed inside a circle with *position* as its center and *placement* as its radius. The type of placement could also be controlled with *special*. \n\nIf position is in water and vehicle can float, it is placed on water surface, otherwise it is placed on the ground, even if ground is under water. If roof surfaces support walking, units will be placed on roofs if such position is given.",
        "syntaxArray": [
            {
                "Syntax": "object **setVehiclePosition** [position, markers, placement, special]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[position, markers, placement, special]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [PositionATL](https://community.bistudio.com/wiki/PositionATL) ([PositionAGL](https://community.bistudio.com/wiki/PositionAGL) if boat or amphibious), [Position2D](https://community.bistudio.com/wiki/Position2D), or [Object](https://community.bistudio.com/wiki/Object) - Desired placement position. If object is given, object position is used for *position*. Normally only *x* and *y* are considered, unless \"CAN_COLLIDE\" is used for special placement.\n\nmarkers: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - If the markers array contains one or more marker names, the position is chosen randomly and could be one of the marker positions or just the supplied main position. If marker had z coordinate set with [setMarkerPos](https://community.bistudio.com/wiki/setMarkerPos), the vehicle will be placed on the nearest surface below this z coordinate\n\nplacement: [Number](https://community.bistudio.com/wiki/Number) - The vehicle is randomly placed inside a circle with given position as center and placement as its radius\n\nspecial (Optional): [String](https://community.bistudio.com/wiki/String) - Could be one of the following: \n\n* \"NONE\" - will look for suitable empty position near given position (subject to other placement params) before placing vehicle there.\n\n* \"CAN_COLLIDE\" places vehicle at given position (subject to other placement params), without checking if others objects can cross its 3D model.\n\n* \"FLY\" - if vehicle is capable of flying and has crew, it will be made airborne at default height.\nIf *special* is \"\" or not specified, default \"NONE\" is used.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success, [false](https://community.bistudio.com/wiki/false) on failure"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVehiclePosition [[1000,2000], [\"Pos1\",\"Pos2\",\"Pos3\"], 0, \"CAN_COLLIDE\"];\n```\n Will place the player at either [1000,2000], or one of the three markers positions.",
            "\n```sqf\nheli setVehiclePosition [player, [], 0, \"FLY\"];\n```\n",
            "\n```sqf\n_cam = \"camera\" camCreate [0,0,0]; \n_cam setDir random 360; \n_cam setVehiclePosition [[5000,5000], [], 1000, \"NONE\"];\n_cam setPosWorld (getPosWorld _cam vectorAdd [0,0,1.8]);\n_cam cameraEffect [\"Internal\", \"Back\"];\n```\n",
            "\n```sqf\nprivate _tablePos = player getRelPos [3, 0];\nprivate _table = \"Land_CampingTable_F\" createVehicle [0,0,0];\nprivate _laptop = \"Land_Laptop_unfolded_F\" createVehicle [0,0,0];\n_table setPos _tablePos;\n_laptop setVehiclePosition [_tablePos vectorAdd [0.5, 0.2, 10], [], 0, \"CAN_COLLIDE\"];\n_laptop attachTo [_table];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehiclePosition",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "cheatsenabled": {
        "name": "cheatsEnabled",
        "description": "Checks whether cheats are enabled (whether the designers' version is running).",
        "syntaxArray": [
            {
                "Syntax": "cheatsEnabled",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_enabled = cheatsEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cheatsEnabled",
        "modifiers": []
    },
    "setcaptive": {
        "name": "setCaptive",
        "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive unit:\n\n* is seen as belonging to the [civilian](https://community.bistudio.com/wiki/civilian) [side](https://community.bistudio.com/wiki/side) (will not be fired upon)\n\n* will still shoot at its real side's enemies\n\n* will not get its weapons removed (see [removeAllWeapons](https://community.bistudio.com/wiki/removeAllWeapons))\n\n* will not trigger \"detected by\" conditions for its original [side](https://community.bistudio.com/wiki/side).\n> ",
        "syntaxArray": [
            {
                "Syntax": "unitName setCaptive status",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nstatus: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) means [captive](https://community.bistudio.com/wiki/captive)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unitName setCaptive statusNumber *Since Arma 2 v1.00*",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nstatusNumber:  [Number](https://community.bistudio.com/wiki/Number) - zero means non-captive, a non-zero value means [captive](https://community.bistudio.com/wiki/captive)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 setCaptive true;\nside _soldier1; // returns civilian\nside group _soldier1; // returns e.g blufor\n```\n",
            "\n```sqf\n_soldier1 setCaptive 1;\ncaptive _soldier1; // returns true\n\n_soldier1 setCaptive 42;\ncaptive _soldier1; // returns true\n\n_soldier1 setCaptive 0;\ncaptive _soldier1; // returns false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCaptive",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "curatoreditingareatype": {
        "name": "curatorEditingAreaType",
        "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).",
        "syntaxArray": [
            {
                "Syntax": "curatorEditingAreaType curator",
                "Params": "curator: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isBlacklist = curatorEditingAreaType _curator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorEditingAreaType",
        "modifiers": []
    },
    "simulclouddensity": {
        "name": "simulCloudDensity",
        "description": "Returns density of clouds at given position.",
        "syntaxArray": [
            {
                "Syntax": "simulCloudDensity pos",
                "Params": "pos: [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "\n\n* [Number](https://community.bistudio.com/wiki/Number) -  Density (0-1)\n\n* [Nothing](https://community.bistudio.com/wiki/Nothing) - If arguments are incorrect\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [false](https://community.bistudio.com/wiki/false) if simulWeather is disabled"
            }
        ],
        "examples": [
            "\n```sqf\nsimulCloudDensity getPos player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/simulCloudDensity",
        "modifiers": []
    },
    "vectordistance": {
        "name": "vectorDistance",
        "description": "Returns [Euclidean distance](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Euclidean_distance) between two points.",
        "syntaxArray": [
            {
                "Syntax": "point1 vectorDistance point2",
                "Params": "point1: [Array](https://community.bistudio.com/wiki/Array) in format [x,y,z] or [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D) (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\npoint2: [Array](https://community.bistudio.com/wiki/Array) in format [x,y,z] or [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D) (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_euclideanDist = getPosASL player vectorDistance [0,0,0];\n```\n",
            "\n```sqf\n(getPosASL _a) vectorDistance (getPosASL _b);\n// same as\n(getPosATL _a) distance (getPosATL _b);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorDistance",
        "modifiers": []
    },
    "setmarkercolor": {
        "name": "setMarkerColor",
        "description": "Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found here: [CfgMarkerColors_Arma_3](https://community.bistudio.com/wiki/CfgMarkerColors_Arma_3)\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerColor** color",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\ncolor: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerColor \"ColorBlack\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerColor",
        "modifiers": [
            "Global effect"
        ]
    },
    "exitwith": {
        "name": "exitWith",
        "description": "Exits current scope {...} it is executed from if condition evaluates [true](https://community.bistudio.com/wiki/true), creates new scope {...code...} and executes the given code in it. Often used for exiting [do](https://community.bistudio.com/wiki/do), [for](https://community.bistudio.com/wiki/for), [count](https://community.bistudio.com/wiki/count) or [forEach](https://community.bistudio.com/wiki/forEach). Simply exiting [waitUntil](https://community.bistudio.com/wiki/waitUntil) or [onEachFrame](https://community.bistudio.com/wiki/onEachFrame) scopes with exitWith will have no effect as these scopes are called repeatedly by the engine and require different handling to terminate (see Example 3).",
        "syntaxArray": [
            {
                "Syntax": "ifType exitWith code",
                "Params": "ifType: [If Type](https://community.bistudio.com/wiki/If_Type)\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nif (_x>5) exitWith {echo \"_x is too big\"; _x}\n```\n\n\nWhen _x is greater than 5, outputs message and terminates code in current level with value of _x.",
            "\n```sqf\nfor \"_j\" from 1 to 10 do\n{\n\tplayer sideChat format [\"%1\",_j];\n\tif (_j==5) exitWith {player sideChat \"5 is enough\"};\n};\nplayer sideChat \"Complete\";\n```\n\n*Only* the \"for\" loop will exit when the exitWith condition has been fulfilled (not the whole script). Execution will continue after the end of the loop (player sideChat \"Complete\").",
            "Most loops will also terminate when their scope exited. To exit and terminate scopes which are called every frame such as [onEachFrame](https://community.bistudio.com/wiki/onEachFrame) and [waitUntil](https://community.bistudio.com/wiki/waitUntil) use the following examples:\n\n\n```sqf\nonEachFrame {\n\tif (!alive player) exitWith {\n\t\tonEachFrame {}\n\t}\n}\n\n```\n\n\n\n```sqf\n_time = time + 10;\nwaitUntil \n{\n\tif (time > _time) exitWith { true };\n\tfalse\n}\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/exitWith",
        "modifiers": []
    },
    "setobjecttextureglobal": {
        "name": "setObjectTextureGlobal",
        "description": "Set the texture of the given selection on all computers in a network session.\nNot all objects can be textured this way. See [getObjectTextures](https://community.bistudio.com/wiki/getObjectTextures) for supported texture selections.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "obj setObjectTextureGlobal [selection, texture]",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n[selection,texture]: [Array](https://community.bistudio.com/wiki/Array)\n\nselection: [Number](https://community.bistudio.com/wiki/Number)\n\ntexture: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];\n```\n",
            "\n```sqf\n// Set up a persistent texture keeper\nplayer addEventHandler [\"Take\", {\n\t(getObjectTextures player + [uniformContainer player getVariable \"texture\"])\n\tparams [\"_texUniform\", \"_texInsignia\", \"_texCustom\"];\n\tif (isNil \"_texCustom\") exitWith {};\n\tif (_texUniform == _texCustom) exitWith {};\n\tplayer setObjectTextureGlobal [0, _texCustom];\n\tfalse\n}];\n\n\n// Example: make current uniform persistently blue\n\nprivate _texture = \"#(rgb,8,8,3)color(0,0,1,1)\"; // blue texture\nplayer setObjectTextureGlobal [0, _texture]; // set it on player\nuniformContainer player setVariable [\"texture\", _texture, true]; // store it on uniform\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectTextureGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "allunitsuav": {
        "name": "allUnitsUAV",
        "description": "Return a list of all UAV vehicles.",
        "syntaxArray": [
            {
                "Syntax": "allUnitsUAV",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - Array of UAV vehicles"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"Number of UAV(s) on the map: %1\", count allUnitsUAV];\n```\n",
            "\n```sqf\n{ _x setDamage 1 } forEach allUnitsUAV;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allUnitsUAV",
        "modifiers": []
    },
    "preloadcamera": {
        "name": "preloadCamera",
        "description": "Preload all textures and models around given [Position](https://community.bistudio.com/wiki/Position) to avoid visual artifacts after camera is moved.\n\nShould be used before any abrupt camera change/cut.\n\nReturns true once all data is ready. See [camPreload](https://community.bistudio.com/wiki/camPreload) for alternative, more flexible camera preloading.",
        "syntaxArray": [
            {
                "Syntax": "**preloadCamera** position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nwaitUntil {preloadCamera markerPos \"cam_location_2\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/preloadCamera",
        "modifiers": []
    },
    "addmenuitem": {
        "name": "addMenuItem",
        "description": "Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first). \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **addMenuItem** [menu or index,text,command,priority]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[menu or index,text,command,priority]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/addMenuItem",
        "modifiers": []
    },
    "min": {
        "name": "min",
        "description": "The smaller of a,b",
        "syntaxArray": [
            {
                "Syntax": "a **min** b",
                "Params": "a: [Number](https://community.bistudio.com/wiki/Number)\n\nb: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n3 min 2 // Result is 2\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/min",
        "modifiers": []
    },
    "enablechannel": {
        "name": "enableChannel",
        "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in [Description.ext](https://community.bistudio.com/wiki/Description.ext) or [server.cfg](https://community.bistudio.com/wiki/server.cfg), it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command.\n> \n",
        "syntaxArray": [
            {
                "Syntax": "channelID enableChannel enable",
                "Params": "channelID: [Number](https://community.bistudio.com/wiki/Number) - [channel ID](https://community.bistudio.com/wiki/Channel_IDs)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to enable, [false](https://community.bistudio.com/wiki/false) to disable (both VoN and chat)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "channelID enableChannel [chat, VoN] *Since Arma 3 v1.59.135661*",
                "Params": "channelID: [Number](https://community.bistudio.com/wiki/Number) - [channel ID](https://community.bistudio.com/wiki/Channel_IDs)\n\n[chat, VoN]: [Array](https://community.bistudio.com/wiki/Array)\n\nchat: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to enable text chat\n\nVoN: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to enable voice chat\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n0 enableChannel false; // Disable user ability to send voice and text on global channel\n```\n",
            "\n```sqf\n0 enableChannel [true, false]; // Enable user ability to send text but disable voice on global channel\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableChannel",
        "modifiers": [
            "Local effect"
        ]
    },
    "getclientstatenumber": {
        "name": "getClientStateNumber",
        "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n",
        "syntaxArray": [
            {
                "Syntax": "getClientStateNumber",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Client state (see table above)"
            }
        ],
        "examples": [
            "\n```sqf\n_state = getClientStateNumber;\n```\n",
            "\n```sqf\n_inGame = getClientStateNumber > 8;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getClientStateNumber",
        "modifiers": []
    },
    "lbcursel": {
        "name": "lbCurSel",
        "description": "Returns the index of the selected item of the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX), [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO) or [CT_TOOLBOX](https://community.bistudio.com/wiki/CT_TOOLBOX). For [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) with multi selection enabled use [lbSelection](https://community.bistudio.com/wiki/lbSelection).",
        "syntaxArray": [
            {
                "Syntax": "**lbCurSel** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Selected index (row) or -1 if nothing is selected"
            },
            {
                "Syntax": "**lbCurSel** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Selected index (row) or -1 if nothing is selected"
            }
        ],
        "examples": [
            "\n```sqf\n_index = lbCurSel 101;\n```\n",
            "\n```sqf\nlbCurSel _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbCurSel",
        "modifiers": []
    },
    "missiondifficulty": {
        "name": "missionDifficulty",
        "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it is used one from player's options.",
        "syntaxArray": [
            {
                "Syntax": "missionDifficulty",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_number = missionDifficulty;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionDifficulty",
        "modifiers": []
    },
    "attachedobject": {
        "name": "attachedObject",
        "description": "Returns the object a location is attached to. If the location is unattached, then [objNull](https://community.bistudio.com/wiki/objNull) is returned.",
        "syntaxArray": [
            {
                "Syntax": "**attachedObject** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_locAttachedObj = attachedObject myLocation;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/attachedObject",
        "modifiers": []
    },
    "getfsmvariable": {
        "name": "getFSMVariable",
        "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the [execFSM](https://community.bistudio.com/wiki/execFSM) command.",
        "syntaxArray": [
            {
                "Syntax": "FSMhandle **getFSMVariable** name",
                "Params": "FSMhandle: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of the variable\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            },
            {
                "Syntax": "FSMhandle **getFSMVariable** [name, defaultValue] *Since Arma 3 v1.67*",
                "Params": "[name, defaultValue]: [Array](https://community.bistudio.com/wiki/Array) -\n\nFSMhandle: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of the variable\n\ndefaultValue: [Anything](https://community.bistudio.com/wiki/Anything) - value to return if variable is [nil](https://community.bistudio.com/wiki/nil)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\n_handle getFSMVariable \"_foo\";\n```\n",
            "\n```sqf\n_handle getFSMVariable [\"_foo\", 123];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getFSMVariable",
        "modifiers": []
    },
    "remoteexec": {
        "name": "remoteExec",
        "description": "Asks the server to execute the given function or script command on the given target machine(s).\n\n* Functions are executed in the [scheduled environment](https://community.bistudio.com/wiki/Scheduler#Scheduled_Environment); suspension is allowed.\n\n* Script commands are executed in the [unscheduled environment](https://community.bistudio.com/wiki/Scheduler#Unscheduled_Environment); suspension is not allowed.\nRead [Arma 3: Remote Execution](https://community.bistudio.com/wiki/Arma_3:_Remote_Execution) for more information about remote execution, security features and JIP techniques.\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "params remoteExec [functionName, targets, JIP]",
                "Params": "**params**: [Anything](https://community.bistudio.com/wiki/Anything) - The parameter(s) for the function / command specified in the **functionName** parameter.\n\n**functionName**: [String](https://community.bistudio.com/wiki/String) - Function or command name.\nWhile any function or command can be used here, only those allowed by [CfgRemoteExec](https://community.bistudio.com/wiki/Arma_3:_CfgRemoteExec) will actually be executed.\n\n**targets** (Optional, default: 0):\n\n* [Number](https://community.bistudio.com/wiki/Number) (See also [Machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID)) -\n\n* **0:** The function / command will be executed globally, i.e. on the server and every connected client, including the machine where remoteExec originated.\n\n* **2:** The function / command will only be executed on the server.\n\n* **Other number:** The function / command will be executed on the machine where [clientOwner](https://community.bistudio.com/wiki/clientOwner) matches the given number.\n\n* **Negative number:** The effect is inverted: -2 means every client but not the server, -12 means the server and every client, except for the client where [clientOwner](https://community.bistudio.com/wiki/clientOwner) returns 12.\n\n* [Object](https://community.bistudio.com/wiki/Object) - The function / command will be executed where the given object is [local](https://community.bistudio.com/wiki/local).\n\n* [String](https://community.bistudio.com/wiki/String) - Interpreted as an [Identifier](https://community.bistudio.com/wiki/Identifier) (variable name). The function / command will be executed where the object or group identified by the variable with the provided name is [local](https://community.bistudio.com/wiki/local).\n\n* [Side](https://community.bistudio.com/wiki/Side) - The function / command will be executed on machines where the player is on the specified side.\n\n* [Group](https://community.bistudio.com/wiki/Group) - The function / command will be executed on machines where the player is in the specified group.\n\n* [Array](https://community.bistudio.com/wiki/Array) - Array of any combination of the types listed above.\n\n**JIP** (Optional, default: [false](https://community.bistudio.com/wiki/false)):\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) - If [true](https://community.bistudio.com/wiki/true), a unique JIP ID is generated and the remoteExec statement is added to the JIP queue from which it will be executed for every JIP.\n\n* [String](https://community.bistudio.com/wiki/String) -\n\n* If the string is empty, it is interpreted as [false](https://community.bistudio.com/wiki/false).\n\n* If the string is in format \"[Number](https://community.bistudio.com/wiki/Number):[Number](https://community.bistudio.com/wiki/Number)\" (e.g. \"0:0\"), it is interpreted as a [netId](https://community.bistudio.com/wiki/netId) (see below).\n\n* Else the string is treated as a custom JIP ID and the remoteExec statement is added to the JIP queue, replacing statements that have the same JIP ID.\n\n* [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [netId](https://community.bistudio.com/wiki/netId) - The persistent execution of the remoteExec statement is attached to the given object or group.When the object / group is deleted, the remoteExec statement is automatically removed from the JIP queue.\n\nThe **JIP** parameter can only be used if the **targets** parameter is 0 or a negative number.See also [Example 3](https://community.bistudio.com/wiki/remoteExec#Example_3) on how to remove statements from the JIP queue.\n\n",
                "Return": ""
            },
            {
                "Syntax": "remoteExec [functionName, targets, JIP]",
                "Params": "**functionName**: [String](https://community.bistudio.com/wiki/String) - See the main syntax above for more details.\n\n**targets** (Optional, default: 0): [Number](https://community.bistudio.com/wiki/Number), [Object](https://community.bistudio.com/wiki/Object), [String](https://community.bistudio.com/wiki/String), [Side](https://community.bistudio.com/wiki/Side), [Group](https://community.bistudio.com/wiki/Group) or [Array](https://community.bistudio.com/wiki/Array) - See the main syntax above for more details.\n\n**JIP** (Optional, default: [false](https://community.bistudio.com/wiki/false)): [Boolean](https://community.bistudio.com/wiki/Boolean), [String](https://community.bistudio.com/wiki/String), [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [netId](https://community.bistudio.com/wiki/netId) - See the main syntax above for more details.\n\n",
                "Return": "[nil](https://community.bistudio.com/wiki/nil) or [String](https://community.bistudio.com/wiki/String) - See the main syntax above for more details."
            }
        ],
        "examples": [
            "Execute \n```sqf\nhint \"Example 1\";\n```\n on various machines:\n\n```sqf\n\"Example 1\" remoteExec [\"hint\"]; // Executed on all machines.\n\"Example 1\" remoteExec [\"hint\", 3]; // Executed only on the first connected client.\n\"Example 1\" remoteExec [\"hint\", -2]; // Executed everywhere except on the server.\n```\n",
            "Execute \n```sqf\nhint \"Example 2\";\n```\n on various machines and add it to the JIP queue:\n\n```sqf\n_result = \"Example 2\" remoteExec [\"hint\", -2, true]; // _result is a unique JIP ID, e.g. \"3_1\".\n_result = \"Example 2\" remoteExec [\"hint\", -2, \"My_JIP_ID\"]; // _result is \"My_JIP_ID\".\n_result = \"Example 2\" remoteExec [\"hint\", 0, MyObject]; // _result is the unique netId of MyObject, e.g. \"2:3\".\n```\n\nNote that if there already was a statement with the JIP ID \"My_JIP_ID\" in the JIP queue, that statement has now been overwritten.",
            "Remove statements from the JIP queue:\n\n```sqf\nremoteExec [\"\", \"My_JIP_ID\"]; // The persistent statement with the JIP ID \"My_JIP_ID\" is removed from the JIP queue.\nremoteExec [\"\", MyObject]; // The persistent statement attached to MyObject is removed from the JIP queue.\n```\n",
            "Some more complex examples:\n\n```sqf\n[\"Open\", true] remoteExec [\"BIS_fnc_arsenal\", MyTargetPlayer];\n[MyCurator, [[MyObject1, MyObject2], false]] remoteExec [\"addCuratorEditableObjects\", 2];\n```\n",
            "A tricky example: Trying to execute \n```sqf\nplayer setAmmo [primaryWeapon player, 1];\n```\n (on machines where the player is in MyGroup). Consider the following statements:\n\n```sqf\n{player setAmmo [primaryWeapon player, 1];} remoteExec [\"call\", MyGroup]; // Statement 1\n[player, [primaryWeapon player, 1]] remoteExec [\"setAmmo\", MyGroup]; // Statement 2\n```\n\nBoth statements look very similar, but only Statement 1 has the intended effect. This is because in Statement 2, the arguments \n```sqf\nplayer\n```\n and \n```sqf\nprimaryWeapon player\n```\n are not resolved on the target machine(s), but on the machine executing remoteExec."
        ],
        "Url": "https://community.bistudio.com/wiki/remoteExec",
        "modifiers": []
    },
    "settaskmarkeroffset": {
        "name": "setTaskMarkerOffset",
        "description": "Sets the task marker position in model space.",
        "syntaxArray": [
            {
                "Syntax": "obj [setTaskState](https://community.bistudio.com/wiki/setTaskState) position",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setTaskMarkerOffset [0,0.5,1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTaskMarkerOffset",
        "modifiers": []
    },
    "taskstate": {
        "name": "taskState",
        "description": "Returns the current state of a task. \n\n**Possible return values are:**\n\n* None\n\n* Created\n\n* Assigned\n\n* Succeeded\n\n* Failed\n\n* Canceled",
        "syntaxArray": [
            {
                "Syntax": "**taskState**  task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task) - the task you want to query\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - current state of task"
            }
        ],
        "examples": [
            "\n```sqf\ntskSomeTask = player createSimpleTask [\"NewTask\"];\nhint format[\"Taskstate: %1\", taskState tskSomeTask];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskState",
        "modifiers": []
    },
    "createsimpletask": {
        "name": "createSimpleTask",
        "description": "Creates a new [Task](https://community.bistudio.com/wiki/Task) and adds it to the Diary.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **createSimpleTask** [name, parentTask]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) -  Unit to add this new task\n\nname: [String](https://community.bistudio.com/wiki/String)\n\nparentTask: [Task](https://community.bistudio.com/wiki/Task) - (Optional, [taskNull](https://community.bistudio.com/wiki/taskNull)) - The new task will be a sub task of the parent task\n\n",
                "Return": "[Task](https://community.bistudio.com/wiki/Task) - The new task"
            }
        ],
        "examples": [
            "\n```sqf\n_currentTask = player createSimpleTask [\"NewTask\"];\n```\n",
            "\n```sqf\n_childTask = player createSimpleTask [\"ChildTask\", _currentTask];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createSimpleTask",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "ctrlmodelscale": {
        "name": "ctrlModelScale",
        "description": "Returns 3D control model scale.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlModelScale** control",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_currentScale = ctrlModelScale _ctrl3D;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlModelScale",
        "modifiers": []
    },
    "selectrandomweighted": {
        "name": "selectRandomWeighted",
        "description": "Returns a random element from the given array according to assigned weights. Engine solution to [BIS_fnc_selectRandomWeighted](https://community.bistudio.com/wiki/BIS_fnc_selectRandomWeighted). A few notes:\n\n* Negative weights are not supported\n\n* If an item's weight is 0, the item is ignored\n\n* The weights don't have to total to 1\n\n* If numbers of items and weights do not match, the shortest array is used\n\n* A single array Syntax is slightly faster then Alt Syntax",
        "syntaxArray": [
            {
                "Syntax": "**selectRandomWeighted** valuesAndWeights",
                "Params": "valuesAndWeights: [Array](https://community.bistudio.com/wiki/Array) - array in format [value1, weight1, value2, weight2...], where:\n\n* value: [Anything](https://community.bistudio.com/wiki/Anything) - weighted value\n\n* weight: [Number](https://community.bistudio.com/wiki/Number) - values relative weight\n\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - random weighted value or [Nothing](https://community.bistudio.com/wiki/Nothing) if array is empty or all weights are 0"
            },
            {
                "Syntax": "values **selectRandomWeighted** weights",
                "Params": "values: [Array](https://community.bistudio.com/wiki/Array) - array of [Anything](https://community.bistudio.com/wiki/Anything)\n\nweights: [Array](https://community.bistudio.com/wiki/Array) - array of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - random weighted value or [Nothing](https://community.bistudio.com/wiki/Nothing) if any of arrays is empty or all weights are 0"
            }
        ],
        "examples": [
            "\n```sqf\n_randomWeightedElement = selectRandomWeighted [1,0.1,2,0.2,3,1.3,4,2.4,5,7.5];\n```\n",
            "\n```sqf\n_randomWeightedElement = [1,2,3,4,5] selectRandomWeighted [0.1,0.2,1.3,2.4,7.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectRandomWeighted",
        "modifiers": []
    },
    "addteammember": {
        "name": "addTeamMember",
        "description": "Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.\n\n The same [Team Member](https://community.bistudio.com/wiki/Team_Member) can be member of several different [teams](https://community.bistudio.com/wiki/teams) at the same time.",
        "syntaxArray": [
            {
                "Syntax": "team **addTeamMember** member",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\nmember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_team addTeamMember _teamMember;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addTeamMember",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lightattachobject": {
        "name": "lightAttachObject",
        "description": "Attach light to given object at given position on object.",
        "syntaxArray": [
            {
                "Syntax": "light lightAttachObject [object, position]",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\n[object, position]: [Array](https://community.bistudio.com/wiki/Array)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight lightAttachObject [myVehicle, [-0.5,-0.25,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lightAttachObject",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "weapons": {
        "name": "weapons",
        "description": "Returns array of names of all unit's weapons.",
        "syntaxArray": [
            {
                "Syntax": "**weapons**",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of weapon names."
            }
        ],
        "examples": [
            "\n```sqf\n_wArray = weapons player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weapons",
        "modifiers": []
    },
    "humidity": {
        "name": "humidity",
        "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.",
        "syntaxArray": [
            {
                "Syntax": "**humidity**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ncurrentHumidity = humidity;\n\n```\n",
            "\n```sqf\nskipTime -24;\n86400 setOvercast 1;\nskipTime 24;\n[] spawn {\n\t10 setRain 1;\n\tsleep 10;\n\t10 setRain 0;\n};\nonEachFrame {\n\thintSilent str [round (rain * 10) / 10, round (humidity * 10) / 10];\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/humidity",
        "modifiers": []
    },
    "acctime": {
        "name": "accTime",
        "description": "Returns the current simulation acceleration factor.",
        "syntaxArray": [
            {
                "Syntax": "**accTime**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_acc = accTime;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/accTime",
        "modifiers": []
    },
    "playmovenow": {
        "name": "playMoveNow",
        "description": "When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. \nThe difference between [playMove](https://community.bistudio.com/wiki/playMove) and playMoveNow is that [playMove](https://community.bistudio.com/wiki/playMove) adds another move to the move queue, while playMoveNow replaces the whole move queue with new move (see [Example 2](https://community.bistudio.com/wiki/playMoveNow#Examples)).\n> ",
        "syntaxArray": [
            {
                "Syntax": "soldier playMoveNow moveName",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\nmoveName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer playMoveNow \"AmovPercMevaSlowWrflDf\"\n```\n",
            "\n```sqf\nplayer switchMove \"AmovPercMstpSrasWrflDnon\"; \n[] spawn \n{\n\tsleep 0.5; \n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\"; // player goes prone\n\tplayer playMove \"amovPknlMstpSrasWrflDnon\"; // player gets up on one knee\n};\n```\n\n\n```sqf\nplayer switchMove \"amovpercmstpsraswrfldnon\";\n[] spawn\n{\n\tsleep 0.5; \n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\"; // player never goes prone\n\tplayer playMoveNow \"AmovPknlMstpSrasWrflDnon\"; // player goes down on one knee straight away\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playMoveNow",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "addweaponpool": {
        "name": "addWeaponPool",
        "description": "Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.",
        "syntaxArray": [
            {
                "Syntax": "**addWeaponPool** [weaponName, count]",
                "Params": "weaponName: [String](https://community.bistudio.com/wiki/String) - Weapon name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - Number of weapons to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\naddWeaponPool [\"M16\",5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponPool",
        "modifiers": []
    },
    "createvehicle": {
        "name": "createVehicle",
        "description": "Creates an empty object of given classname type.\nSee [Arma 3 Assets](https://community.bistudio.com/wiki/Arma_3_Assets) / [Arma 3: createVehicle/vehicles](https://community.bistudio.com/wiki/Arma_3:_createVehicle/vehicles), or [Category:CfgVehicles](https://community.bistudio.com/wiki/Category:CfgVehicles) for earlier games.\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "type createVehicle position",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - vehicle/object className\n\nposition: [Position](https://community.bistudio.com/wiki/Position) - Desired placement position. If the exact position is occupied, nearest empty position is used.\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            },
            {
                "Syntax": "createVehicle [type, position, markers, placement, special]",
                "Params": "[type, position, markers, placement, special]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - vehicle/object className\n\nposition: [PositionATL](https://community.bistudio.com/wiki/PositionATL) ([PositionAGL](https://community.bistudio.com/wiki/PositionAGL) if boat or amphibious), [Position2D](https://community.bistudio.com/wiki/Position2D), or [Object](https://community.bistudio.com/wiki/Object) - desired placement position\n\nmarkers: [Array](https://community.bistudio.com/wiki/Array) - (Optional, default []) if the markers array contains any markers, the position is randomly picked from array of given markers plus desired placement position. If any of the markers were given z coordinate with [setMarkerPos](https://community.bistudio.com/wiki/setMarkerPos), the vehicle will also be created at given z coordinate.\n\nplacement: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 0) the vehicle is placed inside a circle with given position as center and placement as its radius.\n\nspecial: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"NONE\") can be one of the following:\n\n* \"NONE\" - will look for suitable empty position near given position (subject to other placement params) before placing vehicle there.\n\n* \"CAN_COLLIDE\" - places vehicle at given position (subject to other placement params), without checking if others objects can cross its 3D model.\n\n* \"FLY\" - if vehicle is capable of flying and has crew, it will be made airborne at default height.\nIf *special* is \"\" or not specified, default \"NONE\" is used.\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - created vehicle or [objNull](https://community.bistudio.com/wiki/objNull) if failed"
            }
        ],
        "examples": [
            "\n```sqf\n_jeep = \"Jeep\" createVehicle position player;\n```\n",
            "\n```sqf\n_heli = \"AH1Z\" createVehicle getMarkerPos \"hspawn\";\n```\n",
            "\n```sqf\n_veh = createVehicle [\"ah1w\", position player, [], 0, \"FLY\"];\n```\n",
            "\n```sqf\n_veh = createVehicle [\"2S6M_Tunguska\", getMarkerPos \"marker1\", [\"marker2\", \"marker3\"], 0, \"NONE\"];\n```\n",
            "Objects such as\n\n* \"test_EmptyObjectForBubbles\"\n\n* \"test_EmptyObjectForFireBig\"\n\n* \"test_EmptyObjectForSmoke\"\ncreate additional emitters, which are stored in \"effects\" variable on the object. Since Arma 3 v1.71 these emitters are automatically deleted when object is deleted\n\n```sqf\n[] spawn\n{\n\tprivate _fire = \"test_EmptyObjectForFireBig\" createVehicle position player;\n\tsleep 5;\n\tdeleteVehicle _fire;\n};\n```\n",
            "The following explosives (ending with *_Scripted*) can be set off by applying [setDamage](https://community.bistudio.com/wiki/setDamage) 1 to them for ease of scripting:\n\n* \"DemoCharge_Remote_Ammo_Scripted\"\n\n* \"SatchelCharge_Remote_Ammo_Scripted\"\n\n* \"ClaymoreDirectionalMine_Remote_Ammo_Scripted\"\n\n```sqf\n_claymore = \"ClaymoreDirectionalMine_Remote_Ammo_Scripted\" createVehicle position player;\n_claymore spawn\n{\n\tsleep 5;\n\t_this setDamage 1;\n};\n```\n",
            "Add inventory to objects without inventory:\n\n```sqf\n_boxes = \"Land_Pallet_MilBoxes_F\" createVehicle position player;\n_cargo = \"Supply500\" createVehicle [0,0,0];\n_cargo attachTo [_boxes, [0,0,0.85]];\n\n// optional for objects that can take damage\n_boxes addEventHandler [\"Killed\",\n{\n\t{\n\t\tdetach _x,\n\t\tdeleteVehicle _x;\n\t}\n\tforEach attachedObjects (_this select 0);\n}];\n```\n",
            "Drop player's weapon:\n\n```sqf\n_wh = \"GroundWeaponHolder_Scripted\" createVehicle position player;\nplayer action [\"DropWeapon\", _wh, currentWeapon player];\n```\n",
            "The following weapon holders (ending with *_Scripted*) do **not** auto-delete when empty. It is up to the mission maker to take care of these:\n\n* \"GroundWeaponHolder_Scripted\"\n\n* \"WeaponHolderSimulated_Scripted\"\n\n* \"Weapon_Empty\" (a special weaponholder that displays only a single weapon, even if it contains magazines for this weapon)\n\n```sqf\nprivate _weaponHolder = createVehicle [\"Weapon_Empty\", getPosATL player, [], 0, \"CAN_COLLIDE\"];\n_weaponHolder addWeaponCargo [\"arifle_Katiba_F\", 1];\nhint \"You have 5 seconds to grab this weapon\";\nsleep 5;\ndeleteVehicle _weaponHolder;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createVehicle",
        "modifiers": [
            "Global effect"
        ]
    },
    "findemptypositionready": {
        "name": "findEmptyPositionReady",
        "description": "Preloads area to be used with [findEmptyPosition](https://community.bistudio.com/wiki/findEmptyPosition) command and returns [true](https://community.bistudio.com/wiki/true) when area is ready. The size of the area preloaded is from center - radius - maxDistance to center + radius + maxDistance\n> ",
        "syntaxArray": [
            {
                "Syntax": "center **findEmptyPositionReady** [radius, maxDistance]",
                "Params": "center: [Array](https://community.bistudio.com/wiki/Array) - Search area center position in format [x,y] or [x,y,z] in which case z is ignored. Accepts [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n[radius, maxDistance]: [Array](https://community.bistudio.com/wiki/Array) -\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - distance from the center\n\nmaxDistance: [Number](https://community.bistudio.com/wiki/Number) - distance from the end of radius\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) when ready"
            }
        ],
        "examples": [
            "Preload aread within 500m: \n```sqf\n_ready = _center findEmptyPositionReady [0, 500];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/findEmptyPositionReady",
        "modifiers": []
    },
    "setcurrentwaypoint": {
        "name": "setCurrentWaypoint",
        "description": "Sets the currently active waypoint for a group.",
        "syntaxArray": [
            {
                "Syntax": "groupName **setCurrentWaypoint** waypoint",
                "Params": "groupName: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nwaypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_grp setCurrentWaypoint [_grp, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCurrentWaypoint",
        "modifiers": [
            "Local argument"
        ]
    },
    "tvisselected": {
        "name": "tvIsSelected",
        "description": "Returns true if given treeview item is selected.",
        "syntaxArray": [
            {
                "Syntax": "control tvIsSelected path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvIsSelected [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvIsSelected",
        "modifiers": []
    },
    "ctremoverows": {
        "name": "ctRemoveRows",
        "description": "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctRemoveRows** indices",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nindices: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctRemoveRows [0, 1, 2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctRemoveRows",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlparentcontrolsgroup": {
        "name": "ctrlParentControlsGroup",
        "description": "Returns the parent control of a given child control. If the control is not part of a [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) control then [controlNull](https://community.bistudio.com/wiki/controlNull) is returned. To return parent [Display](https://community.bistudio.com/wiki/Display) of the control use [ctrlParent](https://community.bistudio.com/wiki/ctrlParent).",
        "syntaxArray": [
            {
                "Syntax": "ctrlParentControlsGroup ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control) - child control\n\n",
                "Return": "[Control](https://community.bistudio.com/wiki/Control)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlCombo = _ctrl controlsGroupCtrl 100; // control\nctrlParentControlsGroup _ctrlCombo; // parent control group (_ctrl)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlParentControlsGroup",
        "modifiers": []
    },
    "setwaypointstatements": {
        "name": "setWaypointStatements",
        "description": "The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.\nWithin the Condition & Statement code string:\n\n* [this](https://community.bistudio.com/wiki/Magic_Variables#this_2) refers to the group leader\n\n* [thisList](https://community.bistudio.com/wiki/Magic_Variables#thisList) refers to the group's units\n> ",
        "syntaxArray": [
            {
                "Syntax": "waypoint setWaypointStatements [condition, statement]",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n[condition, statement]: [Array](https://community.bistudio.com/wiki/Array)\n\ncondition: [String](https://community.bistudio.com/wiki/String)\n\nstatement: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_waypoint setWaypointStatements [\"true\", \"hint 'hello'; hint 'goodbye'\"];\n```\n",
            "\n```sqf\n_waypoint setWaypointStatements [\"true\", \"diag_log ['GroupLeader: ', this]; diag_log ['Units: ', thislist]\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointStatements",
        "modifiers": []
    },
    "vectordistancesqr": {
        "name": "vectorDistanceSqr",
        "description": "Squared distance between two 3D vectors.",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorDistanceSqr vector2",
                "Params": "vector1: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_distSqr = getPos player vectorDistanceSqr [0,0,2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorDistanceSqr",
        "modifiers": []
    },
    "setflagowner": {
        "name": "setFlagOwner",
        "description": "Sets flag owner. When owner is set to [objNull](https://community.bistudio.com/wiki/objNull) or any object other than a unit of class [man](https://community.bistudio.com/wiki/Models_%26_Classnames:_CfgVehicles_-_Class_Man) or [logic](https://community.bistudio.com/wiki/Game_Logic), flag is returned to the flagpole. A flag owned by a logic has no visual representation.",
        "syntaxArray": [
            {
                "Syntax": "flag **setFlagOwner** owner",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object)\n\nowner: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_flag1 setFlagOwner _soldier1;\n```\n",
            "To return the flag back to the flag pole:\n```sqf\n//Method 1: (set owner null)\nflag _flagCarrier setFlagOwner objNull;\n//Method 2: (set the flag mast as the owner)\nflag _flagCarrier setFlagOwner flag _flagCarrier;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFlagOwner",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "campreparepos": {
        "name": "camPreparePos",
        "description": "Prepares the camera position. Needs the call of [camCommitPrepared](https://community.bistudio.com/wiki/camCommitPrepared) to be conducted.",
        "syntaxArray": [
            {
                "Syntax": "camera **camPreparePos** position",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - Format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPreparePos getPos player \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPreparePos",
        "modifiers": []
    },
    "with": {
        "name": "with",
        "description": "Creates a [With Type](https://community.bistudio.com/wiki/With_Type) that is used inside a [do](https://community.bistudio.com/wiki/do) construct in order to execute code inside a given namespace. \n> \n**NOTE** for the reasons unknown, namespace switching might unexpectedly occur inside some scopes ([for](https://community.bistudio.com/wiki/for), [if](https://community.bistudio.com/wiki/if), [try](https://community.bistudio.com/wiki/try), [call](https://community.bistudio.com/wiki/call)) started in [scheduled](https://community.bistudio.com/wiki/Scheduler#Scheduled_Environment) scripts ([canSuspend](https://community.bistudio.com/wiki/canSuspend) true) after small suspension if with was not the main scope. For example: \n\n```sqf\n[] spawn\n{\n\twith uiNamespace do \n\t{\n\t\tfor \"_i\" from 1 to 1 do \n\t\t{\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false]\n\t\t\tsleep 0.05; //<-- small suspension\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [false, true] <-- switching\n\t\t};\n\t};\n};\n```\n\nHowever if with used in parent scope, everything works correctly:\n\n```sqf\nwith uiNamespace do\n{\n\t[] spawn \n\t{\n\t\tfor \"_i\" from 1 to 1 do \n\t\t{\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false]\n\t\t\tsleep 0.05; //<-- small suspension\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false] <-- NO switching\n\t\t};\n\t};\n};\n```\n\n\nTo eliminate possibility of error you can also use [setVariable](https://community.bistudio.com/wiki/setVariable) or [getVariable](https://community.bistudio.com/wiki/getVariable) with desired [Namespace](https://community.bistudio.com/wiki/Namespace), which is also [scheduled environment](https://community.bistudio.com/wiki/Scheduler#Scheduled_Environment) safe.",
        "syntaxArray": [
            {
                "Syntax": "with namespace",
                "Params": "namespace: [Namespace](https://community.bistudio.com/wiki/Namespace)\n\n",
                "Return": "[With Type](https://community.bistudio.com/wiki/With_Type)"
            }
        ],
        "examples": [
            "\n```sqf\n _myWithType = with uiNamespace; \n```\n",
            "\n```sqf\nwith missionNamespace do {global = global + 1};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/with",
        "modifiers": []
    },
    "removeallcontainers": {
        "name": "removeAllContainers",
        "description": "Removes all containers from the unit.",
        "syntaxArray": [
            {
                "Syntax": "removeAllContainers unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllContainers player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllContainers",
        "modifiers": []
    },
    "setpylonloadout": {
        "name": "setPylonLoadout",
        "description": "Adds/overrides loadout to a vehicle pylon. TransportPylonsComponent in vehicle config and pylonWeapon in the magazine config are required to run.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setPylonLoadout** [pylon, magazine, forced, turret];",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[pylon, magazine, forced, turret] : [Array](https://community.bistudio.com/wiki/Array)\n\npylon: [Number](https://community.bistudio.com/wiki/Number) or [String](https://community.bistudio.com/wiki/String) - pylon index (index starts from 1) or pylon name (see [getCompatiblePylonMagazines](https://community.bistudio.com/wiki/getCompatiblePylonMagazines) Example 4)\n\nmagazine: [String](https://community.bistudio.com/wiki/String) - magazine name\n\nforced (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to force incompatible magazine. Default: [false](https://community.bistudio.com/wiki/false)\n\nturret (Optional): [Array](https://community.bistudio.com/wiki/Array) - turret path. Default: []\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setPylonLoadout [\"pylon1\", \"\"]; \n```\n",
            "Make all of your pylon weapons Twin Cannon 30 mm:\n```sqf\nfor \"_i\" from 1 to 100 do {\n\tvehicle player setPylonLoadout [_i, \"PylonWeapon_300Rnd_20mm_shells\", true];\n};\n```\n",
            "Showcase all possible magazines:\n```sqf\n[] spawn {\n\t{\n\t\tfor \"_i\" from 1 to 100 do {\n\t\t\tvehicle player setPylonLoadout [_i, configName _x, true];\n\t\t};\n\t\thint configName _x;\n\t\tsleep 1.5;\n\t} forEach (\"getText (_x >> 'pylonWeapon') != ''\" configClasses (configFile >> \"CfgMagazines\"));\n} ;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPylonLoadout",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlsettextselection": {
        "name": "ctrlSetTextSelection",
        "description": "Selects length characters of edit control from the start position and places cursor at the end of selection.\n> ",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetTextSelection [start, length]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[start, length]: [Array](https://community.bistudio.com/wiki/Array)\n\nstart: [Number](https://community.bistudio.com/wiki/Number) - selection start position\n\nlength: [Number](https://community.bistudio.com/wiki/Number) - length of characters to select (0 to only move the cursor). Negative length will select text from right to left (see example 3)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetTextSelection [5, 10]\n```\n",
            "\n```sqf\ndisableSerialization;\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscEditMulti\", -1]; \n_ctrl ctrlSetPosition [0,0,0.5,0.3];\n_ctrl ctrlCommit 0; \n_ctrl ctrlSetText \"Hello World\"; \n_ctrl ctrlSetTextSelection [6, 5]; // selects World\nctrlSetFocus _ctrl;\n```\n",
            "Select text from right to left:\n```sqf\n_control ctrlSetTextSelection [5, -4]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTextSelection",
        "modifiers": []
    },
    "spawn": {
        "name": "spawn",
        "description": "Adds given set of compiled instructions to the [scheduler](https://community.bistudio.com/wiki/Scheduler). Exactly when the code will be executed is unknown, it depends on how busy is the engine and how filled up is the [scheduler](https://community.bistudio.com/wiki/Scheduler). Therefore spawn does not wait for the supplied code to finish, instead, spawn returns a [Script](https://community.bistudio.com/wiki/Script_(Handle)) handle to the [scheduler](https://community.bistudio.com/wiki/Scheduler) task. [scriptDone](https://community.bistudio.com/wiki/scriptDone) command can be used to check the code completion. Additional arguments are passed to the code in local variable [_this](https://community.bistudio.com/wiki/Magic_Variables#this). Since Arma 3 v1.55 the script handle also exists inside the code in _thisScript variable. To see what spawned scripts are currently in the scheduler, use [diag_activeSQFScripts](https://community.bistudio.com/wiki/diag_activeSQFScripts) command.\n> ",
        "syntaxArray": [
            {
                "Syntax": "arguments **spawn** code",
                "Params": "arguments: [Anything](https://community.bistudio.com/wiki/Anything) - arguments passed to the script, which later available in _this variable inside the script.\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Script Handle](https://community.bistudio.com/wiki/Script_(Handle)) - can be used to determine (via [scriptDone](https://community.bistudio.com/wiki/scriptDone) (also via [isNull](https://community.bistudio.com/wiki/isNull) in Arma 3)) when the spawned script has finished. In Arma 3, the handle is also available inside the spawned script in _thisScript variable."
            }
        ],
        "examples": [
            "\n```sqf\n_handle = [] spawn {player globalChat \"Hello world!\"};\n```\n",
            "There is no guarantee that spawned scripts will be executed in the same order they spawned: \n\n```sqf\nfor \"_i\" from 0 to 100 do \n{\n\t_null = _i spawn \n\t{\n\t\tdiag_log _this;\n\t};\n}; // Result: 51,1,2...49,50,0,52,53...100\n```\n",
            "Local variables declared in the main scope are not available in the spawned code. You have to pass them as parameters:\n\n```sqf\nprivate _localVariable = 1234;\n[_localVariable] spawn \n{\n\tsystemChat format [\"_localVariable does not exist: %1\", isNil \"_localVariable\"]; // _localVariable does not exist: true\n\tparams [\"_localVariable\"];\n\tsystemChat format [\"My _localVariable is now: %1\", _localVariable]; // My _localVariable is now: 1234\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/spawn",
        "modifiers": []
    },
    "unitisuav": {
        "name": "unitIsUAV",
        "description": "Returns whether or not the given object is an UAV, UGV (drone). Command will also return [true](https://community.bistudio.com/wiki/true) for empty drones. Corresponding to transport parameter isUAV.",
        "syntaxArray": [
            {
                "Syntax": "unitIsUAV object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) when UAV"
            }
        ],
        "examples": [
            "\n```sqf\n_isUAV = unitIsUAV _vehicle;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitIsUAV",
        "modifiers": []
    },
    "ctrltype": {
        "name": "ctrlType",
        "description": "Returns number representing the type of control, which is also defined by *type* property in config. For more information see [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration)",
        "syntaxArray": [
            {
                "Syntax": "**ctrlType** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_type = ctrlType _rscEdit; // 2\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlType",
        "modifiers": []
    },
    "locationnull": {
        "name": "locationNull",
        "description": "A non-existing [Location](https://community.bistudio.com/wiki/Location). To compare non-existent locations use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* locationNull == locationNull; // false\n\n* [isNull](https://community.bistudio.com/wiki/isNull) locationNull; // true\n\n* locationNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) locationNull; // true",
        "syntaxArray": [
            {
                "Syntax": "**locationNull**",
                "Params": "",
                "Return": "[Location](https://community.bistudio.com/wiki/Location)"
            }
        ],
        "examples": [
            "\n```sqf\n!isNull locationNull; // false\n```\n",
            "\n```sqf\nstr locationNull; // No location\n```\n",
            "\n```sqf\nposition locationNull; // [0,0,0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/locationNull",
        "modifiers": []
    },
    "everybackpack": {
        "name": "everyBackpack",
        "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.",
        "syntaxArray": [
            {
                "Syntax": "everyBackpack box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\neveryBackpack cursorTarget;\n```\n",
            "\n```sqf\n_vehicleBackpacks = everyBackpack vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/everyBackpack",
        "modifiers": []
    },
    "isautonomous": {
        "name": "isAutonomous",
        "description": "Returns whether the UAV is in autonomous mode or not.",
        "syntaxArray": [
            {
                "Syntax": "isAutonomous uav",
                "Params": "uav: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _isAutonomous = isAutonomous uav;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAutonomous",
        "modifiers": [
            "Global argument"
        ]
    },
    "addswitchableunit": {
        "name": "addSwitchableUnit",
        "description": "Adds an unit to the list of units available for [Team Switch](https://community.bistudio.com/wiki/Team_Switch). Units marked as [playable](https://community.bistudio.com/wiki/playableUnits) in editor are automatically switchable.\nThis command allows to add non-playable unit into array of [switchableUnits](https://community.bistudio.com/wiki/switchableUnits) and make them available for [teamSwitch](https://community.bistudio.com/wiki/teamSwitch). **Singleplayer only!**",
        "syntaxArray": [
            {
                "Syntax": "addSwitchableUnit unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\naddSwitchableUnit bob;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addSwitchableUnit",
        "modifiers": []
    },
    "cansuspend": {
        "name": "canSuspend",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if [sleep](https://community.bistudio.com/wiki/sleep), [uiSleep](https://community.bistudio.com/wiki/uiSleep) or [waitUntil](https://community.bistudio.com/wiki/waitUntil) commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in [unscheduled environment](https://community.bistudio.com/wiki/Scheduler#Unscheduled_Environment), the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using canSuspend command allows to detect the correct environment for the code.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**canSuspend**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nonEachFrame \n{\n\tsystemChat str canSuspend; //false\n\t[] spawn {hint str canSuspend}; //true\n\tonEachFrame {};\n};\n```\n",
            "Make sure the function code is always spawned even when called:\n```sqf\nmysleep = \n{\n\tif (!canSuspend) exitWith {_this spawn mysleep};\n\tsleep _this;\n\thint (\"slept \" + str _this); \n};\n\n5 call mysleep;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canSuspend",
        "modifiers": []
    },
    "collapseobjecttree": {
        "name": "collapseObjectTree",
        "description": "Collapse the object tree.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**collapseObjectTree** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\ncollapseObjectTree _map,\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/collapseObjectTree",
        "modifiers": []
    },
    "type": {
        "name": "type",
        "description": "Returns a string of a [Location](https://community.bistudio.com/wiki/Location)'s class name or [Task](https://community.bistudio.com/wiki/Task)'s name (same as [taskName](https://community.bistudio.com/wiki/taskName)).",
        "syntaxArray": [
            {
                "Syntax": "**type** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "**type** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - the type of the task"
            }
        ],
        "examples": [
            "\n```sqf\n_locationType = type myLocation;\n```\n",
            "\n```sqf\n_taskName = type myTask;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/type",
        "modifiers": []
    },
    "lineintersectswith": {
        "name": "lineIntersectsWith",
        "description": "Returns objects intersecting with the virtual line from *begPos* to *endPos*. By default resulting array of intersecting objects is unsorted. To sort by distance set *sortByDistance* param to [true](https://community.bistudio.com/wiki/true). > ",
        "syntaxArray": [
            {
                "Syntax": "**lineIntersectsWith** [begPos, endPos, objIgnore1, objIgnore2, sortByDistance]",
                "Params": "[begPos, endPos, objIgnore1, objIgnore2, sortByDistance]: [Array](https://community.bistudio.com/wiki/Array)\n\nbegPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - virtual line start\n\nendPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - virtual line end\n\nobjIgnore1: (optional) [Object](https://community.bistudio.com/wiki/Object) - object to ignore. When testing intersection from an object/unit/vehicle, pass that object here to prevent intersection inside of the object.\n\nobjIgnore2: (optional) [Object](https://community.bistudio.com/wiki/Object) - another object to ignore. When testing intersection of a line between two objects, pass the second object here to prevent intersection inside of it being reported\n\nsortByDistance: (optional) [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true): Sort by distance => furthermost object first, closest object last; [false](https://community.bistudio.com/wiki/false): unsorted\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - intersecting objects"
            }
        ],
        "examples": [
            "\n```sqf\n_objects = lineIntersectsWith [eyePos player, AGLtoASL screenToWorld [0.5,0.5]];\n```\n",
            "Sort by distance: \n```sqf\n_objects = lineIntersectsWith [eyePos player, AGLtoASL screenToWorld [0.5,0.5], objNull, objNull, true];\n```\n",
            "Ignore objects: \n```sqf\n_objects = lineIntersectsWith [eyePos player, aimPos chopper, player, chopper];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lineIntersectsWith",
        "modifiers": [
            "Global argument"
        ]
    },
    "getplayerscores": {
        "name": "getPlayerScores",
        "description": "\n\n* In MP: Returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score).\n\n* In SP: Empty array []",
        "syntaxArray": [
            {
                "Syntax": "**getPlayerScores** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - the score of the given player in format [infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score]"
            }
        ],
        "examples": [
            "\n```sqf\ngetPlayerScores BIS_player1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPlayerScores",
        "modifiers": []
    },
    "getobjectchildren": {
        "name": "getObjectChildren",
        "description": "Return a list of all the children of the specified object.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **getObjectChildren** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectChildren",
        "modifiers": []
    },
    "hcallgroups": {
        "name": "hcAllGroups",
        "description": "Returns selected groups in [high command](https://community.bistudio.com/wiki/High_Command).",
        "syntaxArray": [
            {
                "Syntax": "**hcAllGroups** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - commander\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhcAllGroups player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcAllGroups",
        "modifiers": []
    },
    "getusermfdvalue": {
        "name": "getUserMFDValue",
        "description": "Returns array of user text variables used in MFD.",
        "syntaxArray": [
            {
                "Syntax": "**getUserMFDValue** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - a vehicle with MFD\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n getUserMFDValue vehicle player; // user0 in MFD will return 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getUserMFDValue",
        "modifiers": []
    },
    "getattacktarget": {
        "name": "getAttackTarget",
        "description": "Returns the target given unit is engaging.",
        "syntaxArray": [
            {
                "Syntax": "getAttackTarget unit",
                "Params": "unit - [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_theEnemyWhoHesEngaging = getAttackTarget unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAttackTarget",
        "modifiers": []
    },
    "setgroupiconsselectable": {
        "name": "setGroupIconsSelectable",
        "description": "Sets if group icons raise [onGroupIconClick](https://community.bistudio.com/wiki/onGroupIconClick), [onGroupIconOverEnter](https://community.bistudio.com/wiki/onGroupIconOverEnter) and [onGroupIconOverLeave](https://community.bistudio.com/wiki/onGroupIconOverLeave) events.",
        "syntaxArray": [
            {
                "Syntax": "**setGroupIconsSelectable** selectable",
                "Params": "selectable: [Boolean](https://community.bistudio.com/wiki/Boolean) - Setting to [true](https://community.bistudio.com/wiki/true) makes the icon selectable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing) ([objNull](https://community.bistudio.com/wiki/objNull) prior to Arma 3 v1.92)"
            }
        ],
        "examples": [
            "\n```sqf\nsetGroupIconsSelectable true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupIconsSelectable",
        "modifiers": []
    },
    "missionstart": {
        "name": "missionStart",
        "description": "Returns date and time when mission started. Because this command returns the time of the actual start of the mission, it might not be available in *pre-init* or *init*, but is guaranteed to be available in *post-init* when \n```sqf\ntime > 0\n```\n.",
        "syntaxArray": [
            {
                "Syntax": "missionStart",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [year, month, day, hour, minute, second] in multiplayer, which differs from [date](https://community.bistudio.com/wiki/date) format only by seconds. In SP returns [0,0,0,0,0,0]"
            }
        ],
        "examples": [
            "\n```sqf\nsetDate (missionStart select [0,5]);\n```\n",
            "Set real date: \n```sqf\n//postInit = 1;\nif (isServer) then {\n\twaitUntil {time > 0};\n\tsetDate (missionStart select [0,5]);\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionStart",
        "modifiers": []
    },
    "gethit": {
        "name": "getHit",
        "description": "Returns selection damage. Same as [getHitPointDamage](https://community.bistudio.com/wiki/getHitPointDamage), only the argument is selection part instead of hit point.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle getHit selection",
                "Params": "vehicle : [Object](https://community.bistudio.com/wiki/Object) - vehicle to be queried\n\nselection: [String](https://community.bistudio.com/wiki/String) - selection part name\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) (prior to Arma 3 v1.94, [Nothing](https://community.bistudio.com/wiki/Nothing) was return when invalid *selection* was given)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer getHit \"head\";\n```\n",
            "\n```sqf\n_car getHit \"motor\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getHit",
        "modifiers": [
            "Global argument"
        ]
    },
    "reversedmousey": {
        "name": "reversedMouseY",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if mouse vertical axe is inverted.",
        "syntaxArray": [
            {
                "Syntax": "**reversedMouseY**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (reversedMouseY) then { hint \"Dude!\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/reversedMouseY",
        "modifiers": []
    },
    "waypointspeed": {
        "name": "waypointSpeed",
        "description": "Gets the waypoint speed.\n\nPossible values are:\n\n* \"UNCHANGED\"\n\n* \"LIMITED\"\n\n* \"NORMAL\"\n\n* \"FULL\"",
        "syntaxArray": [
            {
                "Syntax": "**waypointSpeed** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - see description"
            }
        ],
        "examples": [
            "\n```sqf\n_speed = waypointSpeed [groupOne,1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointSpeed",
        "modifiers": []
    },
    "waypointname": {
        "name": "waypointName",
        "description": "Gets the waypoint name.",
        "syntaxArray": [
            {
                "Syntax": "**waypointName** waypoint",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_wpName = waypointName [_grp,2];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointName",
        "modifiers": []
    },
    "useaudiotimeformoves": {
        "name": "useAudioTimeForMoves",
        "description": "Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.",
        "syntaxArray": [
            {
                "Syntax": "soldier **useAudioTimeForMoves** toggle",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\ntoggle: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer useAudioTimeForMoves true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/useAudioTimeForMoves",
        "modifiers": []
    },
    "difficulty": {
        "name": "difficulty",
        "description": "Returns high-level selected difficulty mode.   \n\nReturned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)",
        "syntaxArray": [
            {
                "Syntax": "**difficulty**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nvalue = difficulty;\n```\n",
            "The command returns the index of selected difficulty as they appear in *CfgDifficulties*\n[](https://community.bistudio.com/wiki/File:Difficulty.jpg)\n\n```sqf\nhint str difficulty; //Result: 4\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/difficulty",
        "modifiers": []
    },
    "isequalto": {
        "name": "isEqualTo",
        "description": "Performs strict comparison between var1 and var2 and returns [true](https://community.bistudio.com/wiki/true) if equal, otherwise [false](https://community.bistudio.com/wiki/false). Strict means that it would check that both arguments are of the same data type and then compare the values.\nSome differences between isEqualTo and [==](https://community.bistudio.com/wiki/%3D%3D):\n\n* It performs case sensitive comparison on [Strings](https://community.bistudio.com/wiki/String)\n\n* It doesn't throw error when comparing different types, i.e. (\"eleven\" isEqualTo 11)\n\n* It can compare [Arrays](https://community.bistudio.com/wiki/Array), [Scripts](https://community.bistudio.com/wiki/Script) and [Booleans](https://community.bistudio.com/wiki/Boolean) ([alive](https://community.bistudio.com/wiki/alive) [player](https://community.bistudio.com/wiki/player) isEqualTo [true](https://community.bistudio.com/wiki/true))\n\n* It can compare non-existent game objects ([grpNull](https://community.bistudio.com/wiki/grpNull) isEqualTo [grpNull](https://community.bistudio.com/wiki/grpNull))\n\n* It can compare [Namespaces](https://community.bistudio.com/wiki/Namespace) (*As of Arma 3 v1.47*)\n\n* It is slightly faster than [==](https://community.bistudio.com/wiki/%3D%3D), especially when comparing [Strings](https://community.bistudio.com/wiki/String) \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "val1 **isEqualTo** val2",
                "Params": "val1: [Anything](https://community.bistudio.com/wiki/Anything)\n\nval2: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr1 = [1,[2,[3]]];\n_arr2 = [1,[2,[3]]];\nif (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}\n```\n",
            "\n```sqf\nif (a isEqualTo b) then {hint \"a is equal to b\"};\nif !(a isEqualTo b) then {hint \"a is not equal to b\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEqualTo",
        "modifiers": []
    },
    "items": {
        "name": "items",
        "description": "Returns an array of names of all unit's stored items, including [weapons](https://community.bistudio.com/wiki/weapons) but excluding [magazines](https://community.bistudio.com/wiki/magazines) (see [itemsWithMagazines](https://community.bistudio.com/wiki/itemsWithMagazines)) and [assignedItems](https://community.bistudio.com/wiki/assignedItems).",
        "syntaxArray": [
            {
                "Syntax": "items unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_itemsPlayer = items player; \n```\n",
            "\n```sqf\nplayer sideChat format [\"%1\", items player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/items",
        "modifiers": [
            "Global argument"
        ]
    },
    "cameraeffectenablehud": {
        "name": "cameraEffectEnableHUD",
        "description": "Enable / disable showing of in-game UI during currently active camera effect. By default the HUD is off, which will make results of [drawIcon3D](https://community.bistudio.com/wiki/drawIcon3D) invisible, for example.",
        "syntaxArray": [
            {
                "Syntax": "**cameraEffectEnableHUD** enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncameraEffectEnableHUD true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cameraEffectEnableHUD",
        "modifiers": []
    },
    "is3denpreview": {
        "name": "is3DENPreview",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) is currently in mission preview mode, single player or multiplayer. (see also [is3DEN](https://community.bistudio.com/wiki/is3DEN), [is3DENMultiplayer](https://community.bistudio.com/wiki/is3DENMultiplayer))",
        "syntaxArray": [
            {
                "Syntax": "**is3DENPreview**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif is3DENPreview then {systemChat \"Welcome to Eden Editor Preview!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/is3DENPreview",
        "modifiers": []
    },
    "setdamage": {
        "name": "setDamage",
        "description": "Damages/hurts or repairs/heals object/unit. Damage 0 means fully functional, damage 1 means completely destroyed / dead.\nThe alternative syntax allows to switch off destruction effects.",
        "syntaxArray": [
            {
                "Syntax": "object setDamage damage",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ndamage: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "object setDamage [damage, useEffects] *Since Arma 3 v1.67*",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ndamage: [Number](https://community.bistudio.com/wiki/Number)\n\nuseEffects: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - To skip destruction effects set it to [false]]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 setDamage 1;\n```\n",
            "\n```sqf\n_house1 setDamage [1, false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDamage",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "additemtovest": {
        "name": "addItemToVest",
        "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.",
        "syntaxArray": [
            {
                "Syntax": "unit **addItemToVest** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addItemToVest \"itemGPS\";\n\n```\n",
            "\n```sqf\nplayer addItemToVest \"hgun_Rook40_F\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addItemToVest",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "showwaypoint": {
        "name": "showWaypoint",
        "description": "Defines how waypoints are shown to the player in map view. For 3D HUD visibility see [setWaypointVisible](https://community.bistudio.com/wiki/setWaypointVisible).",
        "syntaxArray": [
            {
                "Syntax": "waypoint **showWaypoint** show",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nshow: [String](https://community.bistudio.com/wiki/String) - Possible values are:\n\n* \"NEVER\" - Never show\n\n* \"EASY\" - Show only if showCadetWP is enabled in global [difficulty](https://community.bistudio.com/wiki/Arma_3:_Difficulty_Settings).\n\n* \"ALWAYS\" - Always show\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] showWaypoint \"ALWAYS\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showWaypoint",
        "modifiers": []
    },
    "waypointtype": {
        "name": "waypointType",
        "description": "Gets the waypoint type.\n\nType can be:\n\n* \"MOVE\"\n\n* \"DESTROY\"\n\n* \"GETIN\"\n\n* \"SAD\"\n\n* \"JOIN\"\n\n* \"LEADER\"\n\n* \"GETOUT\"\n\n* \"CYCLE\"\n\n* \"LOAD\"\n\n* \"UNLOAD\"\n\n* \"TR UNLOAD\"\n\n* \"HOLD\"\n\n* \"SENTRY\"\n\n* \"GUARD\"\n\n* \"TALK\"\n\n* \"SCRIPTED\"\n\n* \"SUPPORT\"\n\n* \"GETIN NEAREST\"\n\n* \"DISMISS\"\n\n* \"AND\"\n\n* \"OR\"\n\nMore details at [Waypoints](https://community.bistudio.com/wiki/Waypoints).",
        "syntaxArray": [
            {
                "Syntax": "**waypointType** waypoint",
                "Params": "waypoint:  [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointType [groupOne,1],\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointType",
        "modifiers": []
    },
    "move3dencamera": {
        "name": "move3DENCamera",
        "description": "When useOffset is [true](https://community.bistudio.com/wiki/true), camera will move to the position + defined offset in config and **target** the position. If useOffset is false, the camera will be moved exactly to the provided position without changing the rotation of the camera. Default camera offset: [0,-25,25]",
        "syntaxArray": [
            {
                "Syntax": "**move3DENCamera** [position,useOffset]",
                "Params": "position: [Position](https://community.bistudio.com/wiki/Position)\n\nuseOffset: [Boolean](https://community.bistudio.com/wiki/Boolean) - true if camera should use offset (defined in [configFile](https://community.bistudio.com/wiki/configFile) >> \"Cfg3DEN\" >> \"Camera\" >> \"moveOffset\")\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmove3DENCamera [getPos player,true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/move3DENCamera",
        "modifiers": []
    },
    "deleteteam": {
        "name": "deleteTeam",
        "description": "Destroy given team.",
        "syntaxArray": [
            {
                "Syntax": "**deleteTeam** team",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteTeam _team;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteTeam",
        "modifiers": []
    },
    "ropecreate": {
        "name": "ropeCreate",
        "description": "Creates a PhysX rope with given params.\n> ",
        "syntaxArray": [
            {
                "Syntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, length, ropeStart, ropeEnd]",
                "Params": "fromObject: [Object](https://community.bistudio.com/wiki/Object) - [ transport](https://community.bistudio.com/wiki/ropeCreate/transport) where the rope originates and which fly behavior will be affected\n\nfromPoint: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array) - position for the rope start, either a memory point [String](https://community.bistudio.com/wiki/String) or relative offset [Array](https://community.bistudio.com/wiki/Array)\n\ntoObject: [Object](https://community.bistudio.com/wiki/Object) - entity which is automatically [ attached to](https://community.bistudio.com/wiki/ropeAttachTo) the end of the rope\n\ntoPoint: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array) - position for the rope end, either a memory point [String](https://community.bistudio.com/wiki/String) or relative offset [Array](https://community.bistudio.com/wiki/Array)\n\nlength (Optional): [Number](https://community.bistudio.com/wiki/Number) - rope length in meters. Default: -1\n\nropeStart (Optional): [Array](https://community.bistudio.com/wiki/Array) - array in format [ropeStartType, ropeStartDownVector] where:\n\n* ropeStartType: [String](https://community.bistudio.com/wiki/String) - type of the rope start (see description). Default: \"\"\n\n* ropeStartDownVector: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array), either a memory point [String](https://community.bistudio.com/wiki/String) or relative vector [Array](https://community.bistudio.com/wiki/Array). If [String](https://community.bistudio.com/wiki/String) is given, then ropeStartDownVector is calculated from fromPoint towards ropeStartDownVector memory point. Default: [0,0,-1]\n\nropeEnd (Optional): [Array](https://community.bistudio.com/wiki/Array) - array in format [ropeEndType, ropeEndDownVector] where:\n\n* ropeEndType: [String](https://community.bistudio.com/wiki/String) - type of the rope end (see description). Default: \"\"\n\n* ropeEndDownVector: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array), either a memory point [String](https://community.bistudio.com/wiki/String) or relative vector [Array](https://community.bistudio.com/wiki/Array). If [String](https://community.bistudio.com/wiki/String) is given, then ropeEndDownVector is calculated from toPoint towards ropeEndDownVector memory point. Default: [0,0,-1]\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - created rope or [objNull](https://community.bistudio.com/wiki/objNull) on failure"
            },
            {
                "Syntax": "ropeCreate [fromObject, fromPoint, length, ropeStart, ropeEnd]",
                "Params": "fromObject: [Object](https://community.bistudio.com/wiki/Object) - [ transport](https://community.bistudio.com/wiki/ropeCreate/transport) where the rope originates and which fly behavior will be affected\n\nfromPoint: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array) - position for the rope start, either a memory point [String](https://community.bistudio.com/wiki/String) or relative offset [Array](https://community.bistudio.com/wiki/Array)\n\nlength: [Number](https://community.bistudio.com/wiki/Number) - rope length in meters\n\nropeStart (Optional): [Array](https://community.bistudio.com/wiki/Array) - array in format [ropeStartType, ropeStartDownVector] where:\n\n* ropeStartType: [String](https://community.bistudio.com/wiki/String) - type of the rope start (see description). Default: \"\"\n\n* ropeStartDownVector: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array), either a memory point [String](https://community.bistudio.com/wiki/String) or relative vector [Array](https://community.bistudio.com/wiki/Array). If [String](https://community.bistudio.com/wiki/String) is given, then ropeStartDownVector is calculated from fromPoint towards ropeStartDownVector memory point. Default: [0,0,-1]\n\nropeEnd (Optional): [Array](https://community.bistudio.com/wiki/Array) - array in format [ropeEndType, ropeEndDownVector] where:\n\n* ropeEndType: [String](https://community.bistudio.com/wiki/String) - type of the rope end (see description). Default: \"\"\n\n* ropeEndDownVector: [Array](https://community.bistudio.com/wiki/Array) - relative vector. Default: [0,0,-1]\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - created rope or [objNull](https://community.bistudio.com/wiki/objNull) on failure"
            }
        ],
        "examples": [
            "\n```sqf\nmyRope = ropeCreate [vehicle player, \"slingload0\", myCargo, [0, 0, 0], 10];\n```\n",
            "\n```sqf\nmyRope = ropeCreate [veh1, [0,0,-2], veh2, [0,0,0], 10];\n```\n",
            "Free end rope (Alt Syntax): \n```sqf\nmyRope = ropeCreate [vehicle player, [0,0,0], 10];\n```\n",
            "A rope with a hook on the end: \n```sqf\nmyRope = ropeCreate [heli, \"slingload0\", player, [0,0,2], 20, [], [\"RopeEnd\", [0,0,-1]]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeCreate",
        "modifiers": [
            "Global effect"
        ]
    },
    "getlightingat": {
        "name": "getLightingAt",
        "description": "Gets provided object's lighting information.",
        "syntaxArray": [
            {
                "Syntax": "getLightingAt obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) to format [ambientLightColor, ambientLightBrightness, dynamicLightColor, dynamicLightBrightness]:\n\n* ambientLightColor: [Color RGB](https://community.bistudio.com/wiki/Color)\n\n* ambientLightBrightness: [Number](https://community.bistudio.com/wiki/Number)\n\n* dynamicLightColor: [Color (RGB)](https://community.bistudio.com/wiki/Color)\n\n* dynamiclightBrightness: [Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ngetLightingAt player; // returns [[1,1,1], 0.5, [0,0,0], 0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getLightingAt",
        "modifiers": []
    },
    "putweaponpool": {
        "name": "putWeaponPool",
        "description": "Transfers weapons and magazines from weapon pool into cargo of given object. Used in campaign to transfer weapons into next mission.",
        "syntaxArray": [
            {
                "Syntax": "putWeaponPool object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nputWeaponPool player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/putWeaponPool",
        "modifiers": []
    },
    "select": {
        "name": "select",
        "description": "Selects an element from an array, config entry from [Config](https://community.bistudio.com/wiki/Config) or substring from a string or a range from an array. \n> ",
        "syntaxArray": [
            {
                "Syntax": "array  **select** index",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - Index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - a reference to array element given by its index"
            },
            {
                "Syntax": "array  **select** boolean",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nboolean: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) => 1, [false](https://community.bistudio.com/wiki/false) => 0\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - a reference to array element given by its index (false - 0, true - 1)"
            },
            {
                "Syntax": "config  **select** index",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - Index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.\n\n",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            },
            {
                "Syntax": "string **select** [start, length] *Since Arma 3 v1.27.126674*",
                "Params": "string: [String](https://community.bistudio.com/wiki/String)\n\n[start, length]: [Array](https://community.bistudio.com/wiki/Array)\n\nstart: [Number](https://community.bistudio.com/wiki/Number) - String position to start selection from. 0 denotes the first character of the string, 1 the second, etc. If passed number has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.\n\nlength (optional): [Number](https://community.bistudio.com/wiki/Number) - Number of the string characters to select. If \"length\" is omitted, selection will be made from \"start\" to the end of the string.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "array **select** [start, count] *Since Arma 3 v1.31.127272*",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\n[start, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nstart: [Number](https://community.bistudio.com/wiki/Number) - Array index to start selection from.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - Number of array elements to select. If the selected range exceeds source array boundaries, selection will be made up to the last element of the array.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - a new array from selection"
            },
            {
                "Syntax": "array **select** expression *Since Arma 3 v1.55.133771*",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nexpression: [Code](https://community.bistudio.com/wiki/Code) - expression that is expected to return [Boolean](https://community.bistudio.com/wiki/Boolean) or [Nothing](https://community.bistudio.com/wiki/Nothing). If [true](https://community.bistudio.com/wiki/true) is returned, the original array value of currently tested element [_x](https://community.bistudio.com/wiki/Magic_Variables#x) will be added to the output array\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - a new array of all elements from the original array that satisfied expression condition"
            }
        ],
        "examples": [
            "\n```sqf\n[\"a\", \"b\", \"c\", \"d\"] select 2; // result is \"c\"\nposition player select 2; // result is Z coordinate of player position\n```\n",
            "\n```sqf\n[\"\", currentWeapon player] select alive player; // if player is dead, \"\" is selected\n```\n",
            "\n```sqf\n(configFile >> \"cfgVehicles\" >> typeOf vehicle player >> \"Turrets\") select 0 >> \"gunnerAction\";\n```\n",
            "\n```sqf\nhint str (\"japa is the man!\" select [8]); // the man!\nhint str (\"japa is the man!\" select [0,7]); // japa is\n```\n",
            "\n```sqf\nhint str ([1,2,3,4,5,6] select [1,4]); // [2,3,4,5]\n```\n",
            "\n```sqf\n_even = [1,2,3,4,5,6,7,8,9,0] select { _x % 2 == 0 }; // returns [2, 4, 6, 8, 0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/select",
        "modifiers": []
    },
    "loadfile": {
        "name": "loadFile",
        "description": "Returns the content of given files. If you plan to [compile](https://community.bistudio.com/wiki/compile) said string, be aware that the file should not contain comments or [compile](https://community.bistudio.com/wiki/compile) will throw an error. If there are comments, use [preprocessFile](https://community.bistudio.com/wiki/preprocessFile)/[preprocessFileLineNumbers](https://community.bistudio.com/wiki/preprocessFileLineNumbers) instead.\n> ",
        "syntaxArray": [
            {
                "Syntax": "loadFile fileName",
                "Params": "fileName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_contents = loadFile \"wantedString.txt\";\n```\n",
            "\n```sqf\n_contents = compile loadFile \"myFunction.sqf\"; // will compile string into code\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadFile",
        "modifiers": []
    },
    "waypointattachobject": {
        "name": "waypointAttachObject",
        "description": "Attaches a static object via it is numeric ID to the given waypoint.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "waypoint waypointAttachObject objectID",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nobjectID: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "waypoint waypointAttachObject object",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nobject: [Object](https://community.bistudio.com/wiki/Object) - static object\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] waypointAttachObject 1234;\n```\n",
            "\n```sqf\nprivate _wp = group player addWaypoint [[1907.5, 5746.5, 0.00144196], 0];\n_wp waypointAttachObject ((waypointPosition _wp) nearestObject 66220);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointAttachObject",
        "modifiers": []
    },
    "daytime": {
        "name": "dayTime",
        "description": "Returns the current in-game time in hours. For a formatted version of time, see [BIS_fnc_timeToString](https://community.bistudio.com/wiki/BIS_fnc_timeToString).",
        "syntaxArray": [
            {
                "Syntax": "[daytime](https://community.bistudio.com/wiki/daytime)",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Day time using a 24 hour clock, using fractions of hours."
            }
        ],
        "examples": [
            "\n```sqf\ndaytime; // returns 16.5 given it is 16:30 (4.30pm) in game\n```\n",
            "Get hour, minute, seconds:\n\n```sqf\nprivate _daytime = daytime; // assuming daytime returns 1.66046\nprivate _hours = floor _daytime;\t\t\t\t\t\t\t\t\t\t\t// 1\nprivate _minutes = floor ((_daytime - _hours) * 60);\t\t\t\t\t\t// 39\nprivate _seconds = floor ((((_daytime - _hours) * 60) - _minutes) * 60);\t// 37\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dayTime",
        "modifiers": []
    },
    "taskhint": {
        "name": "taskHint",
        "description": "Shows info about new, changed or failed task. The text can contain several lines. \\n is used to set a line return.\n> ",
        "syntaxArray": [
            {
                "Syntax": "taskHint [text, colour, icon]",
                "Params": "[text, colour, icon]: [Array](https://community.bistudio.com/wiki/Array)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\ncolour: [Array](https://community.bistudio.com/wiki/Array) - format [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\nicon: [String](https://community.bistudio.com/wiki/String) - one of:\n\n* \"taskNew\"\n\n* \"taskCurrent\"\n\n* \"taskDone\"\n\n* \"taskFailed\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntaskHint [\"Task failed.\\nBad job!\", [1, 0, 0, 1], \"taskFailed\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskHint",
        "modifiers": [
            "Local effect"
        ]
    },
    "getweaponsway": {
        "name": "getWeaponSway",
        "description": "Returns current size of weapon sway of a given unit, in [radians](https://community.bistudio.com/wiki/rad).",
        "syntaxArray": [
            {
                "Syntax": "getWeaponSway unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number): weapon sway"
            }
        ],
        "examples": [
            "\n```sqf\n_sway = getWeaponSway player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getWeaponSway",
        "modifiers": []
    },
    "ingameuiseteventhandler": {
        "name": "inGameUISetEventHandler",
        "description": "Sets given event handler of in-game UI. If EH function returns [true](https://community.bistudio.com/wiki/true), performed action is overridden. Event handlers available are:\n\n* \"PrevAction\" - mouse scroll up\n\n* \"Action\" - action key press\n\n* \"NextAction\" - mouse scroll down\nThis is \"set\" type EH, which means it will replace previously set EH of the same type. So to remove EH, set another one with empty string \"\" for the function.\n\nSince Arma 3 v1.50 this EH returns array of params for selected/activated action in *_this* variable:\n\n* 0: [Object](https://community.bistudio.com/wiki/Object) - target object to which action is attached\n\n* 1: [Object](https://community.bistudio.com/wiki/Object) - caller object, basically [player](https://community.bistudio.com/wiki/player)\n\n* 2: [Number](https://community.bistudio.com/wiki/Number) - index of the action in action menu (0 - top most)\n\n* 3: [String](https://community.bistudio.com/wiki/String) - engine based action name (\"User\" for user added actions)\n\n* 4: [String](https://community.bistudio.com/wiki/String) - [localized](https://community.bistudio.com/wiki/localize) action plain text as seen by the caller\n\n* 5: [Number](https://community.bistudio.com/wiki/Number) - action *priority* value\n\n* 6: [Boolean](https://community.bistudio.com/wiki/Boolean) - action *showWindow* value\n\n* 7: [Boolean](https://community.bistudio.com/wiki/Boolean) - action *hideOnUse* value\n\n* 8: [String](https://community.bistudio.com/wiki/String) - action *shortcut* name or \"\"\n\n* 9: [Boolean](https://community.bistudio.com/wiki/Boolean) - action menu visibility (on first scroll or action press the menu is still invisible, so no action is performed, only menu is shown). See also: [isActionMenuVisible](https://community.bistudio.com/wiki/isActionMenuVisible)\n\n* 10: [String](https://community.bistudio.com/wiki/String) - EH event name",
        "syntaxArray": [
            {
                "Syntax": "**inGameUISetEventHandler** [handlerName, function]",
                "Params": "[handlerName, function]: [Array](https://community.bistudio.com/wiki/Array)\n\nhandlerName: [String](https://community.bistudio.com/wiki/String)\n\nfunction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ninGameUISetEventHandler [\"Action\",\"hint 'Lights, Camera, Action!'; true\"];\n```\n",
            "\n```sqf\ninGameUISetEventHandler [\"PrevAction\", \"hint str _this; false\"];\ninGameUISetEventHandler [\"NextAction\", \"hint str _this; false\"];\ninGameUISetEventHandler [\"Action\", \"hint str _this; false\"];\n```\n",
            "Deny any weapon disassembly: \n```sqf\ninGameUISetEventHandler [\"Action\", \"\n\tif (_this select 3 == 'DisAssemble') then {\n\t\thint 'You are not allowed to do this'; \n\t\ttrue\n\t}\n\"];\n```\n",
            "Detect explosive/mine placement:\n```sqf\nonMagazineUse = '\n\tparams [\"_target\", \"\", \"\", \"_action\", \"\", \"\", \"\", \"\", \"\", \"\", \"_event\"];\n\tif (_action == \"UseMagazine\") then {\n\t\tif (_event == \"Action\") then {\n\t\t\t0 = _target spawn {\n\t\t\t\twaitUntil {!(all_magazines isEqualTo magazines _this)};\n\t\t\t\t{\n\t\t\t\t\t0 = all_magazines deleteAt (all_magazines find _x);\n\t\t\t\t} count magazines _this;\n\t\t\t\thint format [\"Magazine Used: %1\", all_magazines select 0];\n\t\t\t}\n\t\t} else {\n\t\t\tall_magazines = magazines _target;\n\t\t};\n\t};\n\tfalse\n';\ninGameUISetEventHandler [\"PrevAction\", onMagazineUse];\ninGameUISetEventHandler [\"NextAction\", onMagazineUse];\ninGameUISetEventHandler [\"Action\", onMagazineUse];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inGameUISetEventHandler",
        "modifiers": [
            "Local effect"
        ]
    },
    "tvsetpicturecolordisabled": {
        "name": "tvSetPictureColorDisabled",
        "description": "Sets the color of left picture of a tree item defined by path when item is disabled",
        "syntaxArray": [
            {
                "Syntax": "control tvSetPictureColorDisabled [path, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, color]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - path to tree view item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - color in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvSetPictureColorDisabled [[0], [1,0,1,1]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureColorDisabled",
        "modifiers": []
    },
    "diag_dynamicsimulationend": {
        "name": "diag_dynamicSimulationEnd",
        "description": "Ends dynamic simulation stats gathering and writes it into given file.",
        "syntaxArray": [
            {
                "Syntax": "diag_dynamicSimulationEnd file",
                "Params": "file: [String](https://community.bistudio.com/wiki/String) - File name\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_dynamicSimulationEnd \"someFile.txt\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_dynamicSimulationEnd",
        "modifiers": []
    },
    "callextension": {
        "name": "callExtension",
        "description": "Calls custom .dll also known as [Extension](https://community.bistudio.com/wiki/Extensions). The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.\n\nThis command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.\n\nCurrently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in  int outputSize. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.\n\nSince Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like [Booleans](https://community.bistudio.com/wiki/Boolean), [Strings](https://community.bistudio.com/wiki/String), [Numbers](https://community.bistudio.com/wiki/Number) and [Arrays](https://community.bistudio.com/wiki/Array) of all of the above. There is currently a limit on how many arguments can be sent and it is 2048 (since Arma 3 v1.92; previous limit: 1024). However an argument could be an [Array](https://community.bistudio.com/wiki/Array) itself, in this case extension maker will have to provide additional methods for parsing such arguments.\n\nPossible error codes:\n\n* 101: SYNTAX_ERROR_WRONG_PARAMS_SIZE\n\n* 102: SYNTAX_ERROR_WRONG_PARAMS_TYPE\n\n* 201: PARAMS_ERROR_TOO_MANY_ARGS\n\n* 301: EXECUTION_WARNING_TAKES_TOO_LONG\nEach error will have entry in .rpt file with more details.\n\nThe extension execution timeout, after which 301: EXECUTION_WARNING_TAKES_TOO_LONG warning is issued, is hardcoded on clients and is 1000.0 milliseconds (1 second). On the server the default limit is also 1 second, however it is possible to set custom limit with callExtReportLimit param (see [ Server Options](https://community.bistudio.com/wiki/server.cfg#Server_Options)).\n\nIf an extension with the given name can't be found (or it is found but doesn't implement the required interface properly / at all) the following error will be written into the RPT (In this example the given dll-name was \"MyExtension\"):\n\n```sqf\n14:27:07 CallExtension 'MyExtension' could not be found\n```\n\n\nIf an extension is not whitelisted with BattlEye (see [Extensions](https://community.bistudio.com/wiki/Extensions) for more info) it will be blocked on clients running with enabled BattlEye protection. RPT message outputted however is a little obscure:\n\n```sqf\n21:35:04 Call extension 'MyExtension' could not be loaded: Insufficient system resources exist to complete the requested service\n```\n\n\nSince Arma 3 v1.69, RVExtensionVersion interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .[rpt](https://community.bistudio.com/wiki/rpt) file like so:\n\n```sqf\n19:06:36 CallExtension loaded: test_extension (.\\test_extension.dll) [1.0.0.1]\n```\n\n\nFor more information see [Extensions](https://community.bistudio.com/wiki/Extensions).\n\nLinux specific\nWhile on Windows the extension name is case-insensitive, on Linux the extension name is case-sensitive and should match the name of the .so file exactly (minus \".so\" part).\n\n> \n\n**Extension Callback**\nSince Arma 3 v1.95 it is possible to call the game directly from the extension via function pointer provided when extension is called for the first time (assuming the extension implements at least one of the RVExtension or RVExtensionArgs methods). The function pointer passed over to RVExtensionRegisterCallback method is of the following signature (see Example 4):\n\n\nCalling this function pointer from extension will trigger [ \"ExtensionCallback\"](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers/addMissionEventHandler#ExtensionCallback) mission event handler with 3 user supplied params. The params are\n\n\n* name - make it unique name, for example the extension name, so that other modders can quickly filter out calls from own extensions\n\n* function - make it name of the function the extension sends the result to. (Note: The returned function is just a STRING! So [compile](https://community.bistudio.com/wiki/compile) is needed, before using [call](https://community.bistudio.com/wiki/call) or [spawn](https://community.bistudio.com/wiki/spawn), to execute it)\n\n* data - make it the actual result. You can also format it as an array so it could be parsed by [parseSimpleArray](https://community.bistudio.com/wiki/parseSimpleArray)\nCalling function pointer returns an int. This is the number of available slots in the input buffer left for this frame after your call and can range from 99 to -1. The buffer is processed and cleared every frame and the maximum number of slots that can be filled per frame is 100. If you are planning to call back with more than 100 results per frame, make sure your extension retries if it receives negative int, which means the buffer was full and your call did not succeed. Ideally suited for callbacks from different threads, but if callback is initiated from the calling thread, the EH will fire on the next frame of game simulation. Needless to say, the \"ExtensionCallback\" event handler needs to exist before any callbacks, otherwise the data will just stay in the buffer. Removing all \"ExtensionCallback\" EHs clears the buffer as well as mission restart.",
        "syntaxArray": [
            {
                "Syntax": "extension **callExtension** function",
                "Params": "extension: [String](https://community.bistudio.com/wiki/String) - extension name\n\nfunction: [String](https://community.bistudio.com/wiki/String) - data sent to the extension\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - data sent back from extension; If the extensiion was not found an empty String will be returned"
            },
            {
                "Syntax": "extension **callExtension** [function, arguments] *Since Arma 3 v1.67*",
                "Params": "extension: [String](https://community.bistudio.com/wiki/String) - extension name\n\nfunction: [String](https://community.bistudio.com/wiki/String) - extension function identifier\n\narguments: [Array](https://community.bistudio.com/wiki/Array) - function arguments. Could be array of [Anything](https://community.bistudio.com/wiki/Anything), each element will be converted to [String](https://community.bistudio.com/wiki/String) automatically. Current allowed max length of this array is 2048 (since Arma 3 v1.92; previous limit: 1024)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  in format [result, returnCode, errorCode], where:\n\n* result: [String](https://community.bistudio.com/wiki/String) - data sent back from extension. It is up to extension maker what it is.\n\n* returnCode: [Number](https://community.bistudio.com/wiki/Number) - integer return from extension method. It is up to extension maker to define it.\n\n* errorCode: [Number](https://community.bistudio.com/wiki/Number) - error code in case of command error (see description). 0 means no errors."
            }
        ],
        "examples": [
            "\n```sqf\n_return = \"myExtension\" callExtension \"stringToBeParsed\";\n```\n",
            "\n```sqf\n_result = \"test_extension\" callExtension str weapons player;\n_result = \"test_extension\" callExtension [\"fnc1\", getUnitLoadout player];\n_result = \"test_extension\" callExtension [\"fnc2\", magazinesAmmoFull player];\n_result = \"test_extension\" callExtension [\"fnc1\", [weapons player, magazines player]];\n```\n",
            "\n```sqf\n_result = \"test_extension\" callExtension [\"fnc1\", [1,\"two\",true,[4,\"five\",false]]];\nparseSimpleArray (_result select 0) params [\"_number\",\"_string\",\"_boolean\",\"_array\"];\nsystemChat str [_number,_string,_boolean,_array];\n```\n\n\nSource Code ([Download .dll](https://community.bistudio.comhttp://data.bistudio.com/a3data/test_extension.zip))\nThis is an example of an extension compatible with both syntaxes. When using 1st syntax, the data is just copied from input to output. When using alt syntax, the arguments are parsed and then assembled back into string array in 2 ways: fnc1 and fnc2. fnc1 is a fraction faster.\n",
            "\n```sqf\nfncToExecute_1 = { hint format [\"Extension Result 1: %1\", _this] };\nfncToExecute_2 = { hint format [\"Extension Result 2: %1\", _this] };\nfncToExecute_3 = { hint format [\"Extension Result 3: %1\", _this] };\naddMissionEventHandler [\"ExtensionCallback\", \n{\n\tparams [\"_name\", \"_function\", \"_data\"];\n\tif (_name isEqualTo \"test_callback\") then \n\t{ \n\t\tparseSimpleArray _data call (missionNamespace getVariable [_function, \n\t\t{ \n\t\t\thint \"Function does not exist!\"\n\t\t}]); \n\t};\n}];\n\n```\n\n```sqf\n\"test_callback\" callExtension str \"test data\";\n```\n\n\nHere is a minimal example of an extension utilising [ extension callback](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers/addMissionEventHandler#ExtensionCallback) (don't actually do it like this). *fncToExecute_X* function is called from \"ExtensionCallback\" event handler when it is triggered after 2 seconds of the extension call.\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/callExtension",
        "modifiers": []
    },
    "lbisselected": {
        "name": "lbIsSelected",
        "description": "Checks whether or not given row of the given listbox is selected.",
        "syntaxArray": [
            {
                "Syntax": "control **lbIsSelected** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_selected = _control lbIsSelected 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbIsSelected",
        "modifiers": []
    },
    "ammoonpylon": {
        "name": "ammoOnPylon",
        "description": "Returns ammo count on given pylon.\nReturns false ([Boolean](https://community.bistudio.com/wiki/Boolean)) on failure.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **ammoOnPylon** pylon",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\npylon: [String](https://community.bistudio.com/wiki/String) or [Number](https://community.bistudio.com/wiki/Number) - The name or the index of the pylon\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) or [Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_ammoCount = (vehicle player) ammoOnPylon \"pylon1\";\n```\n",
            "\n```sqf\nhint str ((vehicle player) ammoOnPylon \"pylonCenter\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ammoOnPylon",
        "modifiers": []
    },
    "slidersetrange": {
        "name": "sliderSetRange",
        "description": "Sets limits of [CT_SLIDER](https://community.bistudio.com/wiki/CT_SLIDER) or [CT_XSLIDER](https://community.bistudio.com/wiki/CT_XSLIDER).",
        "syntaxArray": [
            {
                "Syntax": "**sliderSetRange** [idc, min, max]",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **sliderSetRange** [min, max]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nmin: [Number](https://community.bistudio.com/wiki/Number) - Minimal value\n\nmax: [Number](https://community.bistudio.com/wiki/Number) - Maximum value\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsliderSetRange [101, 0, 100];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sliderSetRange",
        "modifiers": []
    },
    "drawline": {
        "name": "drawLine",
        "description": "Draw a line on the map. Can decrease framerate!",
        "syntaxArray": [
            {
                "Syntax": "map **drawLine** [position1, position2, color]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n[position1, position2, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition1: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D), [Object](https://community.bistudio.com/wiki/Object)\n\nposition2: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D), [Object](https://community.bistudio.com/wiki/Object)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(findDisplay 12 displayCtrl 51) ctrlAddEventHandler [\"Draw\",\"\n\t(_this select 0) drawLine [\n\t\tgetPos player,\n\t\t[0,0,0],\n\t\t[0,0,1,1]\n\t];\n\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawLine",
        "modifiers": []
    },
    "setcollisionlight": {
        "name": "setCollisionLight",
        "description": "Switches collision lights of a vehicle on/off.",
        "syntaxArray": [
            {
                "Syntax": "vehicle setCollisionLight set",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nset: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nheli setCollisionLight true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCollisionLight",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "debuglog": {
        "name": "debugLog",
        "description": "Dump argument type and value to debugging output. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**debugLog** anything",
                "Params": "anything: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndebugLog player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/debugLog",
        "modifiers": []
    },
    "setunconscious": {
        "name": "setUnconscious",
        "description": "In Arma 2 and since Arma 3 v1.64, this command sets unit into incapacitated state.\n[lifeState](https://community.bistudio.com/wiki/lifeState) results:\n\n* Arma 2: \"UNCONSCIOUS\"\n\n* Arma 3: \"INCAPACITATED\"\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit setUnconscious set",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nset: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit setUnconscious true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnconscious",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "aisfinishheal": {
        "name": "AISFinishHeal",
        "description": "Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler.",
        "syntaxArray": [
            {
                "Syntax": "**AISFinishHeal** [unit, healer, healercanheal]",
                "Params": "[unit, healer, healercanheal]: [Array](https://community.bistudio.com/wiki/Array)\n\nunit: [Object](https://community.bistudio.com/wiki/Object) - wounded\n\nhealer: [Object](https://community.bistudio.com/wiki/Object) - medic\n\nhealercanheal: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nAISFinishHeal [_wounded, _medic, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/AISFinishHeal",
        "modifiers": []
    },
    "surfacetexture": {
        "name": "surfaceTexture",
        "description": "Same as [surfaceType](https://community.bistudio.com/wiki/surfaceType), but returns texture path to ground texture as string. \n> ",
        "syntaxArray": [
            {
                "Syntax": "surfaceTexture position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - in format [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D) in which case Z is ignored\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_tex = surfaceTexture getPos player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/surfaceTexture",
        "modifiers": []
    },
    "showngps": {
        "name": "shownGPS",
        "description": "Checks if client has GPS reciever enabled in [description.ext](https://community.bistudio.com/wiki/description.ext) (*showGPS* param) or force enabled with [showGPS](https://community.bistudio.com/wiki/showGPS) command.",
        "syntaxArray": [
            {
                "Syntax": "**shownGPS**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (shownGPS) then {hint \"You have GPS reciever enabled\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownGPS",
        "modifiers": []
    },
    "ctrlmapmouseover": {
        "name": "ctrlMapMouseOver",
        "description": "Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlMapMouseOver** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - map control\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Possible values:\n\n* [\"unit\", [Object](https://community.bistudio.com/wiki/Object)]\n\n* [\"vehicle\", [Object](https://community.bistudio.com/wiki/Object)]\n\n* [\"vehicleGroup\", [Object](https://community.bistudio.com/wiki/Object)]\n\n* [\"object\", [Object](https://community.bistudio.com/wiki/Object)]\n\n* [\"waypoint\", [Waypoint](https://community.bistudio.com/wiki/Waypoint)]\n\n* [\"trigger\", [Object](https://community.bistudio.com/wiki/Object)]\n\n* [\"marker\", [String](https://community.bistudio.com/wiki/String)]\n\n* [\"task\", [Task](https://community.bistudio.com/wiki/Task)]\n\n* [\"customMark\"]"
            }
        ],
        "examples": [
            "\n```sqf\n(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"];\n\n_mouseover = if (count (ctrlMapMouseOver (uiNamespace getVariable \"_map\")) > 0) then\n{\n\tctrlMapMouseOver (uiNamespace getVariable \"_map\")\n}\nelse\n{\n\t[\"\"]\n};\n\nif (_mouseover select 0 == \"task\" && str(_logic getVariable \"onTaskAssigned\") != str{}) then\n{\n\t//--- Task\n\t(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overMission\"];\n}\nelse\n{\n\t//--- Waypoint\n\t(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_move\"];\n};\n\n```\n",
            "\n```sqf\nonEachFrame {hintSilent str ctrlMapMouseOver (findDisplay 12 displayCtrl 51)};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapMouseOver",
        "modifiers": []
    },
    "backpackcargo": {
        "name": "backpackCargo",
        "description": "Get array with backpacks from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "backpackCargo box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Format: [\"BackpackType1\", \"BackpackType1\", \"BackpackType2\", ...]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str backpackCargo vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/backpackCargo",
        "modifiers": []
    },
    "param": {
        "name": "param",
        "description": "Extracts a single value with given index from input argument, similar to [BIS_fnc_param](https://community.bistudio.com/wiki/BIS_fnc_param).  When used without argument, as shown in main syntax, internal variable [_this](https://community.bistudio.com/wiki/Magic_Variables#this), which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.54, onscreen errors are displayed for when the input is of the wrong type or size.",
        "syntaxArray": [
            {
                "Syntax": "param [index, defaultValue, expectedDataTypes, expectedArrayCount]",
                "Params": "[index, defaultValue, expectedDataTypes, expectedArrayCount]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index of required item in the input array.\n\ndefaultValue (Optional): [Anything](https://community.bistudio.com/wiki/Anything) - a default value to return if input is undefined, of the wrong type or of the wrong length (if the item is an array).\n\nexpectedDataTypes (Optional): [Array](https://community.bistudio.com/wiki/Array) of direct [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types) - checks if passed value is one of listed [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types). If not, default value is used instead. Empty array [] means every data type is accepted.\n\nexpectedArrayCount (Optional): [Number](https://community.bistudio.com/wiki/Number) or [Array](https://community.bistudio.com/wiki/Array) - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted.\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - extracted value on success or default value otherwise. [Nothing](https://community.bistudio.com/wiki/Nothing) if syntax error occurred."
            },
            {
                "Syntax": "argument param [index, defaultValue, expectedDataTypes, expectedArrayCount]",
                "Params": "argument: [Anything](https://community.bistudio.com/wiki/Anything) - A usual array of params is expected. If a non-array value is passed, it will be converted to 1 element array\n\n[index, defaultValue, expectedDataTypes, expectedArrayCount]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index of required item in the input array.\n\ndefaultValue (Optional): [Anything](https://community.bistudio.com/wiki/Anything) - a default value to return if input is undefined, of the wrong type or of the wrong length (if the item is an array).\n\nexpectedDataTypes (Optional): [Array](https://community.bistudio.com/wiki/Array) of direct [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types) - checks if passed value is one of listed [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types). If not, default value is used instead. Empty array [] means every data type is accepted.\n\nexpectedArrayCount (Optional): [Number](https://community.bistudio.com/wiki/Number) or [Array](https://community.bistudio.com/wiki/Array) - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted.\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - extracted value on success or default value otherwise. [Nothing](https://community.bistudio.com/wiki/Nothing) if syntax error occurred."
            }
        ],
        "examples": [
            "\n```sqf\n[1, 2, 3] call \n{\n\tprivate _one = param [0, 1];\n\tprivate _two = param [1, 2];\n\tprivate _three = param [2, 3];\n\t// ...\n};\n```\n",
            "\n```sqf\n[123] call \n{\n\tprivate _val = param [0];\n};\n\n// Below would produce the same result as above\n123 call \n{\n\tprivate _val = param [0];\n};\n```\n",
            "\n```sqf\n_z = position player param [2, 0];\nif (_z > 10) then \n{\n\thint \"YOU ARE FLYING!\";\n};\n```\n",
            "\n```sqf\nfnc = \n{\n\tprivate _pos = param [0, [0,0,0], [objNull, []], [2,3]];\n\tprivate _rad = param [1, 0, [0]];\n\t_pos nearObjects _rad;\n};\n\n[position player, 25] call fnc; // ok\n[player, 25] call fnc; // ok\n[25, player] call fnc; // default values are used\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/param",
        "modifiers": []
    },
    "unitsbelowheight": {
        "name": "unitsBelowHeight",
        "description": "Returns units in group/array below given Above Terrain Level (ATL) height.\n> ",
        "syntaxArray": [
            {
                "Syntax": "units unitsBelowHeight height",
                "Params": "units: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\nheight: [Number](https://community.bistudio.com/wiki/Number) - height above terrain level ([PositionATL](https://community.bistudio.com/wiki/PositionATL))\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)"
            },
            {
                "Syntax": "group unitsBelowHeight height",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) - AI group\n\nheight: [Number](https://community.bistudio.com/wiki/Number) - height above terrain level ([PositionATL](https://community.bistudio.com/wiki/PositionATL))\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_allOnGroudUnits = group player unitsBelowHeight 10;\n```\n",
            "\n```sqf\n_units = allUnits unitsBelowHeight 30;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitsBelowHeight",
        "modifiers": [
            "Global argument"
        ]
    },
    "unassignvehicle": {
        "name": "unassignVehicle",
        "description": "Unassigns individual unit from a vehicle, i.e removes [assignedVehicleRole](https://community.bistudio.com/wiki/assignedVehicleRole) of the unit.\nIf the unit is currently in that vehicle, the group leader will issue an order to disembark.\n\nNotes:\n\n* Important is to understand the basic system first:\n\n* [addVehicle](https://community.bistudio.com/wiki/addVehicle) creates a vehicle pool for the AI group to use.\n\n* [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle) removes a vehicle from the pool (and makes AI disembark when in that vehicle).\n\n* However there is also [assignedVehicle](https://community.bistudio.com/wiki/assignedVehicle). This is about the *current vehicle in use* essentially. The assignment happens via the various assignAsXXX/moveInXXX commands, or player/AI GL getIn radio commands, getIn waypoint, or when units start in vehicles or get moved in to a vehicle by Zeus/via Eden.\n\n* So the idea of unassignVehicle is to remove the *current vehicle in use*.\n\n* However as long as the vehicle is still part of the vehicle pool of the group the AI GL may order the AI to re-enter the vehicle immediately.\n\n* To stop this from happening, one can use [orderGetIn](https://community.bistudio.com/wiki/orderGetIn)/[allowGetIn](https://community.bistudio.com/wiki/allowGetIn) [false](https://community.bistudio.com/wiki/false) to (temporarily) disallow the AI from entering any vehicle.\n\n* If you use [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle) on an AI group not in the vehicle, only the AI GL will get the vehicle removed from [assignedVehicle](https://community.bistudio.com/wiki/assignedVehicle). However when you now apply unassignVehicle on the whole group, it will stick/the AI GL not order to re-enter immediately - as the AI GL no longer has the vehicle in his pool for the group.\n\n* For player GL lead AI, the command removes the assignment. However it won't make the AI disembark the vehicle.",
        "syntaxArray": [
            {
                "Syntax": "unassignVehicle unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunassignVehicle player;\n```\n",
            "\n```sqf\n{ unassignVehicle _x } forEach crew _vehiclenNme;\n```\n Will make all the occupants of a vehicle disembark",
            "\n```sqf\n{ unassignVehicle _x } forEach crew _vehicleName; crew _vehiclename allowGetIn false;\n```\n Will make all the occupants of a vehicle disembark and stop them from getting back in"
        ],
        "Url": "https://community.bistudio.com/wiki/unassignVehicle",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "selectnoplayer": {
        "name": "selectNoPlayer",
        "description": "Switches player to no unit, makes [player](https://community.bistudio.com/wiki/player) return [objNull](https://community.bistudio.com/wiki/objNull). SP only, the command is completely ignored in MP.",
        "syntaxArray": [
            {
                "Syntax": "**selectNoPlayer**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Single player:\n\n```sqf\nselectNoPlayer;\nhint str player; //<NULL-object>\n```\n\nRough multiplayer emulation:\n\n```sqf\n_noPlayer = createGroup sideLogic createUnit [\n\t\"Logic\",\n\t[0,0,1000],\n\t[],\n\t0,\n\t\"NONE\"\n];\nselectPlayer _noPlayer;\nhint str player; //L Charlie 4-3:1 (KK)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectNoPlayer",
        "modifiers": []
    },
    "menuexpand": {
        "name": "menuExpand",
        "description": "Expands given menu entry on given path and all its parents so entry is visible.",
        "syntaxArray": [
            {
                "Syntax": "menuExpand [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuExpand path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuExpand [0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuExpand",
        "modifiers": []
    },
    "sidechat": {
        "name": "sideChat",
        "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec)) \n> ",
        "syntaxArray": [
            {
                "Syntax": "unit sideChat chatText",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Unit transmitting message\n\nchatText: [String](https://community.bistudio.com/wiki/String) - Message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[side, identity] sideChat chatText",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side) - Side to which the message will be seen\n\nidentity: [String](https://community.bistudio.com/wiki/String) - Class name of one of the identities in CfgHQIdentities. Possible identities in Arma 3 are:\n\n* \"Base\"\n\n* \"HQ\"\n\n* \"PAPA_BEAR\"\n\n* \"AirBase\"\n\n* \"BLU\"\n\n* \"OPF\"\n\n* \"IND\"\n\n* \"IND_G\"\n\nchatText: [String](https://community.bistudio.com/wiki/String) - Message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne sideChat \"Show this text\";\n```\n",
            "\n```sqf\n[west, \"HQ\"] sideChat \"Hi there\";\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) sideChat \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [globalChat](https://community.bistudio.com/wiki/globalChat) \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [groupChat](https://community.bistudio.com/wiki/groupChat) \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [vehicleChat](https://community.bistudio.com/wiki/vehicleChat) \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [commandChat](https://community.bistudio.com/wiki/commandChat) \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [customChat](https://community.bistudio.com/wiki/customChat) [1, \"customChat\"];\n[systemChat](https://community.bistudio.com/wiki/systemChat) \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideChat",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "removehandgunitem": {
        "name": "removeHandgunItem",
        "description": "Removes given weapon item, including magazine, from the [handgunWeapon](https://community.bistudio.com/wiki/handgunWeapon)",
        "syntaxArray": [
            {
                "Syntax": "unit **removeHandgunItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String) - Config class\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeHandgunItem \"muzzle_snds_L\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeHandgunItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "not": {
        "name": "not",
        "description": "**not** a is exactly the same as [!a](https://community.bistudio.com/wiki/!)",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **not** a",
                "Params": "a: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nnot false \n```\n\n\nResult is [true](https://community.bistudio.com/wiki/true)."
        ],
        "Url": "https://community.bistudio.com/wiki/not",
        "modifiers": []
    },
    "istuthintsenabled": {
        "name": "isTutHintsEnabled",
        "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).",
        "syntaxArray": [
            {
                "Syntax": "**isTutHintsEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str isTutHintsEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isTutHintsEnabled",
        "modifiers": []
    },
    "removeallassigneditems": {
        "name": "removeAllAssignedItems",
        "description": "Unassigns and deletes all linked items from inventory. The commands operates on [assignedItems](https://community.bistudio.com/wiki/assignedItems) array, which doesnt include goggles or headgear. Use [removeGoggles](https://community.bistudio.com/wiki/removeGoggles) and [removeHeadgear](https://community.bistudio.com/wiki/removeHeadgear) for those.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllAssignedItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllAssignedItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllAssignedItems",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setmarkerpos": {
        "name": "setMarkerPos",
        "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like [createVehicle](https://community.bistudio.com/wiki/createVehicle), [createUnit](https://community.bistudio.com/wiki/createUnit), [createAgent](https://community.bistudio.com/wiki/createAgent), [createMine](https://community.bistudio.com/wiki/createMine), [setVehiclePosition](https://community.bistudio.com/wiki/setVehiclePosition) for example. When [Object](https://community.bistudio.com/wiki/Object) is used for position, [PositionWorld](https://community.bistudio.com/wiki/PositionWorld) of the object is used.\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerPos** pos",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [Position2D](https://community.bistudio.com/wiki/Position2D), [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Object](https://community.bistudio.com/wiki/Object) (since Arma 3 v1.94)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerPos getMarkerPos \"MarkerTwo\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerPos",
        "modifiers": [
            "Global effect"
        ]
    },
    "ongroupiconoverleave": {
        "name": "onGroupIconOverLeave",
        "description": "Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**onGroupIconOverLeave** command",
                "Params": "command:  [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonGroupIconOverLeave\n{\n    // Passed values for _this are:\n    _is3D = _this select 0;\n    _group = _this select 1;\n    _wpID = _this select 2;\n    _posx = _this select 3;\n    _posy = _this select 4;\n    _shift = _this select 5;\n    _ctrl = _this select 6;\n    _alt = _this select 7;\n\n    _message = format [\"____ Info ____\"];\n    {_message = _message + format [\"\\n %1\",_x]} forEach _this;\n    hint _message;\n}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onGroupIconOverLeave",
        "modifiers": []
    },
    "visibleposition": {
        "name": "visiblePosition",
        "description": "Returns an object's rendered position (z value above surface underneath) in render time scope. Same as [getPosVisual](https://community.bistudio.com/wiki/getPosVisual)",
        "syntaxArray": [
            {
                "Syntax": "**visiblePosition** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object): - name of the object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionAGLS](https://community.bistudio.com/wiki/PositionAGLS)"
            }
        ],
        "examples": [
            "\n```sqf\nplayerRenderedPos = visiblePosition player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visiblePosition",
        "modifiers": []
    },
    "while": {
        "name": "while",
        "description": "Repeats [Code](https://community.bistudio.com/wiki/Code) while condition is [true](https://community.bistudio.com/wiki/true). A part of while [do](https://community.bistudio.com/wiki/do) construct.",
        "syntaxArray": [
            {
                "Syntax": "**while** condition",
                "Params": "condition: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[While Type](https://community.bistudio.com/wiki/While_Type)"
            }
        ],
        "examples": [
            "\n```sqf\nwhile {a < b} do {a = a + 1};\n```\n",
            "A practical example: Repair all members of a group to such a level that they are able to stand up: \n```sqf\n{\n    while {!canStand _x && alive _x} do {\n        _x setDamage (damage _x - 0.01);\n    };\n} forEach units group unitname;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/while",
        "modifiers": []
    },
    "moveobjecttoend": {
        "name": "moveObjectToEnd",
        "description": "Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects). \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **moveObjectToEnd** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/moveObjectToEnd",
        "modifiers": []
    },
    "diag_allmissioneventhandlers": {
        "name": "diag_allMissionEventHandlers",
        "description": "Returns an array with all [mission event handlers](https://community.bistudio.com/wiki/addMissionEventHandler).",
        "syntaxArray": [
            {
                "Syntax": "diag_allMissionEventHandlers",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [\"EH1name\", EH1count, ...]"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_allMissionEventHandlers;\n/*\nreturns:\n[\n\t\"Ended\",0,\n\t\"SelectedActionPerformed\",0,\n\t\"SelectedRotorLibActionPerformed\",0,\n\t\"SelectedActionChanged\",0,\n\t\"SelectedRotorLibActionChanged\",0,\n\t\"ControlsShifted\",0,\n\t\"Draw3D\",1,\n\t\"Loaded\",0,\n\t\"HandleDisconnect\",0,\n\t\"EntityRespawned\",0,\n\t\"EntityKilled\",0,\n\t\"MapSingleClick\",0,\n\t\"HCGroupSelectionChanged\",0,\n\t\"CommandModeChanged\",0,\n\t\"PlayerConnected\",0,\n\t\"PlayerDisconnected\",0,\n\t\"TeamSwitch\",0,\n\t\"GroupIconClick\",0,\n\t\"GroupIconOverEnter\",0,\n\t\"GroupIconOverLeave\",0,\n\t\"EachFrame\",0,\n\t\"PreloadStarted\",0,\n\t\"PreloadFinished\",0,\n\t\"Map\",0,\n\t\"PlayerViewChanged\",0,\n\t\"BuildingChanged\",0,\n\t\"MPEnded\",0,\n\t\"HandleAccTime\",0,\n\t\"ExtensionCallback\",0\n]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_allMissionEventHandlers",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlsetbackgroundcolor": {
        "name": "ctrlSetBackgroundColor",
        "description": "Sets background color of given control. Only affects:\n\n* [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO)\n\n* [CT_STATIC](https://community.bistudio.com/wiki/CT_STATIC)\n\n* [CT_STRUCTURED_TEXT](https://community.bistudio.com/wiki/CT_STRUCTURED_TEXT)\n\n* [CT_MAP](https://community.bistudio.com/wiki/CT_MAP)\n\n* [CT_MAP_MAIN](https://community.bistudio.com/wiki/CT_MAP_MAIN)\n\n* [CT_BUTTON](https://community.bistudio.com/wiki/CT_BUTTON) *since Arma 3 v2.01*\n\n* [CT_SHORTCUTBUTTON](https://community.bistudio.com/wiki/CT_SHORTCUTBUTTON) *since Arma 3 v2.01*\n\n* [CT_ACTIVETEXT](https://community.bistudio.com/wiki/CT_ACTIVETEXT) *since Arma 3 v2.01*",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetBackgroundColor** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) (format [Color (RGBA)](https://community.bistudio.com/wiki/Color))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetBackgroundColor [1, 0, 0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetBackgroundColor",
        "modifiers": []
    },
    "triggerdynamicsimulation": {
        "name": "triggerDynamicSimulation",
        "description": "Controls ability of given unit to activate entities with disabled [Arma 3: Dynamic Simulation](https://community.bistudio.com/wiki/Arma_3:_Dynamic_Simulation). If [false](https://community.bistudio.com/wiki/false) dynamically disabled entities will not be activated by unit presence",
        "syntaxArray": [
            {
                "Syntax": "unit **triggerDynamicSimulation** trigger",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntrigger: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer triggerDynamicSimulation false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerDynamicSimulation",
        "modifiers": []
    },
    "waypointtimeoutcurrent": {
        "name": "waypointTimeoutCurrent",
        "description": "Gets the current timeout for [currentWaypoint](https://community.bistudio.com/wiki/currentWaypoint) of a [group](https://community.bistudio.com/wiki/group) or -1 if countdown is not in progress.",
        "syntaxArray": [
            {
                "Syntax": "**waypointTimeoutCurrent** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_timeout = waypointTimeoutCurrent group player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointTimeoutCurrent",
        "modifiers": []
    },
    "deleteresources": {
        "name": "deleteResources",
        "description": "Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.",
        "syntaxArray": [
            {
                "Syntax": "teamMember **deleteResources** [resource1, resource2,...]",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\nresource1: [String](https://community.bistudio.com/wiki/String)\n\nresource2: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nteamMember _agent deleteResources [\"Legs\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteResources",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "isonroad": {
        "name": "isOnRoad",
        "description": "Checks if given position is inside road segment. Same as [roadAt](https://community.bistudio.com/wiki/roadAt), only return is boolean instead of road object.",
        "syntaxArray": [
            {
                "Syntax": "**isOnRoad** position",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) (especially on bridges) or (since Arma 3 v2.00) [Position2D](https://community.bistudio.com/wiki/Position2D), in which case Z will be automatically deduced as the height of the road surface\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_objOnRoad = isOnRoad player;\n```\n",
            "\n```sqf\n_posOnRoad = isOnRoad ASLToAGL getPosASL player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isOnRoad",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctaddheader": {
        "name": "ctAddHeader",
        "description": "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in  format:\n[<headerIndex>, [<control0>, <control1>...<control n>]].\n\nNote that rows and headers are indexed separately.",
        "syntaxArray": [
            {
                "Syntax": "**ctAddHeader** [Control](https://community.bistudio.com/wiki/Control)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_array = ctAddHeader _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctAddHeader",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "menuenabled": {
        "name": "menuEnabled",
        "description": "Returns if menu entry on given path is enabled or not.",
        "syntaxArray": [
            {
                "Syntax": "menuEnabled [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "control menuEnabled path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isEnabled = findDisplay 313 displayCtrl 120 menuEnabled [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuEnabled",
        "modifiers": []
    },
    "localnamespace": {
        "name": "localNamespace",
        "description": "Returns local [Namespace](https://community.bistudio.com/wiki/Namespace) attached to the mission. Has the same lifetime as [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) but variables **cannot be broadcasted** out of or into this namespace in multiplayer and will not be serialized when game is saved. UI variables can be safely stored in this namespace. Use [allVariables](https://community.bistudio.com/wiki/allVariables) command to save the variables elsewhere if required.",
        "syntaxArray": [
            {
                "Syntax": "localNamespace",
                "Params": "",
                "Return": "[Namespace](https://community.bistudio.com/wiki/Namespace)"
            }
        ],
        "examples": [
            "\n```sqf\nlocalNamespace setVariable [\"abc\", 123]\n```\n",
            "\n```sqf\nwith localNamespace do {hint str abc};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/localNamespace",
        "modifiers": []
    },
    "magazinesammocargo": {
        "name": "magazinesAmmoCargo",
        "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.",
        "syntaxArray": [
            {
                "Syntax": "**magazinesAmmoCargo** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nmagazinesAmmoCargo vehicle player;\n```\n",
            "\n```sqf\nmagazinesAmmoCargo uniformContainer player;\n```\n\n\n```sqf\n[\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"Chemlight_green\",1]\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesAmmoCargo",
        "modifiers": []
    },
    "setbleedingremaining": {
        "name": "setBleedingRemaining",
        "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the [getBleedingRemaining](https://community.bistudio.com/wiki/getBleedingRemaining) will return 0 and no blood trail is left behind.",
        "syntaxArray": [
            {
                "Syntax": "unit **setBleedingRemaining** time",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntime: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit setBleedingRemaining 60;\n\n```\n",
            "\n```sqf\nplayer setDamage 0.25;\nplayer setBleedingRemaining 120;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setBleedingRemaining",
        "modifiers": []
    },
    "enablestamina": {
        "name": "enableStamina",
        "description": "Enable/disable stamina system",
        "syntaxArray": [
            {
                "Syntax": "unit **enableStamina** enabled",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nenabled: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer enableStamina true;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableStamina",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "markersize": {
        "name": "markerSize",
        "description": "Returns marker size. This command is identical to [getMarkerSize](https://community.bistudio.com/wiki/getMarkerSize).",
        "syntaxArray": [
            {
                "Syntax": "**markerSize** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [a-axis, b-axis], where:\n\n* a-axis: [Number](https://community.bistudio.com/wiki/Number) - 1/2 width of marker\n\n* b-axis: [Number](https://community.bistudio.com/wiki/Number) - 1/2 height of marker"
            }
        ],
        "examples": [
            "\n```sqf\n_mSize = markerSize \"Marker1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerSize",
        "modifiers": [
            "Global argument"
        ]
    },
    "sidefriendly": {
        "name": "sideFriendly",
        "description": "The Friendly side - friendly to all, see [Side relations](https://community.bistudio.com/wiki/Side_relations).",
        "syntaxArray": [
            {
                "Syntax": "sideFriendly",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side player == sideFriendly) then { hint \"I feel friendly today!\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideFriendly",
        "modifiers": []
    },
    "say": {
        "name": "say",
        "description": "Make unit say given sound. The sound is defined in [CfgSounds](https://community.bistudio.com/wiki/Description.ext#CfgSounds). If the [unit](https://community.bistudio.com/wiki/Object#Unit) is a [person](https://community.bistudio.com/wiki/Object#Person), it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\n\n* A dead or non-existent unit obviously cannot say anything.\n\n* If the camera is not within given range, title is not shown and the sound will not be heard.\n\n* See also [playSound](https://community.bistudio.com/wiki/playSound) in order to play a sound wherever the [camera/player](https://community.bistudio.com/wiki/cameraOn) is.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "from say sound",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nsound: [String](https://community.bistudio.com/wiki/String) - sound classname\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "from say [sound, maxTitlesDistance, speed]",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nsound: [String](https://community.bistudio.com/wiki/String) - sound classname\n\nmaxTitlesDistance: [Number](https://community.bistudio.com/wiki/Number) - max distance at which the sound can be heard. Default: 100 m.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1) pitch of the sound\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[from, to] say sound",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nto: [Object](https://community.bistudio.com/wiki/Object) - target\n\nsound: [String](https://community.bistudio.com/wiki/String) - sound classname\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[from, to] say [sound, maxTitlesDistance, speed]",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nto: [Object](https://community.bistudio.com/wiki/Object) - target\n\nsound: [String](https://community.bistudio.com/wiki/String) - sound classname\n\nmaxTitlesDistance: [Number](https://community.bistudio.com/wiki/Number) - max distance at which the sound can be heard. Default: 100 m.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1) pitch of the sound.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(units player select 1) say [\"whisper1\", 5];\n```\n",
            "Arma 3:\n```sqf\nplayer say \"scuba_breath\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/say",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "skiptime": {
        "name": "skipTime",
        "description": "Jumps the specified number of hours forward or backward.The time of day and tides are adjusted, but no changes are made to any units. If present, the lower level of clouds instantly jump to the position they would be in if time had passed normally.",
        "syntaxArray": [
            {
                "Syntax": "**skipTime** duration",
                "Params": "duration: [Number](https://community.bistudio.com/wiki/Number) - Hours to skip.A positive value will create a forward time jump, a negative value will jump backwards.One second is roughly 0.00026 hours.\nAny calculations must be enclosed in parentheses, e.g. skipTime (_seconds/3600)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nskipTime 5;\n```\n",
            "\n```sqf\nwhile {true} do \n{\n  skipTime 0.00333; \n  sleep 0.1; // Smooth time transition\n};\n```\n",
            "\n```sqf\nskipTime (_timeToSkipTo - daytime + 24 ) % 24; // Skip forward to a specific time, irrespective of the current mission time\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/skipTime",
        "modifiers": [
            "Server execution"
        ]
    },
    "setface": {
        "name": "setFace",
        "description": "Set person's face. For a list of available faces, check [Category:CfgIdentities](https://community.bistudio.com/wiki/Category:CfgIdentities).",
        "syntaxArray": [
            {
                "Syntax": "person **setFace** face",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nface: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldier1 setFace \"WhiteHead_02\"\n```\n",
            "Set persistent face for a unit in MP\n```sqf\nif (isServer) then {[_unit, \"AsianHead_A3_02\"] remoteExec [\"setFace\", 0, _unit]};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFace",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "fogparams": {
        "name": "fogParams",
        "description": "A getter for [setFog](https://community.bistudio.com/wiki/setFog) (Alt Syntax). Returns extended params for the fog",
        "syntaxArray": [
            {
                "Syntax": "**fogParams**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [setFog](https://community.bistudio.com/wiki/setFog): [fogValue, fogDecay, fogBase]"
            }
        ],
        "examples": [
            "\n```sqf\n_fog = fogParams\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fogParams",
        "modifiers": []
    },
    "setwaypointvisible": {
        "name": "setWaypointVisible",
        "description": "Sets the visibility of the given waypoint in 3D HUD view (for map visibility see [showWaypoint](https://community.bistudio.com/wiki/showWaypoint)).",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointVisible** visible",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nvisible: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[grp, 2] setWaypointVisible false;\n```\n",
            "\n```sqf\n[group player, currentWaypoint (group player)] setWaypointVisible false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointVisible",
        "modifiers": [
            "Global effect"
        ]
    },
    "tvsetselected": {
        "name": "tvSetSelected",
        "description": "Sets the selection state of given treeview item in multi-select control.",
        "syntaxArray": [
            {
                "Syntax": "control tvSetSelected [path, selected]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nselected: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvSetSelected [[0], true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetSelected",
        "modifiers": []
    },
    "createmarkerlocal": {
        "name": "createMarkerLocal",
        "description": "Creates a [local](https://community.bistudio.com/wiki/local) marker at the given position. Marker exists only on PC that created it.  The marker name has to be unique, if a marker with the given name exists, the command will be ignored. Use [deleteMarkerLocal](https://community.bistudio.com/wiki/deleteMarkerLocal) to delete local marker.\nIf position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like [createVehicle](https://community.bistudio.com/wiki/createVehicle), [createUnit](https://community.bistudio.com/wiki/createUnit), [createAgent](https://community.bistudio.com/wiki/createAgent), [createMine](https://community.bistudio.com/wiki/createMine), [setVehiclePosition](https://community.bistudio.com/wiki/setVehiclePosition) for example. However [getMarkerPos](https://community.bistudio.com/wiki/getMarkerPos) and [markerPos](https://community.bistudio.com/wiki/markerPos) will always return 0 for z. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "createMarkerLocal [name, position, channel, creator]",
                "Params": "[name, position, channel, creator]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - format position: [Position2D](https://community.bistudio.com/wiki/Position2D), [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Object](https://community.bistudio.com/wiki/Object) (object's [PositionWorld](https://community.bistudio.com/wiki/PositionWorld) is used)\n\nchannel: [Number](https://community.bistudio.com/wiki/Number) - (Optional)The marker side for MP. *since Arma 3 v2.01.146752*\n\ncreator: [Object](https://community.bistudio.com/wiki/Object) - (Optional) The marker creator for MP. *since Arma 3 v2.01.146752*\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - The marker's name or empty string if the marker name is not unique."
            }
        ],
        "examples": [
            "\n```sqf\n_marker = createMarkerLocal [\"Marker1\", position player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createMarkerLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "removeallhandgunitems": {
        "name": "removeAllHandgunItems",
        "description": "Removes all items from [handgunWeapon](https://community.bistudio.com/wiki/handgunWeapon), except magazine.",
        "syntaxArray": [
            {
                "Syntax": "removeAllHandgunItems unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllHandgunItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllHandgunItems",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "getresolution": {
        "name": "getResolution",
        "description": "Returns an array containing all information about current client screen resolution.\n\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "getResolution",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [screenW, screenH, viewPortW, viewPortH, aspectRatio, uiScale, fovTop, fovLeft, tripleHead]\n\n* screenW: [Number](https://community.bistudio.com/wiki/Number) - width of the screen in pixels\n\n* screenH: [Number](https://community.bistudio.com/wiki/Number) - height of the screen in pixels\n\n* viewPortW: [Number](https://community.bistudio.com/wiki/Number) - width of the **4:3** view port in pixels\n\n* viewPortH: [Number](https://community.bistudio.com/wiki/Number) - height of the **4:3** view port in pixels\n\n* aspectRatio: [Number](https://community.bistudio.com/wiki/Number) - screen aspect ratio\n\n* uiScale: [Number](https://community.bistudio.com/wiki/Number) - the scale of the UI, which affects view port size:\n\n\n* fovTop: [Number](https://community.bistudio.com/wiki/Number) - vertical FOV in [ radians](https://community.bistudio.com/wiki/rad), the same as fovTop value from the user profile (*since Arma 3 v1.94.145947*)\n\n* fovLeft: [Number](https://community.bistudio.com/wiki/Number) - horizontal FOV in [ radians](https://community.bistudio.com/wiki/rad), the same asfovLeft value from the user profile (*since Arma 3 v1.94.145947*)\n\n* tripleHead: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if user has triple head screen (see also [safeZoneXAbs](https://community.bistudio.com/wiki/safeZoneXAbs), [safeZoneWAbs](https://community.bistudio.com/wiki/safeZoneWAbs)) (*since Arma 3 v1.94.145947*)"
            }
        ],
        "examples": [
            "\n```sqf\n_res = getResolution; // a 16/9 single monitor setup\n```\n\n\n```sqf\n[\n\t1360,\t\t// width\n\t768,\t\t// height\n\t867,\t\t// 2D viewport width\n\t653,\t\t// 2D viewport height\n\t1.77778,\t// aspect ratio\n\t0.85\t\t// UI scale\n]\n```\n",
            "\n```sqf\n_res = getResolution;  // dedicated server\n```\n\n\n```sqf\n[\n\t160,\t\t// width\n\t120,\t\t// height\n\t136,\t\t// 2D viewport width\n\t102,\t\t// 2D viewport height\n\t1.33333,\t// aspect ratio\n\t0.85\t\t// UI scale\n]\n```\n",
            "\n```sqf\n_res = getResolution; // a triple 16/9 monitor setup\n```\n\n\n```sqf\n[\n\t5760,\t\t// width\n\t1080,\t\t// height\n\t792,\t\t// 2D viewport width\n\t594,\t\t// 2D viewport height\n\t5.33333,\t// aspect ratio\n\t0.55\t\t// UI scale\n]\n```\n",
            "*since Arma 3 v1.94.145947*:\n```sqf\n_res = getResolution; // 16/9 monitor setup\n```\n\n\n```sqf\n[\n\t1920,\t\t// width\n\t1080,\t\t// height\n\t792,\t\t// 2D viewport width\n\t594,\t\t// 2D viewport height\n\t1.77778,\t// aspect ratio\n\t0.55,\t\t// UI scale\n\t0.75,\t\t// fovTop\n\t1.33333,\t// fovLeft\n\tfalse\t\t// tripleHead\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getResolution",
        "modifiers": []
    },
    "taskcustomdata": {
        "name": "taskCustomData",
        "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.",
        "syntaxArray": [
            {
                "Syntax": "**taskCustomData** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of string - iconPath, iconText, descriptionText"
            }
        ],
        "examples": [
            "\n```sqf\n_data = taskCustomData \"someTask\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskCustomData",
        "modifiers": []
    },
    "diarysubjectexists": {
        "name": "diarySubjectExists",
        "description": "Checks whether given subject is present in the [Diary](https://community.bistudio.com/wiki/Diary) of given player.",
        "syntaxArray": [
            {
                "Syntax": "player **diarySubjectExists** name",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_exists = player diarySubjectExists \"subjectName\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diarySubjectExists",
        "modifiers": [
            "Local argument"
        ]
    },
    "isdamageallowed": {
        "name": "isDamageAllowed",
        "description": "A getter for [allowDamage](https://community.bistudio.com/wiki/allowDamage) command. The command indicates if damage is allowed at current [locality](https://community.bistudio.com/wiki/local), hence local effect of the command. For complete solution for being able to tell whether or not an object can be damaged at current locality see **Example 1**.",
        "syntaxArray": [
            {
                "Syntax": "isDamageAllowed object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _canBeDamaged = local _obj && isDamageAllowed _obj;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isDamageAllowed",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "get3denentityid": {
        "name": "get3DENEntityID",
        "description": "Returns unique index of an [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity). This number remains the same even after saving and loading the scenario. > ",
        "syntaxArray": [
            {
                "Syntax": "**get3DENEntityID** entity",
                "Params": "entity: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - [Eden ID](https://community.bistudio.com/wiki/Eden_ID) If ID is not available, -1 is returned"
            }
        ],
        "examples": [
            "\n```sqf\nmyID = get3DENEntityID player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENEntityID",
        "modifiers": []
    },
    "assignascargo": {
        "name": "assignAsCargo",
        "description": "Assign a unit as cargo of a vehicle. Used together with [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the cargo space of the vehicle.",
        "syntaxArray": [
            {
                "Syntax": "unitName assignAsCargo vehicleName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 assignAsCargo _truck;\n[_soldier1] orderGetIn true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignAsCargo",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "lbsetvalue": {
        "name": "lbSetValue",
        "description": "Sets the additional value in the row with the given index of a [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO) control.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetValue** [idc, index, value]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - Only integer values are supported\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetValue** [index, value]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) of control\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - Only integer values are supported\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetValue [101, 0, 1];\n```\n",
            "\n```sqf\n_control lbSetValue [0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetValue",
        "modifiers": []
    },
    "addmagazineammocargo": {
        "name": "addMagazineAmmoCargo",
        "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.",
        "syntaxArray": [
            {
                "Syntax": "cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]",
                "Params": "cargospace: [Object](https://community.bistudio.com/wiki/Object) - vehicle or container or weaponholder\n\n[magazine, quantity, ammocount]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazine: [String](https://community.bistudio.com/wiki/String) - magazine class name\n\nquantity: [Number](https://community.bistudio.com/wiki/Number) - number of magazines to add\n\nammocount: [Number](https://community.bistudio.com/wiki/Number) - ammo count in each magazine\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ammobox addMagazineAmmoCargo [\"30Rnd_65x39_caseless_mag\", 2, 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazineAmmoCargo",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "join": {
        "name": "join",
        "description": "\n\nJoin all units in the array to given group. \n\nTo have a group member leave a group, join him with the [grpNull](https://community.bistudio.com/wiki/grpNull) group (e.g. [guy1] join [grpNull](https://community.bistudio.com/wiki/grpNull)), but **beware**, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.",
        "syntaxArray": [
            {
                "Syntax": "unitArray **join** group",
                "Params": "unitArray: [Array](https://community.bistudio.com/wiki/Array) - units to join group\n\ngroup: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_unitOne, _unitTwo] join player;\n```\n",
            "\n```sqf\n[_unitOne, _unitTwo] join (group player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/join",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ropeattachenabled": {
        "name": "ropeAttachEnabled",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if entity can be attached to a rope end.",
        "syntaxArray": [
            {
                "Syntax": "ropeAttachEnabled entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object) - entity to check\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if allowed"
            }
        ],
        "examples": [
            "\n```sqf\nropeAttachEnabled veh1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeAttachEnabled",
        "modifiers": []
    },
    "foreach": {
        "name": "forEach",
        "description": "Executes the given command(s) on every item of an array.\nThe array items are represented by the [magic variable](https://community.bistudio.com/wiki/Magic_Variables) **[_x](https://community.bistudio.com/wiki/Magic_Variables#x)**. The array indices are represented by **[_forEachIndex](https://community.bistudio.com/wiki/Magic_Variables#forEachIndex)**.\nIn Arma 2 and later, the variable [_x](https://community.bistudio.com/wiki/Magic_Variables#x) is always local to the forEach block so it is safe to nest them.\n*Since Arma 3 v2.01* the [HashMap](https://community.bistudio.com/wiki/HashMap) variant also provides a _y variable for the Value in the key-value pair.",
        "syntaxArray": [
            {
                "Syntax": "code forEach array",
                "Params": "code:\n\n* [String](https://community.bistudio.com/wiki/String) (Operation Flashpoint / Armed Assault)\n\n* [Code](https://community.bistudio.com/wiki/Code) (Armed Assault and later)\n\narray: [Array](https://community.bistudio.com/wiki/Array) - the array to iterate\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - will return the value of last executed statement"
            },
            {
                "Syntax": "code forEach hashMap",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code)\n\nhashMap : [HashMap](https://community.bistudio.com/wiki/HashMap) - The HashMap to iterate through\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - will return the value of last executed statement"
            }
        ],
        "examples": [
            "\n```sqf\n// SQF\n{ _x setDamage 1 } forEach units group player;\n```\n\n\n```sqf\n; SQS\n\"_x setDammage 1\" forEach units group player\n```\n",
            "This command can also easily be used to execute a single command multiple times without respect to the array items.\n\n```sqf\n{ player addMagazine \"30Rnd_556x45_Stanag\"; } forEach [1, 2, 3, 4];\n```\n",
            "You can also use multiple commands in the same block:\n\n```sqf\n{\n    _x setCaptive true;\n    removeAllWeapons _x;\n    doStop _x;\n} forEach units group this;\n```\n",
            "To get the index of a forEach loop, use [_forEachIndex](https://community.bistudio.com/wiki/Magic_Variables#forEachIndex):\n\n```sqf\n{ systemChat format [\"%1\", _forEachIndex]; } forEach [1,2,3]; // will return: \"0\", \"1\", \"2\" in systemChat messages\n```\n",
            "Iterating a [HashMap](https://community.bistudio.com/wiki/HashMap) [_forEachIndex](https://community.bistudio.com/wiki/Magic_Variables#forEachIndex):\n\n```sqf\n{ systemChat format [\"%1-%2\", _x, _y]; } forEach createHashMapFromArray [[1,\"a\"], [2,\"b\"]]; // will return: \"1-a\", \"2-b\" in systemChat messages\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forEach",
        "modifiers": []
    },
    "side": {
        "name": "side",
        "description": "Returns the side of a unit, vehicle, object or location.\n\n* side of a renegade soldier is [sideEnemy](https://community.bistudio.com/wiki/sideEnemy)\n\n* side of an empty vehicle is [civilian](https://community.bistudio.com/wiki/civilian)\n\n* side of a crewed vehicle is, if present, commander's > gunner's > driver's or > cargo's side, in this order\n\n* side of a captive or dead unit is [civilian](https://community.bistudio.com/wiki/civilian). Use \n```sqf\nside group _unit\n```\n to get the underlying side (see **Example 2**)\n\n* you can use [playerSide](https://community.bistudio.com/wiki/playerSide) to know the real player's side\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "side target",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side player == west) then { hint \"Player is on the West side\" };\n```\n",
            "\n```sqf\n_sideAlsoWorkingForDead = side group _deadUnit;\n```\n",
            "\n```sqf\n_sideLocation = side myLocation;\n```\n",
            "\n```sqf\nif (side player != playerSide) then { hint \"player is renegade or dead\"; };\n```\n",
            "Check the side of the vehicle: \n```sqf\n_vehicleSide = side group _vehicle; // sideUnknown (CIV for Arma 3) if empty or dead crew, otherwise the appropriate side\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/side",
        "modifiers": [
            "Global argument"
        ]
    },
    "nearestlocationwithdubbing": {
        "name": "nearestLocationWithDubbing",
        "description": "Find the nearest location having a non-empty speech.\n> ",
        "syntaxArray": [
            {
                "Syntax": "nearestLocationWithDubbing position",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Location](https://community.bistudio.com/wiki/Location)"
            }
        ],
        "examples": [
            "\n```sqf\n_location = nearestLocationWithDubbing player;\n```\n",
            "\n```sqf\n_location = nearestLocationWithDubbing getMarkerPos \"myMarker\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestLocationWithDubbing",
        "modifiers": []
    },
    "setuseractiontext": {
        "name": "setUserActionText",
        "description": "Changes user added action (see [addAction](https://community.bistudio.com/wiki/addAction)) menu item text. \n\nSince Arma 3 v1.62 it is possible to set 2 more optional texts, one for background and one for foreground when action is displayed on the screen (*showWindow* = [true](https://community.bistudio.com/wiki/true))\n[](https://community.bistudio.com/wiki/File:setUserActionText.jpg)",
        "syntaxArray": [
            {
                "Syntax": "object **setUserActionText** [actionIndex, textMenu, textWindowBackground, textWindowForeground]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - object the action is added to\n\n[actionIndex, textMenu, textWindowBackground, textWindowForeground] : [Array](https://community.bistudio.com/wiki/Array)\n\nactionIndex: [Number](https://community.bistudio.com/wiki/Number) - action id returned by [addAction](https://community.bistudio.com/wiki/addAction)\n\ntextMenu: [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text) - Text title shown in scroll action menu\n\ntextWindowBackground (Optional): [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text) - Text displayed at background (*Since Arma 3 v1.62*)\n\ntextWindowForeground (Optional): [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text) - Text displayed at foreground (*Since Arma 3 v1.62*)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_id = player addAction [\"Hello\", \"\"];\nplayer setUserActionText [_id, \"Good Bye\"];\n```\n",
            "\n```sqf\n_id = billboard addAction [\"Some Action\", {}];\nbillboard setUserActionText [\n\t_id, \n\t\"Some Action\", \n\t\"<t color='#ff0000'>Background-----------------</t><br>Multiline<br>Multiline<br>Multiline<br>. . .\", \n\t\"<t color='#00ff00'>-----------------Foreground</t>\"\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUserActionText",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "continuewith": {
        "name": "continueWith",
        "description": "Skips the current loop iteration, continues with the next one and returns the given value.",
        "syntaxArray": [
            {
                "Syntax": "continueWith return",
                "Params": "return: [Anything](https://community.bistudio.com/wiki/Anything) - Value to be returned when iteration is skipped\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "The result of this code will be \n```sqf\n[2, \"TEST\", 4]\n```\n.\n\n```sqf\n[1, 2, 3] apply {\n\tif (_x == 2) then {\n\t\tcontinueWith \"TEST\";\n\t} else {\n\t\t_x + 1\n\t};\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/continueWith",
        "modifiers": []
    },
    "inheritsfrom": {
        "name": "inheritsFrom",
        "description": "Returns base entry of config entry.",
        "syntaxArray": [
            {
                "Syntax": "**inheritsFrom** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\n_base = inheritsFrom (configFile >> \"CfgVehicles\" >> \"Car\");\n```\n Result is [Config](https://community.bistudio.com/wiki/Config) entry for class \"LandVehicle\"",
            "Print parent tree of given config class:\n```sqf\nfnc_printParents =\n{\n\tdisableSerialization;\n\tif (!isClass _this) exitWith {hint \"Argument is not a config Class\"};\n\t\n\tprivate _parents = [];\n\t\n\twhile {!isNull _this} do\n\t{\n\t\t_parents pushBack configName _this;  \n\t\t_this = inheritsFrom _this;\n\t};\n\t\n\treverse _parents;\n\t\n\tprivate _tv = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscTree\", -1];\n\t_tv ctrlSetPosition [0,0,1,1];\n\t_tv ctrlSetBackgroundColor [0,0,0,0.5];\n\t_tv ctrlCommit 0;\n\t\n\tprivate _path = [];\n\t{\n\t\t_tv tvAdd [_path, _x];\n\t\t_path pushBack 0;\n\t} \n\tforEach _parents;\n\t\n\ttvExpandAll _tv;\n};\n\n// Example:\n(configFile >> \"CfgVehicles\" >> typeOf player) call fnc_printParents;\n```\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inheritsFrom",
        "modifiers": []
    },
    "ctrlcreate": {
        "name": "ctrlCreate",
        "description": "Creates a new control in the given display.\nThe control class could be an existing class from the [ main config](https://community.bistudio.com/wiki/configFile) or a custom class defined in the [ mission config](https://community.bistudio.com/wiki/missionConfigFile). The main config is searched first, if the class does not exist there, the mission config is searched. Some of the common controls defined in the main config that can be used with this command:\n[Show list](https://community.bistudio.com/wiki/ctrlCreate#)\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "display **ctrlCreate** [class, idc, controlsGroup]",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display) - Display in which control will be created\n\nclass: [String](https://community.bistudio.com/wiki/String) - Existing classname (see [ctrlCreate/classnames](https://community.bistudio.com/wiki/ctrlCreate/classnames)) of the new control. Since Arma 3 v1.70 it is possible to use classes defined in mission config\n\nidc: [Number](https://community.bistudio.com/wiki/Number) - IDC of the new control. Use -1 if not needed\n> \n\ncontrolsGroup (Optional): [Control](https://community.bistudio.com/wiki/Control) - Creates controls in existing controls group\n\n",
                "Return": "[Control](https://community.bistudio.com/wiki/Control)"
            }
        ],
        "examples": [
            "\n```sqf\n_display ctrlCreate [\"RscText\", 1234];\n```\n",
            "\n```sqf\n_map = findDisplay 46 ctrlCreate [\"RscMapControl\", -1];\n_multiLineText = findDisplay 46 ctrlCreate [\"RscTextMulti\", -1];\n_multiLineEdit = findDisplay 46 ctrlCreate [\"RscEditMulti\", -1];\n```\n",
            "\n```sqf\nmyControl = findDisplay 0 ctrlCreate [\"RscText\", 1234, findDisplay 0 displayCtrl 2300];\n```\n",
            "Create Tree View control with search. Available RscTreeSearch class is hardcoded to be used with RscEdit with idc 645. Example below demonstrates how to. After tree is generated, try typing something in the top box. \n```sqf\n[] spawn\n{\n\tdisableSerialization;\n\n\t_display = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n\t\n\t_edit = _display ctrlCreate [\"RscEdit\", 645];\n\t_edit ctrlSetPosition [0,0,1,0.04];\n\t_edit ctrlSetBackgroundColor [0,0,0,1];\n\t_edit ctrlCommit 0;\n\t\n\t_tv = _display ctrlCreate [\"RscTreeSearch\", -1];\n\t_tv ctrlSetFont \"EtelkaMonospacePro\"; \n\t_tv ctrlSetFontHeight 0.03; \n\t_tv ctrlSetPosition [0,0.06,1,0.94];\n\t_tv ctrlSetBackgroundColor [0,0,0,1];\n\t_tv ctrlCommit 0;\n\t\n\t_classes = \"true\" configClasses (configFile >> \"CfgVehicles\");\n\t\n\tfor \"_i\" from 0 to 5 do \n\t{\n\t\t_tv tvAdd [[], configName selectRandom _classes];\n\t\tfor \"_j\" from 0 to 5 do  \n\t\t{\n\t\t\t_tv tvAdd [[_i], configName selectRandom _classes];\n\t\t\tfor \"_k\" from 0 to 5 do  \n\t\t\t{\n\t\t\t\t_tv tvAdd [[_i, _j], configName selectRandom _classes];\n\t\t\t\tfor \"_n\" from 0 to 5 do  \n\t\t\t\t{\n\t\t\t\t\t_tv tvAdd [[_i, _j, _k], configName selectRandom _classes];\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n```\n",
            "Create a simple submit edit box and show content in hint: \n```sqf\ndisableSerialization;\nprivate _display = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nprivate _ctrlGroup = _display ctrlCreate [\"RscControlsGroupNoScrollbars\", -1];\nprivate _ctrlBackground = _display ctrlCreate [\"RscTextMulti\", -1, _ctrlGroup];\nIDD_EDIT_BOX = 123;\nprivate _ctrlEdit = _display ctrlCreate [\"RscEditMulti\", IDD_EDIT_BOX, _ctrlGroup];\nprivate _ctrlButton = _display ctrlCreate [\"RscShortcutButton\", -1, _ctrlGroup];\n_ctrlGroup ctrlSetPosition [0.5, 0.5, 0, 0];\n_ctrlGroup ctrlCommit 0;\n_ctrlBackground ctrlSetPosition [0, 0, 0.5, 0.5];\n_ctrlBackground ctrlSetBackgroundColor [0.5, 0.5, 0.5, 0.9];\n_ctrlBackground ctrlSetText \"ENTER TEXT:\";\n_ctrlBackground ctrlEnable false;\n_ctrlBackground ctrlCommit 0;\n_ctrlEdit ctrlSetPosition [0.01, 0.05, 0.48, 0.34];\n_ctrlEdit ctrlSetBackgroundColor [0, 0, 0, 0.5];\n_ctrlEdit ctrlCommit 0;\n_ctrlButton ctrlSetPosition [0.185, 0.42, 0.13, 0.05];\n_ctrlButton ctrlCommit 0;\n_ctrlButton ctrlSetText \"SUBMIT\";\n_ctrlButton ctrlAddEventHandler [\"ButtonClick\", \n{\n\tparams [\"_ctrl\"];\n\t_display = ctrlParent _ctrl;\n\t_text = ctrlText (_display displayCtrl IDD_EDIT_BOX);\n\tif (_text == \"\") then { _text = \"EMPTY\" };\n\thint _text;\n\t_display closeDisplay 1;\n}];\nctrlSetFocus _ctrlEdit;\n_ctrlGroup ctrlSetPosition [0.25, 0.25, 0.5, 0.5];\n_ctrlGroup ctrlCommit 0.1;\nplaySound \"Hint3\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlCreate",
        "modifiers": []
    },
    "removeall3deneventhandlers": {
        "name": "removeAll3DENEventHandlers",
        "description": "Removes all [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) event handlers of given type. \n\nSee the list of all [Eden Editor Event Handlers](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers:_Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**removeAll3DENEventHandlers** type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - name of event handler\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAll3DENEventHandlers \"onUndo\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAll3DENEventHandlers",
        "modifiers": []
    },
    "haspilotcamera": {
        "name": "hasPilotCamera",
        "description": "Returns true if the object airplane or helicopter has a [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera).",
        "syntaxArray": [
            {
                "Syntax": "**hasPilotCamera** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[bool](https://community.bistudio.com/wiki/bool)"
            }
        ],
        "examples": [
            "\n```sqf\nhasPilotCamera vehicle player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hasPilotCamera",
        "modifiers": [
            "Global argument"
        ]
    },
    "leader": {
        "name": "leader",
        "description": "Returns the group leader for the given **unit** or **group**. For dead units, [objNull](https://community.bistudio.com/wiki/objNull) is returned.",
        "syntaxArray": [
            {
                "Syntax": "**leader** unitOrGroup",
                "Params": "unitOrGroup: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nleader group player == leader player;\n```\n",
            "\n```sqf\nleader group vehicle player;\n```\n",
            "\n```sqf\nleader player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leader",
        "modifiers": [
            "Global argument"
        ]
    },
    "setlightattenuation": {
        "name": "setLightAttenuation",
        "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). *start* param represents distance, where the attenuation starts to take effects (dist = distance - start).",
        "syntaxArray": [
            {
                "Syntax": "light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\n[start, constant, linear, quadratic, hardlimitstart, hardlimitend]: [Array](https://community.bistudio.com/wiki/Array)\n\nstart: [Number](https://community.bistudio.com/wiki/Number) - distance with 100% intensity, falloff starts here\n\nconstant: [Number](https://community.bistudio.com/wiki/Number) - constant attenuation coef\n\nlinear: [Number](https://community.bistudio.com/wiki/Number) - linear attenuation coef\n\nquadratic: [Number](https://community.bistudio.com/wiki/Number) - quadratic attenuation coef\n\nhardlimitstart (Optional): [Number](https://community.bistudio.com/wiki/Number) - max distance hard limit start (start of fading of intensity to 0) in m\n\nhardlimitend (Optional): [Number](https://community.bistudio.com/wiki/Number) - max distance hard limit end (end of fading of intensity to 0) in m\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightAttenuation [2, 4, 4, 0, 9, 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightAttenuation",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "entities": {
        "name": "entities",
        "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored with the primary syntax.\n> ",
        "syntaxArray": [
            {
                "Syntax": "entities type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - if an empty string \"\" is provided, all entities are returned\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "entities [typesInclude, typesExclude, includeCrews, excludeDead] *Since Arma 3 v1.65.138685*",
                "Params": "typesInclude: [Array](https://community.bistudio.com/wiki/Array) - in format [type1, type2, ...typeN], where type is a [String](https://community.bistudio.com/wiki/String). Empty array [] means include every entity. Method used for filtering - [isKindOf](https://community.bistudio.com/wiki/isKindOf)\n\ntypesExclude: [Array](https://community.bistudio.com/wiki/Array) - in format [type1, type2, ...typeN], where type is a [String](https://community.bistudio.com/wiki/String). Empty array [] means exclude no entity. Method used for filtering - [isKindOf](https://community.bistudio.com/wiki/isKindOf)\n\nincludeCrews: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) include crews currently in vehicles\n\nexcludeDead: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) exclude dead entities\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_allcars = entities \"Car\";\n```\n",
            "Return all alive entities on the map:\n```sqf\n_allalive = entities [[], [], true, true];\n```\n",
            "Return dead and alive entities but logic:\n```sqf\n_notlogic = entities [[], [\"Logic\"], true];\n```\n",
            "Return all alive [west](https://community.bistudio.com/wiki/west) soldiers on foot:\n```sqf\n_footsoldiers = entities [[\"SoldierWB\"], [], false, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/entities",
        "modifiers": []
    },
    "setwaypointtimeout": {
        "name": "setWaypointTimeout",
        "description": "Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointTimeout** [min, mid, max]",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n[min, mid, max]: [Array](https://community.bistudio.com/wiki/Array)\n\nmin: [Number](https://community.bistudio.com/wiki/Number)\n\nmid: [Number](https://community.bistudio.com/wiki/Number)\n\nmax: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointTimeout [5, 10, 6];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointTimeout",
        "modifiers": []
    },
    "ctrlsettooltipcolorbox": {
        "name": "ctrlSetTooltipColorBox",
        "description": "Sets tooltip border color of given control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetTooltipColorBox** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color in format in format [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetTooltipColorBox [1, 0, 0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTooltipColorBox",
        "modifiers": []
    },
    "musicvolume": {
        "name": "musicVolume",
        "description": "Returns the current music volume (set by [fadeMusic](https://community.bistudio.com/wiki/fadeMusic))",
        "syntaxArray": [
            {
                "Syntax": "**musicVolume**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str musicVolume;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/musicVolume",
        "modifiers": []
    },
    "getburningvalue": {
        "name": "getBurningValue",
        "description": "Returns how much the unit is exposed to fire damage.",
        "syntaxArray": [
            {
                "Syntax": "getBurningValue unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _fireDamage = getBurningValue player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getBurningValue",
        "modifiers": []
    },
    "getanimaimprecision": {
        "name": "getAnimAimPrecision",
        "description": "Returns aim precision for current animation",
        "syntaxArray": [
            {
                "Syntax": "**getAnimAimPrecision** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n getAnimAimPrecision player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAnimAimPrecision",
        "modifiers": []
    },
    "distancesqr": {
        "name": "distanceSqr",
        "description": "Computes the [squared distance](https://community.bistudio.comhttp://en.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance) between two objects or positions.",
        "syntaxArray": [
            {
                "Syntax": "var1 **distanceSqr** var2",
                "Params": "var1: [Object](https://community.bistudio.com/wiki/Object) or [Position](https://community.bistudio.com/wiki/Position)\n\nvar2: [Object](https://community.bistudio.com/wiki/Object) or [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) Distance in meters or 1e10 if distance cannot be calculated"
            }
        ],
        "examples": [
            "\n```sqf\nplayer distanceSqr (leader player)\n```\n",
            "\n```sqf\n_distance = sqrt ((x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2);\n_distanceSqr = (x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2;\n_distance = [x1, y1, z1] distance [x2, y2, z2];\n_distanceSqr = [x1, y1, z1] distanceSqr [x2, y2, z2];\n_distance = sqrt ([x1, y1, z1] distanceSqr [x2, y2, z2]);\n_distanceSqr = ([x1, y1, z1] distance [x2, y2, z2]) ^ 2;\n```\n\n\nIf normal distance is calculated according to this formula:\n\n\nsquared distance is calculated according to this formula:  \n\ndistanceSqr ="
        ],
        "Url": "https://community.bistudio.com/wiki/distanceSqr",
        "modifiers": []
    },
    "displaynull": {
        "name": "displayNull",
        "description": "A non-existing [Display](https://community.bistudio.com/wiki/Display). To compare non-existent displays use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* displayNull == displayNull; // false\n\n* [isNull](https://community.bistudio.com/wiki/isNull) displayNull; // true\n\n* displayNull  [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) displayNull; // true",
        "syntaxArray": [
            {
                "Syntax": "**displayNull**",
                "Params": "",
                "Return": "[Display](https://community.bistudio.com/wiki/Display)"
            }
        ],
        "examples": [
            "\n```sqf\n!isNull displayNull; // false\n```\n",
            "\n```sqf\nstr displayNull; // No display\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displayNull",
        "modifiers": []
    },
    "dogetout": {
        "name": "doGetOut",
        "description": "Orders one or multiple units to get out from the vehicle (silently). Same as [commandGetOut](https://community.bistudio.com/wiki/commandGetOut) with latter being shown via radio chat.\n\nNotes:\n\n* Works for both AI and player entities\n\n* AI unit gets back in - unless is under player command or combined with other sqf commands ([orderGetIn](https://community.bistudio.com/wiki/orderGetIn) false, [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) false or [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle))\n\n* Ignores vehicle's lock state - unlike [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) and [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* AI waits for execution until vehicle has stopped/is no longer flying (unclear if any timeout exists for order to be discarded) - unlike [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) and [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* Plays the vehicle's position's get out animation (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject)) - unlike [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* When execute for multiple units, it waits till the action is completed, before the next to take his turn (same as [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject)) - unlike [moveOut](https://community.bistudio.com/wiki/moveOut)\n\n* AI gets back into formation afterwards\n\n* Works only on alive units - unlike [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) (one after another) or [moveOut](https://community.bistudio.com/wiki/moveOut) (instantly)\n\n* Does not work on [unconscious](https://community.bistudio.com/wiki/setUnconscious) - unless the AI is under player command. Unlike [moveOut](https://community.bistudio.com/wiki/moveOut) or [action \"Eject\"](https://community.bistudio.com/wiki/Arma_3_Actions#Eject) (but one after another))",
        "syntaxArray": [
            {
                "Syntax": "**doGetOut** units",
                "Params": "units: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndoGetOut _unitOne\n```\n",
            "\n```sqf\ndoGetOut [_unitOne,_unitTwo]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doGetOut",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "currentcommand": {
        "name": "currentCommand",
        "description": "Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Returned value can be one of:\n\n* \"WAIT\"\n\n* \"ATTACK\"\n\n* \"HIDE\"\n\n* \"MOVE\"\n\n* \"HEAL\"\n\n* \"REPAIR\"\n\n* \"REFUEL\"\n\n* \"REARM\"\n\n* \"SUPPORT\"\n\n* \"JOIN\"\n\n* \"GET IN\"\n\n* \"FIRE\"\n\n* \"GET OUT\"\n\n* \"STOP\"\n\n* \"EXPECT\"\n\n* \"ACTION\"\n\n* \"ATTACKFIRE\"\n\n* \"Suppress\"",
        "syntaxArray": [
            {
                "Syntax": "currentCommand vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_command = currentCommand player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentCommand",
        "modifiers": []
    },
    "get3denselected": {
        "name": "get3DENSelected",
        "description": "Returns an array of all selected [Eden Editor Entities](https://community.bistudio.com/wiki/Eden_Entity) of the given type, or, if empty string \"\" is used, an array of 6 arrays in the following format: [[/*objects...*/],[/*groups...*/],[/*triggers...*/],[/*logics...*/],[/*waypoints...*/],[/*markers...*/]] Layers and comments are not included in the all types array return. In case a wrong type is used the command will return [[],[],[],[],[],[]] and an error message is displayed.",
        "syntaxArray": [
            {
                "Syntax": "**get3DENSelected** type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - entity type, can be:\n\n* \"object\"\n\n* \"group\"\n\n* \"trigger\"\n\n* \"logic\"\n\n* \"waypoint\"\n\n* \"marker\"\n\n* \"layer\"\n\n* \"comment\"\n\n* \"\" - all types except \"layer\" and \"comment\"\n\n\n",
                "Return": "[Array of Eden Entities](https://community.bistudio.com/wiki/Array_of_Eden_Entities)"
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat str (get3DENSelected \"\");\n/* outputs: [\n\t[B Alpha 2-1:1],//objects\n\t[B Alpha 2-1],//groups\n\t[164494: <no shape>],//triggers\n\t[<No center> Charlie 1-2:4],//logic\n\t[ [B Alpha 2-1,0] ],//waypoints\n\t[\"Hotel_Whiskey\"]//markers\n]*/\n```\n",
            "\n```sqf\nsystemChat str (get3DENSelected \"object\");\n// outputs: [B Alpha 2-1:1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENSelected",
        "modifiers": []
    },
    "setdetailmapblendpars": {
        "name": "setDetailMapBlendPars",
        "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. If noDetail > fullDetail, the texture detail will incur smooth transition in the area between the thresholds. If noDetail <= fullDetail there will be obvious visible edge between texture detail changes at fullDetail distance.",
        "syntaxArray": [
            {
                "Syntax": "**setDetailMapBlendPars** [fullDetail, noDetail]",
                "Params": "[fullDetail, noDetail]: [Array](https://community.bistudio.com/wiki/Array)\n\nfullDetail: [Number](https://community.bistudio.com/wiki/Number) - threshold distance in metres up to which the terrain will have full texture detail\n\nnoDetail: [Number](https://community.bistudio.com/wiki/Number) - threshold distance in metres after which the texture detail will be switched off\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetDetailMapBlendPars [20, 50];\n```\n",
            "\n```sqf\nsetDetailMapBlendPars (if (currentWeapon player in [\n\t\"Binocular\",\n\t\"Rangefinder\",\n\t\"Laserdesignator\"\n]) then [\n\t{[300,600]},\n\t{[20,50]}\n]);\n\n```\n",
            "Reset to default: \n```sqf\nsetDetailMapBlendPars [-1, -1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDetailMapBlendPars",
        "modifiers": [
            "Local effect"
        ]
    },
    "estimatedendservertime": {
        "name": "estimatedEndServerTime",
        "description": "Estimated end of MP game in seconds converted to [serverTime](https://community.bistudio.com/wiki/serverTime).",
        "syntaxArray": [
            {
                "Syntax": "**estimatedEndServerTime**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - seconds left"
            }
        ],
        "examples": [
            "Estimated minutes left: \n\n```sqf\n_min = (ceil (estimatedEndServerTime - serverTime) / 60);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/estimatedEndServerTime",
        "modifiers": []
    },
    "create3denentity": {
        "name": "create3DENEntity",
        "description": "Create new [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity). Used for creating individual entities; to create a [composition](https://community.bistudio.com/wiki/Eden_Editor:_Composition) (e.g., infantry squad), use [create3DENComposition](https://community.bistudio.com/wiki/create3DENComposition).\n\nThis is the only way how to add new editable entities to [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) scenario. Other 'create' commands like [createVehicle](https://community.bistudio.com/wiki/createVehicle) or [createUnit](https://community.bistudio.com/wiki/createUnit) will still work, but the resulting entity won't be editable.",
        "syntaxArray": [
            {
                "Syntax": "**create3DENEntity** [mode, class, position, (isEmpty)]",
                "Params": "mode: [String](https://community.bistudio.com/wiki/String) - can be \"Object\", \"Trigger\", \"Waypoint\", \"Logic\" or \"Marker\"\n\nclass: [String](https://community.bistudio.com/wiki/String) - entity class, defined in one of the following classes:\n\n* *CfgVehicles* - objects and logic entities\n\n* *CfgNonAIVehicles* - triggers\n\n* *CfgWaypoint* - waypoints\n\n* *CfgMarkers* - markers\n\nposition: [Array](https://community.bistudio.com/wiki/Array) in format [Position](https://community.bistudio.com/wiki/Position)\n\nisEmpty (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to create vehicle without crew (default: [false](https://community.bistudio.com/wiki/false))\n\n",
                "Return": "[Eden Entity](https://community.bistudio.com/wiki/Eden_Entity)"
            },
            {
                "Syntax": "group **create3DENEntity** [mode, class, position, (isEmpty)]",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) - group in which an AI character or waypoint is created.\n\n* When missing for AI characters, new group is created for them\n\n* When missing for waypoints, an error is logged and nothing is created\n\n* When used on any other mode, group is ignored and entity is created as usual\n\nmode: [String](https://community.bistudio.com/wiki/String) - can be \"Object\", \"Trigger\", \"Waypoint\", \"Logic\" or \"Marker\"\n\nclass: [String](https://community.bistudio.com/wiki/String) - entity class\n\nposition: [Array](https://community.bistudio.com/wiki/Array) in format [Position](https://community.bistudio.com/wiki/Position)\n\nisEmpty (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to create vehicle without crew (default: [false](https://community.bistudio.com/wiki/false))\n\n",
                "Return": "[Eden Entity](https://community.bistudio.com/wiki/Eden_Entity)"
            }
        ],
        "examples": [
            "\n```sqf\ndude1 = create3DENEntity [\"Object\",\"B_Soldier_F\",screenToWorld [0.5,0.5]];\n```\n",
            "\n```sqf\ndude2 = (group dude1) create3DENEntity [\"Object\",\"B_Soldier_AR_F\",screenToWorld [0.5,0.5]];\n```\n",
            "\n```sqf\nmyMarker = create3DENEntity [\"Marker\",\"mil_warning\",position player];\n```\n",
            "\n```sqf\nmytrigger = create3DENEntity [\"Trigger\",\"EmptyDetectorArea10x10\",position player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/create3DENEntity",
        "modifiers": []
    },
    "enablestressdamage": {
        "name": "enableStressDamage",
        "description": "Toggles stress damage in [ Advanced Flight Model](https://community.bistudio.com/wiki/Description.ext#forceRotorLibSimulation), which otherwise could be manually toggles in game setting: Options - Game - Helicopter Flight Model - Advanced - Stress Damage.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**enableStressDamage** state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to enable stress damage, [false](https://community.bistudio.com/wiki/false) to disable it\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (difficultyEnabledRTD) then { enableStressDamage true };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableStressDamage",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "didjip": {
        "name": "didJIP",
        "description": "Checks if the current client Joined In Progress.",
        "syntaxArray": [
            {
                "Syntax": "**didJIP**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nclientDidJIP = didJIP;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/didJIP",
        "modifiers": []
    },
    "enabletraffic": {
        "name": "enableTraffic",
        "description": "Enable ambient traffic. > ",
        "syntaxArray": [
            {
                "Syntax": "enableTraffic enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean) - enable or disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableTraffic true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableTraffic",
        "modifiers": []
    },
    "getaudiooptionvolumes": {
        "name": "getAudioOptionVolumes",
        "description": "Returns profile audio volumes in format [effects, music, radio, von].",
        "syntaxArray": [
            {
                "Syntax": "getAudioOptionVolumes",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [effects, music, radio, von]"
            }
        ],
        "examples": [
            "\n```sqf\n_volumeSettings = getAudioOptionVolumes;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAudioOptionVolumes",
        "modifiers": []
    },
    "safezonex": {
        "name": "safeZoneX",
        "description": "Returns the X of the left border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the left border of the screen. Since it is going in opposite way of the X axis, the value is negative. The measurement units depend on the current screen resolution [getResolution](https://community.bistudio.com/wiki/getResolution). See also [SafeZone](https://community.bistudio.com/wiki/SafeZone).\n[](https://community.bistudio.com/wiki/File:safezone.jpg)",
        "syntaxArray": [
            {
                "Syntax": "safeZoneX",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_screenLeftBorderX = safeZoneX; // returns a float value < 0\n```\n",
            "Create control 50% wide, 30% tall, centered on screen:\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth; \n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/safeZoneX",
        "modifiers": []
    },
    "setobjectarguments": {
        "name": "setObjectArguments",
        "description": "Set object arguments in mission editor.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **setObjectArguments** [object,[name1,value1,...]]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[object,[name1,value1,...]]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectArguments",
        "modifiers": []
    },
    "isirlaseron": {
        "name": "isIRLaserOn",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if there is a linked and enabled IR on the given weapon.",
        "syntaxArray": [
            {
                "Syntax": "unit **isIRLaserOn** weapon",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nweapon: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer isIRLaserOn currentWeapon player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isIRLaserOn",
        "modifiers": []
    },
    "dissolveteam": {
        "name": "dissolveTeam",
        "description": "Dissolves the given team. All members become members of the main team. Possible team values are: \"RED\", \"GREEN\", \"BLUE\" or \"YELLOW\".",
        "syntaxArray": [
            {
                "Syntax": "**dissolveTeam** teamColor",
                "Params": "teamColor: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "dissolveTeam \"RED\""
        ],
        "Url": "https://community.bistudio.com/wiki/dissolveTeam",
        "modifiers": [
            "Local argument"
        ]
    },
    "faderadio": {
        "name": "fadeRadio",
        "description": "Changes the radio volume smoothly within the given time. > ",
        "syntaxArray": [
            {
                "Syntax": "time **fadeRadio** volume",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - Fade interval in seconds\n\nvolume: [Number](https://community.bistudio.com/wiki/Number) - Radio volume range 0 to 2\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n5 fadeRadio 0.1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fadeRadio",
        "modifiers": [
            "Local effect"
        ]
    },
    "enableenvironment": {
        "name": "enableEnvironment",
        "description": "Enable/disable environmental effects: ambient life and/or ambient sound.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "enableEnvironment enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean) - Ambient life and ambient sounds setting\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "enableEnvironment [ambientLife, ambientSound] *Since Arma 3 v1.68*",
                "Params": "ambientLife: [Boolean](https://community.bistudio.com/wiki/Boolean) - Ambient life setting (bees, rabbits, birds, snakes, fish)\n\nambientSound: [Boolean](https://community.bistudio.com/wiki/Boolean) - Ambient sounds setting (cicadas, owls, etc)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableEnvironment false; // identical to enableEnvironment [false, false]\n```\n",
            "\n```sqf\nenableEnvironment [false, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableEnvironment",
        "modifiers": [
            "Local effect"
        ]
    },
    "drawline3d": {
        "name": "drawLine3D",
        "description": "Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use [onEachFrame](https://community.bistudio.com/wiki/onEachFrame) or [addMissionEventHandler](https://community.bistudio.com/wiki/addMissionEventHandler) \"Draw3D\".",
        "syntaxArray": [
            {
                "Syntax": "**drawLine3D** [start, end, color]",
                "Params": "[start, end, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nstart: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\nend: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonEachFrame {\n\tdrawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawLine3D",
        "modifiers": []
    },
    "formationleader": {
        "name": "formationLeader",
        "description": "Return leader of the formation.",
        "syntaxArray": [
            {
                "Syntax": "[Object](https://community.bistudio.com/wiki/Object) = **formationLeader** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "? (formationLeader player != leader player) :\n hint \"Formation leader is not the group leader.\""
        ],
        "Url": "https://community.bistudio.com/wiki/formationLeader",
        "modifiers": []
    },
    "onmapsingleclick": {
        "name": "onMapSingleClick",
        "description": "Defines the action performed when user clicks in map by executing command string. The code is executed on every click, until the **command** is \n\n* removed via \n```sqf\nonMapSingleClick \"\"\n```\n, or\n\n* replaced by \n```sqf\nonMapSingleClick \"SomeOtherCommand(s)\"\n```\n\n\nIn Arma 3 the code should return [true](https://community.bistudio.com/wiki/true) only if you wish to override default engine handling of the mouse click on map (see example #4) For older games, when click is processed, code should ultimately return [true](https://community.bistudio.com/wiki/true) back to the engine. If [false](https://community.bistudio.com/wiki/false) is returned, default processing by the game engine is done. Return value of any other type (including [Nothing](https://community.bistudio.com/wiki/Nothing)) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "onMapSingleClick command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code) - Code executed on click. The following variables are available:\n\n* _pos: [Array](https://community.bistudio.com/wiki/Array) - Clicked position\n\n\n* _units: [Array](https://community.bistudio.com/wiki/Array) - Units which were selected (via function keys) **before** opening the map (*may be non-functional in Arma*)\n\n\n* _shift: [Boolean](https://community.bistudio.com/wiki/Boolean) - Whether Shift was pressed when clicking on the map\n\n\n* _alt: [Boolean](https://community.bistudio.com/wiki/Boolean) - Whether Alt was pressed when clicking on the map\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "params onMapSingleClick command",
                "Params": "params: [Anything](https://community.bistudio.com/wiki/Anything)\n\ncommand: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code) - Code executed on click. The following variables are available:\n\n* _this: [Anything](https://community.bistudio.com/wiki/Anything) - Params passed to onMapSingleClick\n\n\n* _pos: [Array](https://community.bistudio.com/wiki/Array) - Clicked position\n\n\n* _units: [Array](https://community.bistudio.com/wiki/Array) - Units which were selected (via function keys) **before** opening the map (*may be non-functional in Arma*)\n\n\n* _shift: [Boolean](https://community.bistudio.com/wiki/Boolean) - Whether Shift was pressed when clicking on the map\n\n\n* _alt: [Boolean](https://community.bistudio.com/wiki/Boolean) - Whether Alt was pressed when clicking on the map\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "**Armed Assault:** Creates a soldier unit at the position clicked:\n\n```sqf\nonMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\";\n```\n",
            "**Armed Assault:** Orders \"grp1\" to move to position clicked. Disables further map-click actions:\n\n```sqf\nonMapSingleClick \"grp1 move _pos; onMapSingleClick ''; true\";\n```\n",
            "**Operation Flashpoint:** Single quotes cannot be used for string definition, so two double-quotes have to be used instead:\n\n```sqf\nonMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\";\n```\n",
            "\n```sqf\n// The following code will disable Shift+click waypoint marker creation\nonMapSingleClick {_shift};\n```\n",
            "\n```sqf\n// Pass params to onMapSingleClick code\nplayer onMapSingleClick {hint (\"Hello \" + name _this)}; // Hello KK\n```\n",
            "\n```sqf\n// Pass params to onMapSingleClick code and disable Shift+click waypoint marker creation\n player onMapSingleClick \"hint (\"\"Hello \"\" + name _this); _shift\"; // Hello KK\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onMapSingleClick",
        "modifiers": []
    },
    "getmissionpath": {
        "name": "getMissionPath",
        "description": "Returns mission root plus the filename in a form of filepath to be used with commands requiring absolute path such as [playSound3D](https://community.bistudio.com/wiki/playSound3D), [drawIcon3D](https://community.bistudio.com/wiki/drawIcon3D), [createSimpleObject](https://community.bistudio.com/wiki/createSimpleObject), etc. Any leading \"\\\" in the filename will be stripped as the mission root includes one already.",
        "syntaxArray": [
            {
                "Syntax": "getMissionPath filename",
                "Params": "filename: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - absolute path"
            }
        ],
        "examples": [
            "\n```sqf\n// would return e.g \"C:\\Users\\Username\\Documents\\Arma 3\\missions\\MissionName.Altis\\icons\\myIcon.paa\"\nprivate _path = getMissionPath \"icons\\myIcon.paa\";\nprivate _path = getMissionPath \"\\icons\\myIcon.paa\"; // leading \\ is also fine\n\n```\n",
            "\n```sqf\n// would return e.g \"C:\\Users\\Username\\Documents\\Arma 3\\missions\\MissionName.Altis\\\" with the trailing \\\nprivate _root = getMissionPath \"\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMissionPath",
        "modifiers": []
    },
    "ctrowcount": {
        "name": "ctRowCount",
        "description": "Returns number of rows (headers not included) in the RscControlsTable.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **ctRowCount** [Control](https://community.bistudio.com/wiki/Control)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nctRowCount _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctRowCount",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "drawtriangle": {
        "name": "drawTriangle",
        "description": "Draws a single triangle or multiple triangles on the map. Triangle is defined by 3 positions of its verticies: p0, p1, p2 in a single array [**p0**, **p1**, **p2**]. Next 3 positions in the same array [p0, p1, p2, **p0**, **p1**, **p2**] will be used to draw second triangle, another 3 positions [p0, p1, p2, p0, p1, p2, **p0**, **p1**, **p2**] to draw 3rd and so on. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **drawTriangle** [vertices, color, fill]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) - map control\n\n[vertices, color, fill]: [Array](https://community.bistudio.com/wiki/Array)\n\nvertices: [Array](https://community.bistudio.com/wiki/Array) of triangle(s) vertices in multiple of 3s [p0, p1, p2(, p0, p1, p2,....)], where vertex position (p) is in format [x,y] or [x,y,z], in which case z is ignored\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - color in format: [r,g,b,a]\n\nfill (Optional): [String](https://community.bistudio.com/wiki/String) - fill texture file or [Procedural_Textures](https://community.bistudio.com/wiki/Procedural_Textures). See note in description for more info.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)\n\n[](https://community.bistudio.com/wiki/File:drawTriangle.jpg)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\t_this select 0 drawTriangle \n\t[\n\t\t[\n\t\t\tplayer getRelPos [100, 0],\n\t\t\tplayer getRelPos [100, -135],\n\t\t\tplayer getRelPos [100, 135]\n\t\t],\n\t\t[1,0,0,0.5],\n\t\t\"#(rgb,1,1,1)color(1,1,1,1)\"\t\t\n\t];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawTriangle",
        "modifiers": []
    },
    "settriggertype": {
        "name": "setTriggerType",
        "description": "Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):\n\n\n* \"NONE\"\n\n* \"EAST G\" - Guarded by OPFOR - (It is better to use [createGuardedPoint](https://community.bistudio.com/wiki/createGuardedPoint) instead)\n\n* \"WEST G\" - Guarded by BLUFOR - (It is better to use [createGuardedPoint](https://community.bistudio.com/wiki/createGuardedPoint) instead)\n\n* \"GUER G\" - Guarded by Independent - (It is better to use [createGuardedPoint](https://community.bistudio.com/wiki/createGuardedPoint) instead)\n\n* \"SWITCH\" - Switch waypoints/break loop (see [Triggers](https://community.bistudio.com/wiki/ArmA:_Mission_Editor#Triggers_Mode_.28F3.29))\n\n* \"END1\" - End #1\n\n* \"END2\" - End #2\n\n* \"END3\" - End #3\n\n* \"END4\" - End #4\n\n* \"END5\" - End #5\n\n* \"END6\" - End #6\n\n* \"LOOSE\" - (Meant to say LOSE but is misspelt in the game engine).\n\n* \"WIN\" - (Not in editor. Valid enum name but when set, defaults to \"END1\")",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTriggerType** action",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\naction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setTriggerType \"END1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerType",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "currentmagazineturret": {
        "name": "currentMagazineTurret",
        "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
        "syntaxArray": [
            {
                "Syntax": "vehicle **currentMagazineTurret** [turret path]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[turret path]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_magazine = MBT_Kuma currentMagazineTurret [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentMagazineTurret",
        "modifiers": []
    },
    "setlightflaresize": {
        "name": "setLightFlareSize",
        "description": "Sets relative size of the flare for the light.",
        "syntaxArray": [
            {
                "Syntax": "light setLightFlareSize size",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\nsize: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightFlareSize 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightFlareSize",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "isequaltypeparams": {
        "name": "isEqualTypeParams",
        "description": "Compares types of all elements of input array to types of all elements of template array. Similar to [isEqualTypeArray](https://community.bistudio.com/wiki/isEqualTypeArray) however this command is designed for fast validation of functions params, so there are differences:\n\n* Input can be anything but will be expected to be an [Array](https://community.bistudio.com/wiki/Array), otherwise [false](https://community.bistudio.com/wiki/false) is returned\n\n* Input array can be longer but not shorter than template array, will return [false](https://community.bistudio.com/wiki/false) if shorter\n\n* [nil](https://community.bistudio.com/wiki/nil) could be used in template type array as a wild card to allow any type match",
        "syntaxArray": [
            {
                "Syntax": "input **isEqualTypeParams** template",
                "Params": "input: [Anything](https://community.bistudio.com/wiki/Anything) - could be value of any type, but only type [Array](https://community.bistudio.com/wiki/Array) will be validated\n\ntemplate: [Array](https://community.bistudio.com/wiki/Array) - array of expected types\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n// These all return true\n[1,2,player,\"10\"] isEqualTypeParams [0,0,objNull,\"\"];\n[1,2,player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"];\n[1,2,getPos player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"];\n```\n",
            "\n```sqf\n// These all return false\n123 isEqualTypeParams [0,0,objNull,\"\"];\n[] isEqualTypeParams [0,0,objNull,\"\"];\n[1,2,player] isEqualTypeParams [0,0,objNull,\"\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEqualTypeParams",
        "modifiers": []
    },
    "istext": {
        "name": "isText",
        "description": "Check if config entry represents text.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **isText** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n _ok = isText (configFile >> \"CfgVehicles\") \n```\n\n\nResult is false"
        ],
        "Url": "https://community.bistudio.com/wiki/isText",
        "modifiers": []
    },
    "processdiarylink": {
        "name": "processDiaryLink",
        "description": "Opens the [Diary](https://community.bistudio.com/wiki/Diary) screen on the subject/record specified by link. To get a valid link format, use [createDiaryLink](https://community.bistudio.com/wiki/createDiaryLink).",
        "syntaxArray": [
            {
                "Syntax": "**processDiaryLink** link",
                "Params": "link:  [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nprocessDiaryLink createDiaryLink [\"Tasks\", (simpleTasks player) select 0, \"\"]; // Select a task in the Task menu\n```\n",
            "\n```sqf\n// To select various tabs in the map screen:\nprocessDiaryLink createDiaryLink [\"selected_tab\", player, \"\"];\n// ... where \"selected_tab\" can be \"Tasks\", \"Diary\", \"Units\", \"Players\", \"Statistics\", other user created subjects\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/processDiaryLink",
        "modifiers": []
    },
    "drawarrow": {
        "name": "drawArrow",
        "description": "Draws a single line arrow on the map. To draw a color filled arrow of custom shape see [BIS_fnc_drawArrow](https://community.bistudio.com/wiki/BIS_fnc_drawArrow)",
        "syntaxArray": [
            {
                "Syntax": "map **drawArrow** [from, to, color]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n[from, to, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nfrom: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - arrow start position in format: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\nto: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - arrow end position in format: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - arrow color in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\t_this select 0 drawArrow [\n\t\tplayer, player getRelPos [100, 0], [1,0,0,1]\n\t];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawArrow",
        "modifiers": []
    },
    "selectionnames": {
        "name": "selectionNames",
        "description": "Returns the list of model selections",
        "syntaxArray": [
            {
                "Syntax": "selectionNames object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - List of selection names"
            },
            {
                "Syntax": "object selectionNames LOD *Since Arma 3 v1.99.146486*",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nLOD: [String](https://community.bistudio.com/wiki/String) could be: \"Memory\", \"Geometry\", \"FireGeometry\", \"LandContact\", \"HitPoints\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - List of selection names"
            }
        ],
        "examples": [
            "\n```sqf\n_house= \"Land_i_House_Small_02_V3_F\" createVehicle _pos;\nselectionNames _house;\n// [\"door_1\",\"door_2\",\"damt_1\",\"door_handle_1\",\"door_handle_2\",\"glass_1_hide\",\"glass_2_hide\",\"glass_3_hide\",\"glass_1_unhide\",\"glass_2_unhide\",\"glass_3_unhide\",\"glass_4_hide\",\"glass_4_unhide\"]\n```\n",
            "\n```sqf\nselectionNames player;\n// [\"spine\",\"spine1\",\"spine2\",\"spine3\",\"head\",\"leftshoulder\",\"leftarm\",\"leftarmroll\",\"leftforearm\",\"leftforearmroll\",\"lefthand\",\"rightshoulder\",\"rightarm\",\"rightarmroll\",\"rightforearm\",\"rightforearmroll\",\"righthand\",\"pelvis\",\"leftupleg\",\"leftuplegroll\",\"leftleg\",\"leftlegroll\",\"leftfoot\",\"lefttoebase\",\"rightupleg\",\"rightuplegroll\",\"rightleg\",\"rightlegroll\",\"rightfoot\",\"righttoebase\",\"weapon\",\"proxy:\\a3\\characters_f\\proxies\\weapon.001\",\"proxy:\\a3\\characters_f\\proxies\\pistol.001\",\"proxy:\\a3\\characters_f\\proxies\\binoculars.001\",\"proxy:\\a3\\characters_f\\proxies\\launcher.001\",\"launcher\",\"nvg\",\"proxy:\\a3\\characters_f\\proxies\\nvg.001\",\"proxy:\\a3\\characters_f\\proxies\\flag.001\",\"proxy:\\a3\\characters_f\\proxies\\equipment.001\",\"proxy:\\a3\\characters_f\\proxies\\backpack.001\",\"proxy:\\a3\\characters_f\\proxies\\pistol_holstered.001\",\"proxy:\\a3\\characters_f\\proxies\\head_male.001\",\"proxy:\\a3\\characters_f\\proxies\\glasses.001\",\"proxy:\\a3\\characters_f\\proxies\\headgear.001\",\"proxy:\\a3\\characters_f\\proxies\\hair.001\",\"proxy:\\a3\\characters_f\\proxies\\backpack2.001\",\"proxy:\\a3\\characters_f\\proxies\\radio.001\",\"body_proxy\",\"head_proxy\",\"lefthandindex1\",\"lefthandindex2\",\"lefthandindex3\",\"lefthandmiddle1\",\"lefthandmiddle2\",\"lefthandmiddle3\",\"lefthandring\",\"lefthandpinky1\",\"lefthandpinky2\",\"lefthandpinky3\",\"lefthandring1\",\"lefthandring2\",\"lefthandring3\",\"lefthandthumb1\",\"lefthandthumb2\",\"lefthandthumb3\",\"righthandindex1\",\"righthandindex2\",\"righthandindex3\",\"righthandmiddle1\",\"righthandmiddle2\",\"righthandmiddle3\",\"righthandring\",\"righthandpinky1\",\"righthandpinky2\",\"righthandpinky3\",\"righthandring1\",\"righthandring2\",\"righthandring3\",\"righthandthumb1\",\"righthandthumb2\",\"righthandthumb3\",\"injury_hands\",\"camo\",\"proxy:\\a3\\characters_f\\heads\\bysta.001\",\"injury_legs\",\"proxy:\\a3\\characters_f\\proxies\\hmd.001\",\"hl\",\"insignia\",\"injury_body\",\"clan\"]\n```\n",
            "[HitPart](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#HitPart) hit selections only:\n```sqf\nselectionNames player select { !(player selectionPosition [_x, \"HitPoints\"] isEqualTo [0,0,0]) };\n// [\"spine1\",\"spine2\",\"spine3\",\"head\",\"leftarm\",\"leftarmroll\",\"leftforearm\",\"rightarm\",\"rightarmroll\",\"rightforearm\",\"pelvis\",\"leftupleg\",\"leftuplegroll\",\"leftlegroll\",\"leftfoot\",\"rightupleg\",\"rightuplegroll\",\"rightleg\",\"rightlegroll\",\"rightfoot\"]\n```\n",
            "Copy 5 LODs' selections:\n```sqf\nprivate _car = \"B_MRAP_01_F\" createVehicle getPos player;\nprivate _return = [];\n{\n\t_return pushBack (_x + \": \" + str (_car selectionNames _x));\n} forEach [\"Memory\", \"Geometry\", \"FireGeometry\", \"LandContact\", \"HitPoints\"];\ncopyToClipboard (_return joinString endl);\n/*\n\tMemory: [\"light_r_end\",\"drivewheel_axis\",\"posun wheel_1_1\",\"posun wheel_1_2\",\"posun wheel_2_1\",\"posun wheel_2_2\",\"wheel_1_1_steering_axis\",\"wheel_2_1_steering_axis\",\"wheel_2_1_axis\",\"wheel_2_2_axis\",\"wheel_1_2_axis\",\"wheel_1_1_axis\",\"basic_damper_destruct_axis\",\"pos cargo\",\"pos cargo dir\",\"pos driver\",\"pos driver dir\",\"circulumreference\",\"zamerny\",\"doplnovani\",\"light_l_end\",\"light_r\",\"light_l\",\"stopa pll\",\"stopa plp\",\"stopa ppl\",\"stopa ppp\",\"stopa zll\",\"stopa zlp\",\"stopa zpl\",\"stopa zpp\",\"exhaust_dir\",\"exhaust_pos\",\"osaveze\",\"mph_axis\",\"rpm_axis\",\"fuel_axis\",\"temp2_axis\",\"temp_axis\",\"pip1_pos\",\"pip1_dir\",\"pip4_dir\",\"pip6_dir\",\"pip5_dir\",\"pip7_dir\",\"pip4_pos\",\"pip6_pos\",\"pip7_pos\",\"pip5_pos\",\"dustfrontright\",\"dustfrontleft\",\"dustbackleft\",\"dustbackright\",\"light_r_flare\",\"light_l_flare\",\"light_r_flare2\",\"light_l_flare2\",\"wheel_1_1_bound\",\"wheel_1_2_bound\",\"wheel_2_1_bound\",\"wheel_2_2_bound\",\"door_1_axis\",\"door_2_axis\",\"door_3_axis\",\"door_4_axis\",\"pedal_thrust_axis\",\"pedal_brake_axis\",\"slingloadcargo1\",\"slingloadcargo2\",\"slingloadcargo3\",\"slingloadcargo4\",\"tow_front_l\",\"tow_rear_r\",\"tow_front_r\",\"tow_rear_l\",\"taskmarker_1_pos\",\"bbox_1_2_pos\",\"bbox_1_1_pos\",\"bbox_2_1_pos\",\"bbox_2_2_pos\",\"pip_1_tl\",\"pip_1_tr\",\"pip_1_bl\",\"pip_1_br\",\"pip_4_tl\",\"pip_4_tr\",\"pip_4_bl\",\"pip_4_br\",\"pip_5_tl\",\"pip_5_tr\",\"pip_5_br\",\"pip_5_bl\"]\n\tGeometry: [\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.001\",\"wheel_1_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.002\",\"wheel_1_2_unhide\",\"wheel_2_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.003\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.004\",\"wheel_2_2_unhide\",\"damagehide\",\"wheel_1_2_damper\",\"wheel_1_1_damper\",\"wheel_2_2_damper\",\"wheel_2_1_damper\"]\n\tFireGeometry: [\"wheel_2_2_hide\",\"wheel_1_2_hide\",\"wheel_1_1_hide\",\"wheel_2_1_hide\",\"damagehide\",\"glass2\",\"glass3\",\"glass1\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.001\",\"wheel_1_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.002\",\"wheel_1_2_unhide\",\"wheel_2_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.003\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.004\",\"wheel_2_2_unhide\",\"proxy:\\a3\\data_f\\proxies\\passenger_mrap_01_back\\cargo.002\",\"proxy:\\a3\\data_f\\proxies\\passenger_generic01_foldhands\\cargo.003\",\"proxy:\\a3\\data_f\\proxies\\passenger_mrap_01_front\\cargo.001\",\"proxy:\\a3\\data_f\\proxies\\driver_offroad\\driver.001\",\"reserve_wheel\",\"zbytek\",\"glass4\",\"glass5\",\"glass6\",\"hit_engine\",\"hit_fuel\",\"hit_hull\",\"door_1_hide\",\"door_3_hide\"]\n\tLandContact: [\"wheel_2_1_damper_land\",\"wheel_1_2_damper_land\",\"wheel_2_2_damper_land\",\"wheel_1_1_damper_land\"]\n\tHitPoints: [\"wheel_2_1_steering\",\"wheel_2_2_steering\",\"wheel_1_2_steering\",\"wheel_1_1_steering\",\"motor\",\"karoserie\",\"light_r\",\"light_l\",\"glass2\",\"palivo\",\"glass3\",\"glass1\",\"wheel_reserve_hit\",\"light_r2\",\"light_l2\",\"zbytek\",\"door_1\",\"door_2\",\"door_3\",\"door_4\",\"glass4\",\"glass5\",\"glass6\",\"hit_engine_point\",\"hit_fuel_point\",\"hit_hull_point\"]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectionNames",
        "modifiers": []
    },
    "showlegend": {
        "name": "showLegend",
        "description": "Show/hide map legend. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **showLegend** bool",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/showLegend",
        "modifiers": []
    },
    "objectfromnetid": {
        "name": "objectFromNetId",
        "description": "Get object with given unique ID. If object is a [group](https://community.bistudio.com/wiki/group) use [groupFromNetId](https://community.bistudio.com/wiki/groupFromNetId). As this command is MP only, you can use [BIS_fnc_objectFromNetId](https://community.bistudio.com/wiki/BIS_fnc_objectFromNetId), which extends the use to SP as well.",
        "syntaxArray": [
            {
                "Syntax": "**objectFromNetId** id",
                "Params": "id: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nobjectFromNetId \"2:3\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/objectFromNetId",
        "modifiers": []
    },
    "forcerespawn": {
        "name": "forceRespawn",
        "description": "Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu, the unit is killed only there is no \"so and so was killed\" message and no score adjustment.",
        "syntaxArray": [
            {
                "Syntax": "**forceRespawn** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nforceRespawn player;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceRespawn",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "playerrespawntime": {
        "name": "playerRespawnTime",
        "description": "Return the player's remaining time before respawn, or -1 if it is not available (such as when the player is alive).",
        "syntaxArray": [
            {
                "Syntax": "**playerRespawnTime**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nwaitUntil {playerRespawnTime <= 0};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playerRespawnTime",
        "modifiers": []
    },
    "primaryweapon": {
        "name": "primaryWeapon",
        "description": "Returns name of unit's primary weapon. This command will also return a weapon class name if the weapon is not used by the player, for example, it is on the unit's back. Use [currentWeapon](https://community.bistudio.com/wiki/currentWeapon) to get the weapon the unit is using.",
        "syntaxArray": [
            {
                "Syntax": "**primaryWeapon** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Weapon class name or \n```sqf\n\"\"\n```\n if no primary weapon"
            }
        ],
        "examples": [
            "\n```sqf\n_pWeap = primaryWeapon player;\n```\n",
            "\n```sqf\nhint primaryWeapon player; // \"arifle_MX_ACO_pointer_F\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/primaryWeapon",
        "modifiers": [
            "Global argument"
        ]
    },
    "currentthrowable": {
        "name": "currentThrowable",
        "description": "Returns currently selected throwable, which will be launched if the user presses \"G\".\n> ",
        "syntaxArray": [
            {
                "Syntax": "currentThrowable player",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [magazineClassName, muzzleClassName, [magazineId, creatorId]]"
            }
        ],
        "examples": [
            "\n```sqf\ncurrentThrowable player; // [\"SmokeShellGreen\", \"SmokeShellGreenMuzzle\", [1.00002e+007, 0]]\n```\n",
            "\n```sqf\n_ct = currentThrowable player;\t\t\t\t// [\"HandGrenade\", \"HandGrenadeMuzzle\", [1e+007, 0]]\n_id = (_ct select 2 select 0) - 1e+007;\t\t// 18\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentThrowable",
        "modifiers": []
    },
    "isclass": {
        "name": "isClass",
        "description": "Check if config entry represents config class.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **isClass** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_ok = isClass (configFile >> \"CfgVehicles\");\n```\n Result is [true](https://community.bistudio.com/wiki/true)."
        ],
        "Url": "https://community.bistudio.com/wiki/isClass",
        "modifiers": []
    },
    "ctrlsettextsecondary": {
        "name": "ctrlSetTextSecondary",
        "description": "Sets the secondary text of a text control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetTextSecondary** text",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - Text control\n\ntext: [String](https://community.bistudio.com/wiki/String) - Secondary text\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlText ctrlSetTextSecondary \"Hello World!\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTextSecondary",
        "modifiers": []
    },
    "isuicontext": {
        "name": "isUIContext",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.",
        "syntaxArray": [
            {
                "Syntax": "**isUIContext**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isUIContext) then {hint \"UI control event\"};\n```\n",
            "\n```sqf\n_button ctrlSetEventHandler ['ButtonDown',\"call {diag_log isUIContext}\"]; // Outputs true\n```\n",
            "\n```sqf\n_button ctrlSetEventHandler ['ButtonDown',\"[] spawn {diag_log isUIContext}\"]; // Outputs false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isUIContext",
        "modifiers": []
    },
    "vectormodeltoworld": {
        "name": "vectorModelToWorld",
        "description": "Converts vector direction from model to world space.",
        "syntaxArray": [
            {
                "Syntax": "object **vectorModelToWorld** modelDir",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nmodelDir: [Array](https://community.bistudio.com/wiki/Array) - vector direction in model space in format [x,y,z]\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - vector direction in world space in format [x,y,z]"
            }
        ],
        "examples": [
            "Convert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: \n\n```sqf\n_airplane vectorModelToWorld [0,-10,4];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorModelToWorld",
        "modifiers": []
    },
    "removeallcuratorcameraareas": {
        "name": "removeAllCuratorCameraAreas",
        "description": "Delete all curator camera areas.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllCuratorCameraAreas** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllCuratorCameraAreas myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllCuratorCameraAreas",
        "modifiers": []
    },
    "camsetfovrange": {
        "name": "camSetFovRange",
        "description": "Set the zoom level (**F**ield **O**f **V**iew) start and end values for automatical zooming. \n\nThe default zoom level is *0.7* where *0* is the nearest and *1* is the most far zoom value.\n > ",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetFovRange** fovRange",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\nfovRange: [Array](https://community.bistudio.com/wiki/Array) - zoom level, range 0 to 1 (see description above)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_cam camSetFovRange [0.1, 0.7];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetFovRange",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getobjecttextures": {
        "name": "getObjectTextures",
        "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object.  Doesn't work on [simple objects](https://community.bistudio.com/wiki/Arma_3_Simple_Objects)",
        "syntaxArray": [
            {
                "Syntax": "**getObjectTextures** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - array of textures"
            }
        ],
        "examples": [
            "\n```sqf\n_textures = getObjectTextures player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectTextures",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlhtmlloaded": {
        "name": "ctrlHTMLLoaded",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) when HTML content was successfully loaded.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlHTMLLoaded** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_control htmlLoad \"test.html\";\nif (!ctrlHTMLLoaded _control) then {\n    hint \"Loading test.html failed!\";\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlHTMLLoaded",
        "modifiers": []
    },
    "addcuratorpoints": {
        "name": "addCuratorPoints",
        "description": "Adds or removes curator points. Points can be only in range from 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **addCuratorPoints** points",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\npoints: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule addCuratorPoints 0.5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addCuratorPoints",
        "modifiers": []
    },
    "ismarkedforcollection": {
        "name": "isMarkedForCollection",
        "description": "Checks whether the object is marked for weapons collection.",
        "syntaxArray": [
            {
                "Syntax": "**isMarkedForCollection** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_marked = isMarkedForCollection _truck\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isMarkedForCollection",
        "modifiers": [
            "Global argument"
        ]
    },
    "settrafficgap": {
        "name": "setTrafficGap",
        "description": "Set the average gap between ambient cars in a rectangle (in meters). > ",
        "syntaxArray": [
            {
                "Syntax": "setTrafficGap [gap, xMin, xMax, zMin, zMax]",
                "Params": "gap: [Number](https://community.bistudio.com/wiki/Number) - average gap between ambient cars (in meters)\n\nxMin: [Number](https://community.bistudio.com/wiki/Number) - western border of the affected rectangle\n\nxMax: [Number](https://community.bistudio.com/wiki/Number) - eastern border of the affected rectangle\n\nzMin: [Number](https://community.bistudio.com/wiki/Number) - southern border of the affected rectangle\n\nzMax: [Number](https://community.bistudio.com/wiki/Number) - northern border of the affected rectangle\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetTrafficGap [50, 31000, 32500, 28000, 32000];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTrafficGap",
        "modifiers": []
    },
    "setvectordir": {
        "name": "setVectorDir",
        "description": "Set object's direction vector. Up vector will remain unchanged.",
        "syntaxArray": [
            {
                "Syntax": "object **setVectorDir** [x,y,z]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[x,y,z]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVectorDir [5,6,1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVectorDir",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "removeitemfromuniform": {
        "name": "removeItemFromUniform",
        "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeItemFromUniform** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeItemFromUniform",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "deletegroupwhenempty": {
        "name": "deleteGroupWhenEmpty",
        "description": "Marks given group for auto-deletion when group is empty. [True](https://community.bistudio.com/wiki/true) will mark the group for auto-deletion, however [false](https://community.bistudio.com/wiki/false) will only unmark the group that was marked previously. Other engine group auto-deletion mechanisms in place are not affected by this.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "group deleteGroupWhenEmpty delete",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\ndelete: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to mark for auto-deletion\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group deleteGroupWhenEmpty true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteGroupWhenEmpty",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "setconvoyseparation": {
        "name": "setConvoySeparation",
        "description": "Sets the distance to keep to the vehicle which is **in front**.\n\n* This command has to be applied to all vehicles in a convoy in order to have a separation of, for example, 50 m.\n\n* Vehicles in a convoy can also have different distances.\n\n* It's recommended that small values (<10m) should only be used for slowly moving convoys, otherwise AI driven vehicles will leave the road frequently to avoid collisions",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setConvoySeparation** distance",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\ndistance: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle setConvoySeparation 20;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setConvoySeparation",
        "modifiers": []
    },
    "setrepaircargo": {
        "name": "setRepairCargo",
        "description": "Set amount of repair resources in cargo space of repair vehicle.\nAmount 1 is full cargo.",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **setRepairCargo** amount",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\namount: [Number](https://community.bistudio.com/wiki/Number) range 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_repairTruck1 setRepairCargo 0\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRepairCargo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "isengineon": {
        "name": "isEngineOn",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if engine is on, [false](https://community.bistudio.com/wiki/false) if it is off.",
        "syntaxArray": [
            {
                "Syntax": "isEngineOn vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_carEngineIsOn = isEngineOn _carOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEngineOn",
        "modifiers": [
            "Global argument"
        ]
    },
    "hcgroupparams": {
        "name": "hcGroupParams",
        "description": "Returns parameters describing group in [high command](https://community.bistudio.com/wiki/High_Command) bar. Return value is array in format [groupName, teamName] or [] if error. Possible values for team name:\n\n* \"teammain\" (default)\n\n* \"teamred\"\n\n* \"teamgreen\"\n\n* \"teamblue\"\n\n* \"teamyellow\"",
        "syntaxArray": [
            {
                "Syntax": "unit **hcGroupParams** group",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - commander\n\ngroup: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer hcGroupParams someGroup;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcGroupParams",
        "modifiers": []
    },
    "diag_deltatime": {
        "name": "diag_deltaTime",
        "description": "Returns the duration of the previous frame in seconds",
        "syntaxArray": [
            {
                "Syntax": "diag_deltaTime",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_frameTime = diag_deltaTime;\n```\n",
            "\n```sqf\n_fps = 1 / diag_deltaTime;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_deltaTime",
        "modifiers": []
    },
    "settype": {
        "name": "setType",
        "description": "Changes a location to the specified class. Location classes are defined in CfgLocationTypes.",
        "syntaxArray": [
            {
                "Syntax": "location **setType** name",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setType \"RockArea\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setType",
        "modifiers": []
    },
    "remoteexeccall": {
        "name": "remoteExecCall",
        "description": "Asks the server to execute the given function or script command on the given target machine(s). Execution always takes place in the [unscheduled environment](https://community.bistudio.com/wiki/Scheduler#Unscheduled_Environment); suspension is not allowed.\nRead [Arma 3: Remote Execution](https://community.bistudio.com/wiki/Arma_3:_Remote_Execution) for more information about remote execution, security features and JIP techniques.\n\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "params remoteExecCall [functionName, targets, JIP]",
                "Params": "**params**: [Anything](https://community.bistudio.com/wiki/Anything) - The parameter(s) for the function / command specified in the **functionName** parameter.\n\n**functionName**: [String](https://community.bistudio.com/wiki/String) - Function or command name.\nWhile any function or command can be used here, only those allowed by [CfgRemoteExec](https://community.bistudio.com/wiki/Arma_3:_CfgRemoteExec) will actually be executed.\n\n**targets** (Optional, default: 0):\n\n* [Number](https://community.bistudio.com/wiki/Number) (See also [Machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID)) -\n\n* **0:** The function / command will be executed globally, i.e. on the server and every connected client, including the machine where remoteExecCall originated.\n\n* **2:** The function / command will only be executed on the server.\n\n* **Other number:** The function / command will be executed on the machine where [clientOwner](https://community.bistudio.com/wiki/clientOwner) matches the given number.\n\n* **Negative number:** The effect is inverted: -2 means every client but not the server, -12 means the server and every client, except for the client where [clientOwner](https://community.bistudio.com/wiki/clientOwner) returns 12.\n\n* [Object](https://community.bistudio.com/wiki/Object) - The function / command will be executed where the given object is [local](https://community.bistudio.com/wiki/local).\n\n* [String](https://community.bistudio.com/wiki/String) - Interpreted as an [Identifier](https://community.bistudio.com/wiki/Identifier) (variable name). The function / command will be executed where the object or group identified by the variable with the provided name is [local](https://community.bistudio.com/wiki/local).\n\n* [Side](https://community.bistudio.com/wiki/Side) - The function / command will be executed on machines where the player is on the specified side.\n\n* [Group](https://community.bistudio.com/wiki/Group) - The function / command will be executed on machines where the player is in the specified group.\n\n* [Array](https://community.bistudio.com/wiki/Array) - Array of any combination of the types listed above.\n\n**JIP** (Optional, default: [false](https://community.bistudio.com/wiki/false)):\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) - If [true](https://community.bistudio.com/wiki/true), a unique JIP ID is generated and the remoteExecCall statement is added to the JIP queue from which it will be executed for every JIP.\n\n* [String](https://community.bistudio.com/wiki/String) -\n\n* If the string is empty, it is interpreted as [false](https://community.bistudio.com/wiki/false).\n\n* If the string is in format \"[Number](https://community.bistudio.com/wiki/Number):[Number](https://community.bistudio.com/wiki/Number)\" (e.g. \"0:0\"), it is interpreted as a [netId](https://community.bistudio.com/wiki/netId) (see below).\n\n* Else the string is treated as a custom JIP ID and the remoteExecCall statement is added to the JIP queue, replacing statements that have the same JIP ID.\n\n* [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [netId](https://community.bistudio.com/wiki/netId) - The persistent execution of the remoteExecCall statement is attached to the given object or group.When the object / group is deleted, the remoteExecCall statement is automatically removed from the JIP queue.\n\nThe **JIP** parameter can only be used if the **targets** parameter is 0 or a negative number.See also [Example 3](https://community.bistudio.com/wiki/remoteExecCall#Example_3) on how to remove statements from the JIP queue.\n\n",
                "Return": ""
            },
            {
                "Syntax": "remoteExecCall [functionName, targets, JIP]",
                "Params": "**functionName**: [String](https://community.bistudio.com/wiki/String) - See the main syntax above for more details.\n\n**targets** (Optional, default: 0): [Number](https://community.bistudio.com/wiki/Number), [Object](https://community.bistudio.com/wiki/Object), [String](https://community.bistudio.com/wiki/String), [Side](https://community.bistudio.com/wiki/Side), [Group](https://community.bistudio.com/wiki/Group) or [Array](https://community.bistudio.com/wiki/Array) - See the main syntax above for more details.\n\n**JIP** (Optional, default: [false](https://community.bistudio.com/wiki/false)): [Boolean](https://community.bistudio.com/wiki/Boolean), [String](https://community.bistudio.com/wiki/String), [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [netId](https://community.bistudio.com/wiki/netId) - See the main syntax above for more details.\n\n",
                "Return": "[nil](https://community.bistudio.com/wiki/nil) or [String](https://community.bistudio.com/wiki/String) - See the main syntax above for more details."
            }
        ],
        "examples": [
            "Execute \n```sqf\nhint \"Example 1\";\n```\n on various machines:\n\n```sqf\n\"Example 1\" remoteExecCall [\"hint\"]; // Executed on all machines.\n\"Example 1\" remoteExecCall [\"hint\", 3]; // Executed only on the first connected client.\n\"Example 1\" remoteExecCall [\"hint\", -2]; // Executed everywhere except on the server.\n```\n",
            "Execute \n```sqf\nhint \"Example 2\";\n```\n on various machines and add it to the JIP queue:\n\n```sqf\n_result = \"Example 2\" remoteExecCall [\"hint\", -2, true]; // _result is a unique JIP ID, e.g. \"3_1\".\n_result = \"Example 2\" remoteExecCall [\"hint\", -2, \"My_JIP_ID\"]; // _result is \"My_JIP_ID\".\n_result = \"Example 2\" remoteExecCall [\"hint\", 0, MyObject]; // _result is the unique netId of MyObject, e.g. \"2:3\".\n```\n\nNote that if there already was a statement with the JIP ID \"My_JIP_ID\" in the JIP queue, that statement has now been overwritten.",
            "Remove statements from the JIP queue:\n\n```sqf\nremoteExecCall [\"\", \"My_JIP_ID\"]; // The persistent statement with the JIP ID \"My_JIP_ID\" is removed from the JIP queue.\nremoteExecCall [\"\", MyObject]; // The persistent statement attached to MyObject is removed from the JIP queue.\n```\n",
            "Some more complex examples:\n\n```sqf\n[\"Open\", true] remoteExecCall [\"BIS_fnc_arsenal\", MyTargetPlayer];\n[MyCurator, [[MyObject1, MyObject2], false]] remoteExecCall [\"addCuratorEditableObjects\", 2];\n```\n",
            "A tricky example: Trying to execute \n```sqf\nplayer setAmmo [primaryWeapon player, 1];\n```\n (on machines where the player is in MyGroup). Consider the following statements:\n\n```sqf\n{player setAmmo [primaryWeapon player, 1];} remoteExecCall [\"call\", MyGroup]; // Statement 1\n[player, [primaryWeapon player, 1]] remoteExecCall [\"setAmmo\", MyGroup]; // Statement 2\n```\n\nBoth statements look very similar, but only Statement 1 has the intended effect. This is because in Statement 2, the arguments \n```sqf\nplayer\n```\n and \n```sqf\nprimaryWeapon player\n```\n are not resolved on the target machine(s), but on the machine executing remoteExecCall."
        ],
        "Url": "https://community.bistudio.com/wiki/remoteExecCall",
        "modifiers": []
    },
    "getforcedflagtexture": {
        "name": "getForcedFlagTexture",
        "description": "A getter for [forceFlagTexture](https://community.bistudio.com/wiki/forceFlagTexture). Forced texture is different from your normal flag texture, which can be retrieved with [flagTexture](https://community.bistudio.com/wiki/flagTexture)",
        "syntaxArray": [
            {
                "Syntax": "getForcedFlagTexture object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - vehicle, unit of flag pole\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ngetForcedFlagTexture player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getForcedFlagTexture",
        "modifiers": []
    },
    "addmagazineglobal": {
        "name": "addMagazineGlobal",
        "description": "Adds magazine to a unit regardless of locality. This command can also be used to add magazine to a vehicle, like a static gun, for example.",
        "syntaxArray": [
            {
                "Syntax": "unit addMagazineGlobal magazineName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addMagazineGlobal \"30Rnd_65x39_caseless_mag\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazineGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "tvsort": {
        "name": "tvSort",
        "description": "Sorts all children of given path. Text of [Tree View](https://community.bistudio.com/wiki/CT_TREE) entries is used for sorting.",
        "syntaxArray": [
            {
                "Syntax": "control tvSort [path, reversed]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the parent item to sort\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to reverse sort it. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "tvSort [idc, path, reversed]",
                "Params": "[idc, path, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) - control idc\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the parent item to sort\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to reverse sort it. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncontrol tvSort [[0], true];\n```\n",
            "\n```sqf\ntvSort [102, [0], true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSort",
        "modifiers": []
    },
    "needreload": {
        "name": "needReload",
        "description": "Return how much vehicle wants to reload its weapons.",
        "syntaxArray": [
            {
                "Syntax": "**needReload** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) Range: 0-1, 0: full mag, 1: empty mag"
            }
        ],
        "examples": [
            "\n```sqf\n_seriousness = needReload _vehicle;\n```\n",
            "\n```sqf\nif (needReload player == 1) then {reload player};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/needReload",
        "modifiers": []
    },
    "menusettext": {
        "name": "menuSetText",
        "description": "Sets text of given menu strip entry.",
        "syntaxArray": [
            {
                "Syntax": "menuSetText [idc, path, text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetText [path, text]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlMenuStrip menuSetText [[0,0,1], \"Hello World!\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetText",
        "modifiers": []
    },
    "setmass": {
        "name": "setMass",
        "description": "Changes the mass of a PhysX object. When using the alternative syntax the mass change is gradual during the given time. A time of zero means immediate change.\n> ",
        "syntaxArray": [
            {
                "Syntax": "myObject setMass mass",
                "Params": "myObject: [Object](https://community.bistudio.com/wiki/Object)\n\nmass: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "myObject setMass [mass, time]",
                "Params": "myObject: [Object](https://community.bistudio.com/wiki/Object)\n\nmass: [Number](https://community.bistudio.com/wiki/Number)\n\ntime: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyObject setMass [10, 0.5];\n```\n",
            "\n```sqf\nmyObject setMass 10;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMass",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "countenemy": {
        "name": "countEnemy",
        "description": "Count how many units in the array are considered enemy to the given unit.",
        "syntaxArray": [
            {
                "Syntax": "unitName **countEnemy** arrayName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\narrayName: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_num = player countEnemy list _triggerOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/countEnemy",
        "modifiers": [
            "Global argument"
        ]
    },
    "loadbackpack": {
        "name": "loadBackpack",
        "description": "Returns current percentage of mass from items stored in a backpack relative to the maximum capacity of the backpack.\nIt is equivalent to this formula:\n\n```sqf\n_loadBackpack = massOfAllItemsInBackpack / getContainerMaxLoad backpack player;\n```\n",
        "syntaxArray": [
            {
                "Syntax": "loadBackpack unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _myVariable = loadBackpack myUnit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadBackpack",
        "modifiers": []
    },
    "airdensityrtd": {
        "name": "airDensityRTD",
        "description": "Returns air density in given altitude. > ",
        "syntaxArray": [
            {
                "Syntax": "airDensityRTD altitude",
                "Params": "altitude : [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_density = airDensityRTD 0;//Returns 1.22406\n```\n",
            "\n```sqf\n_density = airDensityRTD 1000;//Returns 1.11096\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/airDensityRTD",
        "modifiers": []
    },
    "removemagazines": {
        "name": "removeMagazines",
        "description": "Removes all magazines of given type from the unit. If magazine class does not exist, nothing happens, not even .rpt message, unlike with [addMagazine](https://community.bistudio.com/wiki/addMagazine) command.",
        "syntaxArray": [
            {
                "Syntax": "unitName **removeMagazines** magazineName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeMagazines \"30Rnd_556x45_Stanag\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMagazines",
        "modifiers": [
            "Local argument"
        ]
    },
    "setwaypointformation": {
        "name": "setWaypointFormation",
        "description": "Switches the group formation when the waypoint becomes active.\n\n\nPossible values are: \n\n* \"NO CHANGE\"\n\n* \"COLUMN\"\n\n* \"STAG COLUMN\"\n\n* \"WEDGE\"\n\n* \"ECH LEFT\"\n\n* \"ECH RIGHT\"\n\n* \"VEE\"\n\n* \"LINE\"\n\n* \"FILE\"\n\n* \"DIAMOND\"",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointFormation** formation",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nformation: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointFormation \"LINE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointFormation",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "setposasl": {
        "name": "setPosASL",
        "description": "Sets the object position above sea level. Given position must be in [PositionASL](https://community.bistudio.com/wiki/PositionASL) format.",
        "syntaxArray": [
            {
                "Syntax": "object setPosASL pos",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setPosASL [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2];\n```\n",
            "\n```sqf\nthis setPosASL [position this select 0, position this select 1, 9];  // [ X, Y, Z]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPosASL",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "forceweaponfire": {
        "name": "forceWeaponFire",
        "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on [player](https://community.bistudio.com/wiki/player). See also: [BIS_fnc_fire](https://community.bistudio.com/wiki/BIS_fnc_fire)",
        "syntaxArray": [
            {
                "Syntax": "unit forceWeaponFire [muzzle, firemode]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit alone or in vehicle\n\nmuzzle: [String](https://community.bistudio.com/wiki/String)\n\nfiremode: [String](https://community.bistudio.com/wiki/String) - Common options are \"Single\", \"Burst\", \"FullAuto\". For the full list of a weapon firemodes:\n\n\n```sqf\nhint str (getArray (configFile >> \"CfgWeapons\" >> currentWeapon player >> \"modes\"));\n```\n If *modes[]* param in config for the weapon says *{\"this\"}*, then the same classname as for the weapon param ([currentWeapon](https://community.bistudio.com/wiki/currentWeapon) [player](https://community.bistudio.com/wiki/player)) should be used as firemode param.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit forceWeaponFire [\"arifle_MX_F\", \"Single\"];\n_unit forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"];\n_unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"];\n_unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"];\n_unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"];\n_unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"];\n_unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"];\n_unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"];\n_unit forceWeaponFire [\"Laserdesignator\",\"Laserdesignator\"];\n```\n",
            "\n```sqf\ngunner blackfoot forceWeaponFire [\"gatling_20mm\", \"close\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceWeaponFire",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "unlockachievement": {
        "name": "unlockAchievement",
        "description": "Unlocks the given achievement. The achievements are listed in CfgAchievements, however none of the currently listed achievements is used in Arma 3, hence the command always returns [false](https://community.bistudio.com/wiki/false).\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "unlockAchievement name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) - achievement name\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if achievement was unlocked"
            }
        ],
        "examples": [
            "\n```sqf\n_isUnlocked = unlockAchievement \"Hunter\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unlockAchievement",
        "modifiers": []
    },
    "commandsuppressivefire": {
        "name": "commandSuppressiveFire",
        "description": "Orders the given unit or a group of units to suppress the given position or target (with radio messages, see [doSuppressiveFire](https://community.bistudio.com/wiki/doSuppressiveFire) if you don't want messages). \n\n* When an [Array](https://community.bistudio.com/wiki/Array) of units is passed as param, only units from the same [Group](https://community.bistudio.com/wiki/Group) as the first unit in array are considered.\n\n* The unit (units) starts firing at the given target or position random amount of shots (exact formula unknown, but seems to depend on amount of ammo unit has) after which it stops.\n\n* [currentCommand](https://community.bistudio.com/wiki/currentCommand) shows \"Suppress\" and there is no way of stopping unit before it completes random amount of rounds.\n\n* If position is passed as target param, it stays fixed.\n\n* If object is passed as target param, it depends on what kind of object. If it is considered a proper target by the unit, it is tracked by the unit dynamically. If it is not, the position gets obtained via [getPosWorld](https://community.bistudio.com/wiki/getPosWorld), which could be different from [PositionASL](https://community.bistudio.com/wiki/PositionASL) of the object, and it is fixed even if the target is able to change position later.",
        "syntaxArray": [
            {
                "Syntax": "unit **commandSuppressiveFire** target",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) - a single unit or array of units\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) - actual target or position of the target in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier commandSuppressiveFire [1869.508,5760.962,0.000]\n\n```\n",
            "\n```sqf\n_soldier commandSuppressiveFire cursorTarget\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandSuppressiveFire",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "pixelh": {
        "name": "pixelH",
        "description": "Returns the height of one pixel for current resolution.",
        "syntaxArray": [
            {
                "Syntax": "**pixelH**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Pixel height"
            }
        ],
        "examples": [
            "\n```sqf\n_pixelHeight = pixelH;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pixelH",
        "modifiers": []
    },
    "librarycredits": {
        "name": "libraryCredits",
        "description": "Returns the credits for the libraries used by the game.",
        "syntaxArray": [
            {
                "Syntax": "**libraryCredits**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [array1, array2, (..), arrayN] all under the form [libraryName, credits]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str libraryCredits; // as of Arma 2 OA 1.62.95208\n\n/*\n[\n\t[\n\t\t\"Botan\",\n\t\t\"1999-2012 Jack Lloyd, 2001 Peter J Jones, 2004-2007 Justin Karneges, 2004 Vaclav Ovsik, 2005 Matthew Gregan, 2005-2006 Matt Johnston, 2006 Luca Piccarreta, 2007 Yves Jerschow, 2007-2008 FlexSecure GmbH, 2007-2008 Technische Universitat Darmstadt, 2007-2008 Falko Strenzke, 2007-2008 Martin Doering, 2007 Manuel Hartl, 2007 Christoph Ludwig, 2007 Patrick Sona, 2010 Olivier de Gaalon\"\n\t],\n\t[\n\t\t\"rapidjson\",\n\t\t\"2011 Milo Yip\"\n\t],\n\t[\n\t\t\"libcurl\",\n\t\t\"Copyright (c) 1996 - 2012, Daniel Stenberg\"\n\t],\n\t[\n\t\t\"GameSpy\",\n\t\t\"2009 GameSpy Industries, Inc.\"\n\t],\n\t[\n\t\t\"Theora\",\n\t\t\"2002-2009 by the Xiph.Org Foundation http://www.xiph.org/\"\n\t],\n\t[\n\t\t\"OggVorbis\",\n\t\t\"1994-2002 by the Xiph.Org Foundation http://www.xiph.org/\"\n\t],\n\t[\n\t\t\"Intel JPEG Library\",\n\t\t\"1998 Intel Corporation\"\n\t],\n\t[\n\t\t\"Matrix Template Library\",\n\t\t\"2001-2005 The Trustees of Indiana University\"\n\t],\n\t[\n\t\t\"Matrix Template Library\",\n\t\t\"1998-2001 University of Notre Dame\"\n\t],\n\t[\n\t\t\"Speex\",\n\t\t\"2002-2006 Jean-Marc Valin\"\n\t],\n\t[\n\t\t\"LZO Professional\",\n\t\t\"1996-2011 Markus Franz Xaver Johannes Oberhumer\"\n\t],\n\t[\n\t\t\"NVIDIA FXAA by TIMOTHY LOTTES\",\n\t\t\"2010, 2011 NVIDIA CORPORATION\"\n\t],\n\t[\n\t\t\"Jimenez's MLAA\",\n\t\t\"2012 2011 by Jorge Jimenez, Belen Masia, Jose I. Echevarria, Fernando Navarro and Diego Gutierrez\"\n\t]\n]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/libraryCredits",
        "modifiers": []
    },
    "triggerammo": {
        "name": "triggerAmmo",
        "description": "Triggers a munition such as shells, bullets, missiles, rockets and bombs (*shotSubmunition/shotShell/shotBullet/shotMissile/shotRocket*) as if it did hit. If ammo uses submunition, then creation of submunition will be triggered.",
        "syntaxArray": [
            {
                "Syntax": "triggerAmmo munition",
                "Params": "munition: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntriggerAmmo bomb1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerAmmo",
        "modifiers": []
    },
    "commandfire": {
        "name": "commandFire",
        "description": "Order the given unit to fire on the given target (via the radio).\nIf the target is [objNull](https://community.bistudio.com/wiki/objNull), the unit is ordered to fire on its current target (set with [doTarget](https://community.bistudio.com/wiki/doTarget) or [commandTarget](https://community.bistudio.com/wiki/commandTarget)).",
        "syntaxArray": [
            {
                "Syntax": "unitName **commandFire** target",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ESoldier1 commandFire _WSoldier1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandFire",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "sliderposition": {
        "name": "sliderPosition",
        "description": "Returns current thumb position of [CT_SLIDER](https://community.bistudio.com/wiki/CT_SLIDER) or [CT_XSLIDER](https://community.bistudio.com/wiki/CT_XSLIDER) with given idc of topmost user [dialog](https://community.bistudio.com/wiki/dialog).",
        "syntaxArray": [
            {
                "Syntax": "**sliderPosition** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "**sliderPosition** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_slidepos1 = sliderPosition 105;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sliderPosition",
        "modifiers": []
    },
    "tvsetpicturerightcolor": {
        "name": "tvSetPictureRightColor",
        "description": "Sets color of the right picture on the tree view item defined by path",
        "syntaxArray": [
            {
                "Syntax": "tvSetPictureRightColor [idc, path, color]",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvSetPictureRightColor [path, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, color]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - path to tree view item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetPictureRightColor [101, [0], [1,0,1,1]];\n```\n",
            "\n```sqf\n_ctrl tvSetPictureRightColor [[0], [1,0,1,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureRightColor",
        "modifiers": []
    },
    "execvm": {
        "name": "execVM",
        "description": "Compiles and adds [SQF](https://community.bistudio.com/wiki/SQF_Syntax) [Script](https://community.bistudio.com/wiki/Script) to the [scheduler](https://community.bistudio.com/wiki/Scheduler) queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running execVM command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in [private](https://community.bistudio.com/wiki/private) variable _this. In Arma 3 the script handle is also passed to the script in _thisScript variable.\nIn order to understand execVM consider the following comparison:\n\n```sqf\nprivate _handle = _args execVM \"someFile.sqf\";\n// is practically identical to\nprivate _handle = _args spawn compile preprocessFileLineNumbers \"someFile.sqf\";\n```\n\nSo if you need multiple execution of the same file, you might want to store it in a function ([Functions Library](https://community.bistudio.com/wiki/Functions_Library_(Arma_3))), otherwise, for a single execution, execVM is a good choice.\n\nTo see what VM scripts are currently in the scheduler, use [diag_activeSQFScripts](https://community.bistudio.com/wiki/diag_activeSQFScripts) command.\n> ",
        "syntaxArray": [
            {
                "Syntax": "arguments execVM filename",
                "Params": "arguments: [Anything](https://community.bistudio.com/wiki/Anything) - arguments accessible as [_this](https://community.bistudio.com/wiki/Magic_Variables#this) in the script\n\nfilename: [String](https://community.bistudio.com/wiki/String) - file with sqf code (doesn't have to have .sqf extension, but not using standard extensions may cause problems later during binarisation)\n\n",
                "Return": "[Script](https://community.bistudio.com/wiki/Script) - script handle, can be used to determine (via [scriptDone](https://community.bistudio.com/wiki/scriptDone) (also via [isNull](https://community.bistudio.com/wiki/isNull) in Arma 3)) when the execVMed script has finished. In Arma 3, the handle is also available inside the execVMed script in _thisScript variable."
            },
            {
                "Syntax": "execVM filename",
                "Params": "filename: [String](https://community.bistudio.com/wiki/String) - file with sqf code (doesn't have to have .sqf extension, but not using standard extensions may cause problems later, during binarisation)\n\n",
                "Return": "[Script](https://community.bistudio.com/wiki/Script) - script handle, can be used to determine (via [scriptDone](https://community.bistudio.com/wiki/scriptDone) (also via [isNull](https://community.bistudio.com/wiki/isNull) in Arma 3)) when the execVMed script has finished. In Arma 3, the handle is also available inside the execVMed script in _thisScript variable."
            }
        ],
        "examples": [
            "\n```sqf\n_handle = execVM \"test.sqf\";\n```\n",
            "\n```sqf\n_handle = player execVM \"test.sqf\";\nwaitUntil { scriptDone _handle };\n```\n",
            "In Arma 3 this is also possible:\n\n```sqf\n_handle = execVM \"123.sqf\"; \nwaitUntil { isNull _handle };\n```\n",
            "\n```sqf\n[4] execVM \"showDamage.sqf\";\n// showDamage.sqf\nprivate _damage = _this select 0;\nhint format [\"%1\", _damage];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/execVM",
        "modifiers": []
    },
    "compilescript": {
        "name": "compileScript",
        "description": "This command is an alias for [compile](https://community.bistudio.com/wiki/compile)(Final) (prefixHeader + [preprocessFileLineNumbers](https://community.bistudio.com/wiki/preprocessFileLineNumbers) path). See description of [preprocessFileLineNumbers](https://community.bistudio.com/wiki/preprocessFileLineNumbers) for more details.",
        "syntaxArray": [
            {
                "Syntax": "compileScript [path, final, prefixHeader]",
                "Params": "path: [String](https://community.bistudio.com/wiki/String) - Path to script file\n\nfinal: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) Compile final, see [compileFinal](https://community.bistudio.com/wiki/compileFinal)\n\nprefixHeader: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"\") Value added at the beginning of the file\n\n",
                "Return": "[Code](https://community.bistudio.com/wiki/Code)"
            }
        ],
        "examples": [
            "\n```sqf\ncompileScript [\"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\"]; \n// has the same functionality as \ncompile preprocessFileLineNumbers \"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/compileScript",
        "modifiers": []
    },
    "createsimpleobject": {
        "name": "createSimpleObject",
        "description": "Create object with given shape defined as path to .p3d model. Supported [LODs](https://community.bistudio.com/wiki/LOD) include [Geometry](https://community.bistudio.com/wiki/LOD#Geometry), [Fire Geometry](https://community.bistudio.com/wiki/LOD#Fire_Geometry), [Roadway](https://community.bistudio.com/wiki/LOD#Roadway), [View Geometry](https://community.bistudio.com/wiki/LOD#ViewGeometry) and [ShadowVolume](https://community.bistudio.com/wiki/LOD#ShadowVolume). Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.\n\nGiven the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally. Some of the model examples could be found here: [createSimpleObject/objects](https://community.bistudio.com/wiki/createSimpleObject/objects). For Livonia furniture see: [Arma 3 Livonia Props](https://community.bistudio.com/wiki/Arma_3_Livonia_Props).\n\n\nGuide: [Arma 3: Simple Objects](https://community.bistudio.com/wiki/Arma_3:_Simple_Objects)\n\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**createSimpleObject** [shapeName, positionWorld, local]",
                "Params": "[shapeName, positionWorld, local]: [Array](https://community.bistudio.com/wiki/Array)\n\nshapeName: [String](https://community.bistudio.com/wiki/String) - Path to the 3d model (can be obtained with [getModelInfo](https://community.bistudio.com/wiki/getModelInfo) command)\n\npositionWorld: [Array](https://community.bistudio.com/wiki/Array) - placement position in format [PositionWorld](https://community.bistudio.com/wiki/PositionWorld)\n\nlocal (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to create local instance only. Default: [false](https://community.bistudio.com/wiki/false) (since Arma 3 v1.96)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - Created simple object"
            },
            {
                "Syntax": "**createSimpleObject** [className, positionASL, local]",
                "Params": "[className, positionASL, local] : [Array](https://community.bistudio.com/wiki/Array)\n\nclassName: [String](https://community.bistudio.com/wiki/String) - [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles) config class name\n\npositionASL: [Array](https://community.bistudio.com/wiki/Array) - placement position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\nlocal (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to create local instance only. Default: [false](https://community.bistudio.com/wiki/false) (since Arma 3 v1.96)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - Created simple object"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = player getRelPos [10, 0];\n_tank = createSimpleObject [\"a3\\armor_f_beta\\apc_tracked_01\\apc_tracked_01_rcws_f.p3d\", _pos];\n_tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0])));\n\n_tank hideSelection [\"zasleh\", true];\n_tank hideSelection [\"zasleh2\", true];\n_tank hideSelection [\"clan\", true];\n \n_tank animate [\"Wheel_podkoloL3\", 0.5, true];\n_tank animate [\"Wheel_podkoloL6\", 0.5, true];\n```\n",
            "\n```sqf\n_pos = player getRelPos [10, 0]; \n_tank = createSimpleObject [\"B_APC_Tracked_01_CRV_F\", AGLtoASL _pos]; \n_tank setObjectTexture [0, \"#(rgb,8,8,3)color(0,1,0,0.01)\"]; \n\n_tank hideSelection [\"zasleh\", true]; \n_tank hideSelection [\"zasleh2\", true]; \n_tank hideSelection [\"clan\", true]; \n  \n_tank animate [\"Wheel_podkoloL3\", 0.5, true]; \n_tank animate [\"Wheel_podkoloL6\", 0.5, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createSimpleObject",
        "modifiers": [
            "Global effect"
        ]
    },
    "configproperties": {
        "name": "configProperties",
        "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is [true](https://community.bistudio.com/wiki/true) the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative [count](https://community.bistudio.com/wiki/count) command implementation). Condition has to return [true](https://community.bistudio.com/wiki/true) in order for the looked at property to be added to the resulting array. A bit slower than [configClasses](https://community.bistudio.com/wiki/configClasses) but allows to access inherited entries.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**configProperties** [config, condition, inherit]",
                "Params": "[config, condition, inherit]: [Array](https://community.bistudio.com/wiki/Array)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config) - config entry to search\n\ncondition (Optional): [String](https://community.bistudio.com/wiki/String) - expression, which if returns [true](https://community.bistudio.com/wiki/true), adds current property to result. Default: \"[true](https://community.bistudio.com/wiki/true)\"\n\ninherit (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - include inherited properties. Default: [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of [Configs](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\n_configs = configProperties [configFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\"];\n```\n",
            "\n```sqf\n_configs = configProperties [configFile >> \"RscText\", \"true\", true];\n```\n",
            "Get all hitpoints of a truck:\n```sqf\n_hitPoints = [];\n_hitPointsCfgs = configProperties [\n\tconfigFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\" >> \"HitPoints\", \n\t\"true\", \n\ttrue\n];\nhint str _hitPointsCfgs;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configProperties",
        "modifiers": []
    },
    "controlsgroupctrl": {
        "name": "controlsGroupCtrl",
        "description": "Returns a child control with specified idc from a controls group",
        "syntaxArray": [
            {
                "Syntax": "ctrlgrp controlsGroupCtrl idc",
                "Params": "ctrlgrp: [Control](https://community.bistudio.com/wiki/Control)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Control](https://community.bistudio.com/wiki/Control)"
            }
        ],
        "examples": [
            "\n```sqf\n_control = _controlsGroup controlsGroupCtrl 101;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/controlsGroupCtrl",
        "modifiers": []
    },
    "setpilotlight": {
        "name": "setPilotLight",
        "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be [local](https://community.bistudio.com/wiki/local), for global variant use [Arma 3 Actions](https://community.bistudio.com/wiki/Arma_3_Actions) \"[LightOn](https://community.bistudio.com/wiki/Arma_3_Actions#LightOn)\"/\"[LightOff](https://community.bistudio.com/wiki/Arma_3_Actions#LightOff)\"",
        "syntaxArray": [
            {
                "Syntax": "vehicle setPilotLight set",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nset: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncar setPilotLight true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPilotLight",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "infopanel": {
        "name": "infoPanel",
        "description": "Returns information about what is currently displayed on given player's info panel.\nReturns [\"EmptyDisplay\",\"EmptyDisplayComponent\"] when no panel is open.",
        "syntaxArray": [
            {
                "Syntax": "infoPanel infoPanelId",
                "Params": "infoPanelId: [String](https://community.bistudio.com/wiki/String) - info panel classname, or \"left\" or \"right\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [componentClass, componentType]"
            }
        ],
        "examples": [
            "\n```sqf\ninfoPanel \"left\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/infoPanel",
        "modifiers": []
    },
    "islocalized": {
        "name": "isLocalized",
        "description": "Checks whether given *stringName* is [localized](https://community.bistudio.com/wiki/localize).",
        "syntaxArray": [
            {
                "Syntax": "**isLocalized** stringName",
                "Params": "stringName: [String](https://community.bistudio.com/wiki/String) - String which leads to localisation. Casing does not matter. Since Arma 3 v2.04 a string starting with \"$\" is supported as well\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isLocalized \"STR_USRACT_ADJUST\") then \n{\n\thint localize \"STR_USRACT_ADJUST\";\n} \nelse \n{\n\thint \"STR_USRACT_ADJUST\";\n\tdiag_log \"ToDo: STR_USRACT_ADJUST is not localized\";\n};\n```\n",
            "\n```sqf\nisLocalized \"$STR_USRACT_ADJUST\"; // Since Arma v2.04\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isLocalized",
        "modifiers": []
    },
    "currentweapon": {
        "name": "currentWeapon",
        "description": "Return the name of the currently selected weapon (on the primary turret for vehicles).",
        "syntaxArray": [
            {
                "Syntax": "**currentWeapon** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_weaponClass = currentWeapon (vehicle player);//Example: \"M16A2GL\"\n```\n",
            "\n```sqf\n_weaponClass = currentWeapon player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentWeapon",
        "modifiers": []
    },
    "getallsoundcontrollers": {
        "name": "getAllSoundControllers",
        "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.",
        "syntaxArray": [
            {
                "Syntax": "**getAllSoundControllers** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - must be a vehicle (does not work on soldiers)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [[\"controllerA\", valueA], [\"controllerB\", valueB], ...]"
            }
        ],
        "examples": [
            "\n```sqf\ngetAllSoundControllers vehicle player;\n```\n\nResult: [[\"rpm\",0],[\"randomizer\",0.874332],[\"speed\",0],[\"thrust\",0],...]]\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAllSoundControllers",
        "modifiers": []
    },
    "menusetvalue": {
        "name": "menuSetValue",
        "description": "Sets new value into menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuSetValue [idc, path, value]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetValue [path, value]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetValue [[0, 1], 1337];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetValue",
        "modifiers": []
    },
    "moveto": {
        "name": "moveTo",
        "description": "Low level command to person to move to given position.",
        "syntaxArray": [
            {
                "Syntax": "unit moveTo position",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [PositionATL](https://community.bistudio.com/wiki/PositionATL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myAgent moveTo getPosATL player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveTo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "throw": {
        "name": "throw",
        "description": "Throws an exception. The exception is processed by first [catch](https://community.bistudio.com/wiki/catch) block. This command will terminate further execution of the code.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "throw expression",
                "Params": "expression: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "if (condition) throw exception *Since Arma 3 v1.53.133045*",
                "Params": "if (condition): [If Type](https://community.bistudio.com/wiki/If_Type)  - if (condition) returns [true](https://community.bistudio.com/wiki/true), \"exception\" is thrown\n\nexception: [Anything](https://community.bistudio.com/wiki/Anything) - value that will be put into *_exception* variable inside [catch](https://community.bistudio.com/wiki/catch) block\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntry {throw \"invalid argument\"} catch {hint str _exception};\n```\n",
            "*since Arma 3 v1.53.133045*: \n```sqf\n123 try {if (_this != 123) throw \"invalid argument\"} catch {hint str _exception};\n```\n",
            "The correct usage of shorthand alt syntax: \n```sqf\ntry {\n\tif (a > b) throw \"Error: some error\"; // OK\n\t// The command argument is static\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) throw (call _someFunc); // NOT OK\n\t// The command argument is dynamic\n\t// _someFunc is called first to get the value regardless of (a > b) outcome\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) then {throw (call _someFunc)}; /// OK\n\t// The command argument is dynamic\n\t// _someFunc is only called when (a > b) is true\n} catch {\n\thint str _exception;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/throw",
        "modifiers": []
    },
    "listremotetargets": {
        "name": "listRemoteTargets",
        "description": "Return list of datalink targets and time for which they will be/were known.",
        "syntaxArray": [
            {
                "Syntax": "**listRemoteTargets** side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side) - Side\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [ [Object](https://community.bistudio.com/wiki/Object), [Number](https://community.bistudio.com/wiki/Number) ] pairs, corresponding to: [remote target, last detected time]"
            }
        ],
        "examples": [
            "\n```sqf\nlistRemoteTargets opfor;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/listRemoteTargets",
        "modifiers": []
    },
    "tvpictureright": {
        "name": "tvPictureRight",
        "description": "Returns the right picture of a [CT_TREE](https://community.bistudio.com/wiki/CT_TREE) on given path.",
        "syntaxArray": [
            {
                "Syntax": "tvPictureRight [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Path to picture"
            },
            {
                "Syntax": "ctrl tvPictureRight path",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Path to picture"
            }
        ],
        "examples": [
            "\n```sqf\n_path= _controlTV tvPictureRight [0, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvPictureRight",
        "modifiers": []
    },
    "time": {
        "name": "time",
        "description": "Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use [serverTime](https://community.bistudio.com/wiki/serverTime).",
        "syntaxArray": [
            {
                "Syntax": "time",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _future = time + 30;\nwaitUntil { time >= _future };  // continue after 30 seconds\n```\n",
            "Wait until mission fully started:\n\n```sqf\nwaitUntil { time > 0 };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/time",
        "modifiers": []
    },
    "addscore": {
        "name": "addScore",
        "description": "Adds a number to the score of a unit. Negative values will remove from the score.",
        "syntaxArray": [
            {
                "Syntax": "unit **addScore** score",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nscore: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit addScore 10;\n```\n",
            "\n```sqf\nunit addScore -1337;// Reduce the unit's score by 1337 points\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addScore",
        "modifiers": [
            "Global argument",
            "Global effect",
            "Server execution"
        ]
    },
    "getcalculateplayervisibilitybyfriendly": {
        "name": "getCalculatePlayerVisibilityByFriendly",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if visibility of [player](https://community.bistudio.com/wiki/player) by friendly units is calculated.",
        "syntaxArray": [
            {
                "Syntax": "**getCalculatePlayerVisibilityByFriendly**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) visibility is calculated, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\n_isCalculated = getCalculatePlayerVisibilityByFriendly;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCalculatePlayerVisibilityByFriendly",
        "modifiers": []
    },
    "setunitrank": {
        "name": "setUnitRank",
        "description": "Sets rank of given unit.\n\nPossible rank values, and the associated [rating](https://community.bistudio.com/wiki/rating) that is automatically given:\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "unitName setUnitRank rank",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nrank: [String](https://community.bistudio.com/wiki/String) - as above\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setUnitRank \"COLONEL\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitRank",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "ctrlmodel": {
        "name": "ctrlModel",
        "description": "Returns model used in 3D-[Dialog](https://community.bistudio.com/wiki/Arma:_GUI_Configuration).",
        "syntaxArray": [
            {
                "Syntax": "**ctrlModel** control",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - model path"
            }
        ],
        "examples": [
            "\n```sqf\n_model = ctrlModel _control3D;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlModel",
        "modifiers": []
    },
    "lockidentity": {
        "name": "lockIdentity",
        "description": "Locks the identity of a person. This will disable default identity.",
        "syntaxArray": [
            {
                "Syntax": "**lockIdentity** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true), if it was applied"
            }
        ],
        "examples": [
            "\n```sqf\n_success = lockIdentity player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockIdentity",
        "modifiers": []
    },
    "turretunit": {
        "name": "turretUnit",
        "description": "Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.58. To find turret path of known unit see [unitTurret](https://community.bistudio.com/wiki/unitTurret)",
        "syntaxArray": [
            {
                "Syntax": "vehicle **turretUnit** turretpath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretpath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle turretUnit _thisTurret;\n```\n",
            "\n```sqf\nvehicle player turretUnit [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/turretUnit",
        "modifiers": []
    },
    "addweaponcargo": {
        "name": "addWeaponCargo",
        "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicleName addWeaponCargo [weaponName, count]",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object) - vehicle to add the weapons to\n\n[weaponName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String) - weapon name. See [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - number of weapons to add.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_truck addWeaponCargo [\"M16\", 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponCargo",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "set3denlinesvisible": {
        "name": "set3DENLinesVisible",
        "description": "Toggle visibility of [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) lines.",
        "syntaxArray": [
            {
                "Syntax": "**set3DENLinesVisible** [showMap, showScene]",
                "Params": "showScene: [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the scene\n\nshowMap : [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the map\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENLinesVisible [false, false ];\n```\n\nHide all lines"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENLinesVisible",
        "modifiers": []
    },
    "positioncameratoworld": {
        "name": "positionCameraToWorld",
        "description": "Transforms position from camera coordinate space to world coordinate space. \nCamera axes are relative to camera orientation. x axis goes from left of the camera to right of the camera, z axis goes from underneath the camera to above the camera and y axis goes from back of the camera to where the camera is looking.",
        "syntaxArray": [
            {
                "Syntax": "**positionCameraToWorld** cameraPos",
                "Params": "cameraPos: [PositionRelative](https://community.bistudio.com/wiki/PositionRelative) - Relative camera position, format [x, z, y]\n> \n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Camera world position, format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\n_worldPos = positionCameraToWorld _cameraPos;\n```\n",
            "Example demonstrating reversed y and z:\n```sqf\nplayer setDir 0; //assuming player is looking forward\nhint str [positionCameraToWorld [0,0,0], positionCameraToWorld [0,0,1]];\n//[[2481.35,5671.21,1.51395],[2481.35,5672.21,1.46955]]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/positionCameraToWorld",
        "modifiers": []
    },
    "onbriefinggroup": {
        "name": "onBriefingGroup",
        "description": "Select a sound declared in the [Description.ext](https://community.bistudio.com/wiki/Description.ext#Sound) of the mission to be played the first time the [Group tab](https://community.bistudio.com/wiki/Briefing.html#Group) is selected in the [briefing](https://community.bistudio.com/wiki/Briefing.html).",
        "syntaxArray": [
            {
                "Syntax": "**onBriefingGroup** soundName",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonBriefingGroup \"GroupVoiceOver\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onBriefingGroup",
        "modifiers": []
    },
    "setaperturenew": {
        "name": "setApertureNew",
        "description": "Sets custom camera aperture when HDR is enabled ([-1] to do it automatically). `minimum` should be <= `standard` and <= `maximum`.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**setApertureNew** [minimum, standard, maximum, luminance]",
                "Params": "minimum: [Number](https://community.bistudio.com/wiki/Number) - Minimum aperture\n\nstandard: [Number](https://community.bistudio.com/wiki/Number) - Standard aperture\n\nmaximum: [Number](https://community.bistudio.com/wiki/Number) - Maximum aperture\n\nluminance: [Number](https://community.bistudio.com/wiki/Number) - Standard luminance\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetApertureNew [0.3, 0.2, 0.1, 1];\n```\n",
            "Simulate eye adjustment at night:\n\n```sqf\nsetDate [2016, 8, 10, 4, 0];\nsetApertureNew [2, 8, 14, .9];\n```\n",
            "Narrower range for a subtler effect:\n\n```sqf\nsetDate [2016, 8, 10, 4, 0];\nsetApertureNew [2, 5, 9, .8];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setApertureNew",
        "modifiers": [
            "Local effect"
        ]
    },
    "netobjnull": {
        "name": "netObjNull",
        "description": "A non-existing network object. > ",
        "syntaxArray": [
            {
                "Syntax": "netObjNull",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - always returns [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/netObjNull",
        "modifiers": []
    },
    "tostring": {
        "name": "toString",
        "description": "Converts the supplied [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) into a [String](https://community.bistudio.com/wiki/String). \nThe numbers in the array to be converted are the decimal [Unicode](https://community.bistudio.comhttp://en.wikipedia.org/wiki/Unicode) representations of characters.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**toString** array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint toString [65,97,338];\n```\n returns \"AaŒ\"",
            "\n```sqf\n[\"test\",\"test\"] joinString toString [12345] splitString toString [12345]; // [\"test\",\"test\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toString",
        "modifiers": []
    },
    "getdlcassetsusagebyname": {
        "name": "getDLCAssetsUsageByName",
        "description": "Returns an array with the session and global time the asset has been used.",
        "syntaxArray": [
            {
                "Syntax": "getDLCAssetsUsageByName assetName",
                "Params": "assetName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array in format: [sessionTime, totalTime]."
            }
        ],
        "examples": [
            "\n```sqf\n_dlcAssetUsage = getDLCAssetsUsageByName \"C_IDAP_Heli_Transport_02_F\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDLCAssetsUsageByName",
        "modifiers": []
    },
    "isuavconnected": {
        "name": "isUAVConnected",
        "description": "Returns true if UAV is connected to some terminal.",
        "syntaxArray": [
            {
                "Syntax": "isUAVConnected uav",
                "Params": "uav: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isConnected = isUAVConnected cursorTarget;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isUAVConnected",
        "modifiers": []
    },
    "lnbsort": {
        "name": "lnbSort",
        "description": "Sorts given multicolumn listbox by [lnbText](https://community.bistudio.com/wiki/lnbText) in given column in ascending or descending order.",
        "syntaxArray": [
            {
                "Syntax": "**lnbSort** [idc, column, reversed]",
                "Params": "[idc, column, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false): descending / [true](https://community.bistudio.com/wiki/true): ascending. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lnbSort** [column, reversed]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[column, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false): descending / [true](https://community.bistudio.com/wiki/true): ascending. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSort [1800, 1, false];\n```\n",
            "\n```sqf\n_ctl lnbSort [1, true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSort",
        "modifiers": []
    },
    "tvsetselectcolor": {
        "name": "tvSetSelectColor",
        "description": "Sets the select color of given path.",
        "syntaxArray": [
            {
                "Syntax": "ctrl tvSetSelectColor [path, color]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path of the item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvSetSelectColor [[0, 0], [1,1,1,0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetSelectColor",
        "modifiers": []
    },
    "lbsetpicturecolorselected": {
        "name": "lbSetPictureColorSelected",
        "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). Color which consists from only zeros means disable this override.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureColorSelected** [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureColorSelected** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_ctrl lbSetPictureColorSelected [0, [1, 1, 1, 1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureColorSelected",
        "modifiers": []
    },
    "removeallcuratoraddons": {
        "name": "removeAllCuratorAddons",
        "description": "Restrict access to all addons for given curator.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllCuratorAddons** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllCuratorAddons myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllCuratorAddons",
        "modifiers": [
            "Server execution"
        ]
    },
    "commander": {
        "name": "commander",
        "description": "In Operation Flashpoint it returns the commander of a vehicle. Since Armed Assault it returns the primary observer. The commander of a vehicle can be found with [effectiveCommander](https://community.bistudio.com/wiki/effectiveCommander).",
        "syntaxArray": [
            {
                "Syntax": "**commander** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - Vehicle\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - The unit sitting in the commander place is returned. If vehicle is not a vehicle but a person, the person is returned."
            }
        ],
        "examples": [
            "\n```sqf\nmoveOut commander _tank;\n```\n",
            "Detect if player is in commander turret of a vehicle:\n```sqf\n_isVehicleCommander = player isEqualTo commander objectParent player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commander",
        "modifiers": [
            "Global argument"
        ]
    },
    "hintc": {
        "name": "hintC",
        "description": "Displays attractive hint in the center of the screen. Player control is taken away until \"Continue\" is pressed.\n\n> \nAfter user confirmation, the content of the hintC is repeated again in a normal [hint](https://community.bistudio.com/wiki/hint). This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
        "syntaxArray": [
            {
                "Syntax": "hintC content",
                "Params": "content: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "title hintC content",
                "Params": "title: [String](https://community.bistudio.com/wiki/String) - message title\n\ncontent: [String](https://community.bistudio.com/wiki/String), [Structured Text](https://community.bistudio.com/wiki/Structured_Text), [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array) of [Structured Text](https://community.bistudio.com/wiki/Structured_Text)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhintC \"Press W to move forward\";\n```\n",
            "Same as the above in Arma 3 but without second [hint](https://community.bistudio.com/wiki/hint) displayed:\n```sqf\nhintC \"Press W to move forward\";\nhintC_EH = findDisplay 57 displayAddEventHandler [\"unload\", {\n\t0 = _this spawn {\n\t\t_this select 0 displayRemoveEventHandler [\"unload\", hintC_EH];\n\t\thintSilent \"\";\n\t};\n}];\n```\n\n\n[](https://community.bistudio.com/wiki/File:HintC.jpg)",
            "\n```sqf\n\"Instructions\" hintC [\n\t\"Press W to move forward.\",\n\t\"Press S to move backwards.\",\n\t\"Use the mouse to turn right or left.\",\n\t\"Press V for weapon sights.\"\n];\n```\n",
            "Same as the above in Arma 3 but without second [hint](https://community.bistudio.com/wiki/hint) displayed: \n```sqf\n\"Instructions\" hintC [\n\t\"Press W to move forward.\",\n\t\"Press S to move backwards.\",\n\t\"Use the mouse to turn right or left.\",\n\t\"Press V for weapon sights.\"\n];\nhintC_arr_EH = findDisplay 72 displayAddEventHandler [\"unload\", {\n\t_this spawn {\n\t\t_this select 0 displayRemoveEventHandler [\"unload\", hintC_arr_EH];\n\t\thintSilent \"\";\n\t};\n}];\n```\n \n\n [](https://community.bistudio.com/wiki/File:HintC_array.jpg)",
            "\n```sqf\nprivate _separator1 = parseText \"<br />------------------------<br />\"; \nprivate _image = \"\\ca\\ui\\textures\\aus_flag.paa\"; \nprivate _txt = composeText [image _image, \"Heading Text\", _separator1, \"Content\"]; \n\"\" hintC _txt;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hintC",
        "modifiers": [
            "Local effect"
        ]
    },
    "shownradio": {
        "name": "shownRadio",
        "description": "Check if player has Radio enabled.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**shownRadio**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (shownRadio) then {hint \"You have Radio enabled.\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownRadio",
        "modifiers": []
    },
    "synchronizetrigger": {
        "name": "synchronizeTrigger",
        "description": "[Synchronizes](https://community.bistudio.com/wiki/ArmA:_Mission_Editor#Synchronize_Mode_.28F5.29) the trigger with zero or more waypoints.",
        "syntaxArray": [
            {
                "Syntax": "trigger **synchronizeTrigger** [waypoint1, waypoint2, ...]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - trigger to synchronize\n\n[waypoint1, waypoint2, ...]: [Array](https://community.bistudio.com/wiki/Array) of waypoints to synchronize with trigger. Array can be empty to unset.\n\nwaypoint1: [Waypoint](https://community.bistudio.com/wiki/Waypoint) - first waypoint\n\nwaypoint2: [Waypoint](https://community.bistudio.com/wiki/Waypoint) - second waypoint\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger synchronizeTrigger []\n```\n",
            "\n```sqf\n_trigger synchronizeTrigger [_waypoint1]\n```\n",
            "\n```sqf\n_trigger synchronizeTrigger [_waypoint1, [_group5, 7], _waypoint3]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizeTrigger",
        "modifiers": []
    },
    "removedrawlinks": {
        "name": "removeDrawLinks",
        "description": "Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.  \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **removeDrawLinks** [from,param type]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[from,param type]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/removeDrawLinks",
        "modifiers": []
    },
    "periscopeelevation": {
        "name": "periscopeElevation",
        "description": "Returns current periscope elevation value, see also [elevatePeriscope](https://community.bistudio.com/wiki/elevatePeriscope).",
        "syntaxArray": [
            {
                "Syntax": "vehicle periscopeElevation turretPath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle with periscope tech\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - turret path\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [elevation, locked], where:\n\n* elevation: [Number](https://community.bistudio.com/wiki/Number) - current periscope elevation value. -1 in case of an invalid turret\n\n* locked: [Boolean](https://community.bistudio.com/wiki/Boolean) - whether or not user override is blocked"
            }
        ],
        "examples": [
            "\n```sqf\n_eddie periscopeElevation [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/periscopeElevation",
        "modifiers": []
    },
    "createmissiondisplay": {
        "name": "createMissionDisplay",
        "description": "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\".",
        "syntaxArray": [
            {
                "Syntax": "[Display](https://community.bistudio.com/wiki/Display) = display **createMissionDisplay** missionRootDirectoryString",
                "Params": "display : [Display](https://community.bistudio.com/wiki/Display)\n\nstring: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Display](https://community.bistudio.com/wiki/Display)"
            },
            {
                "Syntax": "[Display](https://community.bistudio.com/wiki/Display) = display **createMissionDisplay** [missionRootDirectoryString,cfgMissionsClass]",
                "Params": "display : [Display](https://community.bistudio.com/wiki/Display)\n\nmissionRootDirectoryString: [String](https://community.bistudio.com/wiki/String) - root direction from \\Arma 3\\Missions\\ROOT\n\ncfgMissionsClass: [String](https://community.bistudio.com/wiki/String) - cfgMissions class to use\n\n",
                "Return": "[For Type](https://community.bistudio.com/wiki/For_Type)"
            }
        ],
        "examples": [
            "\n```sqf\n_ChildDisplay = _Rootdisplay createMissionDisplay \"Tutorial\";\n```\n",
            "In Arma 3 this would create scenarios UI \n```sqf\nfindDisplay 46 createMissionDisplay \"\";\n```\n",
            "Other options for Arma 3:\n\n* (findDisplay 46) createMissionDisplay [\"\",\"Cutscenes\"];\n\n* (findDisplay 46) createMissionDisplay [\"\",\"Campaigns\"];\n\n* (findDisplay 46) createMissionDisplay [\"\",\"MPMissions\"];\n\n* (findDisplay 46) createMissionDisplay [\"\",\"Challenges\"];\n\n* (findDisplay 46) createMissionDisplay [\"\",\"Showcases\"];"
        ],
        "Url": "https://community.bistudio.com/wiki/createMissionDisplay",
        "modifiers": []
    },
    "setterraingrid": {
        "name": "setTerrainGrid",
        "description": "Sets the desired [ terrain resolution](https://community.bistudio.com/wiki/getTerrainGrid) in meters.",
        "syntaxArray": [
            {
                "Syntax": "**setTerrainGrid**",
                "Params": "grid: [Number](https://community.bistudio.com/wiki/Number) - For default landscapes the supported resolutions are: \n\n\n* **50** - smoothest, less lag\n\n* **25** - default in multiplayer\n\n* **12.5** - default in single player\n\n* **6.25**\n\n* **3.125** - bumpiest, higher lag\n> \n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetTerrainGrid 12.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTerrainGrid",
        "modifiers": [
            "Local effect"
        ]
    },
    "switchableunits": {
        "name": "switchableUnits",
        "description": "Returns a list of playable units available for switching to.\nCommand is relative to the client on which it is executed and will only show playable units for the same [side](https://community.bistudio.com/wiki/side) as [player](https://community.bistudio.com/wiki/player)'s [group](https://community.bistudio.com/wiki/group) + [player](https://community.bistudio.com/wiki/player) himself,\nunless in singleplayer where playable units from all sides will be accessible via this command.\nDead and player-controlled units are automatically removed from the resulting array.\n> \nIn order to get all *playable* units regardless of their [side](https://community.bistudio.com/wiki/side), see the [playableUnits](https://community.bistudio.com/wiki/playableUnits) command.",
        "syntaxArray": [
            {
                "Syntax": "switchableUnits",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "_availableUnits = switchableUnits;"
        ],
        "Url": "https://community.bistudio.com/wiki/switchableUnits",
        "modifiers": [
            "Local effect"
        ]
    },
    "rotorsforcesrtd": {
        "name": "rotorsForcesRTD",
        "description": "Returns force produced by rotors.> ",
        "syntaxArray": [
            {
                "Syntax": "rotorsForcesRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_rotorForces = rotorsForcesRTD _taru// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rotorsForcesRTD",
        "modifiers": []
    },
    "vectordiff": {
        "name": "vectorDiff",
        "description": "Subtracts one 3D vector from another. (vector1 - vector2)",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorDiff vector2",
                "Params": "vector1: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str (velocity car vectorDiff velocity bike);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorDiff",
        "modifiers": []
    },
    "vehicle": {
        "name": "vehicle",
        "description": "Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use [objectParent](https://community.bistudio.com/wiki/objectParent)",
        "syntaxArray": [
            {
                "Syntax": "**vehicle** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "SQS \n```sqf\n? vehicle player != player : hint \"Player is in a vehicle\"\n```\n",
            "SQF\n```sqf\nif (vehicle player != player) then {hint \"Player is in a vehicle\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicle",
        "modifiers": [
            "Global argument"
        ]
    },
    "taskcompleted": {
        "name": "taskCompleted",
        "description": "Return if task is completed. (state Succeeded, Failed or Canceled)",
        "syntaxArray": [
            {
                "Syntax": "**taskCompleted** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if task has been Succeeded, Failed or Canceled"
            }
        ],
        "examples": [
            "\n```sqf\n_task = createSimpleTask [\"task_1\"];  \n_done = taskCompleted _task;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskCompleted",
        "modifiers": []
    },
    "weaponsitemscargo": {
        "name": "weaponsItemsCargo",
        "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in [weaponsItems](https://community.bistudio.com/wiki/weaponsItems) format. If weapon has no magazine, an empty array [] is returned instead of magazine info. If the argument is a vehicle with weapons, vehicles cargo is searched, unlike with [weaponsItems](https://community.bistudio.com/wiki/weaponsItems) command, which will return vehicle's weapons instead. \n\n* Since Arma 3 v1.96 the returned array always contains secondary muzzle magazine info and consistent with [getUnitLoadout](https://community.bistudio.com/wiki/getUnitLoadout) format for weapon items.",
        "syntaxArray": [
            {
                "Syntax": "weaponsItemsCargo vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - see [weaponsItems](https://community.bistudio.com/wiki/weaponsItems)"
            }
        ],
        "examples": [
            "\n```sqf\nweaponsItemsCargo vehicle player;\n```\n",
            "\n```sqf\nweaponsItemsCargo _weaponholder;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponsItemsCargo",
        "modifiers": []
    },
    "cutrsc": {
        "name": "cutRsc",
        "description": "Display a resource defined in RscTitles of the mission's [Description.ext](https://community.bistudio.com/wiki/Description.ext), the campaign's description.ext or the global config.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**cutRsc** [class, effect, speed, showInMap]",
                "Params": "[class, effect, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - the class name of the resource. (\"Default\" will remove the current resource.)\n\neffect: [String](https://community.bistudio.com/wiki/String) - one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed (Optional, default -1): [Number](https://community.bistudio.com/wiki/Number) - Time in seconds to fade in resource.\n\nshowInMap (Optional, default [true](https://community.bistudio.com/wiki/true)): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "layer **cutRsc** [class, effect, speed, showInMap]",
                "Params": "layer: [Number](https://community.bistudio.com/wiki/Number) or [String](https://community.bistudio.com/wiki/String)\n\n* [Number](https://community.bistudio.com/wiki/Number) - layer number on which the effect is shown, where 0 is the back most. Layer number is rounded to the nearest integer and also cannot be negative. Layer 99.5 will be treated as layer 100\n\n* [String](https://community.bistudio.com/wiki/String) - layer name on which the effect is shown. Layer names are **CaSe SeNsItIvE**.\n\n[class, effect, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - the class name of the resource. (\"Default\" will remove the current resource.)\n\neffect: [String](https://community.bistudio.com/wiki/String) - one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) Time in seconds to fade in resource.\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncutRsc [\"binocular\", \"PLAIN\"];\ncutRsc [\"binocular\", \"PLAIN\", 2];\ncutRsc [\"binocular\", \"PLAIN\", 2, false];\n```\n",
            "\n```sqf\n2 cutRsc [\"binocular\", \"PLAIN\", 2];\n```\n",
            "\n```sqf\n_layer = \"layer1\" cutRsc [\"binocular\", \"PLAIN\", 2];\n```\n",
            "\n```sqf\n// Create IGUI display\n// Such display can be closed with closeDisplay command or by overwriting the same cut layer with another output.\n// Note that \"Unload\" EH for some reason does not work with such display.\n\"someLayer\" cutRsc [\"RscTitleDisplayEmpty\", \"PLAIN\"];\nprivate _display = uiNamespace getVariable \"RscTitleDisplayEmpty\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cutRsc",
        "modifiers": [
            "Local effect"
        ]
    },
    "initambientlife": {
        "name": "initAmbientLife",
        "description": "Initialises the ambient life on [local](https://community.bistudio.com/wiki/local) client from CfgWorlds >> worldName >> AmbientA3. Has no effect on dedicated server or headless client.",
        "syntaxArray": [
            {
                "Syntax": "**initAmbientLife**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ninitAmbientLife;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/initAmbientLife",
        "modifiers": [
            "Local effect"
        ]
    },
    "deletevehiclecrew": {
        "name": "deleteVehicleCrew",
        "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle deleteVehicleCrew unit",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_helicopter deleteVehicleCrew driver _helicopter;\n```\n",
            "\n```sqf\n{ _helicopter deleteVehicleCrew _x } forEach crew _helicopter; // deletes all crew\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteVehicleCrew",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "playersnumber": {
        "name": "playersNumber",
        "description": "Returns count of occupied role selection slots for given side. Players who claimed a slot in the lobby but did not start the mission are counted as well. If \n```sqf\ndisabledAI = 0;\n```\n in [description.ext](https://community.bistudio.com/wiki/description.ext#disabledAI) or *Enable AI* option is checked in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor), AI bots will be treated as valid players and will be counted too.",
        "syntaxArray": [
            {
                "Syntax": "playersNumber side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_west = playersNumber west;\n_east = playersNumber east;\n_civ = playersNumber civilian;\nhint format [\"West:%1 East:%2, Civ:%3\", _west, _east, _civ];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playersNumber",
        "modifiers": []
    },
    "knowsabout": {
        "name": "knowsAbout",
        "description": "Checks if a group or a side knows about target.\n\n* Enemy knowledge is instantly shared among the group units\n\n* Units in the same group always perfectly know about each others\n\n* AI knowledge cannot check beyond current [viewDistance](https://community.bistudio.com/wiki/viewDistance) and it resets to zero as soon as the target's distance is over itNote: neither fog nor daylight affect this behaviour\n\n* Losing sight of a target for more than 120 seconds resets its knowsAbout to zero as well\n\n* **Magic number** is the value that must be reached for a unit to shoot at an enemy (used by \"Detected by\" triggers as well):\n",
        "syntaxArray": [
            {
                "Syntax": "who knowsAbout target",
                "Params": "who: [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group) or [Side](https://community.bistudio.com/wiki/Side) - if a unit, unit's [group](https://community.bistudio.com/wiki/group) is considered; if a vehicle, vehicle commander's [group](https://community.bistudio.com/wiki/group) is used.\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) in the range of 0..4, where 4 is maximum knowledge."
            }
        ],
        "examples": [
            "\n```sqf\n_knowledge = player knowsAbout _target;\n```\n",
            "\n```sqf\n_knowledge = (group player) knowsAbout _target;\n```\n",
            "\n```sqf\n_knowledge = (side player) knowsAbout _target;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/knowsAbout",
        "modifiers": [
            "Local argument"
        ]
    },
    "setcuratorwaypointcost": {
        "name": "setCuratorWaypointCost",
        "description": "Sets cost of waypoints (used for placing, editing and deleting).",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **setCuratorWaypointCost** cost",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\ncost: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCUrator setCuratorWaypointCost 0.1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCuratorWaypointCost",
        "modifiers": [
            "Server execution"
        ]
    },
    "camsetpos": {
        "name": "camSetPos",
        "description": "Sets the position of the given camera or seagull (see [camCreate](https://community.bistudio.com/wiki/camCreate)). It is worth mentioning that camera position can also be set with [setPos](https://community.bistudio.com/wiki/setPos), in which case it would be instant. With camSetPos it is possible to make smooth position transition in time, defined with [camCommit](https://community.bistudio.com/wiki/camCommit), which is required in this case.",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetPos** position",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\" or \"seagull\"\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - [Position](https://community.bistudio.com/wiki/Position) to set the object to\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_cam camSetPos [2300,1000,130];\n_cam camCommit 10;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetPos",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "get": {
        "name": "get",
        "description": "Retrieves a value out of a [HashMap](https://community.bistudio.com/wiki/HashMap) after looking it up by its key.",
        "syntaxArray": [
            {
                "Syntax": "hashMap get key",
                "Params": "hashMap : [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nkey: [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _myValue = _myHashMap get \"a\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get",
        "modifiers": []
    },
    "waypointcombatmode": {
        "name": "waypointCombatMode",
        "description": "Gets the waypoint's combat mode setting.",
        "syntaxArray": [
            {
                "Syntax": "**waypointCombatMode** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - One of \"BLUE\", \"GREEN\", \"WHITE\", \"YELLOW\" and \"RED\" or \"ERROR\""
            }
        ],
        "examples": [
            "\n```sqf\nwaypointCombatMode [groupOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointCombatMode",
        "modifiers": []
    },
    "isshowing3dicons": {
        "name": "isShowing3DIcons",
        "description": "Returns true if the editor is set to draw 3D icons.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**isShowing3DIcons** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/isShowing3DIcons",
        "modifiers": []
    },
    "setmagazineturretammo": {
        "name": "setMagazineTurretAmmo",
        "description": "Sets ammo count to given amount for given turret.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[magazineClass, ammoCount, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/setMagazineTurretAmmo",
        "modifiers": []
    },
    "flagtexture": {
        "name": "flagTexture",
        "description": "Returns texture of the [local](https://community.bistudio.com/wiki/local) instance of the flag. A getter for [setFlagTexture](https://community.bistudio.com/wiki/setFlagTexture). It will not return flag textures applied using [forceFlagTexture](https://community.bistudio.com/wiki/forceFlagTexture), use [getForcedFlagTexture](https://community.bistudio.com/wiki/getForcedFlagTexture) for that.",
        "syntaxArray": [
            {
                "Syntax": "flagTexture flagCarrier",
                "Params": "flagCarrier: [Object](https://community.bistudio.com/wiki/Object) - flag or person\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_flagTexture = flagTexture _flag1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flagTexture",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "opendlcpage": {
        "name": "openDLCPage",
        "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)",
        "syntaxArray": [
            {
                "Syntax": "openDLCPage dlcID",
                "Params": "dlcID: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - result"
            }
        ],
        "examples": [
            "openDLCPage 288520"
        ],
        "Url": "https://community.bistudio.com/wiki/openDLCPage",
        "modifiers": []
    },
    "setleader": {
        "name": "setLeader",
        "description": "Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.",
        "syntaxArray": [
            {
                "Syntax": "team **setLeader** leader",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\nleader: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLeader",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "fademusic": {
        "name": "fadeMusic",
        "description": "Changes the current music volume to the given value smoothly within the given time. > ",
        "syntaxArray": [
            {
                "Syntax": "time **fadeMusic** volume",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)  - Fade interval in seconds\n\nvolume: [Number](https://community.bistudio.com/wiki/Number) - Music volume range from 0 to 5\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n5 fadeMusic 0; // fade current music volume to 0 in 5 sec\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fadeMusic",
        "modifiers": [
            "Local effect"
        ]
    },
    "set3denobjecttype": {
        "name": "set3DENObjectType",
        "description": "Sets the classname of one or more given Eden Editor [objects](https://community.bistudio.com/wiki/Eden_Editor:_Object). For Logic objects use [set3DENLogicType](https://community.bistudio.com/wiki/set3DENLogicType)",
        "syntaxArray": [
            {
                "Syntax": "objects **set3DENObjectType** classname",
                "Params": "objects: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\nclassname: [String](https://community.bistudio.com/wiki/String) - name of the cfgVehicles class\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[ get3DENMouseOver select 1] set3DENObjectType \"B_crew_F\";\n// turns object under cursor into a blufor crewman\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENObjectType",
        "modifiers": []
    },
    "setdriveonpath": {
        "name": "setDriveOnPath",
        "description": "Sets the path to follow for AI driver. Note that [unitReady](https://community.bistudio.com/wiki/unitReady) will return [true](https://community.bistudio.com/wiki/true) even if AI is still driving through the points.\nUsing any other *move* command (e.g \n```sqf\nvehicleName move getPos vehicleName\n```\n) or [doStop](https://community.bistudio.com/wiki/doStop) will stop the effect of this command.",
        "syntaxArray": [
            {
                "Syntax": "vehicleName setDriveOnPath points",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\npoints: [Array](https://community.bistudio.com/wiki/Array) - list of [Positions](https://community.bistudio.com/wiki/Position) to format [x,y,z] OR to format [x,y,z, speed], speed being **in m/s**.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyVehicle setDriveOnPath [getMarkerPos \"wp1\", getMarkerPos \"wp2\"];\n```\n",
            "\n```sqf\n_points = allMapMarkers apply { getMarkerPos _x; }; // getting all marker positions\n{ _x pushBack 15; } forEach _points; // setting speed\nmyVehicle setDriveOnPath _points;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDriveOnPath",
        "modifiers": []
    },
    "ppeffectenable": {
        "name": "ppEffectEnable",
        "description": "Enable / disable [Post process effects](https://community.bistudio.com/wiki/Post_process_effects)\n> ",
        "syntaxArray": [
            {
                "Syntax": "effect ppEffectEnable enable",
                "Params": "effect: [String](https://community.bistudio.com/wiki/String) - name of the effect\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "effect ppEffectEnable enable",
                "Params": "effect: [Number](https://community.bistudio.com/wiki/Number) - handle of the effect\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "effectArray ppEffectEnable enable",
                "Params": "effectArray: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) - array of effect handles\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"colorCorrections\" ppEffectEnable true;\n```\n",
            "\n```sqf\n_hndl ppEffectEnable true;\n```\n",
            "\n```sqf\n[_hndl1, _hndl2] ppEffectEnable true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectEnable",
        "modifiers": []
    },
    "cursortarget": {
        "name": "cursorTarget",
        "description": "Returns the target pointed at by the player (usually with cross-hairs). The target has to be known to the player to some degree ([knowsAbout](https://community.bistudio.com/wiki/knowsAbout) > 0). If target is completely unknown, command returns [objNull](https://community.bistudio.com/wiki/objNull).\nA valid target could belong to an enemy or a friendly side. Buildings are normally known to player and so are valid targets. Try [nearTargets](https://community.bistudio.com/wiki/nearTargets) to see what else is considered a target. While friendly targets are usually known to the player, enemy targets can be totally unknown, especially if \"auto-spotting\" (or sometimes called \"auto-reporting\") is switched off. To check if auto-spotting is enabled:[difficultyEnabled](https://community.bistudio.com/wiki/difficultyEnabled) \"autospot\"\ncursorTarget also returns locked target for the duration of the lock even if there is another target under the cursor. As soon as missile is fired, cursorTarget switches to current known target under cursor or [objNull](https://community.bistudio.com/wiki/objNull). Targeting (currently \"T\" in Arma 3) works regardless of the state of \"auto-spotting\".\nAdding a target to the known list could be done with [reveal](https://community.bistudio.com/wiki/reveal) command. When auto-spotting is enabled, zooming on the enemy target with cross-hairs usually reveals the target. As friendly targets are always known, zooming on friendly target could improve [knowsAbout](https://community.bistudio.com/wiki/knowsAbout) value.\n[Side relations](https://community.bistudio.com/wiki/Side_relations) can also influence target knowledge. For example [east](https://community.bistudio.com/wiki/east) target is unknown target for [civilian](https://community.bistudio.com/wiki/civilian), but making them friends with [setFriend](https://community.bistudio.com/wiki/setFriend) instantly improves [civilian](https://community.bistudio.com/wiki/civilian) knowledge of the [east](https://community.bistudio.com/wiki/east).",
        "syntaxArray": [
            {
                "Syntax": "**cursorTarget**",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nalive cursorTarget;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cursorTarget",
        "modifiers": []
    },
    "arrayintersect": {
        "name": "arrayIntersect",
        "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.",
        "syntaxArray": [
            {
                "Syntax": "array1 **arrayIntersect** array2",
                "Params": "array1: [Array](https://community.bistudio.com/wiki/Array)\n\narray2: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr1 = [1,2,3,4,5,2,3,4];\n_arr2 = [4,5,6,1,2,3,5,6];\nhint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]\n```\n",
            "\n```sqf\n_arr = [1,2,3,1,2,3,1,2,3,4,5];\nhint str (_arr arrayIntersect _arr); // [1,2,3,4,5]\n```\n",
            "Remove [nils](https://community.bistudio.com/wiki/nil):\n```sqf\n hint str ([1,2,nil,3] arrayIntersect [1,2,nil,3]); // [1,2,3]\n```\n",
            "Also works with array elements which are [equal](https://community.bistudio.com/wiki/isEqualTo):\n```sqf\n hint str ([[1],[2],[3]] arrayIntersect [[2],[3],[4]]); // [[2],[3]]\n```\n",
            "This command is case sensitive:\n```sqf\n[\"cAse\"] arrayIntersect [\"cAse\"]; // [\"cAse\"]\n[\"cAse\"] arrayIntersect [\"casE\"]; // []\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/arrayIntersect",
        "modifiers": []
    },
    "disableuavconnectability": {
        "name": "disableUAVConnectability",
        "description": "Disables unit's AV terminal(s) connecting to UAV.",
        "syntaxArray": [
            {
                "Syntax": "object disableUAVConnectability [uav, checkAllItems]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nuav: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ncheckAllItems: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable all terminals in unit's inventory, [false](https://community.bistudio.com/wiki/false) to only disable the currently assigned terminal.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyUnit disableUAVConnectability [myUav, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableUAVConnectability",
        "modifiers": [
            "Local effect"
        ]
    },
    "enableaimprecision": {
        "name": "enableAimPrecision",
        "description": "Set whether animation's aim precision affects weapon sway.",
        "syntaxArray": [
            {
                "Syntax": "unit enableAimPrecision enable",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) enable, [false](https://community.bistudio.com/wiki/false), disabled\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer enableAimPrecision false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAimPrecision",
        "modifiers": []
    },
    "isflatempty": {
        "name": "isFlatEmpty",
        "description": "Checks given position against given filter params. Filter includes checks for:\n\n* If there are any objects closer than given distance from given position (in 2D)\n\n* If the area around position is flat enough to match given gradient\n\n* If the given position is over water or land\n\n* If the given position is over shore line\nThe gradient seems to correlate with general hill steepness: 0.1 (10%) ~6°, 0.5 (50%) ~27°, 1.0 (100%) ~45°, etc.\n> ",
        "syntaxArray": [
            {
                "Syntax": "position isFlatEmpty [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n[minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]: [Array](https://community.bistudio.com/wiki/Array)\n\nminDistance: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) minimum (2D) distance from other objects (range 0..50). -1 to ignore proximity check\n\nmode: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) position check mode (**ALWAYS USE DEFAULT VALUE**)\n\nmaxGradient: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) maximum terrain steepness allowed. -1 to ignore\n\nmaxGradientRadius: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1) how far to extend gradient check\n\noverLandOrWater: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 0)\n\n* 0: position cannot be over water\n\n* 2: position cannot be over land\n\n* -1 to ignore\n\nshoreLine: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false))\n\n* [true](https://community.bistudio.com/wiki/true): position is over shoreline (< ~25 m from water)\n\n* [false](https://community.bistudio.com/wiki/false) to ignore\n\nignoreObject: [Object](https://community.bistudio.com/wiki/Object) - (Optional, default [objNull](https://community.bistudio.com/wiki/objNull)) object to ignore in proximity checks. [objNull](https://community.bistudio.com/wiki/objNull) to ignore\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Empty array [] if check failed or [PositionASL](https://community.bistudio.com/wiki/PositionASL) if succeded. Resulting position will be original [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) + [getTerrainHeightASL](https://community.bistudio.com/wiki/getTerrainHeightASL)"
            }
        ],
        "examples": [
            "Check if player position is over land:\n\n```sqf\n_overLand = !(position player isFlatEmpty [-1, -1, -1, -1, 0, false] isEqualTo []);\n```\n",
            "Check if player position is over shore line:\n\n```sqf\n_overShore = !(position player isFlatEmpty  [-1, -1, -1, -1, 0, true] isEqualTo []);\n```\n",
            "Check if player position is over water:\n\n```sqf\n_overWater = !(position player isFlatEmpty  [-1, -1, -1, -1, 2, false] isEqualTo []);\n```\n",
            "Check if no object is closer than 5m to player position:\n\n```sqf\n_isEmpty = !(position player isFlatEmpty  [5, -1, -1, -1, -1, false, player] isEqualTo []);\n```\n",
            "Check if area 10m around player position is relatively flat:\n\n```sqf\n_isFlat = !(position player isFlatEmpty  [-1, -1, 0.3, 10, -1] isEqualTo []);\n```\n",
            "Check if area 15m around player position is very flat and empty:\n\n```sqf\n_isFlatEmpty = !(position player isFlatEmpty  [15, -1, 0.1, 15, -1, false, player] isEqualTo []);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isFlatEmpty",
        "modifiers": []
    },
    "setlightflaremaxdistance": {
        "name": "setLightFlareMaxDistance",
        "description": "Sets max distance where the flare is visible.",
        "syntaxArray": [
            {
                "Syntax": "light setLightFlareMaxDistance distance",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\ndistance: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightFlareMaxDistance 500;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightFlareMaxDistance",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "setwaypointloiterradius": {
        "name": "setWaypointLoiterRadius",
        "description": "Assignes loiter radius to waypoint",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointLoiterRadius** radius",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointLoiterRadius 200;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointLoiterRadius",
        "modifiers": []
    },
    "getordefault": {
        "name": "getOrDefault",
        "description": "Retrieves a value out of a [HashMap](https://community.bistudio.com/wiki/HashMap) after looking it up by its key. When the HashMap doesn't contain the key, the default value is returned",
        "syntaxArray": [
            {
                "Syntax": "hashMap getOrDefault [key, defaultValue]",
                "Params": "hashMap : [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nkey: [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\ndefaultValue: [Anything](https://community.bistudio.com/wiki/Anything) - (Optional, default [nil](https://community.bistudio.com/wiki/nil))\n\nsetDefault: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) - If set to [true](https://community.bistudio.com/wiki/true) and value does not exist in provided hash map, **defaultValue** will be added to the hash map *Since Arma 3 v2.04*\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _myValue = _myHashMap getOrDefault [\"a\", \"Not Found!\"];\n```\n",
            "\n```sqf\nprivate _myValue = _hashMap getOrDefault [\"a\", \"Not Found!\", true]; // Will add default value to the hash map if it does not exist\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getOrDefault",
        "modifiers": []
    },
    "deletelocation": {
        "name": "deleteLocation",
        "description": "Deletes scripted location.",
        "syntaxArray": [
            {
                "Syntax": "deleteLocation location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteLocation myLocation;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteLocation",
        "modifiers": []
    },
    "setlightnings": {
        "name": "setLightnings",
        "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\n**NOTE**: This command will have no effect (even though the value of [lightnings](https://community.bistudio.com/wiki/lightnings) changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.\n",
        "syntaxArray": [
            {
                "Syntax": "time **setLightnings** value",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n1800 setLightnings 0.7;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightnings",
        "modifiers": []
    },
    "hideobjectglobal": {
        "name": "hideObjectGlobal",
        "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on static objects. In SP this command behaves just like [hideObject](https://community.bistudio.com/wiki/hideObject).",
        "syntaxArray": [
            {
                "Syntax": "**hideObjectGlobal** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - object to hide\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "object **hideObjectGlobal** hidden",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nhidden: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true)->hidden; [false](https://community.bistudio.com/wiki/false)->visible\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhideObjectGlobal nearestBuilding [2500,2500,0];\n```\n",
            "\n```sqf\nobjectname hideObjectGlobal true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hideObjectGlobal",
        "modifiers": [
            "Global argument",
            "Global effect",
            "Server execution"
        ]
    },
    "vectorworldtomodelvisual": {
        "name": "vectorWorldToModelVisual",
        "description": "Converts vector direction from world to model space in [render time scope](https://community.bistudio.com/wiki/Simulation_vs_Render_Time_Scope).",
        "syntaxArray": [
            {
                "Syntax": "object vectorWorldToModelVisual worldDir",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nworldDir: [Array](https://community.bistudio.com/wiki/Array) - vector direction in world space in format [x,y,z]\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - vector direction in model space in format [x,y,z]"
            }
        ],
        "examples": [
            "Convert world space vector [0,-10,4] to model space of object _airplane:\n\n```sqf\n_airplane vectorWorldToModelVisual [0,-10,4];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorWorldToModelVisual",
        "modifiers": []
    },
    "mod": {
        "name": "mod",
        "description": "Remainder of a divided by b.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = a **mod** b",
                "Params": "a: [Number](https://community.bistudio.com/wiki/Number)\n\nb: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_rem = 3 mod 2;\n```\n\nResult is 1"
        ],
        "Url": "https://community.bistudio.com/wiki/mod",
        "modifiers": []
    },
    "oneachframe": {
        "name": "onEachFrame",
        "description": "Runs given statement every frame.\n> ",
        "syntaxArray": [
            {
                "Syntax": "onEachFrame statement",
                "Params": "statement: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonEachFrame { hintSilent str position player}; // Hints position every frame\n```\n",
            "Private variables defined outside of the onEachFrame scope are not inherited:\n\n```sqf\n_myvar = \"bob\";\nmyvar = \"bill\";\nonEachFrame { hintSilent str [_myvar, myvar]; };\n// Result: [any,\"bill\"]\n```\n",
            "Only one onEachFrame loop can exist at any time:\n\n```sqf\nonEachFrame { player sideChat \"first\"; };\nonEachFrame { player sideChat \"second\"; };\n// Result: \"second\", \"second\", \"second\"...\n```\n\n\nNote how \"first\" never gets shown even though it precedes \"second\". This is because script thread is executing within the same frame and first onEachFrame is overwritten before it has a chance to execute its statement.",
            "Script suspension is not permitted within onEachFrame scope:\n\n```sqf\n// Will throw an error\nonEachFrame { sleep 1; };\n```\n",
            "\n```sqf\nonEachFrame {}; // Reset event\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onEachFrame",
        "modifiers": []
    },
    "groupselectedunits": {
        "name": "groupSelectedUnits",
        "description": "Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see [hcSelected](https://community.bistudio.com/wiki/hcSelected).",
        "syntaxArray": [
            {
                "Syntax": "**groupSelectedUnits** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_selectedUnits = groupSelectedUnits player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupSelectedUnits",
        "modifiers": []
    },
    "setwingforcescalertd": {
        "name": "setWingForceScaleRTD",
        "description": "Set effectivity of wings. > ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD setWingForceScaleRTD [leftHorizontal, rightHorizontal, vertical]",
                "Params": "helicopterRTD: [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nleftHorzontal: [Number](https://community.bistudio.com/wiki/Number) -\n\nrightHorizontal: [Number](https://community.bistudio.com/wiki/Number) -\n\nvertical: [Number](https://community.bistudio.com/wiki/Number) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/setWingForceScaleRTD",
        "modifiers": []
    },
    "unassigncurator": {
        "name": "unassignCurator",
        "description": "Unassign curator (will destroy both sides of connection).",
        "syntaxArray": [
            {
                "Syntax": "**unassignCurator** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunassignCurator myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unassignCurator",
        "modifiers": [
            "Server execution"
        ]
    },
    "settriggerstatements": {
        "name": "setTriggerStatements",
        "description": "Defines trigger condition, activation and deactivation statements. Trigger condition has to return [Boolean](https://community.bistudio.com/wiki/Boolean). [true](https://community.bistudio.com/wiki/true) will activate the trigger, [false](https://community.bistudio.com/wiki/false) will deactivate it (only if activation is set to repeat). [thisList](https://community.bistudio.com/wiki/thisList) returns the same result as [list](https://community.bistudio.com/wiki/list) command, which includes all entities in the trigger area that are capable of activating the trigger. Dead entities are excluded as well as crew in vehicles, vehicles themselves are included.",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTriggerStatements** [condition, activation, deactivation]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - Trigger object\n\n[condition, activation, deactivation]: [Array](https://community.bistudio.com/wiki/Array)\n\ncondition: [String](https://community.bistudio.com/wiki/String) - Code containing trigger condition. Special variables available here:\n\n* [this](https://community.bistudio.com/wiki/Magic_Variables#this_2) ([Boolean](https://community.bistudio.com/wiki/Boolean)) - detection event\n\n* [thisTrigger](https://community.bistudio.com/wiki/thisTrigger) ([Object](https://community.bistudio.com/wiki/Object)) - trigger instance\n\n* [thisList](https://community.bistudio.com/wiki/thisList) ([Array](https://community.bistudio.com/wiki/Array)) - array of all detected entities\n\nactivation: [String](https://community.bistudio.com/wiki/String) - Code that is executed when the trigger is activated. Special variables available here:\n\n* [thisTrigger](https://community.bistudio.com/wiki/thisTrigger) ([Object](https://community.bistudio.com/wiki/Object)) - trigger instance\n\n* [thisList](https://community.bistudio.com/wiki/thisList) ([Array](https://community.bistudio.com/wiki/Array)) - array of all detected entities\n\ndeactivation: [String](https://community.bistudio.com/wiki/String) - Code that is executed when the trigger is deactivated. Special variable available here:\n\n* [thisTrigger](https://community.bistudio.com/wiki/thisTrigger) ([Object](https://community.bistudio.com/wiki/Object)) - trigger instance\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trg setTriggerStatements [\"this\", \"hint 'trigger on'\", \"hint 'trigger off'\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerStatements",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "triggerstatements": {
        "name": "triggerStatements",
        "description": "Returns trigger statements.",
        "syntaxArray": [
            {
                "Syntax": "**triggerStatements** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format:\n0: condition: [String](https://community.bistudio.com/wiki/String)\n1: code on activation: [String](https://community.bistudio.com/wiki/String)\n2: code on deactivation: [String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_statements = triggerStatements someTrigger;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerStatements",
        "modifiers": [
            "Global argument"
        ]
    },
    "hint": {
        "name": "hint",
        "description": "Outputs a hint message to the right of the screen (left of the screen in Operation Flashpoint) with a sound (except in Armed Assault). Use [hintSilent](https://community.bistudio.com/wiki/hintSilent) for soundless hint. To split message in multiple lines either use [Structured Text](https://community.bistudio.com/wiki/Structured_Text) or \\n (in lower case).",
        "syntaxArray": [
            {
                "Syntax": "hint message",
                "Params": "message: [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text) - the message to display.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n// outputs the following:\n// Press W to move forward.\n// Press S to move backwards.\nhint \"Press W to move forward.\\nPress S to move backwards.\"\n```\n",
            "\n```sqf\nhint format [\"Hello, %1!\", name player];\n```\n",
            "\n```sqf\nhint str count allPlayers;\nsleep 10;\nhintSilent \"\"; // hides the previous hint display\n```\n",
            "\n```sqf\nhint parseText \"<t size='2.0'>Large text</t>\"; // Displays text twice as large as the default one\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hint",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlsetautoscrollrewind": {
        "name": "ctrlSetAutoScrollRewind",
        "description": "Defines if scroll should rewind when auto-scroll reach end. Setter for [ctrlAutoScrollRewind](https://community.bistudio.com/wiki/ctrlAutoScrollRewind).\n\nAutorscroll is available for [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) and [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) types of controls only. Autoscroll will wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. [ctrlAutoScrollSpeed](https://community.bistudio.com/wiki/ctrlAutoScrollSpeed) defines the speed with which scrollbar is scrolled. If [ctrlAutoScrollRewind](https://community.bistudio.com/wiki/ctrlAutoScrollRewind) is [true](https://community.bistudio.com/wiki/true), the control will fade out, immediately rewind to the top, then fade in, wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetAutoScrollRewind** set",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) or [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\nset: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to enable rewind\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlGroup ctrlSetAutoScrollRewind true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetAutoScrollRewind",
        "modifiers": []
    },
    "getmusicplayedtime": {
        "name": "getMusicPlayedTime",
        "description": "Returns elapsed time in seconds for currently playing music track.",
        "syntaxArray": [
            {
                "Syntax": "getMusicPlayedTime",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nplayMusic [\"LeadTrack06_F_Tank\", 0]; \nonEachFrame {hintSilent str getMusicPlayedTime};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMusicPlayedTime",
        "modifiers": []
    },
    "leaderboardinit": {
        "name": "leaderboardInit",
        "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.",
        "syntaxArray": [
            {
                "Syntax": "leaderboardInit boardName",
                "Params": "boardName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardInit \"TT01\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardInit",
        "modifiers": []
    },
    "vehiclevarname": {
        "name": "vehicleVarName",
        "description": "Returns the variable name that contains a primary editor reference to this object. This is the variable given in the *Insert Unit dialog / name field* in the editor. It can be changed using [setVehicleVarName](https://community.bistudio.com/wiki/setVehicleVarName). ",
        "syntaxArray": [
            {
                "Syntax": "**vehicleVarName** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Variable name, if none was set, \n```sqf\n\"\"\n```\n is returned"
            }
        ],
        "examples": [
            "\n```sqf\nhint vehicleVarName player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleVarName",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setmouseposition": {
        "name": "setMousePosition",
        "description": "Moves mouse pointer to specified position on the screen. **x** and **y** could be any number, but will be clipped so mouse never leaves the screen area.",
        "syntaxArray": [
            {
                "Syntax": "**setMousePosition** [x, y]",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number) - x in screen coordinates\n\ny: [Number](https://community.bistudio.com/wiki/Number) - y in screen coordinates\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetMousePosition [0.5, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMousePosition",
        "modifiers": []
    },
    "setobjecttexture": {
        "name": "setObjectTexture",
        "description": "Applies given texture to object's selection. See [Retexturing with setObjectTexture](https://community.bistudio.com/wiki/Retexturing_with_setObjectTexture) for a short tutorial.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**setObjectTexture**",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nselectionNumber: [Number](https://community.bistudio.com/wiki/Number) - Index of the selection. It is defined in the [hiddenselection](https://community.bistudio.com/wiki/CfgVehicles_Config_Reference#hiddenSelections)[]={} array in the vehicle's config (starting with 0).\n\ntexture: [String](https://community.bistudio.com/wiki/String) - Path to texture\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_objectname setObjectTexture [0, \"\\pboname\\texture.paa\"];\n_objectname setObjectTexture [1, \"\\pboname\\texture2.paa\"];\n```\n",
            "\n```sqf\n_obj setObjectTexture [0, \"#(rgb,8,8,3)color(1,0,0,1)\"];\n```\n",
            "\n```sqf\n_obj setObjectTexture [0, \"#(argb,512,512,1)r2t(rendersurface,1.333)\"];\n```\n",
            "When applying custom texture in Editor on vehicles that have randomization enabled ([Arma 3 Assets](https://community.bistudio.com/wiki/Arma_3_Assets)), disable randomization first:\n```sqf\nthis setVariable [\"BIS_enableRandomization\", false];\nthis setObjectTexture [0,\"#(rgb,8,8,3)color(1,0,0,1)\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectTexture",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "campreparetarget": {
        "name": "camPrepareTarget",
        "description": "Prepares the camera target to a position or to a target. Needs the call of [camCommitPrepared](https://community.bistudio.com/wiki/camCommitPrepared) to be conducted.",
        "syntaxArray": [
            {
                "Syntax": "camera camPrepareTarget position",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\nposition: [Position](https://community.bistudio.com/wiki/Position) - target location\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "camera camPrepareTarget target",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_camera camPrepareTarget getPos player;\n```\n",
            "\n```sqf\n_camera camPrepareTarget player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareTarget",
        "modifiers": []
    },
    "markasfinishedonsteam": {
        "name": "markAsFinishedOnSteam",
        "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.",
        "syntaxArray": [
            {
                "Syntax": "**markAsFinishedOnSteam**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nmarkAsFinishedOnSteam;\nendMission \"END1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markAsFinishedOnSteam",
        "modifiers": []
    },
    "removebackpackglobal": {
        "name": "removeBackpackGlobal",
        "description": "Removes backpack from a unit. (even non-local)",
        "syntaxArray": [
            {
                "Syntax": "**removeBackpackGlobal** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - soldier\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveBackpackGlobal player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeBackpackGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "isnil": {
        "name": "isNil",
        "description": "Tests whether the variable given by its name is [nil](https://community.bistudio.com/wiki/nil) or undefined, or whether the given expression evaluates to [nil](https://community.bistudio.com/wiki/nil) or [Nothing](https://community.bistudio.com/wiki/Nothing).\n> ",
        "syntaxArray": [
            {
                "Syntax": "isNil variableName",
                "Params": "variableName: [String](https://community.bistudio.com/wiki/String) - name of a [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) variable (e.g \"someVar\") or a local variable (e.g \"_someVar\")\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if variable is [nil](https://community.bistudio.com/wiki/nil)"
            },
            {
                "Syntax": "isNil code",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code) - code to evaluate:\n\n* the code **will** be executed; \n```sqf\nisNil { player setDamage 1; };\n```\n *will* kill the player\n\n* the code will not be allowed [to suspend](https://community.bistudio.com/wiki/canSuspend) while expression is evaluated, even if the parent scope allows it (see **[Example 4](https://community.bistudio.com/wiki/isNil#Examples)**).\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if code returns something other than [Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isNil \"pokus\") then { pokus = 0; };\n```\n",
            "\n```sqf\nisNil { player getVariable \"someVar\" };\n```\n",
            "\n```sqf\n_myArray = [0, 1];\nisNil { _myArray select 0 }; // returns false\nisNil { _myArray select 1 }; // returns false\nisNil { _myArray select 2 }; // returns true\nisNil { _myArray select 3 }; // throws a script error. only length+1 select is allowed\n\n```\n",
            "You can do this trick to force execute something in [Unscheduled Environment](https://community.bistudio.com/wiki/Scheduler).\n```sqf\nspawn {\n\tsystemChat str canSuspend; // chat shows true\n\tisNil {hint str canSuspend}; // hint shows false\n};\n```\n",
            "Operation Flashpoint workaround:SQS syntax:\n\n```sqf\n_nil = format [\"%1\", _undefinedVariable]\n? (format [\"%1\", foo] == _nil) : foo = \"value\"\n```\n\nSQF syntax:\n\n```sqf\n_nil = format [\"%1\", _undefinedVariable];\nif (format [\"%1\", foo] == _nil) then { foo = \"value\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isNil",
        "modifiers": []
    },
    "isvehicleradaron": {
        "name": "isVehicleRadarOn",
        "description": "Returns true if vehicle has active sensors on.",
        "syntaxArray": [
            {
                "Syntax": "isVehicleRadarOn vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle on which check is performed\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nisVehicleRadarOn  vehicle player; // returns true if radar is turned on\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isVehicleRadarOn",
        "modifiers": []
    },
    "local": {
        "name": "local",
        "description": "Check if given unit is local on the computer in Multiplayer games - see [Multiplayer Scripting - Locality](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality).\nThis can be used to determine on which computer some code must be run. In Single player all objects are local.",
        "syntaxArray": [
            {
                "Syntax": "local object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group) (since Arma 3 v1.32)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "local variable = value From Arma 2 until Arma 3 v1.54 - see **[private](https://community.bistudio.com/wiki/private)** for later versions",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (not local _unit) then {\n\thint format [\"%1 is remote\", name _unit];\n};\n```\n",
            "\n```sqf\n_isLocalGroup = local group _unit;\n```\n",
            "Sets variable's [scope](https://community.bistudio.com/wiki/Variables#Scopes):\n```sqf\n// From Arma 2 until Arma 3 v1.54\nlocal _myVariable = 42;\n\n// Since Arma 3 v1.54\nprivate _myVariable = 42;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/local",
        "modifiers": [
            "Global argument"
        ]
    },
    "diag_fps": {
        "name": "diag_fps",
        "description": "Returns average framerate calculated over last 16 frames.",
        "syntaxArray": [
            {
                "Syntax": "**diag_fps**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_log diag_fps;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_fps",
        "modifiers": []
    },
    "groupiconselectable": {
        "name": "groupIconSelectable",
        "description": "Returns whether or not group icons raise [onGroupIconClick](https://community.bistudio.com/wiki/onGroupIconClick), [onGroupIconOverEnter](https://community.bistudio.com/wiki/onGroupIconOverEnter) and [onGroupIconOverLeave](https://community.bistudio.com/wiki/onGroupIconOverLeave) events.",
        "syntaxArray": [
            {
                "Syntax": "**groupIconSelectable**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) is selectable"
            }
        ],
        "examples": [
            "\n```sqf\nhint str groupIconSelectable;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupIconSelectable",
        "modifiers": []
    },
    "leaderboarddeinit": {
        "name": "leaderboardDeInit",
        "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.",
        "syntaxArray": [
            {
                "Syntax": "leaderboardDeInit boardName",
                "Params": "boardName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardDeInit \"TT01\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardDeInit",
        "modifiers": []
    },
    "agltoasl": {
        "name": "AGLToASL",
        "description": "Converts position from [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) to [PositionASL](https://community.bistudio.com/wiki/PositionASL).",
        "syntaxArray": [
            {
                "Syntax": "AGLToASL posAGL",
                "Params": "posAGL: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) - position to convert\n\n",
                "Return": "[PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);\n```\n",
            "\n```sqf\n_camPosASL = AGLToASL positionCameraToWorld [0,0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/AGLToASL",
        "modifiers": []
    },
    "setmarkertypelocal": {
        "name": "setMarkerTypeLocal",
        "description": "Sets marker type locally. Marker type is a class name in [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers).",
        "syntaxArray": [
            {
                "Syntax": "markerName setMarkerTypeLocal type",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\ntype: [String](https://community.bistudio.com/wiki/String) - See [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers).\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerTypeLocal \"Warning\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerTypeLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "selectdiarysubject": {
        "name": "selectDiarySubject",
        "description": "Selects a subject page in the [diary](https://community.bistudio.com/wiki/Diary). The subject page is selected but the command does not open the map by default, which could be opened with [openMap](https://community.bistudio.com/wiki/openMap) if necessary.",
        "syntaxArray": [
            {
                "Syntax": "player selectDiarySubject subject",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object) - Player\n\nsubject: [String](https://community.bistudio.com/wiki/String) - Subject name, for example \"Diary\" (see also [Diary](https://community.bistudio.com/wiki/Diary)). It can be further instructed to select a record too, for example \"Diary:Record2\".\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if subject was successfully selected"
            }
        ],
        "examples": [
            "\n```sqf\nopenMap true; \nplayer selectDiarySubject \"Diary\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectDiarySubject",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "displayctrl": {
        "name": "displayCtrl",
        "description": "Return child control with specified idc.",
        "syntaxArray": [
            {
                "Syntax": "[Control](https://community.bistudio.com/wiki/Control) = display **displayCtrl** idc",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Control](https://community.bistudio.com/wiki/Control)"
            }
        ],
        "examples": [
            "\n```sqf\n_ChildControl = _ParentDisplay displayCtrl 101;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displayCtrl",
        "modifiers": []
    },
    "setposaslw": {
        "name": "setPosASLW",
        "description": "Sets the object position above sea surface. The pos array uses the [PositionASLW](https://community.bistudio.com/wiki/PositionASLW) format.",
        "syntaxArray": [
            {
                "Syntax": "obj **setPosASLW** pos",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [PositionASLW](https://community.bistudio.com/wiki/PositionASLW)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPosASLW",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "vectorup": {
        "name": "vectorUp",
        "description": "Returns up vector of the given object in format [Vector3D](https://community.bistudio.com/wiki/Vector3D).",
        "syntaxArray": [
            {
                "Syntax": "vectorUp object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - up vector in format [Vector3D](https://community.bistudio.com/wiki/Vector3D)"
            }
        ],
        "examples": [
            "\n```sqf\n_objUpVector = vectorUp myObject;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorUp",
        "modifiers": [
            "Global argument"
        ]
    },
    "visiblescoretable": {
        "name": "visibleScoretable",
        "description": "Checks whether the score table is visible.",
        "syntaxArray": [
            {
                "Syntax": "visibleScoretable",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_visible = visibleScoretable;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visibleScoretable",
        "modifiers": []
    },
    "systemtimeutc": {
        "name": "systemTimeUTC",
        "description": "Returns [systemTime](https://community.bistudio.com/wiki/systemTime) according to **U**niversal **T**ime **C**oordinated time scale.",
        "syntaxArray": [
            {
                "Syntax": "systemTimeUTC",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [year, month, day, hour, minute, second, millisecond]"
            }
        ],
        "examples": [
            "\n```sqf\n_UKTime = systemTimeUTC;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/systemTimeUTC",
        "modifiers": []
    },
    "selectleader": {
        "name": "selectLeader",
        "description": "Select the group's leader. Group locality can be checked with [local](https://community.bistudio.com/wiki/local) command and group ownership with [groupOwner](https://community.bistudio.com/wiki/groupOwner) command.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "group selectLeader unitName",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\nunitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ngroup player selectLeader player;\n```\n",
            "Make unit a leader from server:\n```sqf\n[group _unit, _unit] remoteExec [\"selectLeader\", groupOwner group _unit];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectLeader",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "sleep": {
        "name": "sleep",
        "description": "Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a [script](https://community.bistudio.com/wiki/Script_(Handle)) executed by [execVM](https://community.bistudio.com/wiki/execVM) or [spawn](https://community.bistudio.com/wiki/spawn).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**sleep** delay",
                "Params": "delay: [Number](https://community.bistudio.com/wiki/Number) - in seconds. Negative values will not be considered.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[] spawn {\n\tsleep 5;\n\thint \"after (at least) 5 seconds...\";\n};\n```\n",
            "\n```sqf\nsleep 5 + random 10;\t// incorrect - will only sleep for 5 seconds, as it will be interpreted as (sleep 5) (+(random 10))\nsleep (5 + random 10);\t// correct\n```\n",
            "\n```sqf\nif (isMultiplayer) then\n{\n\tuiSleep 3;\t// more precise in (non-pausable) multiplayer\n} else {\n\tsleep 3;\t// sleep gets paused as the game is, usually wanted behaviour\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sleep",
        "modifiers": []
    },
    "setidentity": {
        "name": "setIdentity",
        "description": "Sets identity of a person. The identities could be defined in a custom config in [Description.ext](https://community.bistudio.com/wiki/Description.ext#CfgIdentities) or in the main config. For a list of available main config values see [CfgIdentities](https://community.bistudio.com/wiki/CfgIdentities).\n \nThis command is an aggregate of the following commands: [setName](https://community.bistudio.com/wiki/setName), [setFace](https://community.bistudio.com/wiki/setFace), [setSpeaker](https://community.bistudio.com/wiki/setSpeaker), [setNameSound](https://community.bistudio.com/wiki/setNameSound), [setPitch](https://community.bistudio.com/wiki/setPitch), only the values are loaded from the given config. It also includes value for glasses for which currently there is no direct command, instead there is an inventory command [addGoggles](https://community.bistudio.com/wiki/addGoggles).",
        "syntaxArray": [
            {
                "Syntax": "person setIdentity identity",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object) - unit to which the identity will be applied\n\nidentity: [String](https://community.bistudio.com/wiki/String) - name of the subclass in [CfgIdentities](https://community.bistudio.com/wiki/CfgIdentities)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 setIdentity \"MyLittleSoldier\";\n```\n",
            "Clone factory in MP: \n```sqf\nfor \"_i\" from 1 to 10 do\n{\n\t_bob = group player createUnit [typeOf player, position player, [], 0, \"none\"]; \n\t[_bob, \"MyLittleSoldier\"] remoteExec [\"setIdentity\", 0, _bob];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setIdentity",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "campreparefov": {
        "name": "camPrepareFov",
        "description": "Prepares the camera field of view (zoom). The default zoom level is 0.75, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is *atan(FOV)*2* radians when in 4:3 aspect ratio. Needs the call of [camCommitPrepared](https://community.bistudio.com/wiki/camCommitPrepared) to be conducted.",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareFov** fieldOfView",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nfieldOfView: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareFov 0.1   \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareFov",
        "modifiers": []
    },
    "velocitymodelspace": {
        "name": "velocityModelSpace",
        "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.",
        "syntaxArray": [
            {
                "Syntax": "**velocityModelSpace** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nvelocityModelSpace _chopper;\ncomment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/velocityModelSpace",
        "modifiers": []
    },
    "debriefingtext": {
        "name": "debriefingText",
        "description": "Returns debriefing text of provided end.",
        "syntaxArray": [
            {
                "Syntax": "debriefingText end",
                "Params": "end: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - *end* debriefing text. If it does not exist in config, empty string is returned."
            }
        ],
        "examples": [
            "\n```sqf\n_deathText = debriefingText \"endDeath\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/debriefingText",
        "modifiers": []
    },
    "ctrlparent": {
        "name": "ctrlParent",
        "description": "Returns the parent [Display](https://community.bistudio.com/wiki/Display) of the given control. For parent [Controls](https://community.bistudio.com/wiki/Control) group see [ctrlParentControlsGroup](https://community.bistudio.com/wiki/ctrlParentControlsGroup).",
        "syntaxArray": [
            {
                "Syntax": "ctrlParent control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Display](https://community.bistudio.com/wiki/Display)"
            }
        ],
        "examples": [
            "\n```sqf\n_display = ctrlParent _control\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlParent",
        "modifiers": []
    },
    "lnbsetpicturecolorright": {
        "name": "lnbSetPictureColorRight",
        "description": "Sets color of the right picture in a [CT_LISTNBOX](https://community.bistudio.com/wiki/CT_LISTNBOX).",
        "syntaxArray": [
            {
                "Syntax": "lnbSetPictureColorRight [idc, [row, column], color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetPictureColorRight [[row, column], color]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control lnbSetPictureColorRight [[0, 0], [1,1,1,0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetPictureColorRight",
        "modifiers": []
    },
    "lbpicture": {
        "name": "lbPicture",
        "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog).",
        "syntaxArray": [
            {
                "Syntax": "lbPicture [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - idc of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control lbPicture index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_picture = lbPicture [101, 0];\n```\n",
            "\n```sqf\n_picture = _control lbPicture 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbPicture",
        "modifiers": []
    },
    "waypointbehaviour": {
        "name": "waypointBehaviour",
        "description": "Gets the waypoint behavior.",
        "syntaxArray": [
            {
                "Syntax": "**waypointBehaviour** waypoint",
                "Params": "waypoint:  [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointBehaviour [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointBehaviour",
        "modifiers": []
    },
    "getslingload": {
        "name": "getSlingLoad",
        "description": "Return object which is sling loaded by vehicle",
        "syntaxArray": [
            {
                "Syntax": "getSlingLoad vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the sling loaded vehicle. [objNull](https://community.bistudio.com/wiki/objNull) if nothing is sling loaded."
            }
        ],
        "examples": [
            "\n```sqf\n_cargo = getSlingLoad heli1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSlingLoad",
        "modifiers": []
    },
    "forceunicode": {
        "name": "forceUnicode",
        "description": "Sets the Unicode flag which forces some of the string manipulation commands to switch to Unicode. The Unicode flag is always set right after forceUnicode command execution, but is reset depending on the command mode: \n\n* 1 - the Unicode flag is reset right after any of the supported commands executed or the end of script, whichever comes earlier.\n\n* 0 - the Unicode flag is reset at the end of the script.\nWhen the flag is set it will also affect all scopes within the script including child scopes (see also: [diag_scope](https://community.bistudio.com/wiki/diag_scope)). There are many other string manipulation commands like [ctrlSetText](https://community.bistudio.com/wiki/ctrlSetText), [getTextWidth](https://community.bistudio.com/wiki/getTextWidth), etc. that support Unicode by design so no additional forcing is needed.\nList of the commands that work with forceUnicode:\n",
        "syntaxArray": [
            {
                "Syntax": "forceUnicode mode",
                "Params": "mode: [Number](https://community.bistudio.com/wiki/Number) - Mode of operation, can be: \n\n* -1 - resets previously set Unicode flag\n\n*  0 - sets Unicode flag until the end of script\n\n*  1 - sets Unicode flag until after next supported command or until the end of script, whichever comes earlier\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\ncopyToClipboard \"д\"; // Copies \"Ð´\" to clipboard\n\nforceUnicode 1;\ncopyToClipboard \"д\"; // Copies \"д\" to clipboard\n```\n",
            "\n```sqf\nprivate _string = \"привет\";\t\t\t// a string that uses Unicode characters\nsystemChat str count _string;\t\t// 12 - the character count is wrong without forceUnicode\n\ncall {\n\tsystemChat str count _string;\t// 12 - identical result\n\tforceUnicode 0;\n\tsystemChat str count _string;\t// 6 - correct result\n};\n\nsystemChat str count _string;\t\t// 6 - outer scope is affected by forceUnicode as well, because the command mode is 0\n\nforceUnicode -1; // cancelled\n\ncall {\n\tsystemChat str count _string;\t// 12 - wrong count\n\tforceUnicode 1;\n\tsystemChat str count _string;\t// 6 - correct result, but Unicode it reset after this operation, because command mode is 1\n};\n\nsystemChat str count _string;\t\t// 12 - outer scope is not affected as it was reset right after count\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceUnicode",
        "modifiers": []
    },
    "ppeffectdestroy": {
        "name": "ppEffectDestroy",
        "description": "Destroy [Post process effects](https://community.bistudio.com/wiki/Post_process_effects) given by handle or array of handles.",
        "syntaxArray": [
            {
                "Syntax": "**ppEffectDestroy** effect",
                "Params": "effect: [Number](https://community.bistudio.com/wiki/Number) - effect handle\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "**ppEffectDestroy** [effect1,...]",
                "Params": "[effect1,...]: [Array](https://community.bistudio.com/wiki/Array) - array of effect handles -\n\neffect1: [Number](https://community.bistudio.com/wiki/Number) - effect handle\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nppEffectDestroy _hndl;\n```\n",
            "\n```sqf\nppEffectDestroy [_hndl0, _hndl1, _hndl2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectDestroy",
        "modifiers": []
    },
    "isturnedout": {
        "name": "isTurnedOut",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if given unit is turned out, otherwise [false](https://community.bistudio.com/wiki/false). The output changes to [true](https://community.bistudio.com/wiki/true) after unit finished turning out, however will change to [false](https://community.bistudio.com/wiki/false) almost immediately after unit is ordered to turn in.",
        "syntaxArray": [
            {
                "Syntax": "**isTurnedOut** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit on turn(in/out) enabled turret\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_commanderOut = isTurnedOut (tank turretUnit [0,0]);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isTurnedOut",
        "modifiers": []
    },
    "getmissionconfigvalue": {
        "name": "getMissionConfigValue",
        "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is [nil](https://community.bistudio.com/wiki/nil). If the attribute defined in multiple places, the command checks them in the following order:\n\n* External *[Description.ext](https://community.bistudio.com/wiki/Description.ext)* file\n\n* [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor:_Scenario_Atttributes) scenario attribute\nSo if attribute exists in both places, attribute from [description.ext](https://community.bistudio.com/wiki/description.ext) is used. Previously, scenario attributes were extracted from *Description.ext* using [missionConfigFile](https://community.bistudio.com/wiki/missionConfigFile). That still works, but it ignores attributes set directly in the editor and it should not be used anymore.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**getMissionConfigValue** attribute",
                "Params": "attribute: [String](https://community.bistudio.com/wiki/String) - attribute name\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number), [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array), depending on the attribute value type. [Nil](https://community.bistudio.com/wiki/nil) when the attribute is undefined."
            },
            {
                "Syntax": "**getMissionConfigValue** [attribute, defaultValue]",
                "Params": "attribute: [String](https://community.bistudio.com/wiki/String) - attribute name\n\ndefaultValue: [Anything](https://community.bistudio.com/wiki/Anything) - value used when the attribute is undefined\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number), [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array), depending on the attribute value type. Default value when the attribute is undefined."
            }
        ],
        "examples": [
            "\n```sqf\n_respawnDelay = getMissionConfigValue [\"respawnDelay\",0]\n```\n\nReturns respawn delay value. Replaces the previous approach which would scan only the external *Description.ext file*, but ignore the value set in the Eden Editor:\n\n```sqf\n_respawnDelay = getNumber (missionConfigFile >> \"respawnDelay\"); // Old approach\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMissionConfigValue",
        "modifiers": []
    },
    "forcegeneratorrtd": {
        "name": "forceGeneratorRTD",
        "description": "Adds force generator to world.\n> ",
        "syntaxArray": [
            {
                "Syntax": "forceGeneratorRTD index",
                "Params": "index: [Number](https://community.bistudio.com/wiki/Number) - Index\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Force index"
            }
        ],
        "examples": [
            "\n```sqf\nforceGeneratorRTD 2\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceGeneratorRTD",
        "modifiers": []
    },
    "hcremoveallgroups": {
        "name": "hcRemoveAllGroups",
        "description": "Remove all groups from unit's [high command](https://community.bistudio.com/wiki/High_Command) bar.",
        "syntaxArray": [
            {
                "Syntax": "**hcRemoveAllGroups** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nhcRemoveAllGroups player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcRemoveAllGroups",
        "modifiers": []
    },
    "tvcursel": {
        "name": "tvCurSel",
        "description": "Returns path to currently selected item. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "tvCurSel idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of selected item"
            },
            {
                "Syntax": "tvCurSel control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of selected item"
            }
        ],
        "examples": [
            "\n```sqf\ntvCurSel 101;\n```\n",
            "\n```sqf\ntvCurSel _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvCurSel",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "controlnull": {
        "name": "controlNull",
        "description": "A non-existing [Control](https://community.bistudio.com/wiki/Control). To compare non-existent objects use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) (see examples).",
        "syntaxArray": [
            {
                "Syntax": "controlNull",
                "Params": "",
                "Return": "[Control](https://community.bistudio.com/wiki/Control)"
            }
        ],
        "examples": [
            "\n```sqf\nif (_myCtrl isEqualTo controllNull) then { hint \"_myCtrl is null!\"; };\n```\n",
            "\n```sqf\ncontrolNull == controlNull;\t\t\t// returns false\nisNull controlNull;\t\t\t\t\t\t// returns true\ncontrolNull isEqualTo controlNull;\t\t// returns true\n```\n",
            "\n```sqf\nstr controlNull; // No control\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/controlNull",
        "modifiers": []
    },
    "getsteamfriendsservers": {
        "name": "getSteamFriendsServers",
        "description": "Returns servers information of Steam friends currently playing the game.",
        "syntaxArray": [
            {
                "Syntax": "getSteamFriendsServers",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - to format [ipAndPort, steamFriendName]"
            }
        ],
        "examples": [
            "\n```sqf\ngetSteamFriendsServers; // returns e.g [[\"127.42.33.8:2302\", \"MyFriend\"], [\"127.84.66.16:4604\", \"My Best Friend\"]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSteamFriendsServers",
        "modifiers": []
    },
    "allmissionobjects": {
        "name": "allMissionObjects",
        "description": "Returns all mission objects which were created by and during the mission with given type or its subtype. In some cases allMissionObjects. Sometimes allMissionObjects could be replaced by the much faster [entities](https://community.bistudio.com/wiki/entities) command.\n\nSome of the unusual mission objects that can be detected with this command as well as with [nearestObject](https://community.bistudio.com/wiki/nearestObject):\n\n* \"\" - returns everything like agents, bees, mosquitoes, foot prints (footstep), armed mines...\n\n* \"all\" - more restrictive than \"\": no ambient insects, just agents like rabbits and snakes, no foot prints, tracks, no armed mines\n\n* \"#slop\" - blood drop\n\n* \"#mark\" - unit footprints\n\n* \"#track\" - vehicle tracks\n\n* \"#crater\" - explosion crater on the ground\n\n* \"#crateronvehicle\" - bullet marks on vehicle\n\n* \"#explosion\" - an explosion\n\n* \"#objectdestructed\" - building, tree or bush destruction\n\n* \"#soundonvehicle\" - sound created with [say3D](https://community.bistudio.com/wiki/say3D) for example\n\n* \"#dynamicsound\" - sound source created using [createSoundSource](https://community.bistudio.com/wiki/createSoundSource)\n\n* \"EmptyDetector\" - All [triggers](https://community.bistudio.com/wiki/trigger)\n\n* \"Logic\" - All game logics\n> ",
        "syntaxArray": [
            {
                "Syntax": "**allMissionObjects** type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_airObjects = allMissionObjects \"Air\";\n```\n",
            "\n```sqf\n{ deleteVehicle _x } forEach (allMissionObjects \"\");\n```\n",
            "\n```sqf\n_allMObjects =allMissionObjects \"All\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allMissionObjects",
        "modifiers": []
    },
    "curatorcamera": {
        "name": "curatorCamera",
        "description": "Returns curator camera object.",
        "syntaxArray": [
            {
                "Syntax": "curatorCamera",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_camCurator = curatorCamera\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorCamera",
        "modifiers": []
    },
    "setgroupid": {
        "name": "setGroupId",
        "description": "Sets the group radio callsign, how it will be displayed in radio chat. Two groups on the same side **cannot** have the same callsign (different side is possible). When trying to apply the same callsign to two groups of the same side, the callsigns will simply be swapped, e.g:\n\n```sqf\ngroup1 setGroupId [\"Active Group\"];\ngroup2 setGroupId [\"Inactive Group\"];\ngroup2 setGroupId [\"Active Group\"]; // group1 is \"Inactive Group\" now\n```\n\n\nThe identity setup can also consist of format keywords (marked with %) and param keywords taken from **CfgWorlds** config.\nBasically it is like [format](https://community.bistudio.com/wiki/format) command but with some special group keywords (See Example 2).\n\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "group setGroupId [nameFormat, nameParam1, ..., nameParamN]",
                "Params": "group: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n[nameFormat, nameParam1, ..., nameParamN]: [Array](https://community.bistudio.com/wiki/Array)\n\nnameFormat: [String](https://community.bistudio.com/wiki/String) - format template (%keyword1 - %keyword2...etc)\n\nnameParam1: [String](https://community.bistudio.com/wiki/String) - param keyword\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "**Arma 3**:\n```sqf\ngroup player setGroupId [\"Some name for the group\"];\nhint groupId group player;\t// \"Some name for the group\"\nplayer sideChat \"lalala\";\t// Some name for the group (KK): \"lalala\"\n```\n",
            "**Arma 3**:\n```sqf\ngroup player setGroupId [\"%GroupNames :=: %GroupColors\", \"Alpha\", \"GroupColor2\"];\nhint groupId group player;\t// \"Alpha :=: Red\"\nplayer sideChat \"lalala\";\t// Alpha :=: Red (KK): \"lalala\"\n```\n",
            "**Armed Assault / Arma 2 / Arma 3**: \n```sqf\n_group1 setGroupId [\"Assault Squad\"];\n```\n",
            "**Operation Flashpoint**: \n```sqf\n_group1 setGroupId [\"Delta\", \"GroupColor4\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupId",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "displayremoveeventhandler": {
        "name": "displayRemoveEventHandler",
        "description": "Remove a given event handler from the given display.",
        "syntaxArray": [
            {
                "Syntax": "display **displayRemoveEventHandler** [handlerType, id]",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\nhandlerType: [String](https://community.bistudio.com/wiki/String) - Type of the event handler\n\nid: [Number](https://community.bistudio.com/wiki/Number) - Index of the event handler\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 46 displayRemoveEventHandler [\"keyDown\",5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displayRemoveEventHandler",
        "modifiers": []
    },
    "getfieldmanualstartpage": {
        "name": "getFieldManualStartPage",
        "description": "Returns array of the starting topic and hint the given field manual should display.",
        "syntaxArray": [
            {
                "Syntax": "getFieldManualStartPage display",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [starting topic, hint]"
            }
        ],
        "examples": [
            "\n```sqf\ngetFieldManualStartPage (findDisplay 46); // returns [\"\", \"\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getFieldManualStartPage",
        "modifiers": []
    },
    "setvehicleammodef": {
        "name": "setVehicleAmmoDef",
        "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to [local](https://community.bistudio.com/wiki/local) turrets. To check the locality of turret use [turretLocal](https://community.bistudio.com/wiki/turretLocal).",
        "syntaxArray": [
            {
                "Syntax": "unit **setVehicleAmmoDef** value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Unit or vehicle.\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - From 0 (no ammo) to 1 (fully loaded).\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVehicleAmmoDef 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleAmmoDef",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "lbselection": {
        "name": "lbSelection",
        "description": "Returns [Array](https://community.bistudio.com/wiki/Array) of selected rows indices in the given listbox. If listbox is of style LB_MULTI (multi-selection) the array will contain multiple elements, otherwise only a single element. For single selection listbox one can also use [lbCurSel](https://community.bistudio.com/wiki/lbCurSel). See also [lbIsSelected](https://community.bistudio.com/wiki/lbIsSelected), [lbSetSelected](https://community.bistudio.com/wiki/lbSetSelected)",
        "syntaxArray": [
            {
                "Syntax": "**lbSelection** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_indices = lbSelection _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSelection",
        "modifiers": []
    },
    "useaiopermapobstructiontest": {
        "name": "useAIOperMapObstructionTest",
        "description": "Toggle secondary obstruction test on road paths. > ",
        "syntaxArray": [
            {
                "Syntax": "**useAIOperMapObstructionTest** state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to enable, [false](https://community.bistudio.com/wiki/false) to disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nuseAIOperMapObstructionTest true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/useAIOperMapObstructionTest",
        "modifiers": []
    },
    "move": {
        "name": "move",
        "description": "Let group move to given position. Active waypoints will be ignored when command is used.",
        "syntaxArray": [
            {
                "Syntax": "group move position",
                "Params": "group: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nposition: [Position2D](https://community.bistudio.com/wiki/Position2D) or [PositionATL](https://community.bistudio.com/wiki/PositionATL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_groupOne move position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/move",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "reveal": {
        "name": "reveal",
        "description": "Reveals a target to a [group](https://community.bistudio.com/wiki/group). If *toWhom* is a unit, unit's group is considered. If *toWhom* is a vehicle, vehicle commander's group is considered.  The [knowledge value](https://community.bistudio.com/wiki/knowsAbout) will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has *no* knowledge about the revealed target, the value will be set to 1.\n\nSince ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the target, too. The knowledge level can only be increased, not decreased by this command. Use [forgetTarget](https://community.bistudio.com/wiki/forgetTarget) first if you need to decrease value.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "toWhom reveal target",
                "Params": "toWhom: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)  which receives revealing information\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)  which is revealed\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "toWhom reveal [target, accuracy]",
                "Params": "toWhom: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)  which receives revealing information\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)  which is revealed\n\naccuracy: [Number](https://community.bistudio.com/wiki/Number) - knowledge value, clamped to 0..4 range\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne reveal _soldierTwo; // soldierOne knowsAbout information about soldierTwo is updated\n```\n",
            "\n```sqf\nplayer reveal cursorObject; // player knowsAbout information about object under cursor is updated\n```\n",
            "\n```sqf\n_soldierOne reveal [_soldierTwo, 1.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/reveal",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "someammo": {
        "name": "someAmmo",
        "description": "Check if unit has some ammo.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **someAmmo** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n? not (someAmmo _loon1) : hint \"Loon1 is out of ammo!\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/someAmmo",
        "modifiers": []
    },
    "leaderboardsrequestuploadscore": {
        "name": "leaderboardsRequestUploadScore",
        "description": "Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional. The board has to be initialized before the call.",
        "syntaxArray": [
            {
                "Syntax": "**leaderboardsRequestUploadScore** [boardName, score, [details]]",
                "Params": "boardname: [String](https://community.bistudio.com/wiki/String) -\n\nscore: [Number](https://community.bistudio.com/wiki/Number) -\n\ndetails: [Array](https://community.bistudio.com/wiki/Array) (optional) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardsRequestUploadScore [\"TT01\", 1234, [5,6,7,8]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardsRequestUploadScore",
        "modifiers": []
    },
    "triggerattachobject": {
        "name": "triggerAttachObject",
        "description": "Assigns a static object to the trigger. The activation source is changed to \"STATIC\".",
        "syntaxArray": [
            {
                "Syntax": "triggerName triggerAttachObject objectId",
                "Params": "triggerName: [Object](https://community.bistudio.com/wiki/Object)\n\nobjectId: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger triggerAttachObject 1234;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerAttachObject",
        "modifiers": []
    },
    "save3deninventory": {
        "name": "save3DENInventory",
        "description": "Saves the current state of entities' inventory to the current mission's [Mission.sqm](https://community.bistudio.com/wiki/Mission.sqm).",
        "syntaxArray": [
            {
                "Syntax": "save3DENInventory entities",
                "Params": "entities: [Array](https://community.bistudio.com/wiki/Array) of types [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsave3DENInventory [_soldier1,_solider2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/save3DENInventory",
        "modifiers": []
    },
    "getmarkercolor": {
        "name": "getMarkerColor",
        "description": "Returns marker color for given marker.\n> ",
        "syntaxArray": [
            {
                "Syntax": "getMarkerColor markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String) - marker name\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerColor \"ColorBlack\";\n_color = getMarkerColor \"MarkerOne\"; // returns \"ColorBlack\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMarkerColor",
        "modifiers": []
    },
    "setmusiceffect": {
        "name": "setMusicEffect",
        "description": "Defines a music track played on activation. If another track is playing already, this will stop it and start the new track.\n\nTrack is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track) or use [playMusic](https://community.bistudio.com/wiki/playMusic) \"\".\nWhen used in a trigger, the track starts on activation but does not automatically stop on deactivation.",
        "syntaxArray": [
            {
                "Syntax": "trigger **setMusicEffect** track",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\ntrack: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "waypoint **setMusicEffect** track",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\ntrack: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setMusicEffect \"Track1\";\n```\n",
            "\n```sqf\n[_group1,1] setMusicEffect \"$STOP$\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMusicEffect",
        "modifiers": []
    },
    "soldiermagazines": {
        "name": "soldierMagazines",
        "description": "Get array with all magazines of the given unit.",
        "syntaxArray": [
            {
                "Syntax": "**soldierMagazines** unit",
                "Params": "unit : [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierMagazines player;\n```\n\n\n\n```sqf\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](5x)\",\n\t\"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\",\n\t\"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\",\n\t\"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\",\n\t\"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\",\n\t\"Chemlight (Green)(1/1)[id/cr:14/0](2x)\",\n\t\"Titan AT Missile(1/1)[id/cr:16/0](2x)\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/soldierMagazines",
        "modifiers": []
    },
    "ceil": {
        "name": "ceil",
        "description": "The ceil value of x.",
        "syntaxArray": [
            {
                "Syntax": "**ceil** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nceil 5.25; // Result is 6\n```\n",
            "\n```sqf\nceil -5.25; // Result is -5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ceil",
        "modifiers": []
    },
    "isnumber": {
        "name": "isNumber",
        "description": "Check if config entry represents number.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **isNumber** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n _ok = isNumber (configFile >> \"CfgVehicles\")\n```\n\n\nResult is false"
        ],
        "Url": "https://community.bistudio.com/wiki/isNumber",
        "modifiers": []
    },
    "vestmagazines": {
        "name": "vestMagazines",
        "description": "Get array with all magazines from vest of the given unit.",
        "syntaxArray": [
            {
                "Syntax": "**vestMagazines** unit",
                "Params": "unit : [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nvestMagazines player;\n```\n\n\n\n```sqf\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:4/0](2x)\",\n\t\"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\",\n\t\"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\",\n\t\"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\",\n\t\"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\",\n\t\"Chemlight (Green)(1/1)[id/cr:14/0](2x)\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vestMagazines",
        "modifiers": []
    },
    "teammember": {
        "name": "teamMember",
        "description": "Return an agent for given person.",
        "syntaxArray": [
            {
                "Syntax": "**teamMember** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Team Member](https://community.bistudio.com/wiki/Team_Member)"
            }
        ],
        "examples": [
            "\n```sqf\n_agent = teamMember player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teamMember",
        "modifiers": []
    },
    "setunloadincombat": {
        "name": "setUnloadInCombat",
        "description": "If cargo or turret units *should* get out of vehicle when in combat. If **true**, vehicle will stop and units will dismount. Vehicle must be local.",
        "syntaxArray": [
            {
                "Syntax": "vehicle setUnloadInCombat [allowCargo, allowTurrets]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[allowCargo, allowTurrets]: [Array](https://community.bistudio.com/wiki/Array)\n\nallowCargo: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\nallowTurrets: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_veh setUnloadInCombat [true, false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnloadInCombat",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "stopped": {
        "name": "stopped",
        "description": "Check if unit is stopped by [stop](https://community.bistudio.com/wiki/stop) command.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **stopped** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n? (stopped _loon1) : hint \"Loon1 is stopped\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/stopped",
        "modifiers": []
    },
    "settriggeractivation": {
        "name": "setTriggerActivation",
        "description": "Defines the trigger activation type. \n\nSee [ArmA:Mission Editor - Triggers](https://community.bistudio.com/wiki/ArmA:_Mission_Editor#Triggers_Mode_.28F3.29) for a thorough overview of triggers and its fields for activation, effects, etc.   Since Arma 3 v1.67, \"ANYPLAYER\" activation can be used to detect any player.",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTriggerActivation** [by, type, repeating]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - Trigger object\n\nby: [String](https://community.bistudio.com/wiki/String) - Who activates trigger. Can be \"NONE\" or\n\n* Side: \"EAST\", \"WEST\", \"GUER\", \"CIV\", \"LOGIC\", \"ANY\", \"ANYPLAYER\" (*Since Arma 3 v1.67*)\n\n* Radio: \"ALPHA\", \"BRAVO\", \"CHARLIE\", \"DELTA\", \"ECHO\", \"FOXTROT\", \"GOLF\", \"HOTEL\", \"INDIA\", \"JULIET\"\n\n* Object: \"STATIC\", \"VEHICLE\", \"GROUP\", \"LEADER\", \"MEMBER\"\n\n* Status: \"WEST SEIZED\", \"EAST SEIZED\" or \"GUER SEIZED\"\n\ntype: [String](https://community.bistudio.com/wiki/String) -  How trigger is it activated. Can be:\n\n* Presence: \"PRESENT\", \"NOT PRESENT\"\n\n* Detection: \"WEST D\", \"EAST D\", \"GUER D\" or \"CIV D\"\n\nrepeating: [Boolean](https://community.bistudio.com/wiki/Boolean) - Activation can happen repeatedly\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setTriggerActivation [\"WEST\", \"EAST D\", true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerActivation",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setparticlecircle": {
        "name": "setParticleCircle",
        "description": "Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity. Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleCircle\n[\n\tcircleRadius,\n\tcircleVelocity\n];\n```\n",
        "syntaxArray": [
            {
                "Syntax": "particleSource **setParticleCircle** [radius, velocity]",
                "Params": "particleSource: [Object](https://community.bistudio.com/wiki/Object)\n\n[radius, velocity]: [Array](https://community.bistudio.com/wiki/Array)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\nvelocity: [Array](https://community.bistudio.com/wiki/Array) (x,y,z)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/setParticleCircle",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "addcuratorcameraarea": {
        "name": "addCuratorCameraArea",
        "description": "Adds or changes curator camera area (depends on if ID is already used).",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **addCuratorCameraArea** [cameraAreaID,position,radius]",
                "Params": "[cameraAreaID,position,radius]: [Array](https://community.bistudio.com/wiki/Array)\n\ncuratorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\ncameraAreaID: [Number](https://community.bistudio.com/wiki/Number)\n\nposition: [Position](https://community.bistudio.com/wiki/Position)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCurator addCuratorCameraArea [3,position mySoldier,300];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addCuratorCameraArea",
        "modifiers": []
    },
    "setsystemofunits": {
        "name": "setSystemOfUnits",
        "description": "Set system of units. This will only impact gauges from advanced flight model.\n> ",
        "syntaxArray": [
            {
                "Syntax": "setSystemOfUnits value",
                "Params": "value: [Number](https://community.bistudio.com/wiki/Number) - possible values are:\n0 - metric\n1 - mixed\n2 - imperial\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (player in _myHelicopter) then { setSystemOfUnits 2; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSystemOfUnits",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlremoveeventhandler": {
        "name": "ctrlRemoveEventHandler",
        "description": "Remove a given event handler from the given control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlRemoveEventHandler** [handler name,id]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) -\n\n[handler name,id]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n_map ctrlRemoveEventHandler [\"Draw\", _id];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlRemoveEventHandler",
        "modifiers": []
    },
    "mapcenteroncamera": {
        "name": "mapCenterOnCamera",
        "description": "ctrl mapCenterOnCamera enable syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.\nmapCenterOnCamera ctrl syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).",
        "syntaxArray": [
            {
                "Syntax": "mainmap **mapCenterOnCamera** enable",
                "Params": "mainmap: [Control](https://community.bistudio.com/wiki/Control)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "**mapCenterOnCamera** minimap *Since Arma 3 v1.47*",
                "Params": "minimap: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [PositionWorld](https://community.bistudio.com/wiki/PositionWorld) of the map center (camera focus object) in render scope"
            }
        ],
        "examples": [
            "\n```sqf\n// --- Minimap update\n((uiNamespace getVariable \"BIS_UAV_DISPLAY\") displayCtrl 112410) mapCenterOnCamera true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mapCenterOnCamera",
        "modifiers": []
    },
    "visiblegps": {
        "name": "visibleGPS",
        "description": "Checks if the player has GPS receiver (minimap) opened and visible.",
        "syntaxArray": [
            {
                "Syntax": "**visibleGPS**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (visibleGPS) then {hint \"GPS is visible\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visibleGPS",
        "modifiers": []
    },
    "onpreloadfinished": {
        "name": "onPreloadFinished",
        "description": "Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.\n> \n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**onPreloadFinished** command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonPreloadFinished {TAG_ReceivingScreenDone = true};\n```\n",
            "\n```sqf\n//removes the event immediately after the first run again\nonPreloadFinished {TAG_ReceivingScreenDone = true; onPreloadFinished \"\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onPreloadFinished",
        "modifiers": []
    },
    "removebinocularitem": {
        "name": "removeBinocularItem",
        "description": "Removes given weapon item, including magazine, from the [binocular](https://community.bistudio.com/wiki/binocular) weapon.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeBinocularItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeBinocularItem \"Laserbatteries\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeBinocularItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "settrafficspeed": {
        "name": "setTrafficSpeed",
        "description": "Set ambient traffic speed in a rectangle (in kilometers per hour). > ",
        "syntaxArray": [
            {
                "Syntax": "setTrafficSpeed [speed, xMin, xMax, zMin, zMax]",
                "Params": "speed: [Number](https://community.bistudio.com/wiki/Number) - traffic speed (in kilometers per hour)\n\nxMin: [Number](https://community.bistudio.com/wiki/Number) - western border of the affected rectangle\n\nxMax: [Number](https://community.bistudio.com/wiki/Number) - eastern border of the affected rectangle\n\nzMin: [Number](https://community.bistudio.com/wiki/Number) - southern border of the affected rectangle\n\nzMax: [Number](https://community.bistudio.com/wiki/Number) - northern border of the affected rectangle\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetTrafficSpeed [50, _xMin, _xMax, _zMin, _zMax];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTrafficSpeed",
        "modifiers": []
    },
    "doorphase": {
        "name": "doorPhase",
        "description": "Return animation phase of door on vehicle.",
        "syntaxArray": [
            {
                "Syntax": "object **doorPhase** door",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ndoor: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_phase = heli doorPhase \"door_L\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doorPhase",
        "modifiers": []
    },
    "curatorselected": {
        "name": "curatorSelected",
        "description": "Returns list of all curator selected items.",
        "syntaxArray": [
            {
                "Syntax": "**curatorSelected**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [[Objects],[Groups],[Waypoints],[Markers]]"
            }
        ],
        "examples": [
            "\n```sqf\nselectedItems = curatorSelected;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorSelected",
        "modifiers": []
    },
    "boundingcenter": {
        "name": "boundingCenter",
        "description": "Returns the position of original (loaded) center of object in model coordinates.",
        "syntaxArray": [
            {
                "Syntax": "**boundingCenter** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [PositionRelative](https://community.bistudio.com/wiki/PositionRelative)"
            }
        ],
        "examples": [
            "\n```sqf\n_center = boundingCenter TruckOne\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/boundingCenter",
        "modifiers": []
    },
    "addcuratoreditingarea": {
        "name": "addCuratorEditingArea",
        "description": "Adds or changes curator edit area (depends on if ID is already used).",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **addCuratorEditingArea** [editAreaID,position,radius]",
                "Params": "[editAreaID,position,radius]: [Array](https://community.bistudio.com/wiki/Array)\n\ncuratorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\neditAreaID: [Number](https://community.bistudio.com/wiki/Number)\n\nposition: [Position](https://community.bistudio.com/wiki/Position)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCurator addCuratorEditingArea [4, position player, 1000];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addCuratorEditingArea",
        "modifiers": [
            "Server execution"
        ]
    },
    "secondaryweapon": {
        "name": "secondaryWeapon",
        "description": "Returns the name of a unit's secondary weapon. To detect the weapon which is **currently** being used by the unit use [currentWeapon](https://community.bistudio.com/wiki/currentWeapon).",
        "syntaxArray": [
            {
                "Syntax": "secondaryWeapon unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) -  Class name of the secondary weapon or \n```sqf\n\"\"\n```\n if none available"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _secondaryWeapon = secondaryWeapon player;\n```\n",
            "\n```sqf\nhint secondaryWeapon player; // \"launch_NLAW_F\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/secondaryWeapon",
        "modifiers": []
    },
    "lbclear": {
        "name": "lbClear",
        "description": "Clear all items from a [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO) control.",
        "syntaxArray": [
            {
                "Syntax": "lbClear idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "lbClear control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbClear 101;\n```\n",
            "\n```sqf\nlbClear _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbClear",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "decaygraphvalues": {
        "name": "decayGraphValues",
        "description": "Multiplies graph values by the given coefficient. The corresponding lower bound value is used instead if the product is smaller than the bound.",
        "syntaxArray": [
            {
                "Syntax": "decayGraphValues [lowerBoundValues, graphValues, coef]",
                "Params": "[lowerBoundValues, graphValues, coef]: [Array](https://community.bistudio.com/wiki/Array)\n\nlowerBoundValues: [Array](https://community.bistudio.com/wiki/Array) - Lower bound for the new graph\n\ngraphValues: [Array](https://community.bistudio.com/wiki/Array) - Graph values\n\ncoef: [Number](https://community.bistudio.com/wiki/Number) - The coefficient to be multiplied with\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\ndecayGraphValues [[1,2,3,4,5], [1,4,9,16,25], 0.3] //returns [1,2,3,4.8,7.5]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/decayGraphValues",
        "modifiers": []
    },
    "setslingload": {
        "name": "setSlingLoad",
        "description": "Creates a sling loading from a helicopter to an entity if possible. To unload cargo, pass [objNull](https://community.bistudio.com/wiki/objNull) as second param. \n> ",
        "syntaxArray": [
            {
                "Syntax": "heli setSlingLoad cargo",
                "Params": "heli: [Object](https://community.bistudio.com/wiki/Object) - the helicopter slinging the load\n\ncargo: [Object](https://community.bistudio.com/wiki/Object) - the cargo load entity\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\n_success = heli1 setSlingLoad veh1;\n```\n",
            "To unload cargo:\n```sqf\n_success = heli setSlingLoad objNull;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSlingLoad",
        "modifiers": []
    },
    "kbhastopic": {
        "name": "kbHasTopic",
        "description": "Check if conversation topic was registered to given person. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.",
        "syntaxArray": [
            {
                "Syntax": "person kbHasTopic topicName",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\ntopicName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_obiHasTopic = player kbHasTopic \"helloThereGeneralK\";\n```\n",
            "\n```sqf\nif (player kbHasTopic \"dontShoot\") then { player kbRemoveTopic \"dontShoot\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbHasTopic",
        "modifiers": [
            "Local argument"
        ]
    },
    "setmarkershape": {
        "name": "setMarkerShape",
        "description": "Selects shape (actual type) of the marker.",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerShape** shape",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\nshape: [String](https://community.bistudio.com/wiki/String) - The shape, can be one of:\n\n* \"ICON\"\n\n* \"RECTANGLE\"\n\n* \"ELLIPSE\"\n\n* \"POLYLINE\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerShape \"RECTANGLE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerShape",
        "modifiers": [
            "Global effect"
        ]
    },
    "hideobject": {
        "name": "hideObject",
        "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.",
        "syntaxArray": [
            {
                "Syntax": "**hideObject** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "object **hideObject** hidden",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nhidden: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true)->hidden; [false](https://community.bistudio.com/wiki/false)->visible\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhideObject unitName; \n```\n",
            "\n```sqf\nobjectName hideObject true; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hideObject",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setlightcolor": {
        "name": "setLightColor",
        "description": "Set diffuse color of light. Illuminates surfaces that are facing the light.",
        "syntaxArray": [
            {
                "Syntax": "light setLightColor [r, g, b]",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\n[r, g, b]: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightColor [0.5,0,0]; // produces red\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightColor",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "resistance": {
        "name": "resistance",
        "description": "Pre-defined variable for the resistance [side](https://community.bistudio.com/wiki/Side).",
        "syntaxArray": [
            {
                "Syntax": "**resistance**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "[SQS](https://community.bistudio.com/wiki/SQS_Syntax):\n```sqf\n?(side _unit == resistance) : hint \"This is a resistance unit!\"\n```\n",
            "[SQF](https://community.bistudio.com/wiki/SQF_Syntax):\n```sqf\nif (side _unit == resistance) then \n{\n    hint \"This is a resistance unit!\";\n};\n```\n",
            "[SQF](https://community.bistudio.com/wiki/SQF_Syntax): \n```sqf\nhint format [\"%1\", resistance]; // Returns \"GUER\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/resistance",
        "modifiers": []
    },
    "ctrlvisible": {
        "name": "ctrlVisible",
        "description": "Returns if a control of the currently active user dialog is shown or not. Read [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs and controls.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlVisible** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if the control is shown, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = ctrlVisible 100;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlVisible",
        "modifiers": [
            "Local argument"
        ]
    },
    "enginestorquertd": {
        "name": "enginesTorqueRTD",
        "description": "Torque produced by engines in **N·m** (Newton*meter).> ",
        "syntaxArray": [
            {
                "Syntax": "enginesTorqueRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_UH80_E1 = (enginesTorqueRTD _UH80) select 0;//engine 1 Torque\n_UH80_E2 = (enginesTorqueRTD _UH80) select 1;//engine 2 Torque\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enginesTorqueRTD",
        "modifiers": []
    },
    "setnamesound": {
        "name": "setNameSound",
        "description": "Sets the [nameSound](https://community.bistudio.com/wiki/nameSound) of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\".\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "person setNameSound name",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit1 setNameSound \"dixon\";\n```\n",
            "\n```sqf\nunit1 setNameSound \"\"; // will reset to default behaviour\n```\n",
            "\n```sqf\n_name = \"Masood\";\nunit1 setNameSound _name; \nunit1 setName _name;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setNameSound",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "and": {
        "name": "and",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) only if both conditions are [true](https://community.bistudio.com/wiki/true). In case of the alternative syntax, [lazy evaluation](https://community.bistudio.comhttp://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures) is used (if left operand is [false](https://community.bistudio.com/wiki/false), evaluation of the right side is skipped completely).",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = a **and** b",
                "Params": "a: [Boolean](https://community.bistudio.com/wiki/Boolean) - Test condition or variable that returns [Boolean](https://community.bistudio.com/wiki/Boolean).\n\nb: [Boolean](https://community.bistudio.com/wiki/Boolean) - Test condition or variable that returns [Boolean](https://community.bistudio.com/wiki/Boolean).\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = a **and** b (*Only available since Arma 2:OA v1.62.*)",
                "Params": "a: [Boolean](https://community.bistudio.com/wiki/Boolean) - Test condition or variable that returns [Boolean](https://community.bistudio.com/wiki/Boolean).\n\nb: [Code](https://community.bistudio.com/wiki/Code) - Code that returns [Boolean](https://community.bistudio.com/wiki/Boolean). It is not evaluated if **a** returns as [false](https://community.bistudio.com/wiki/false).\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif ((alive player) and (_enemycount == 0)) then {hint \"you win !\"}\n```\n",
            "\n```sqf\nif ((count _array > 0) and {(_array select 0) == player}) then {hint \"It works! Without lazy evaluation it would throw an error if array was empty.\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/and",
        "modifiers": []
    },
    "firstbackpack": {
        "name": "firstBackpack",
        "description": "Returns the first stored backpack.",
        "syntaxArray": [
            {
                "Syntax": "firstBackpack box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nmyVariable = firstBackpack myBox;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/firstBackpack",
        "modifiers": []
    },
    "titlefadeout": {
        "name": "titleFadeOut",
        "description": "Terminate the title effect and set duration of the fade out phase to the given time. Same as [cutFadeOut](https://community.bistudio.com/wiki/cutFadeOut) but for the title layer.",
        "syntaxArray": [
            {
                "Syntax": "titleFadeOut duration",
                "Params": "duration: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntitleText [\"Hi\", \"plain\"]; \ntitleFadeOut 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/titleFadeOut",
        "modifiers": []
    },
    "exec": {
        "name": "exec",
        "description": "Execute a script using (the deprecated but still available) [SQS Syntax](https://community.bistudio.com/wiki/SQS_Syntax). [SQF Syntax](https://community.bistudio.com/wiki/SQF_Syntax) (and [execVM](https://community.bistudio.com/wiki/execVM)) is the most recent scripting language.\nThe magic variable [_time](https://community.bistudio.com/wiki/Magic_Variables#time) used within the script contains the elapsed time in seconds since the script started.\n> ",
        "syntaxArray": [
            {
                "Syntax": "argument exec script",
                "Params": "argument: [Anything](https://community.bistudio.com/wiki/Anything) - the argument passed to the script through the [_this](https://community.bistudio.com/wiki/Magic_Variables#this) variable. To pass multiple arguments, use an [Array](https://community.bistudio.com/wiki/Array).\n\nscript: [String](https://community.bistudio.com/wiki/String) - the file path to the script. It should be given relatively to the mission folder, campaign scripts subfolder or global scripts folder and is searched there in the same order.If you refer to a script packed together with an addon, the path should look like this: \"\\ADDON_PBO_NAME\\script.sqs\" where ADDON_PBO_NAME is the name of the addon's [PBO](https://community.bistudio.com/wiki/PBO) file without extension.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[player, _jeep] exec \"getin.sqs\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/exec",
        "modifiers": []
    },
    "weapondirection": {
        "name": "weaponDirection",
        "description": "Returns the direction that the vehicle weapon is aiming in. For addons the weapon name must be an entry in CfgWeapons.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicleName weaponDirection weaponName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nweaponName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Vector3D](https://community.bistudio.com/wiki/Vector3D)"
            }
        ],
        "examples": [
            "\n```sqf\n_weaponVectorDir = player weaponDirection currentWeapon player;\n```\n",
            "Draw AI eye direction (green) and weapon direction (red) in 3D: \n```sqf\nbob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"];\nbob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"];\nonEachFrame\n{\n\t_beg = ASLToAGL eyePos bob;\n\t_endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100));\n\tdrawLine3D [ _beg, _endE, [0,1,0,1]];\n\t_endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endW, [1,0,0,1]];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponDirection",
        "modifiers": [
            "Global argument"
        ]
    },
    "nextmenuitemindex": {
        "name": "nextMenuItemIndex",
        "description": "Returns the next available menu item index.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**nextMenuItemIndex** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/nextMenuItemIndex",
        "modifiers": []
    },
    "winddir": {
        "name": "windDir",
        "description": "Returns the current wind azimuth.",
        "syntaxArray": [
            {
                "Syntax": "windDir",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - azimuth"
            }
        ],
        "examples": [
            "\n```sqf\nif (windDir < 45 || windDir > 315) then {\n\thint \"I feel a southern wind\"; // wind going from South to North\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/windDir",
        "modifiers": []
    },
    "setrank": {
        "name": "setRank",
        "description": "Sets rank of given unit.\n\nPossible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "unitName **setRank** rank",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nrank: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setRank \"COLONEL\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRank",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "loadabs": {
        "name": "loadAbs",
        "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.",
        "syntaxArray": [
            {
                "Syntax": "**loadAbs** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "Player weight:\n```sqf\n_weight = loadAbs player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadAbs",
        "modifiers": []
    },
    "tvsetdata": {
        "name": "tvSetData",
        "description": "Sets string data to item on given path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "tvSetData [idc, path, data]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl tvSetData [path, data]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetData [101, [0], \"Test data\"];\n```\n",
            "\n```sqf\n_ctrl tvSetData [[0,0,0], \"Test data\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetData",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "fogforecast": {
        "name": "fogForecast",
        "description": "Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog.",
        "syntaxArray": [
            {
                "Syntax": "**fogForecast**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_level = fogForecast;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fogForecast",
        "modifiers": []
    },
    "vectordir": {
        "name": "vectorDir",
        "description": "Returns object's normalized direction vector in world space ([x,y,z]). \n\n* A unit facing North would return [0,1,0]\n\n* A unit facing East would return [1,0,0]\n\n* A unit facing South would return [0,-1,0]\n\n* A unit facing West would return [-1,0,0]",
        "syntaxArray": [
            {
                "Syntax": "vectorDir object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Vector3D](https://community.bistudio.com/wiki/Vector3D)"
            }
        ],
        "examples": [
            "\n```sqf\n_dirVector = vectorDir _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorDir",
        "modifiers": [
            "Global argument"
        ]
    },
    "setvehiclelock": {
        "name": "setVehicleLock",
        "description": "Sets vehicle lock. Possible values:\n \n\n* \"UNLOCKED\"\n\n* \"DEFAULT\"\n\n* \"LOCKED\"\n\n* \"LOCKEDPLAYER\"",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **setVehicleLock** lockState",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nlockState: [String](https://community.bistudio.com/wiki/String) see above\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_veh1 setVehicleLock \"LOCKED\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleLock",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "formattext": {
        "name": "formatText",
        "description": "Creates a [Structured Text](https://community.bistudio.com/wiki/Structured_Text) similar to [format](https://community.bistudio.com/wiki/format) command.",
        "syntaxArray": [
            {
                "Syntax": "formatText [format, argument1, argument2, ...]",
                "Params": "format: [String](https://community.bistudio.com/wiki/String) - a string containing text and/or references to the variables listed below in the array. The references appear in the form of %1, %2 etc.\n\nargument: [Anything](https://community.bistudio.com/wiki/Anything) - use [Structured Text](https://community.bistudio.com/wiki/Structured_Text) where necessary (see [Example 2](https://community.bistudio.com/wiki/formatText#Example))\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\nhint formatText [\"Image: %1\", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"];\n```\n",
            "\n```sqf\nhint formatText [\"%1%2%3\", \"line1\", \"<br/>\", \"line2\"];\t\t// result displayed in one line\nhint formatText [\"%1%2%3\", \"line1\", lineBreak, \"line2\"];\t// result displayed in two lines\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/formatText",
        "modifiers": []
    },
    "log": {
        "name": "log",
        "description": "Base-10 logarithm of x.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **log** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_log = log 10; // 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/log",
        "modifiers": []
    },
    "getdiverstate": {
        "name": "getDiverState",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) when object is in diver state i.e. when unit would put diving [goggles](https://community.bistudio.com/wiki/goggles) on. \n> ",
        "syntaxArray": [
            {
                "Syntax": "getDiverState unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) when diving [goggles](https://community.bistudio.com/wiki/goggles) are visible"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _gogglesOn = getDiverState player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDiverState",
        "modifiers": []
    },
    "forcecadetdifficulty": {
        "name": "forceCadetDifficulty",
        "description": "Forces showCadetHints and showCadetWP global Cadet [Arma 3 difficulty](https://community.bistudio.com/wiki/Arma_3:_Difficulty_Settings), returns previous settings.",
        "syntaxArray": [
            {
                "Syntax": "forceCadetDifficulty [showCadetHints, showCadetWP]",
                "Params": "showCadetHints: [Boolean](https://community.bistudio.com/wiki/Boolean) - showCadetHints difficulty\n\nshowCadetWP: [Boolean](https://community.bistudio.com/wiki/Boolean) - showCadetWP difficulty\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Booleans](https://community.bistudio.com/wiki/Boolean) - [prev_showCadetHints, prev_showCadetWP]"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _previousSettings = forceCadetDifficulty [true, false];\n```\n",
            "\n```sqf\nprivate _fnc_forceCadetDifficulty = \n{\n\tparams [\"_OKButtonPressed\"];\n\tif (_OKButtonPressed) then\n\t{\n\t\tforceCadetDifficulty (switch (toLowerANSI configName ((configFile >> \"CfgDifficultyPresets\") select difficulty)) do\n\t\t{\n\t\t\tcase \"recruit\";\n\t\t\tcase \"regular\":\n\t\t\t{\n\t\t\t\t// showCadetHints = 1;\n\t\t\t\t// showCadetWP = 1;\n\t\t\t\t[true, true]\n\t\t\t};\n\t\t\tcase \"veteran\":\n\t\t\t{\n\t\t\t\t// showCadetHints = 0;\n\t\t\t\t// showCadetWP = 1;\n\t\t\t\t[false, true]\n\t\t\t};\n\t\t\tdefault\n\t\t\t{\n\t\t\t\t// showCadetHints = 0;\n\t\t\t\t// showCadetWP = 0;\n\t\t\t\t[false, false]\n\t\t\t};\n\t\t});\n\t};\n};\n[true] call _fnc_forceCadetDifficulty;\n[missionNamespace, \"OnGameOptionsExited\", _fnc_forceCadetDifficulty] call BIS_fnc_addScriptedEventHandler;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceCadetDifficulty",
        "modifiers": []
    },
    "soundvolume": {
        "name": "soundVolume",
        "description": "Returns the current sound volume (set by [fadeSound](https://community.bistudio.com/wiki/fadeSound)).",
        "syntaxArray": [
            {
                "Syntax": "**soundVolume**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str soundVolume;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/soundVolume",
        "modifiers": []
    },
    "setplayable": {
        "name": "setPlayable",
        "description": "Create MP role for the unit. The roles created this way are used for [Join In Progress](https://community.bistudio.com/wiki/Multiplayer_Scripting#Join_In_Progress) and [Team Switch](https://community.bistudio.com/wiki/Team_Switch).",
        "syntaxArray": [
            {
                "Syntax": "**setPlayable** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetPlayable _aPerson\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPlayable",
        "modifiers": []
    },
    "setobjectmaterialglobal": {
        "name": "setObjectMaterialGlobal",
        "description": "Set the material of the given selection on all computers in a network session.",
        "syntaxArray": [
            {
                "Syntax": "obj **setObjectMaterialGlobal** [selection, material]",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n[selection,material]: [Array](https://community.bistudio.com/wiki/Array)\n\nselection: [Number](https://community.bistudio.com/wiki/Number)\n\nmaterial: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setObjectMaterialGlobal [0, \"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectMaterialGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "showwaypoints": {
        "name": "showWaypoints",
        "description": "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.",
        "syntaxArray": [
            {
                "Syntax": "showWaypoints enabled",
                "Params": "enabled: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "showWaypoints [true](https://community.bistudio.com/wiki/true);"
        ],
        "Url": "https://community.bistudio.com/wiki/showWaypoints",
        "modifiers": []
    },
    "publicvariable": {
        "name": "publicVariable",
        "description": "Reliably broadcasts [missionNamespace](https://community.bistudio.com/wiki/missionNamespace) variable and its **current** value to all computers (server/client).\nVariables broadcast with publicVariable during a mission will be available to [JIP](https://community.bistudio.com/wiki/Multiplayer_Scripting#Join_In_Progress) clients with the value they held at the time.\nSuch variables are persistent and sent to the JIP client before the first batch of client-side [Event Scripts](https://community.bistudio.com/wiki/Event_Scripts) (such as [init.sqf](https://community.bistudio.com/wiki/init.sqf)) is run.\n> \n\nThe following [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types) are supported:\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "publicVariable varName",
                "Params": "varName: [String](https://community.bistudio.com/wiki/String) - the [global variable](https://community.bistudio.com/wiki/Variables#Global_Scope)'s [Identifier](https://community.bistudio.com/wiki/Identifier)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nTAG_MyPublicVariable = 0;\nTAG_MyPublicVariable = 1;\npublicVariable \"TAG_MyPublicVariable\";\t// other clients will receive the \"TAG_MyPublicVariable\" variable with a 1 value\n\nTAG_MyPublicVariable = 2;\t\t\t\t// needs to be broadcast again - synchronisation is not automatic\n```\n",
            "JIP example:\n\n```sqf\nif (isNil \"TAG_CurrentTarget\") then\t// has the variable already been set and broadcast?\n{\n\tTAG_CurrentTarget = objNull;\t// if not, set it on the local machine\n};\n\nplayer doTarget TAG_CurrentTarget;\n```\n",
            "\n```sqf\nTAG_BossName = \"EvilBigBoss\";\n\npublicVariable TAG_BossName;\t// wrong - will try to publicVariable \"EvilBigBoss\" variable, that does not exist\npublicVariable \"TAG_BossName\";\t// correct - do not forget the quotes\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/publicVariable",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "savejoysticks": {
        "name": "saveJoysticks",
        "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.",
        "syntaxArray": [
            {
                "Syntax": "**saveJoysticks**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsaveJoysticks;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveJoysticks",
        "modifiers": []
    },
    "catch": {
        "name": "catch",
        "description": "Processes code when an [exception](https://community.bistudio.com/wiki/Exception_handling) is thrown in a [try](https://community.bistudio.com/wiki/try) block. The exception caught can be found in the *_exception* variable.",
        "syntaxArray": [
            {
                "Syntax": "tryBlock catch code",
                "Params": "tryBlock: [Exception Type](https://community.bistudio.com/wiki/Exception_handling)\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\ntry {throw \"invalid argument\"} catch {hint str _exception};\n```\n",
            "*since Arma 3 v1.53.133045*: \n```sqf\n123 try {if (_this != 123) throw \"invalid argument\"} catch {hint str _exception};\n```\n",
            "The correct usage of shorthand alt syntax: \n```sqf\ntry {\n\tif (a > b) throw \"Error: some error\"; // OK\n\t// The command argument is static\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) throw (call _someFunc); // NOT OK\n\t// The command argument is dynamic\n\t// _someFunc is called first to get the value regardless of (a > b) outcome\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) then {throw (call _someFunc)}; /// OK\n\t// The command argument is dynamic\n\t// _someFunc is only called when (a > b) is true\n} catch {\n\thint str _exception;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/catch",
        "modifiers": []
    },
    "canvehiclecargo": {
        "name": "canVehicleCargo",
        "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle",
        "syntaxArray": [
            {
                "Syntax": "vehicle canVehicleCargo cargo",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle carrying cargo\n\ncargo: [Object](https://community.bistudio.com/wiki/Object) - cargo to put in vehicle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [WillFitIntoCurrentVehicle, WillFitIntoEmptyVehicle]"
            }
        ],
        "examples": [
            "Blackfish with no vehicle cargo loaded\n\n```sqf\n_result = blackfish canVehicleCargo offroad; //[true, true]\n\n```\n",
            "Blackfish with one vehicle cargo called offroad already loaded\n\n```sqf\n_result = blackfish canVehicleCargo offroad; //[false, false]\n\n```\n\nEven if the Blackfish was empty offroad can't be loaded because it is already in a cargo space",
            "Blackfish with one vehicle cargo called offroad already loaded\n\n```sqf\n_result = blackfish canVehicleCargo offroad2; //[false, true]\n\n```\n\noffroad2 can't be loaded because there isn't enough space in the Blackfish, but if there was space offroad2 could be loaded into the Blackfish"
        ],
        "Url": "https://community.bistudio.com/wiki/canVehicleCargo",
        "modifiers": []
    },
    "ctrlsetfontheighth2": {
        "name": "ctrlSetFontHeightH2",
        "description": "Sets H2 font size of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontHeightH2** height",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightH2 0.05"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightH2",
        "modifiers": []
    },
    "asin": {
        "name": "asin",
        "description": "Arcsine of a number, result in [Degrees](https://community.bistudio.com/wiki/Number#Degrees).",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **asin** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_degrees = asin 0.5; // Returns 30\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/asin",
        "modifiers": []
    },
    "then": {
        "name": "then",
        "description": "First or second element of array is executed depending on result of [if](https://community.bistudio.com/wiki/if) condition. Result of the expression executed is returned as a result. > ",
        "syntaxArray": [
            {
                "Syntax": "if then else",
                "Params": "if: [If Type](https://community.bistudio.com/wiki/If_Type)\n\nelse: [Code](https://community.bistudio.com/wiki/Code) or [Array](https://community.bistudio.com/wiki/Array) - Can either be a [code](https://community.bistudio.com/wiki/Code) block or an array with two [code](https://community.bistudio.com/wiki/Code) elements. See **Example 3**\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nif (a > b) then { c = 1 };\n```\n",
            "\n```sqf\nif (a > b) then {\n    c = 1;\n} else {\n    c = 2;\n};\n```\n",
            "\n```sqf\nif (random 1 > 0.5) then [{hint \"> 1\";}, {hint \"< 1\";}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/then",
        "modifiers": []
    },
    "alive": {
        "name": "alive",
        "description": "Check if given vehicle/person/building is alive (i.e. not dead or destroyed).\n> ",
        "syntaxArray": [
            {
                "Syntax": "alive object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if alive, [false](https://community.bistudio.com/wiki/false) if dead/destroyed"
            }
        ],
        "examples": [
            "SQS: \n```sqf\n?!(alive player) : exit\n```\n",
            "SQF: \n```sqf\nif (!alive player) exitWith {};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/alive",
        "modifiers": [
            "Global argument"
        ]
    },
    "unitready": {
        "name": "unitReady",
        "description": "Check if the unit is ready. Unit is busy when it is given some command like [move](https://community.bistudio.com/wiki/move), until the command is finished.",
        "syntaxArray": [
            {
                "Syntax": "unitReady unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _it = unitReady _soldierOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitReady",
        "modifiers": []
    },
    "unitcombatmode": {
        "name": "unitCombatMode",
        "description": "Gets individual unit's [combat mode](https://community.bistudio.com/wiki/Combat_Modes). For more information see [setUnitCombatMode](https://community.bistudio.com/wiki/setUnitCombatMode).",
        "syntaxArray": [
            {
                "Syntax": "unitCombatMode unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nunitCombatMode _unit\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitCombatMode",
        "modifiers": []
    },
    "ctrlcommitted": {
        "name": "ctrlCommitted",
        "description": "Check if the control animation is finished.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **ctrlCommitted** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "_done = ctrlCommitted _control"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlCommitted",
        "modifiers": []
    },
    "effectivecommander": {
        "name": "effectiveCommander",
        "description": "Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to. So if in a tank there is a gunner and a commander and AI driver, if the effectiveCommander is gunner, then gunner pressing WASD will give AI orders to move. If gunner jumps out and then enters tank again, the effectiveCommander role most likely has changed to commander that remained in tank. Also the assignment seems to work on first come first served basis.",
        "syntaxArray": [
            {
                "Syntax": "**effectiveCommander** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - commander unit"
            }
        ],
        "examples": [
            "\n```sqf\n_commander = effectiveCommander tank;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/effectiveCommander",
        "modifiers": []
    },
    "ctrlsetactivecolor": {
        "name": "ctrlSetActiveColor",
        "description": "Sets text color of given control when control is selected.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetActiveColor** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) (format [Color (RGBA)](https://community.bistudio.com/wiki/Color))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetActiveColor [1, 0, 0, 1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetActiveColor",
        "modifiers": []
    },
    "lnbsetvalue": {
        "name": "lnbSetValue",
        "description": "Sets the additional **integer** value in the item with the position index of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetValue [idc, [row, column], value]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control lnbSetValue [[row, column], value]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbSetValue [[0,0],1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetValue",
        "modifiers": []
    },
    "environmentvolume": {
        "name": "environmentVolume",
        "description": "Returns the current environment volume (set by [fadeEnvironment](https://community.bistudio.com/wiki/fadeEnvironment))",
        "syntaxArray": [
            {
                "Syntax": "environmentVolume",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str environmentVolume;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/environmentVolume",
        "modifiers": []
    },
    "revealmine": {
        "name": "revealMine",
        "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)",
        "syntaxArray": [
            {
                "Syntax": "side **revealMine** mine",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\nmine: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nwest revealMine _mine;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/revealMine",
        "modifiers": []
    },
    "hmd": {
        "name": "hmd",
        "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.",
        "syntaxArray": [
            {
                "Syntax": "**hmd** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_nvgs = hmd player; //NVGoggles\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hmd",
        "modifiers": [
            "Global argument"
        ]
    },
    "stance": {
        "name": "stance",
        "description": "Returns the stance of the given unit. It can be one of:",
        "syntaxArray": [
            {
                "Syntax": "**stance** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Can be:\n\n* \"STAND\"\n\n* \"CROUCH\"\n\n* \"PRONE\"\n\n* \"UNDEFINED\" (for example, swimming)\n\n* \"\" (on non-person [object](https://community.bistudio.com/wiki/Object))"
            }
        ],
        "examples": [
            "\n```sqf\nif (stance player == \"STAND\") then {hint \"I am standing!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/stance",
        "modifiers": [
            "Global argument"
        ]
    },
    "opfor": {
        "name": "opfor",
        "description": "Pre-defined variable for the opfor [side](https://community.bistudio.com/wiki/Side).",
        "syntaxArray": [
            {
                "Syntax": "**opfor**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\n if (side player == opfor) then\n{\n    hint \"OPFOR\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/opfor",
        "modifiers": []
    },
    "setammoonpylon": {
        "name": "setAmmoOnPylon",
        "description": "Set count of ammo in magazine on pylon (supports pylon name since Arma 3 v1.94)",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setAmmoOnPylon** [pylon, ammocount]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[pylon, ammocount]: [Array](https://community.bistudio.com/wiki/Array)\n\npylon: [Number](https://community.bistudio.com/wiki/Number) or [String](https://community.bistudio.com/wiki/String) - pylon index (index starts from 1) or pylon name (see [getCompatiblePylonMagazines](https://community.bistudio.com/wiki/getCompatiblePylonMagazines) Example 4)\n\nammocount: [Number](https://community.bistudio.com/wiki/Number) - ammo count\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setAmmoOnPylon [1, 12];\n```\n",
            "\n```sqf\nvehicle player setAmmoOnPylon [\"pylon1\", 12];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAmmoOnPylon",
        "modifiers": []
    },
    "damage": {
        "name": "damage",
        "description": "Return the damage value of an object.",
        "syntaxArray": [
            {
                "Syntax": "damage object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - The returned number in range (healthy) 0..1 (dead)."
            }
        ],
        "examples": [
            "\n```sqf\n? (damage player) > 0.1) : player groupChat \"I'm hurt! Medic!\" // SQS \n```\n",
            "\n```sqf\nif ((damage player) > 0.1) then {\n    player groupChat \"I'm hurt! Medic!\";\n};\n```\n",
            "\n```sqf\nprivate _health = (1 - damage player) * 100; // Health in % from 0 to 100\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/damage",
        "modifiers": [
            "Global argument"
        ]
    },
    "saveprofilenamespace": {
        "name": "saveProfileNamespace",
        "description": "Saves all variables stored in [profileNamespace](https://community.bistudio.com/wiki/profileNamespace) to the active [Profile](https://community.bistudio.com/wiki/Profile).\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**saveProfileNamespace**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nprofileNamespace setVariable [\"TAG_lastPlayerLocation\", getPosASL player];\nsaveProfileNamespace;// Optional since namespace is saved when game is closed\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveProfileNamespace",
        "modifiers": []
    },
    "pixelgrid": {
        "name": "pixelGrid",
        "description": "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.",
        "syntaxArray": [
            {
                "Syntax": "**pixelGrid**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Grid size, see [Arma 3: Pixel Grid System](https://community.bistudio.com/wiki/Arma_3:_Pixel_Grid_System)"
            }
        ],
        "examples": [
            "\n```sqf\n_gridHeight = pixelH * pixelGrid;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pixelGrid",
        "modifiers": []
    },
    "removeweaponcargo": {
        "name": "removeWeaponCargo",
        "description": "Remove weapon from the vehicle cargo space.\n> ",
        "syntaxArray": [
            {
                "Syntax": "object **removeWeaponCargo** [weaponID,creatorID]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Vehicle or ammo box\n\n[weaponID,creatorID]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nrearmTruckOne removeWeaponCargo [19, 1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeWeaponCargo",
        "modifiers": []
    },
    "setbehaviourstrong": {
        "name": "setBehaviourStrong",
        "description": "Sets individual unit behaviour on every unit in a group and additionally tries to force this behaviour to the unit's group. Alternatively see [setCombatBehaviour](https://community.bistudio.com/wiki/setCombatBehaviour). Behaviour is one of: \n\n* \"CARELESS\"\n\n* \"SAFE\"\n\n* \"AWARE\"\n\n* \"COMBAT\"\n\n* \"STEALTH\".\n> ",
        "syntaxArray": [
            {
                "Syntax": "groupName setBehaviourStrong behaviour",
                "Params": "groupName: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object) - unit from the group\n\nbehaviour: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group1 setBehaviourStrong \"SAFE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setBehaviourStrong",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "buldozer_isenabledroaddiag": {
        "name": "buldozer_IsEnabledRoadDiag",
        "description": "Returns if road diagnostics are enabled in buldozer.",
        "syntaxArray": [
            {
                "Syntax": "buldozer_IsEnabledRoadDiag",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if enabled, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_isEnabled = buldozer_IsEnabledRoadDiag;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buldozer_IsEnabledRoadDiag",
        "modifiers": []
    },
    "scriptname": {
        "name": "scriptName",
        "description": "Assign a user friendly name to the [VM script](https://community.bistudio.com/wiki/Script_(Handle)) this command is executed from.\n\nOnce name is assigned, it cannot be changed.",
        "syntaxArray": [
            {
                "Syntax": "**scriptName** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nscriptName \"leetScript.sqf\";\n```\n",
            "\n```sqf\nscriptName format [\"%1ARTY\\data\\scripts\\ARTY_sadarmDeploy.sqf (_this: %1)\",_this];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/scriptName",
        "modifiers": []
    },
    "turretowner": {
        "name": "turretOwner",
        "description": "Returns id of the [owner](https://community.bistudio.com/wiki/owner) of the turret. Server only. Returns 0 on non-server and SP. \n**Some info on turrets:** A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is [local](https://community.bistudio.com/wiki/local). When gunner leaves turret it is supposed to change locality to the locality of the vehicle. A vehicle can have one [owner](https://community.bistudio.com/wiki/owner) while turrets have different [owners](https://community.bistudio.com/wiki/owner).",
        "syntaxArray": [
            {
                "Syntax": "vehicle **turretOwner** turretPath",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - [owner](https://community.bistudio.com/wiki/owner) id"
            }
        ],
        "examples": [
            "\n```sqf\n_ownerId = vehicle player turretOwner [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/turretOwner",
        "modifiers": [
            "Global argument",
            "Server execution"
        ]
    },
    "allmapmarkers": {
        "name": "allMapMarkers",
        "description": "Returns all markers in map including user placed markers (_USER_DEFINED #). \nSince Arma 3 v1.58 User defined markers have the following name format: _USER_DEFINED #<PlayerID>/<MarkerID>/<ChannelID> where:\n\n* <PlayerID> - unique network id of the player in [String](https://community.bistudio.com/wiki/String) format, also available as [String](https://community.bistudio.com/wiki/String) in the 6th param in [ \"PlayerConnected\"](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers/addMissionEventHandler#PlayerConnected) and [\"PlayerDisconnected\"](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers/addMissionEventHandler#PlayerDisconnected) EHs\n\n* <MarkerID> - a marker counter id\n\n* <ChannelID> - id of the chat channel on which marker was placed (see [currentChannel](https://community.bistudio.com/wiki/currentChannel))\nFor custom waypoint position (LShift+LMB) see [customWaypointPosition](https://community.bistudio.com/wiki/customWaypointPosition)",
        "syntaxArray": [
            {
                "Syntax": "**allMapMarkers**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_markers = allMapMarkers;\n```\n\n\nreturns: [\"marker1\",\"_USER_DEFINED #2/0\"]",
            "\n```sqf\n{\n  private \"_a\";\n  _a = toArray _x;\n  _a resize 15;\n  if (toString _a == \"_USER_DEFINED #\") then {\n    deleteMarker _x;\n  }\n} forEach allMapMarkers;\n```\n",
            "\n```sqf\nif (_someString in allMapMarkers) then {\n  hint (_someString + \" is a valid marker name\");\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allMapMarkers",
        "modifiers": []
    },
    "getpilotcamerarotation": {
        "name": "getPilotCameraRotation",
        "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera) .",
        "syntaxArray": [
            {
                "Syntax": "**getPilotCameraRotation** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [x,y] - format [yaw (turn), pitch (elevation)]. Positive values are left yaw and down pitch from the center. Returns [0,0] when camera is centered but also if object has no [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera)."
            }
        ],
        "examples": [
            "\n```sqf\n _pilotCamRot = getPilotCameraRotation vehicle player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPilotCameraRotation",
        "modifiers": [
            "Local argument"
        ]
    },
    "lnbdata": {
        "name": "lnbData",
        "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbData [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) or [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "ctrl lnbData [row, column]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbData [lnbCurSelRow _ctrl,0]; // \"#1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbData",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getsuppression": {
        "name": "getSuppression",
        "description": "Gets the suppression value for the given unit. Returns varying [Number](https://community.bistudio.com/wiki/Number) between 0 and 1, or -1 if suppression is disabled ([disableAI](https://community.bistudio.com/wiki/disableAI) \"SUPPRESSION\") or the suppression value is not available. Suppression is not calculated for player entities and is always 0, unless it is set with [setSuppression](https://community.bistudio.com/wiki/setSuppression). In this case the return value is the set value. Before Arma 3 v1.92 this command could return [nil](https://community.bistudio.com/wiki/nil).  \n> ",
        "syntaxArray": [
            {
                "Syntax": "**getSuppression** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - from 0 to 1, or -1 if suppression is not available."
            }
        ],
        "examples": [
            "\n```sqf\n getSuppression AI_unit_1;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSuppression",
        "modifiers": [
            "Local argument"
        ]
    },
    "camsetdive": {
        "name": "camSetDive",
        "description": "Sets camera dive angle. Does not commit changes. \n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetDive** dive",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\ndive: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camSetDive -0.1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetDive",
        "modifiers": []
    },
    "moveindriver": {
        "name": "moveInDriver",
        "description": "Moves soldier into vehicle driver position (immediate, no animation).\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **moveInDriver** vehicle",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne moveInDriver _tankOne \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveInDriver",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "get3denmouseover": {
        "name": "get3DENMouseOver",
        "description": "Returns the [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) the mouse is hovering over in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**get3DENMouseOver**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format: [type,[Eden Entity](https://community.bistudio.com/wiki/Eden_Entity)], where type can be: \"Object\", \"Group\", \"Trigger\", \"Logic\", \"Waypoint\" or \"Marker\""
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat str get3DENMouseOver;// returns: [\"Object\",B Alpha 1-1:1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENMouseOver",
        "modifiers": []
    },
    "setplayerrespawntime": {
        "name": "setPlayerRespawnTime",
        "description": "Sets the time interval (in seconds) that the player must wait before respawn. It resets to mission default on mission start. In Single Player or when respawn type is GROUP or SIDE in Multiplayer, setting player respawn time has no effect, and [playerRespawnTime](https://community.bistudio.com/wiki/playerRespawnTime) will always return -1.",
        "syntaxArray": [
            {
                "Syntax": "**setPlayerRespawnTime** interval",
                "Params": "interval: [Number](https://community.bistudio.com/wiki/Number) - respawn time in seconds\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetPlayerRespawnTime 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPlayerRespawnTime",
        "modifiers": [
            "Local effect"
        ]
    },
    "setfriend": {
        "name": "setFriend",
        "description": "Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it is friendly.\n\nIntended to be used on mission start. Changing value during mission can cause unexpected errors in AI behavior. See also [Side relations](https://community.bistudio.com/wiki/Side_relations).",
        "syntaxArray": [
            {
                "Syntax": "side1 **setFriend** [side2 , value]",
                "Params": "side1: [Side](https://community.bistudio.com/wiki/Side)\n\n[side2 , value]: [Array](https://community.bistudio.com/wiki/Array)\n\nside2: [Side](https://community.bistudio.com/wiki/Side)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nwest setFriend [resistance, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFriend",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "copywaypoints": {
        "name": "copyWaypoints",
        "description": "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.",
        "syntaxArray": [
            {
                "Syntax": "groupTo **copyWaypoints** groupFrom",
                "Params": "groupTo: [Group](https://community.bistudio.com/wiki/Group)\n\ngroupFrom: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ngroup1 copyWaypoints group2;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/copyWaypoints",
        "modifiers": []
    },
    "commandfsm": {
        "name": "commandFSM",
        "description": "Orders a unit to process command defined by [FSM](https://community.bistudio.com/wiki/FSM) file (via the radio).",
        "syntaxArray": [
            {
                "Syntax": "unitName **commandFSM** [fsm name, position, target]",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\n[fsm name, position, target]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne commandFSM [\"move.fsm\", position player, player]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandFSM",
        "modifiers": []
    },
    "nearobjects": {
        "name": "nearObjects",
        "description": "Find objects (Units, Vehicles, Dead, Map Objects) in a sphere with given radius. The first object in the returned array is *not* necessarily the closest one. If you need returned objects to be sorted by distance, use [nearestObjects](https://community.bistudio.com/wiki/nearestObjects). If typeName is given, only objects of given type (or its subtype) are listed.",
        "syntaxArray": [
            {
                "Syntax": "position nearObjects radius",
                "Params": "position: [Position](https://community.bistudio.com/wiki/Position), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "position nearObjects [typeName, radius]",
                "Params": "position: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object)\n\n[typeName, radius]: [Array](https://community.bistudio.com/wiki/Array)\n\ntypeName: [String](https://community.bistudio.com/wiki/String)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_list = position player nearObjects 50;\n```\n",
            "\n```sqf\n_list = [_xpos,_ypos] nearObjects [\"House\", 20];\n```\n",
            "\n```sqf\n_list = player nearObjects 20;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearObjects",
        "modifiers": []
    },
    "get3denactionstate": {
        "name": "get3DENActionState",
        "description": "Returns state of given action in the [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).\n\nSee the [list of all actions](https://community.bistudio.com/wiki/Eden_Editor:_Actions).",
        "syntaxArray": [
            {
                "Syntax": "**get3DENActionState** action",
                "Params": "action: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nif (get3DENActionState \"ToggleMap\" == 1) then {systemChat \"Editor map is open!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENActionState",
        "modifiers": []
    },
    "nearestobject": {
        "name": "nearestObject",
        "description": "Returns the nearest object of given type (or inherited classes) to given position within a sphere. Hardcoded radius is 50 meters. Unlike with [nearestObjects](https://community.bistudio.com/wiki/nearestObjects), where distance is measured in 2D space, nearestObject will be closest object in 3D space.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "nearestObject [position, type]",
                "Params": "[position, type]: [Array](https://community.bistudio.com/wiki/Array)\n\nposition:  [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object) - position to start search at\n\ntype: [String](https://community.bistudio.com/wiki/String) - type of object (see [typeOf](https://community.bistudio.com/wiki/typeOf), [class type](https://community.bistudio.com/wiki/CfgVehicles))\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - Nearest object, [objNull](https://community.bistudio.com/wiki/objNull) otherwise"
            },
            {
                "Syntax": "nearestObject position",
                "Params": "position: [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D) - position to start search at\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - Nearest object, [objNull](https://community.bistudio.com/wiki/objNull) otherwise"
            },
            {
                "Syntax": "position nearestObject type",
                "Params": "position: [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D) - position to start search at\n\ntype: [String](https://community.bistudio.com/wiki/String) - type of object (see [typeOf](https://community.bistudio.com/wiki/typeOf), [class type](https://community.bistudio.com/wiki/CfgVehicles))\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - nearest object, [objNull](https://community.bistudio.com/wiki/objNull) otherwise"
            },
            {
                "Syntax": "position nearestObject id",
                "Params": "position: [Position3D](https://community.bistudio.com/wiki/Position3D) or [Position2D](https://community.bistudio.com/wiki/Position2D) - position to start search at\n\nid: [Number](https://community.bistudio.com/wiki/Number) - object Visitor id\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - nearest object, [objNull](https://community.bistudio.com/wiki/objNull) otherwise"
            }
        ],
        "examples": [
            "\n```sqf\n_nObject = nearestObject [2345, 6789];\n_nObject = nearestObject [player, \"StreetLamp\"];\n```\n",
            "Return the object with ID 123456:\n\n```sqf\n_nObject = [0,0,0] nearestObject 123456;\n```\n",
            "\n```sqf\n_nObject = getPos player nearestObject \"StreetLamp\"; \n```\n",
            "Return the nearest object with ([typeOf](https://community.bistudio.com/wiki/typeOf) _nObject == \"#XXXX\") -> #mark, #slop, etc. Unlimited search range:\n\n```sqf\n_nObject = _position nearestObject -1; \n```\n\n\nReturn the nearest object with ([typeOf](https://community.bistudio.com/wiki/typeOf) _nObject != \"\"). Search range is 50m:\n\n```sqf\n_nObject = nearestObject _position;\n```\n",
            "(See also [allMissionObjects](https://community.bistudio.com/wiki/allMissionObjects)):\n\n```sqf\n_blood  = nearestObject [player, \"#slop\"];\n_step   = nearestObject [player, \"#mark\"];\n_track  = nearestObject [player, \"#track\"];\n_crater = nearestObject [player, \"#crater\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestObject",
        "modifiers": []
    },
    "isvehiclecargo": {
        "name": "isVehicleCargo",
        "description": "Despite a misleading name, returns the vehicle that is transporting given vehicle in cargo. If the given vehicle is not in vehicle cargo, [objNull](https://community.bistudio.com/wiki/objNull) is returned.",
        "syntaxArray": [
            {
                "Syntax": "**isVehicleCargo** cargo",
                "Params": "cargo: [Object](https://community.bistudio.com/wiki/Object) - vehicle in cargo\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - transporting vehicle"
            }
        ],
        "examples": [
            "Blackfish with given variable name blackfish, with a vehicle inside called quad\n\n```sqf\n_transportingVehicle = isVehicleCargo quad; //returns blackfish\n```\n",
            "Vehicle called quad that is not being transported as cargo\n\n```sqf\n_transportingVehicle = isVehicleCargo quad; //returns objNull\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isVehicleCargo",
        "modifiers": []
    },
    "seteffectcondition": {
        "name": "setEffectCondition",
        "description": "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\n\n* If the result is a [boolean](https://community.bistudio.com/wiki/Boolean) and [true](https://community.bistudio.com/wiki/true), the effect is launched.\n\n* If the result is an [object](https://community.bistudio.com/wiki/object), the effect is launched if the result is the player or the player vehicle.\n\n* If the result is an [array](https://community.bistudio.com/wiki/Array), the effect is launched if the result contains the player or the player vehicle.",
        "syntaxArray": [
            {
                "Syntax": "trigger **setEffectCondition** statement",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\nstatement: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "waypoint **setEffectCondition** statement",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint) - [Array](https://community.bistudio.com/wiki/Array) format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nstatement: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_triggerObj setEffectCondition \"thisList\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setEffectCondition",
        "modifiers": []
    },
    "joinsilent": {
        "name": "joinSilent",
        "description": "Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the [grpNull](https://community.bistudio.com/wiki/grpNull) group (e.g. [guy1] joinSilent [grpNull](https://community.bistudio.com/wiki/grpNull)), but **beware**, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.",
        "syntaxArray": [
            {
                "Syntax": "unitArray **joinSilent** group",
                "Params": "unitArray: [Array](https://community.bistudio.com/wiki/Array) - units to join group\n\ngroup: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_unitOne, _unitTwo] joinSilent (group player);\n```\n",
            "\n```sqf\n[_unitOne, _unitTwo] joinSilent player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/joinSilent",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "commandtarget": {
        "name": "commandTarget",
        "description": "Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.",
        "syntaxArray": [
            {
                "Syntax": "unit commandTarget target",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ESoldier1 commandTarget _WSoldier1;\n```\n",
            "\n```sqf\nplayer commandTarget [ted, bill];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandTarget",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "ctrlsetautoscrollspeed": {
        "name": "ctrlSetAutoScrollSpeed",
        "description": "Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for [ctrlAutoScrollSpeed](https://community.bistudio.com/wiki/ctrlAutoScrollSpeed).\n\nAutorscroll is available for [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) and [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) types of controls only. Autoscroll will wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. [ctrlAutoScrollSpeed](https://community.bistudio.com/wiki/ctrlAutoScrollSpeed) defines the speed with which scrollbar is scrolled. If [ctrlAutoScrollRewind](https://community.bistudio.com/wiki/ctrlAutoScrollRewind) is [true](https://community.bistudio.com/wiki/true), the control will fade out, immediately rewind to the top, then fade in, wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetAutoScrollSpeed** speed",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) or [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - seconds to autoscroll to the next line\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlGroup ctrlSetAutoScrollSpeed 0.1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetAutoScrollSpeed",
        "modifiers": []
    },
    "hcselected": {
        "name": "hcSelected",
        "description": "Returns selected groups in [high command](https://community.bistudio.com/wiki/High_Command).",
        "syntaxArray": [
            {
                "Syntax": "**hcSelected** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - commander\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\narray = hcSelected unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcSelected",
        "modifiers": []
    },
    "disableuserinput": {
        "name": "disableUserInput",
        "description": "Disables or enables the keyboard and mouse input. Usually used during cutscenes.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**disableUserInput** state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable, [false](https://community.bistudio.com/wiki/false) to enable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndisableUserInput true;\n// cutscene\ndisableUserInput false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableUserInput",
        "modifiers": [
            "Local effect"
        ]
    },
    "set3denselected": {
        "name": "set3DENSelected",
        "description": "Changes selection in 3den to what is inside entities array.",
        "syntaxArray": [
            {
                "Syntax": "**set3DENSelected** entities",
                "Params": "entities: [Array](https://community.bistudio.com/wiki/Array) of types [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENSelected [0,5,3,6,7,12];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENSelected",
        "modifiers": []
    },
    "enablesentences": {
        "name": "enableSentences",
        "description": "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.",
        "syntaxArray": [
            {
                "Syntax": "**enableSentences** enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableSentences false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableSentences",
        "modifiers": [
            "Local effect"
        ]
    },
    "kbtell": {
        "name": "kbTell",
        "description": "Make the person tell to the receiver the sentence. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.",
        "syntaxArray": [
            {
                "Syntax": "person kbTell [receiver, topicName, sentenceClass(, argumentArray1, argumentArray2, (…), forceRadio)]",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n[receiver, topicName, sentenceClass, argumentArray1, argumentArray2, (…), forceRadio]: [Array](https://community.bistudio.com/wiki/Array)\n\nreceiver: [Object](https://community.bistudio.com/wiki/Object)\n\ntopicName: [String](https://community.bistudio.com/wiki/String)\n\nsentenceClass: [String](https://community.bistudio.com/wiki/String)\n\nargumentArray1toN (Optional): [Array](https://community.bistudio.com/wiki/Array) - [argumentName, argumentValue, argumentText, argumentSpeech]:\n\n* argumentName: [String](https://community.bistudio.com/wiki/String)\n\n* argumentValue: [Code](https://community.bistudio.com/wiki/Code)\n\n* argumentText: [String](https://community.bistudio.com/wiki/String)\n\n* argumentSpeech: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - each string is an already defined word in config.\n\nforceRadio (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean), [Number](https://community.bistudio.com/wiki/Number) or [String](https://community.bistudio.com/wiki/String) (*last value of the array*)\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) true/false to force use of radio\n\n* [Number](https://community.bistudio.com/wiki/Number) 1-10 to force use of custom radio channel\n\n* [String](https://community.bistudio.com/wiki/String) name of radio channel to use, from: 'GLOBAL', 'SIDE', 'GROUP', 'VEHICLE', 'DIRECT', 'COMMAND'\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer kbTell [BIS_HQ, \"myTopic\", \"playerSentence1\"];\n```\n",
            "\n```sqf\nplayer kbTell [\n\tBIS_HQ,\t\t\t\t\t\t\t\t\t\t// to\n\t\"Airstrike\",\t\t\t\t\t\t\t\t// topic\n\t\"AirstrikeRequest\",\t\t\t\t\t\t\t// sentence\n\t[\"Team\", {}, \"Anvil\", [\"Anvil\"]],\t\t\t// argument 1\n\t[\"Location\", {}, \"Strelka\", [\"Strelka\"]],\t// argument 2\n\ttrue];\t\t\t\t\t\t\t\t\t\t// use radio\n```\n\nin given .bikb:\n",
            "\n```sqf\nplayer kbTell [\n\tBIS_HQ,\t\t\t\t\t\t\t\t\t\t// to\n\t\"Airstrike\",\t\t\t\t\t\t\t\t// topic\n\t\"AirstrikeRequest\",\t\t\t\t\t\t\t// sentence\n\t[\"argumentName\", argumentValue],\t\t\t// argument 1\n\n\ttrue];\t\t\t\t\t\t\t\t\t\t// use radio\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbTell",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "lbsetcursel": {
        "name": "lbSetCurSel",
        "description": "Selects the item with the given index in the listbox, listnbox, combobox, xcombobox, xlistbox\n> ",
        "syntaxArray": [
            {
                "Syntax": "lbSetCurSel [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - control's IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control lbSetCurSel  index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetCurSel [101, 0];\n```\n",
            "\n```sqf\n_control lbSetCurSel 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetCurSel",
        "modifiers": []
    },
    "speechvolume": {
        "name": "speechVolume",
        "description": "Returns the current speech volume (set by [fadeSpeech](https://community.bistudio.com/wiki/fadeSpeech))",
        "syntaxArray": [
            {
                "Syntax": "**speechVolume**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str speechVolume;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/speechVolume",
        "modifiers": []
    },
    "triggeractivation": {
        "name": "triggerActivation",
        "description": "Returns trigger activation in the form [by, type, repeating]. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**triggerActivation** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_activation = triggerActivation someTrigger\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerActivation",
        "modifiers": [
            "Global argument"
        ]
    },
    "weaponsitems": {
        "name": "weaponsItems",
        "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons. \n> \n\n* Since Arma 3 v1.22 it is possible to query weapon holders and ammo crates with this command. If the argument is a vehicle, the command will return vehicle's weapons. If the argument is a container, the command will act identical to [weaponsItemsCargo](https://community.bistudio.com/wiki/weaponsItemsCargo).\n\n* Since Arma 3 v1.96 the returned array always contains secondary muzzle magazine info and consistent with [getUnitLoadout](https://community.bistudio.com/wiki/getUnitLoadout) format for weapon items.\n\n* Since Arma 3 v2.02 the returned array can contains binocular weapon items.",
        "syntaxArray": [
            {
                "Syntax": "**weaponsItems** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array containing arrays of weapon items info in format [weapon:[String](https://community.bistudio.com/wiki/String), muzzle:[String](https://community.bistudio.com/wiki/String), flashlight:[String](https://community.bistudio.com/wiki/String), optics:[String](https://community.bistudio.com/wiki/String), primaryMuzzleMagazine:[Array](https://community.bistudio.com/wiki/Array), secondaryMuzzleMagazine:[Array](https://community.bistudio.com/wiki/Array), bipod:[String](https://community.bistudio.com/wiki/String)], for example: [\"hgun_P07_F\",\"\",\"\",\"\",[\"16Rnd_9x21_Mag\",16],[],\"\"]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str weaponsItems player;\n```\n\n\n```sqf\n[\n\t[\"arifle_MX_ACO_pointer_F\",\"muzzle_snds_H\",\"acc_pointer_IR\",\"optic_Aco\",[\"30Rnd_65x39_caseless_mag\",30],[],\"bipod_01_F_blk\"],\n\t[\"launch_NLAW_F\",\"\",\"\",\"\",[\"NLAW_F\",1],[],\"\"],\n\t[\"hgun_P07_F\",\"muzzle_snds_L\",\"\",\"\",[\"16Rnd_9x21_Mag\",11],[],\"\"]\n]\n```\n",
            "\n```sqf\nhint str weaponsItems vehicle player;\n```\n\n\n\n```sqf\n[\n\t[\"gatling_30mm\",\"\",\"\",\"\",[\"250Rnd_30mm_HE_shells\",250],[],\"\"],\n\t[\"missiles_SCALPEL\",\"\",\"\",\"\",[\"8Rnd_LG_scalpel\",8],[],\"\"],\n\t[\"rockets_Skyfire\",\"\",\"\",\"\",[\"38Rnd_80mm_rockets\",38],[],\"\"]\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponsItems",
        "modifiers": []
    },
    "getassetdlcinfo": {
        "name": "getAssetDLCInfo",
        "description": "Returns DLC information about given object or model.",
        "syntaxArray": [
            {
                "Syntax": "getAssetDLCInfo asset",
                "Params": "asset: [Object](https://community.bistudio.com/wiki/Object) or [String](https://community.bistudio.com/wiki/String) - object reference or path to the model\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array in format: [isDlc, isOwned, isInstalled, isAvailable, appID, DLCName], where:\n\n* isDlc: [Boolean](https://community.bistudio.com/wiki/Boolean) - the asset belongs to a DLC\n\n* isOwned: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* isInstalled: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* isAvailable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* appID: [String](https://community.bistudio.com/wiki/String) - actual steam item ID or \"0\" for none or \"-1\" for unknown\n\n* DLCName: [String](https://community.bistudio.com/wiki/String) - actual DLC name or \"\""
            },
            {
                "Syntax": "getAssetDLCInfo [class, config]",
                "Params": "[class, config]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - class name of the asset\n\nconfig (Optional): [Config](https://community.bistudio.com/wiki/Config) - config to search in, default: [configFile](https://community.bistudio.com/wiki/configFile) >> \"CfgVehicles\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array in format: [isDlc, isOwned, isInstalled, isAvailable, appID, DLCName], where:\n\n* isDlc: [Boolean](https://community.bistudio.com/wiki/Boolean) - the asset belongs to a DLC\n\n* isOwned: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* isInstalled: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* isAvailable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* appID: [String](https://community.bistudio.com/wiki/String) - actual steam item ID or \"0\" for none or \"-1\" for unknown\n\n* DLCName: [String](https://community.bistudio.com/wiki/String) - actual DLC name or \"\""
            }
        ],
        "examples": [
            "\n```sqf\ngetAssetDLCInfo player;\n```\n",
            "\n```sqf\ngetAssetDLCInfo \"a3\\Weapons_F_Enoch\\Rifles\\MSBS\\MSBS65_F\";\n```\n",
            "\n```sqf\ngetAssetDLCInfo [\"C_Van_01_transport_F\"];\n```\n",
            "\n```sqf\ngetAssetDLCInfo [\"arifle_AK12_F\", configFile >> \"CfgWeapons\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAssetDLCInfo",
        "modifiers": []
    },
    "dotarget": {
        "name": "doTarget",
        "description": "Order the given unit(s) to target the given target (without radio messages).Targeting can be stopped by \n```sqf\n_unit doWatch objNull;\n```\n or\n```sqf\n_unit commandWatch objNull;\n```\n",
        "syntaxArray": [
            {
                "Syntax": "unit **doTarget** target",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) - a single unit or array of units\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ESoldier1 doTarget _WSoldier1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doTarget",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "groupiconsvisible": {
        "name": "groupIconsVisible",
        "description": "Returns array with group icons visibility. A getter for [setGroupIconsVisible](https://community.bistudio.com/wiki/setGroupIconsVisible)",
        "syntaxArray": [
            {
                "Syntax": "**groupIconsVisible**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [visibleOnMap, visibleOnHUD]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str groupIconsVisible;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupIconsVisible",
        "modifiers": []
    },
    "oncommandmodechanged": {
        "name": "onCommandModeChanged",
        "description": "Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or [hcShowBar](https://community.bistudio.com/wiki/hcShowBar) scripting command. Groups hc mode must contain at least one group for this command to work (see [High Command](https://community.bistudio.com/wiki/High_Command)). Attached code receives *_isHighCommand* boolean. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**onCommandModeChanged** code",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code) or [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n//Examples in-use can be found in:\n\n//ca\\modules\\HC\\data\\scripts\\HC_GUI.sqf\n//A3\\modules_f\\HC\\data\\scripts\\HC_GUI.sqf\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onCommandModeChanged",
        "modifiers": []
    },
    "queryweaponpool": {
        "name": "queryWeaponPool",
        "description": "Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).",
        "syntaxArray": [
            {
                "Syntax": "**queryWeaponPool** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_num = queryWeaponPool \"M16\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/queryWeaponPool",
        "modifiers": []
    },
    "windstr": {
        "name": "windStr",
        "description": "Returns the current wind strength.",
        "syntaxArray": [
            {
                "Syntax": "**windStr**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n10 setWindStr (0.5 * windStr);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/windStr",
        "modifiers": []
    },
    "disablemapindicators": {
        "name": "disableMapIndicators",
        "description": "Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT.",
        "syntaxArray": [
            {
                "Syntax": "**disableMapIndicators** [disableFriendly, disableEnemy, disableMines, disablePing]",
                "Params": "disableFriendly: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable visualization of friendly units\n\ndisableEnemy: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable visualization of enemy units\n\ndisableMines: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable visualization of mines\n\ndisablePing: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable visualization of all tactical pings\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Disable visualization of friendly and enemy units:\n```sqf\ndisableMapIndicators [true, true, false, false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableMapIndicators",
        "modifiers": [
            "Local effect"
        ]
    },
    "missionnamespace": {
        "name": "missionNamespace",
        "description": "Returns the global namespace attached to mission.",
        "syntaxArray": [
            {
                "Syntax": "**missionNamespace**",
                "Params": "",
                "Return": "[Namespace](https://community.bistudio.com/wiki/Namespace)"
            }
        ],
        "examples": [
            "\n```sqf\nmissionNamespace setVariable [\"YourString\",3];//Same as: YourString = 3;\n_yourString = missionNamespace getVariable \"YourString\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionNamespace",
        "modifiers": []
    },
    "hcshowbar": {
        "name": "hcShowBar",
        "description": "Shows or hides [high command](https://community.bistudio.com/wiki/High_Command) bar. There must be some groups under HC command to show HC bar.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**hcShowBar** bool",
                "Params": "bool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing) (prior to Arma 3 v1.94 this command returned [Object](https://community.bistudio.com/wiki/Object) of [ null](https://community.bistudio.com/wiki/objNull) value)"
            }
        ],
        "examples": [
            "\n```sqf\nhcShowBar true;\n```\n",
            "\n```sqf\nhcShowBar false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcShowBar",
        "modifiers": []
    },
    "removeaction": {
        "name": "removeAction",
        "description": "Removes user added action with given ID. This only removes actions added with the [addAction](https://community.bistudio.com/wiki/addAction) command. You cannot remove default game actions, such as reload.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeAction** actionID",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit, vehicle or static object\n\nactionID: [Number](https://community.bistudio.com/wiki/Number) - Action ID returned by [addAction](https://community.bistudio.com/wiki/addAction)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeAction 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAction",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "playableslotsnumber": {
        "name": "playableSlotsNumber",
        "description": "Returns the number of available slots in mission per [side](https://community.bistudio.com/wiki/Side) (both empty and taken). In singleplayer mission, it returns number of playable units per side.",
        "syntaxArray": [
            {
                "Syntax": "**playableSlotsNumber** side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_maxBluforPlayers = playableSlotsNumber blufor;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playableSlotsNumber",
        "modifiers": []
    },
    "saveidentity": {
        "name": "saveIdentity",
        "description": "Saves units's identity to [Objects.sav](https://community.bistudio.com/wiki/Objects.sav) file in campaign directory as entry name.",
        "syntaxArray": [
            {
                "Syntax": "unit **saveIdentity** name",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if successful, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_successful = player saveIdentity \"playerid\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveIdentity",
        "modifiers": []
    },
    "forceend": {
        "name": "forceEnd",
        "description": "Forces mission ending (set with [endMission](https://community.bistudio.com/wiki/endMission)) even if a camera effect or any another condition delays the endMission (mostly in [Operation Flashpoint](https://community.bistudio.com/wiki/Category:Operation_Flashpoint)).",
        "syntaxArray": [
            {
                "Syntax": "forceEnd",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nforceEnd;// in an ending trigger to ensure no camera is delaying mission ending\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceEnd",
        "modifiers": [
            "Local effect"
        ]
    },
    "getplayerid": {
        "name": "getPlayerID",
        "description": "Returns player ID for marker creation.",
        "syntaxArray": [
            {
                "Syntax": "getPlayerID unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ngetPlayerID player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPlayerID",
        "modifiers": []
    },
    "squadparams": {
        "name": "squadParams",
        "description": "Returns data about squad of given unit loaded from squad.xml.\nAll items in returned array are [String](https://community.bistudio.com/wiki/String).",
        "syntaxArray": [
            {
                "Syntax": "**squadParams** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [[squadNick,squadName,squadEmail,squadWeb,squadPicture,squadTitle],[memberId,memberNick,memberName,memberEmail,memberIcq,memberRemark]]"
            }
        ],
        "examples": [
            "\n```sqf\n_info = squadParams player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/squadParams",
        "modifiers": [
            "Global argument"
        ]
    },
    "pixelw": {
        "name": "pixelW",
        "description": "Returns width of one pixel for current resolution.",
        "syntaxArray": [
            {
                "Syntax": "**pixelW**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Pixel width"
            }
        ],
        "examples": [
            "\n```sqf\n_pixelWidth = pixelW;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pixelW",
        "modifiers": []
    },
    "groupselectunit": {
        "name": "groupSelectUnit",
        "description": "Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3... buttons to highlight units in his squad, after which the unit command menu is shown. If leader is AI, player will get usual communication menu to interact with the leader.",
        "syntaxArray": [
            {
                "Syntax": "player **groupSelectUnit** [unit, select]",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\n[unit, select]: [Array](https://community.bistudio.com/wiki/Array)\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\nselect: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "After leaving menu, deselect all units (command menu is not opened -> no selection)\n```sqf\n{\n    player groupSelectUnit [_x, false];\n} forEach (groupSelectedUnits player);\n```\n",
            "Select all units when player is the leader:\n```sqf\n{\n    player groupSelectUnit [_x, true];\n} forEach units player;\n```\n",
            "Open communication with group leader:\n```sqf\nplayer groupSelectUnit [leader player, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupSelectUnit",
        "modifiers": []
    },
    "taskchildren": {
        "name": "taskChildren",
        "description": "Return the child tasks of the specified task.",
        "syntaxArray": [
            {
                "Syntax": "**taskChildren** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of children [Tasks](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "\n```sqf\n_children = taskChildren \"someTask\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskChildren",
        "modifiers": []
    },
    "cuttext": {
        "name": "cutText",
        "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.74 this command supports [Structured Text](https://community.bistudio.com/wiki/Structured_Text) formatting.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**cutText** [text, type, speed,  showInMap, isStructuredText]",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) - text to be displayed\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) time in seconds to fade in resource.\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened. *since Arma 3*\n\nisStructuredText: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to switch support for [Structured Text](https://community.bistudio.com/wiki/Structured_Text) formatting - see Example 4. *Since Arma 3 v1.73.142260*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "layer **cutText** [text, type, speed,  showInMap, isStructuredText]",
                "Params": "layer: [Number](https://community.bistudio.com/wiki/Number) -  layer number on which the effect is shown, where 0 is the back most. Layer number is rounded to the nearest integer and also cannot be negative. Layer 99.5 will be treated as layer 100.\n\ntext: [String](https://community.bistudio.com/wiki/String) - text to be displayed\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) time in seconds to fade in resource.\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened.\n\nisStructuredText: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to switch support for [Structured Text](https://community.bistudio.com/wiki/Structured_Text) formatting - see Example 4. *Since Arma 3 v1.73.142260*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "layerName **cutText** [text, type, speed,  showInMap, isStructuredText] *Since Arma 3 v1.57.134673*",
                "Params": "layerName: [String](https://community.bistudio.com/wiki/String) - layer name on which the effect is shown. Layer names are CaSe SeNsItIvE\n\ntext: [String](https://community.bistudio.com/wiki/String) - text to be displayed\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) Time in seconds to fade in resource.\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened. *Since Arma 3*\n\nisStructuredText: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to switch support for [Structured Text](https://community.bistudio.com/wiki/Structured_Text) formatting - see Example 4. *Since Arma 3 v1.73.142260*\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - number of the allocated layer"
            }
        ],
        "examples": [
            "\n```sqf\ncutText [\"\", \"BLACK OUT\"];\ncutText [\"Hello World!\", \"PLAIN\", 2];\n```\n",
            "\n```sqf\n2 cutText [\"Hello World!\", \"PLAIN\", 2];\n```\n",
            "\n```sqf\n_layer1 = \"normal\" cutText [\"In The Centre\", \"PLAIN\"];\n_layer2 = \"down\" cutText [\"At The Bottom\", \"PLAIN DOWN\"];\n```\n",
            "Since Arma 3 v1.74:\n```sqf\ncutText [\"<t color='#ff0000' size='5'>RED ALERT!</t><br/>***********\", \"PLAIN\", -1, true, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cutText",
        "modifiers": [
            "Local effect"
        ]
    },
    "allowdamage": {
        "name": "allowDamage",
        "description": "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as [setHit](https://community.bistudio.com/wiki/setHit), [setHitIndex](https://community.bistudio.com/wiki/setHitIndex), [setHitPointDamage](https://community.bistudio.com/wiki/setHitPointDamage) or [setDamage](https://community.bistudio.com/wiki/setDamage). To check if damage is allowed at current locality, see [isDamageAllowed](https://community.bistudio.com/wiki/isDamageAllowed).",
        "syntaxArray": [
            {
                "Syntax": "object allowDamage allow",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nallow: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer allowDamage false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowDamage",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "max": {
        "name": "max",
        "description": "The greater value between a and b",
        "syntaxArray": [
            {
                "Syntax": "a **max** b",
                "Params": "a: [Number](https://community.bistudio.com/wiki/Number)\n\nb: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n3 max 2; // Result is 3\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/max",
        "modifiers": []
    },
    "setparticleclass": {
        "name": "setParticleClass",
        "description": "Sets particle source parameters using existing particle config from CfgCloudlets class. Use [setParticleParams](https://community.bistudio.com/wiki/setParticleParams) subsequently if you need to overwrite some values.\n> ",
        "syntaxArray": [
            {
                "Syntax": "source **setParticleClass** className",
                "Params": "source: [Object](https://community.bistudio.com/wiki/Object) - particle source\n\nclassName: [String](https://community.bistudio.com/wiki/String) - CfgCloudlets class\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_source01 = \"#particlesource\" createVehicleLocal _pos01;\n_source01 setParticleClass \"ObjectDestructionFire1Smallx\";\n_source01 attachTo [_object,[0,0,0]];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setParticleClass",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "secondaryweaponitems": {
        "name": "secondaryWeaponItems",
        "description": "Returns array with all items assigned to the [secondaryWeapon](https://community.bistudio.com/wiki/secondaryWeapon) except magazines. Use [secondaryWeaponMagazine](https://community.bistudio.com/wiki/secondaryWeaponMagazine) command for the latter. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**secondaryWeaponItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  [silencer, laserpointer/flashlight, optics, bipod]"
            }
        ],
        "examples": [
            "\n```sqf\nsecondaryWeaponItems player; //[\"\",\"\",\"\",\"\"]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/secondaryWeaponItems",
        "modifiers": []
    },
    "setpipeffect": {
        "name": "setPiPEffect",
        "description": "Sets Render Target's visual effect (Picture-in-Picture). \n\n* 0: Normal - [0]\n\n* 1: Night Vision - [1]\n\n* 2: Thermal - [2]\n\n* 3: [Color Correction](https://community.bistudio.com/wiki/Post_process_effects#ColorCorrections) - [3, enabled, brightness, contrast, offset, blend [r,g,b,a], lerp [r,g,b,a], rgb [r,g,b,a]]\n\n* 4: Mirror - [4] **<currently not working>**\n\n* 5: [Chromatic Aberration](https://community.bistudio.com/wiki/Post_process_effects#ChromAberration) - [5, enabled, powerx, powery, (bool) aspectCorrection] **<currently not working>**\n\n* 6: [ Film Grain](https://community.bistudio.com/wiki/Post_process_effects#FilmGrain) - [6, enabled, intensity, sharpness, grainsize, intensityx1, intensityx2, (bool) monochromatic] **<currently not working>**\n\n* 7: Thermal Inverted [7]\n\n* 8: Green Thermal [8]",
        "syntaxArray": [
            {
                "Syntax": "name **setPiPEffect** [effect, optionalParam1, ..., optionalParamN]",
                "Params": "name : [String](https://community.bistudio.com/wiki/String) - Render surface reference from [Render To Texture](https://community.bistudio.com/wiki/Procedural_Textures#Render_To_Texture)\n\n[effect, optionalParam1, ..., optionalParamN] : [Array](https://community.bistudio.com/wiki/Array)\n\neffect : [Number](https://community.bistudio.com/wiki/Number) - effect type\n\noptionalParam1: Parameters based on selected effect\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"rendersurface\" setPiPEffect [0];\n```\n",
            "\n```sqf\n\"rendertarget0\" setPiPEffect [3, 1.0, 1.0, 1.0, 0.0, [0.0, 1.0, 0.0, 0.25], [1.0, 0.0, 1.0, 1.0],  [0.199, 0.587, 0.114, 0.0]];\n```\n",
            "\n```sqf\ncam = \"camera\" camCreate (player modelToWorld [0,-5,2]);\ncam cameraEffect [\"internal\",\"back\",\"rtt\"];\n\"rtt\" setPiPEffect [2];\nwith uiNamespace do {\n\tpic = findDisplay 46 ctrlCreate [\"RscPicture\", -1];\n\tpic ctrlSetPosition [0,0,1,1];\n\tpic ctrlCommit 0;\n\tpic ctrlSetText \"#(argb,512,512,1)r2t(rtt,1.0)\";\n};\n```\n",
            "Black&White:\n```sqf\n\"rtt\" setPiPEffect [3,1,1,0.4,0,[0,0,0,0],[1,1,1,0],[1,1,1,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPiPEffect",
        "modifiers": []
    },
    "curatorcameraareaceiling": {
        "name": "curatorCameraAreaCeiling",
        "description": "Returns ceiling height for curator camera.",
        "syntaxArray": [
            {
                "Syntax": "**curatorCameraAreaCeiling** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorCameraAreCeiling BIS_curatorUnit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorCameraAreaCeiling",
        "modifiers": []
    },
    "surfacenormal": {
        "name": "surfaceNormal",
        "description": "Returns [surface normal](https://community.bistudio.comhttp://en.wikipedia.org/wiki/Normal_(geometry)) on given position.",
        "syntaxArray": [
            {
                "Syntax": "**surfaceNormal** position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - format [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D) in which case Z will be ignored\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Example: [-0.102321,0.19977,0.974486]"
            }
        ],
        "examples": [
            "\n```sqf\n_normal = surfaceNormal [300, 500];\n```\n",
            "\n```sqf\n_normal = surfaceNormal position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/surfaceNormal",
        "modifiers": []
    },
    "from": {
        "name": "from",
        "description": "Continue sequence of [for](https://community.bistudio.com/wiki/for) construct. It sets the start value of the index variable.",
        "syntaxArray": [
            {
                "Syntax": "for from b",
                "Params": "for: [For Type](https://community.bistudio.com/wiki/For_Type)\n\nb: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[For Type](https://community.bistudio.com/wiki/For_Type)"
            }
        ],
        "examples": [
            "\n```sqf\nfor \"_x\" from 10 to 20 do {..code..}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/from",
        "modifiers": []
    },
    "animatesource": {
        "name": "animateSource",
        "description": "Process an animation of the object. If [animate](https://community.bistudio.com/wiki/animate) uses class name from [CfgModels](https://community.bistudio.com/wiki/CfgModels) *Animations*, animateSource uses name defined by the *source* property. AnimationSources can animate multiple [animate](https://community.bistudio.com/wiki/animate) Animations. AnimationSource is defined in [CfgVehicles](https://community.bistudio.com/wiki/Category:CfgVehicles)' [AnimationSources](https://community.bistudio.com/wiki/Model_Config#AnimationSources) (see [Arma 3: createVehicle/vehicles](https://community.bistudio.com/wiki/Arma_3:_createVehicle/vehicles)).\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "object animateSource [source, phase, speed]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[source, phase, speed]: [Array](https://community.bistudio.com/wiki/Array)\n\nsource: [String](https://community.bistudio.com/wiki/String) - common source\n\nphase: [Number](https://community.bistudio.com/wiki/Number) - wanted animation phase\n\nspeed: [Boolean](https://community.bistudio.com/wiki/Boolean) or [Number](https://community.bistudio.com/wiki/Number)\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) - when set to [true](https://community.bistudio.com/wiki/true), animation is instant.\n\n* [Number](https://community.bistudio.com/wiki/Number) > 0 is treated as config speed value multiplier *Since Arma 3 v1.65.138459*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhouse animateSource [\"Door_1_source\", 1, true];\n```\n",
            "Create UGV and manipulate its turret (Not possible to do with [animate](https://community.bistudio.com/wiki/animate) command. See [Arma 3: createVehicle/vehicles](https://community.bistudio.com/wiki/Arma_3:_createVehicle/vehicles) for reference)\n```sqf\nugv = \"B_UGV_01_F\" createVehicle (player getRelPos [5, 0]);\nugv addAction [\"Show Turret\",\n{\n\tugv animateSource [\"Turret\", 0];\n\tugv animateSource [\"MainTurret\", rad 0, true];\n\tugv animateSource [\"MainGun\", rad 0, true];\n}];\nugv addAction [\"Hide Turret\",  { ugv animateSource [\"Turret\", 1] }];\nugv addAction [\"Turret Left\",  { ugv animateSource [\"MainTurret\",  rad 90] }];\nugv addAction [\"Turret Right\", { ugv animateSource [\"MainTurret\", -rad 90] }];\nugv addAction [\"Turret Up\",    { ugv animateSource [\"MainGun\",  rad 30] }];\nugv addAction [\"Turret Down\",  { ugv animateSource [\"MainGun\", -rad 20] }];\n```\n",
            "\n```sqf\nbarGate animateSource [\"Door_1_sound_source\", 1]; // Open\nbarGate animateSource [\"Door_1_sound_source\", 0]; // Close\n```\n",
            "Open/close Bar Gate automatically: \n```sqf\n// Bar Gate init\nif (isServer) then\n{\t\n\t_gateTrigger = createTrigger [\"EmptyDetector\", getPosWorld this, false];\n\t_gateTrigger setVariable [\"BarGateObj\", this];\n\t_gateTrigger setTriggerActivation [\"ANYPLAYER\", \"PRESENT\", true];\n\t_gateTrigger setTriggerArea [5, 25, getDir this, true];\n\t_gateTrigger setTriggerStatements \n\t[\n\t\t\"this\",\n\t\t\"thisTrigger getVariable \"\"BarGateObj\"\" animateSource [\"\"Door_1_sound_source\"\", 1]\",\n\t\t\"thisTrigger getVariable \"\"BarGateObj\"\" animateSource [\"\"Door_1_sound_source\"\", 0]\"\n\t];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animateSource",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "markertype": {
        "name": "markerType",
        "description": "Gets type of marker. See [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers) for a list of standard markers.",
        "syntaxArray": [
            {
                "Syntax": "**markerType** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Marker class name. See [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers)."
            }
        ],
        "examples": [
            "\n```sqf\nif (markerType \"Marker1\" == \"Empty\") then {hint \"Marker1 is not an icon!\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerType",
        "modifiers": [
            "Global argument"
        ]
    },
    "commandfollow": {
        "name": "commandFollow",
        "description": "Order the given unit to follow the given other unit (via the radio).",
        "syntaxArray": [
            {
                "Syntax": "unitName **commandFollow** followedunit",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nfollowedunit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 commandFollow _soldier2\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandFollow",
        "modifiers": [
            "Local argument"
        ]
    },
    "getplayerchannel": {
        "name": "getPlayerChannel",
        "description": "Returns channel number for given player, **provided that player is speaking**, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:\n\n* It does not work on dedicated server, the return is always -1, only client can detect other client talking.\n\n* Prior to Arma 3 v2.01.146856 did not detect when someone talked on direct chat at all anywhere.\n\n* The client on which command is executed has to able to receive transmission before the transmission channel can be detected. For example if a player is not in the same group as a speaker and the speaker speaks on Group Channel, the player cannot hear the speaker and therefore cannot detect what channel the speaker is on.\nIn short, this command mimics the speaking icon from the UI. Correspondence between channel and number:\n",
        "syntaxArray": [
            {
                "Syntax": "getPlayerChannel player",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - [channel ID](https://community.bistudio.com/wiki/Channel_IDs)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _channelID = getPlayerChannel player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPlayerChannel",
        "modifiers": [
            "Global argument"
        ]
    },
    "forcespeed": {
        "name": "forceSpeed",
        "description": "Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour. Used unit is m/s.",
        "syntaxArray": [
            {
                "Syntax": "object **forceSpeed** speed",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) (in m/s)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_helicopter forceSpeed 150;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceSpeed",
        "modifiers": []
    },
    "removemagazineturret": {
        "name": "removeMagazineTurret",
        "description": "Removes the magazine from the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **removeMagazineTurret** [magazineName, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[weaponName, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player removeMagazineTurret [\"60rnd_cmflaremagazine\",[-1]]\n```\n",
            "\n```sqf\n_tank removeMagazineTurret [\"20Rnd_120mmSABOT_M1A2\",[0]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMagazineTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "mineactive": {
        "name": "mineActive",
        "description": "Checks if the given mine is active.",
        "syntaxArray": [
            {
                "Syntax": "**mineActive** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (mineActive _mine) then {hint \"BOOM!\"}; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mineActive",
        "modifiers": [
            "Global argument"
        ]
    },
    "waypointattachvehicle": {
        "name": "waypointAttachVehicle",
        "description": "Attaches a vehicle [Object](https://community.bistudio.com/wiki/Object) to the given [Waypoint](https://community.bistudio.com/wiki/Waypoint).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "waypoint waypointAttachVehicle vehicleName",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nvehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] waypointAttachVehicle vehicle player;\n```\n",
            "\n```sqf\n((waypoints player) select 0) waypointAttachVehicle _soldier1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointAttachVehicle",
        "modifiers": []
    },
    "set3denmissionattributes": {
        "name": "set3DENMissionAttributes",
        "description": "Set [scenario attributes](https://community.bistudio.com/wiki/Eden_Editor:_Scenario_Atttributes).\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see [Mission Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Scenario).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**set3DENMissionAttributes** [[<section>,<class1>,<value1>], ..., [<section >,<classN>,<valueN>]]",
                "Params": "section: [String](https://community.bistudio.com/wiki/String) - attribute section\n\nclass: [String](https://community.bistudio.com/wiki/String) - attribute name\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - new attribute value\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the value was set"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENMissionAttributes [[\"Multiplayer\",\"respawn\",3],[\"Multiplayer\",\"respawnDelay\",10]];\n```\n\nSet respawn type to 3 and respawn delay to 10 seconds"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENMissionAttributes",
        "modifiers": []
    },
    "missionversion": {
        "name": "missionVersion",
        "description": "Returns the version of the current mission.\n\n* Mission from the [2D Editor](https://community.bistudio.com/wiki/2D_Editor): 12\n\n* Mission from the [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor): 15 and higher (for example current version for [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) mission in Arma 3 v1.57 is 51)",
        "syntaxArray": [
            {
                "Syntax": "**missionVersion**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number): SQM version"
            }
        ],
        "examples": [
            "\n```sqf\n_version = missionVersion;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionVersion",
        "modifiers": []
    },
    "leaderboardrequestrowsglobalarounduser": {
        "name": "leaderboardRequestRowsGlobalAroundUser",
        "description": "Requests given leaderboard to download values around the user position in the table.",
        "syntaxArray": [
            {
                "Syntax": "leaderboardRequestRowsGlobalAroundUser [leaderboard, offset, rows]",
                "Params": "leaderboard: [String](https://community.bistudio.com/wiki/String) - Name of the leaderboard\n\noffset: [Number](https://community.bistudio.com/wiki/Number) - Offset from user position.\n\nrows: [Number](https://community.bistudio.com/wiki/Number) - Defines how many rows are requested\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if request has been started"
            }
        ],
        "examples": [
            "\n```sqf\n_isGettingValues = leaderboardRequestRowsGlobalAroundUser [\"TT01\", -5, 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardRequestRowsGlobalAroundUser",
        "modifiers": []
    },
    "getposworld": {
        "name": "getPosWorld",
        "description": "Returns [PositionWorld](https://community.bistudio.com/wiki/PositionWorld), which is [PositionASL](https://community.bistudio.com/wiki/PositionASL) of the model centre [0,0,0] of an object, rather than transformed [boundingCenter](https://community.bistudio.com/wiki/boundingCenter) or [LandContact](https://community.bistudio.com/wiki/Oxygen_2_-_Manual#LandContact) vertices.",
        "syntaxArray": [
            {
                "Syntax": "**getPosWorld** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionWorld](https://community.bistudio.com/wiki/PositionWorld)"
            }
        ],
        "examples": [
            "\n```sqf\n_obj setPosWorld getPosWorld _obj;\n```\n",
            "\n```sqf\nATLToASL (_groundObj modelToWorld [0,0,0]) isEqualTo getPosWorld _groundObj; //true\n```\n",
            "Wave height under a boat:\n```sqf\n_h = ((boat modelToWorld [0,0,0]) vectorDiff getPosWorld boat) select 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosWorld",
        "modifiers": [
            "Global argument"
        ]
    },
    "titletext": {
        "name": "titleText",
        "description": "Displays text across the screen. If used along with [cutText](https://community.bistudio.com/wiki/cutText) two different texts (in different type styles) can be shown at once. The text can be displayed on multiple lines by using \"\\n\" new line characters:\ntitleText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.74 this command supports [Structured Text](https://community.bistudio.com/wiki/Structured_Text) formatting.",
        "syntaxArray": [
            {
                "Syntax": "**titleText** [text, type, speed,  showInMap, isStructuredText]",
                "Params": "[text, type, speed, showInMap, isStructuredText]: [Array](https://community.bistudio.com/wiki/Array)\n\ntext: [String](https://community.bistudio.com/wiki/String) - text to be displayed\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed (Optional): [Number](https://community.bistudio.com/wiki/Number) - Time in seconds to fade in resource. Default: -1\n\nshowInMap (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened. Default: [true](https://community.bistudio.com/wiki/true)\n\nisStructuredText (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to switch support for [Structured Text](https://community.bistudio.com/wiki/Structured_Text) formatting. Default: [false](https://community.bistudio.com/wiki/false) (See Example 3. Available since Arma 3 v1.74)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntitleText [\"Show this text\", \"PLAIN\"];\n```\n",
            "\n```sqf\ntitleText [\"Your message\", \"BLACK\", 2];\n```\n",
            "Since Arma 3 v1.74:\n```sqf\ntitleText [\"<t color='#ff0000' size='5'>RED ALERT!</t><br/>***********\", \"PLAIN\", -1, true, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/titleText",
        "modifiers": [
            "Local effect"
        ]
    },
    "getassignedcuratorlogic": {
        "name": "getAssignedCuratorLogic",
        "description": "Returns curator logic to which given player has access.",
        "syntaxArray": [
            {
                "Syntax": "**getAssignedCuratorLogic** player",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead,true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAssignedCuratorLogic",
        "modifiers": []
    },
    "setplatenumber": {
        "name": "setPlateNumber",
        "description": "Change the license plates on any vehicle which has plates configured. Max 15 characters are allowed!",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setPlateNumber** string",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nstring: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setPlateNumber \"Custom Plate 99\"\n```\n",
            "Reset plate to the world's randomized template:\n```sqf\n_return = \"\";\n_cfg = (configFile >> \"CfgWorlds\" >> worldName);\n{\n\t_return = _return + (call {\n\t\tif (_x == \"$\") exitWith {\n\t\t\tselectRandom (getText (_cfg >> \"plateLetters\") splitString \"\")\n\t\t};\n\t\tif (_x == \"#\") exitWith {\n\t\t\tselectRandom [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]\n\t\t};\n\t\t_x\n\t});\n} forEach (getText (_cfg >> \"plateFormat\") splitString \"\");\n_car setPlateNumber _return;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPlateNumber",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "canadditemtobackpack": {
        "name": "canAddItemToBackpack",
        "description": "Checks if given object can be stored into soldier's backpack.",
        "syntaxArray": [
            {
                "Syntax": "unit canAddItemToBackpack item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "unit canAddItemToBackpack [item, count] *Since Arma 3 v1.55.133607*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[item, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (player canAddItemToBackpack \"HandGrenade\") then { player addItemToBackpack _item } else { hint \"no room!\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canAddItemToBackpack",
        "modifiers": []
    },
    "lineintersectssurfaces": {
        "name": "lineIntersectsSurfaces",
        "description": "Returns list of intersections with surfaces from *begPosASL* to *endPosASL*. If there is ground intersection, it is also included. Works on units. Works underwater. Doesn't return intersection with sea surface. Hardcoded max distance: 5000m. By default, for speed purposes, command will return only 1st intersection with unique objects. Since Arma 3 v1.70, this could be tweaked with an optional param. \n> \nSince Arma v1.52 it is possible to indicate primary and secondary [LOD](https://community.bistudio.com/wiki/LOD) to look for intersection. Available options are:\n\n\n* \"FIRE\"\n\n* \"VIEW\"\n\n* \"GEOM\"\n\n* \"IFIRE\" - (\"I\" stands for Indirect, practically the same as FIRE)\n\n* \"NONE\"\n\n* \"PHYSX\" - PhysX geometry LOD (since Arma 3 v2.01.146666)\nDefault [LODs](https://community.bistudio.com/wiki/LOD) are \"VIEW\" and \"FIRE\"\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**lineIntersectsSurfaces** [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]",
                "Params": "[begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2]: [Array](https://community.bistudio.com/wiki/Array)\n\nbegPosASL: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - virtual line start\n\nendPosASL: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - virtual line end\n\nignoreObj1 (Optional): [Object](https://community.bistudio.com/wiki/Object) - first object to ignore or [objNull](https://community.bistudio.com/wiki/objNull): Default: [objNull](https://community.bistudio.com/wiki/objNull)\n\nignoreObj2 (Optional): [Object](https://community.bistudio.com/wiki/Object) - second object to ignore or [objNull](https://community.bistudio.com/wiki/objNull): Default: [objNull](https://community.bistudio.com/wiki/objNull)\n\nsortMode (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true): closest to furthest, [false](https://community.bistudio.com/wiki/false): furthest to closest. Default: [true](https://community.bistudio.com/wiki/true)\n\nmaxResults (Optional): [Number](https://community.bistudio.com/wiki/Number) - Max results to return. -1 to return every result. Default: 1\n\nLOD1 (Optional): [String](https://community.bistudio.com/wiki/String) (added in v1.52) - Primary [LOD](https://community.bistudio.com/wiki/LOD) to look for intersection. Default: \"VIEW\"\n\nLOD2 (Optional): [String](https://community.bistudio.com/wiki/String) (added in v1.52) - Secondary [LOD](https://community.bistudio.com/wiki/LOD) to look for intersection. Default: \"FIRE\"\n\nreturnUnique (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) (added in v1.70) - When [false](https://community.bistudio.com/wiki/false), all intersections in the same object are included not just the 1st one. Default: [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of intersections in format [[intersectPosASL, surfaceNormal, intersectObj, parentObject],...] where:\n\n* intersectPosASL - the actual position where line intersects surface\n\n* [surfaceNormal](https://community.bistudio.com/wiki/surfaceNormal) - a normal to the intersected surface\n\n* intersectObject - the object the surface belongs to (could be proxy object) - [objNull](https://community.bistudio.com/wiki/objNull) if terrain\n\n* parentObject - the object proxy object belongs to (not always the same as intersect object) - objNull if terrain"
            }
        ],
        "examples": [
            "\n```sqf\n_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];\n```\n",
            "\n```sqf\narrow = \"Sign_Arrow_F\" createVehicle [0,0,0];\nonEachFrame {\n\t_ins = lineIntersectsSurfaces [\n\t\tAGLToASL positionCameraToWorld [0,0,0], \n\t\tAGLToASL positionCameraToWorld [0,0,1000], \n\t\tplayer\n\t];\n\tif (count _ins == 0) exitWith {arrow setPosASL [0,0,0]};\n\tarrow setPosASL (_ins select 0 select 0); \n\tarrow setVectorUp (_ins select 0 select 1);\n\thintSilent str _ins;\n};\n```\n",
            "This should detect glass windows and wire fences (since Arma v1.52): \n```sqf\nwirefence = \"Land_New_WiredFence_5m_F\" createVehicle position player;\narrow = \"Sign_Arrow_F\" createVehicle [0,0,0];\nonEachFrame {\n\t_ins = lineIntersectsSurfaces [\n\t\tAGLToASL positionCameraToWorld [0,0,0], \n\t\tAGLToASL positionCameraToWorld [0,0,1000], \n\t\tplayer,\n\t\tobjNull,\n\t\ttrue,\n\t\t1,\n\t\t\"GEOM\",\n\t\t\"NONE\"\n\t];\n\tif (count _ins == 0) exitWith {arrow setPosASL [0,0,0]};\n\tarrow setPosASL (_ins select 0 select 0); \n\tarrow setVectorUp (_ins select 0 select 1);\n\thintSilent str _ins;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lineIntersectsSurfaces",
        "modifiers": [
            "Global argument"
        ]
    },
    "removeallsecondaryweaponitems": {
        "name": "removeAllSecondaryWeaponItems",
        "description": "Removes all items from [secondaryWeapon](https://community.bistudio.com/wiki/secondaryWeapon), except magazine.",
        "syntaxArray": [
            {
                "Syntax": "removeAllSecondaryWeaponItems unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllSecondaryWeaponItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllSecondaryWeaponItems",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "showcuratorcompass": {
        "name": "showCuratorCompass",
        "description": "Hides or shows compass in curator interface.",
        "syntaxArray": [
            {
                "Syntax": "**showCuratorCompass** bool",
                "Params": "bool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowCuratorCompass true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showCuratorCompass",
        "modifiers": []
    },
    "setvectorup": {
        "name": "setVectorUp",
        "description": "Set object's up vector. Direction of the object remain unchanged. Default object's [vectorUp](https://community.bistudio.com/wiki/vectorUp) is [0,0,1].\n\nIn Multiplayer, setVectorUp must be executed on the machine where the object it applied to is [local](https://community.bistudio.com/wiki/local).",
        "syntaxArray": [
            {
                "Syntax": "object **setVectorUp** [x, y, z]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[x, y, z]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Turn object upside down:\n\n```sqf\n_obj setVectorUp [0,0,-1];\n```\n",
            "Align object with the terrain underneath:\n\n```sqf\n_obj setVectorUp surfaceNormal position _obj;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVectorUp",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "else": {
        "name": "else",
        "description": "Executes else code when [if](https://community.bistudio.com/wiki/if) condition returns [false](https://community.bistudio.com/wiki/false).",
        "syntaxArray": [
            {
                "Syntax": "ifCode **else** elseCode",
                "Params": "ifCode: [Code](https://community.bistudio.com/wiki/Code)\n\nelseCode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nif (a > b) then { c = 0 } else { c = 1 };\n```\n",
            "\n```sqf\nif (a < b) then {\n    hint \"B is greater than A\";\n} else {\n    hint \"A is greater than B\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/else",
        "modifiers": []
    },
    "getposvisual": {
        "name": "getPosVisual",
        "description": "Returns an object's rendered [3D position](https://community.bistudio.com/wiki/Position) (z value above sea when over sea, or above ground when over land) in render time scope. Alias of [visiblePosition](https://community.bistudio.com/wiki/visiblePosition).",
        "syntaxArray": [
            {
                "Syntax": "**getPosVisual** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object): - name of the object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionAGLS](https://community.bistudio.com/wiki/PositionAGLS)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerRenderedPos = getPosVisual player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrltext": {
        "name": "ctrlText",
        "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path. Does not work on HTML control and returns empty string \"\".",
        "syntaxArray": [
            {
                "Syntax": "**ctrlText** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - control ID\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - The text or image path is returned, dependent on the control type"
            },
            {
                "Syntax": "**ctrlText** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - The text or image path is returned, dependent on the control type"
            }
        ],
        "examples": [
            "\n```sqf\n_text = ctrlText 100;\n```\n",
            "\n```sqf\n_text = ctrlText _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlText",
        "modifiers": []
    },
    "tvclear": {
        "name": "tvClear",
        "description": "Removes all items from Tree View with given idc.",
        "syntaxArray": [
            {
                "Syntax": "tvClear idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "tvClear control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvClear 101;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvClear",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "taskparent": {
        "name": "taskParent",
        "description": "Returns the parent task of the specified task.",
        "syntaxArray": [
            {
                "Syntax": "**taskParent** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task) -\n\n",
                "Return": "[Task](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "\n```sqf\n_parent = taskParent \"someTask\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskParent",
        "modifiers": []
    },
    "lnbcolor": {
        "name": "lnbColor",
        "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "lnbColor [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "control lnbColor [row, column]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbColor [0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbColor",
        "modifiers": []
    },
    "textlogformat": {
        "name": "textLogFormat",
        "description": "Debugging output. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**textLogFormat** [format, arg1, arg2, ...]",
                "Params": "format: [String](https://community.bistudio.com/wiki/String)\n\narg1: [Anything](https://community.bistudio.com/wiki/Anything)\n\narg2: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/textLogFormat",
        "modifiers": []
    },
    "keyimage": {
        "name": "keyImage",
        "description": "Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code.",
        "syntaxArray": [
            {
                "Syntax": "**keyImage** dikCode",
                "Params": "dikCode: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = keyImage 28; // result is \"Enter\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/keyImage",
        "modifiers": []
    },
    "getmissiondlcs": {
        "name": "getMissionDLCs",
        "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and does not detect units created by scripts!",
        "syntaxArray": [
            {
                "Syntax": "getMissionDLCs",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - list of DLCs detected for the mission. Example: \n```sqf\n[\"Orange\",\"Enoch\",\"Expansion\",\"Heli\",\"Contact\",\"Mark\",\"Argo\",\"Jets\"]\n```\n"
            }
        ],
        "examples": [
            "\n```sqf\n_usedDLCs = getMissionDLCs;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMissionDLCs",
        "modifiers": []
    },
    "addbackpackcargoglobal": {
        "name": "addBackpackCargoGlobal",
        "description": "Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is [here](https://community.bistudio.com/wiki/Arma_2_OA:_Backpacks)",
        "syntaxArray": [
            {
                "Syntax": "vehicle addBackpackCargoGlobal [packClassName, count]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) to add the Backpack to\n\npackClassName: [String](https://community.bistudio.com/wiki/String),  See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nthis addBackpackCargoGlobal [\"TK_RPG_Backpack_EP1\", 2];\n```\n",
            "\n```sqf\n_apc addBackpackCargoGlobal [\"US_Patrol_Pack_EP1\", 4];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addBackpackCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "menuenable": {
        "name": "menuEnable",
        "description": "Enables disabled menu entry on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuEnable [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuEnable path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuEnable [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuEnable",
        "modifiers": []
    },
    "exit": {
        "name": "exit",
        "description": "Stops the execution of a [SQS script](https://community.bistudio.com/wiki/SQS_Syntax).\n\nIt is ignored in [SQF Scripts](https://community.bistudio.com/wiki/SQF_Syntax).",
        "syntaxArray": [
            {
                "Syntax": "exit",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "[SQS Syntax](https://community.bistudio.com/wiki/SQS_Syntax):\n```sqf\n? not alive player : exit\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/exit",
        "modifiers": []
    },
    "updatemenuitem": {
        "name": "updateMenuItem",
        "description": "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **updateMenuItem** [menu item index,text,command]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[menu item index,text,command]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/updateMenuItem",
        "modifiers": []
    },
    "resources": {
        "name": "resources",
        "description": "Returns the resources of a team member. Results are local to the PC on which command was executed.",
        "syntaxArray": [
            {
                "Syntax": "**resources** member",
                "Params": "member: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nresources teamMember _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/resources",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "menusetcheck": {
        "name": "menuSetCheck",
        "description": "Sets item on given path to be checked or not. By default menu strip entries are not checkable. Once this command was executed, an entry can be become checked and unchecked. If an entry is checked is indicated by a tick to the left of the entry's text. Setting an entry to be checkable will overwrite set picture with [menuSetPicture](https://community.bistudio.com/wiki/menuSetPicture).",
        "syntaxArray": [
            {
                "Syntax": "menuSetCheck [idc, path, checked]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nchecked: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetCheck [path, checked]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nchecked: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetCheck [[0,1], true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetCheck",
        "modifiers": []
    },
    "pitch": {
        "name": "pitch",
        "description": "Returns the pitch of a persons voice.",
        "syntaxArray": [
            {
                "Syntax": "**pitch** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\npitch player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pitch",
        "modifiers": []
    },
    "floor": {
        "name": "floor",
        "description": "Returns the next **lowest** integer in relation to the provided number.",
        "syntaxArray": [
            {
                "Syntax": "floor num",
                "Params": "num: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nfloor 5.1;\t\t// result is  5\nfloor 5.999;\t// result is  5\nfloor -2.01;\t// result is -3\nfloor -2.99;\t// result is -3\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/floor",
        "modifiers": []
    },
    "getposworldvisual": {
        "name": "getPosWorldVisual",
        "description": "Returns render version of [PositionWorld](https://community.bistudio.com/wiki/PositionWorld), which is [PositionASL](https://community.bistudio.com/wiki/PositionASL) of the model centre [0,0,0] of an object in render scope, rather than transformed [boundingCenter](https://community.bistudio.com/wiki/boundingCenter) or [LandContact](https://community.bistudio.com/wiki/Oxygen_2_-_Manual#LandContact) vertices.",
        "syntaxArray": [
            {
                "Syntax": "getPosWorldVisual object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object);\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionWorld](https://community.bistudio.com/wiki/PositionWorld) in render scope"
            }
        ],
        "examples": [
            "\n```sqf\n_obj setPosWorld getPosWorldVisual _obj;\n```\n",
            "\n```sqf\n_groundObj modelToWorldVisualWorld [0,0,0] isEqualTo getPosWorldVisual _groundObj; //true\n```\n",
            "Wave height under a boat:\n```sqf\n_h = ((boat modelToWorldVisual [0,0,0]) vectorDiff getPosWorldVisual boat) select 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosWorldVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "getposatlvisual": {
        "name": "getPosATLVisual",
        "description": "Returns an object's rendered [3D position ATL](https://community.bistudio.com/wiki/PositionATL) (z value above ground) in render time scope.",
        "syntaxArray": [
            {
                "Syntax": "**getPosATLVisual** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object): - name of the object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionATL](https://community.bistudio.com/wiki/PositionATL)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerRenderedPosATL = getPosATLVisual player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosATLVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "screenshot": {
        "name": "screenshot",
        "description": "Captures a screenshot and stores it to given filename. PNG is the only available format and the file must have .png extension. \n\nThe file is saved into *Screenshots* folder in the [Profile](https://community.bistudio.com/wiki/Profile) directory. The folder is by default limited to 250 MB to prevent abuse.\n\nTo increase the limit, add the following line at the end of the profile file:\n\n```sqf\nmaxScreenShotFolderSizeMB = 2000;\n```\n\n2000 can be replaced by any value in MB.",
        "syntaxArray": [
            {
                "Syntax": "screenshot filename",
                "Params": "filename: [String](https://community.bistudio.com/wiki/String) - desired path and name relative <USERDIR>\\Screenshot\\. If empty string \"\" used, the filename will be autogenerated in format: YYYY_MM_DD_hh_mm_ss.png\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if success"
            }
        ],
        "examples": [
            "\n```sqf\nscreenshot \"\";\n```\n",
            "\n```sqf\nscreenshot \"testFile.png\";\n```\n",
            "The following code will result in the screenshot being placed in \\Documents\\Arma 3\\Screenshots\\any\\where\\you\\want.png\n\n```sqf\nscreenshot \"any\\where\\you\\want.png\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/screenshot",
        "modifiers": []
    },
    "sidelogic": {
        "name": "sideLogic",
        "description": "The Logic [side](https://community.bistudio.com/wiki/Side). Side of [Game Logics](https://community.bistudio.com/wiki/Game_Logic) and [Modules](https://community.bistudio.com/wiki/Modules).",
        "syntaxArray": [
            {
                "Syntax": "**sideLogic**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side _obj == sideLogic) then {\n    hint \"It is a logic!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideLogic",
        "modifiers": []
    },
    "setposworld": {
        "name": "setPosWorld",
        "description": "Sets position of an object based on [PositionWorld](https://community.bistudio.com/wiki/PositionWorld), which is [PositionASL](https://community.bistudio.com/wiki/PositionASL) of the model centre [0,0,0].",
        "syntaxArray": [
            {
                "Syntax": "object **setPosWorld** position",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [PositionWorld](https://community.bistudio.com/wiki/PositionWorld)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_obj setPosWorld getPosWorld _obj;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPosWorld",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ln": {
        "name": "ln",
        "description": "Natural logarithm of x.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) =  **ln** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_nlog = ln 10 \n```\n\n\nResult is 2.302"
        ],
        "Url": "https://community.bistudio.com/wiki/ln",
        "modifiers": []
    },
    "breakwith": {
        "name": "breakWith",
        "description": "Skips all loop iterations and immediately returns the given value.",
        "syntaxArray": [
            {
                "Syntax": "breakWith return",
                "Params": "return: [Anything](https://community.bistudio.com/wiki/Anything) - Value to be returned when iterations are skipped\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "This loop will stop once \n```sqf\n_i\n```\n reaches 5; the output will be \"0\", \"1\", \"2\", \"3\", \"4\" and finally \"END\".\n\n```sqf\nsystemChat call {\n\tfor \"_i\" from 0 to 10 do {\n\t\tif (_i == 5) then { breakWith \"END\"; };\n\t\tsystemChat str _i;\n\t};\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/breakWith",
        "modifiers": []
    },
    "ppeffectadjust": {
        "name": "ppEffectAdjust",
        "description": "Set [post process effect](https://community.bistudio.com/wiki/Post_process_effects) parameters.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "effect **ppEffectAdjust** settings",
                "Params": "effect: [String](https://community.bistudio.com/wiki/String) effect name\n\nsettings: [Array](https://community.bistudio.com/wiki/Array) - array of effect params\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "handle **ppEffectAdjust** settings",
                "Params": "handle: [Number](https://community.bistudio.com/wiki/Number) - effect handle\n\nsettings: [Array](https://community.bistudio.com/wiki/Array) - array of effect params\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"colorCorrections\" ppEffectAdjust [1, 1, -0.01, [0, 0, 0, 0], [1.5, 1, 1.2, 0.6], [0.199, 0.587, 0.114, 0]];\n```\n",
            "Black&White: \n```sqf\n_colorCorrectionsEffHandle ppEffectAdjust [1, 0.4, 0, [0, 0, 0, 0], [1, 1, 1, 0], [1, 1, 1, 0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectAdjust",
        "modifiers": [
            "Local effect"
        ]
    },
    "drawrectangle": {
        "name": "drawRectangle",
        "description": "Draws a rectangle on the map. [](https://community.bistudio.com/wiki/File:drawRectangle.jpg)",
        "syntaxArray": [
            {
                "Syntax": "map **drawRectangle** [c, a, b, angle, color, fill]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\nc: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - Center of rectangle in format: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\na: [Number](https://community.bistudio.com/wiki/Number) - 1/2 width of rectangle in meters\n\nb: [Number](https://community.bistudio.com/wiki/Number) - 1/2 height of rectangle in meters\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - Angle of rotation in degrees\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Line color in format [Color RGBA](https://community.bistudio.com/wiki/Color)\n\nfill: [String](https://community.bistudio.com/wiki/String) - Fill texture file or [Procedural Textures](https://community.bistudio.com/wiki/Procedural_Textures). Note that the file texture will not rotate with rectangle, use [drawIcon](https://community.bistudio.com/wiki/drawIcon) for that. If fill texture is not empty, set line color to white \n```sqf\n[1,1,1,1]\n```\n\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl drawRectangle [\n\tgetPos player,\n\t20,\n\t20,\n\tgetDir player,\n\t[0,0,1,1],\n\t\"\"\n];\n```\n",
            "\n```sqf\n_ctrl drawRectangle [\n\tplayer,\n\t10,\n\t20,\n\tgetDir player,\n\t[1,1,1,1],\n\t\"#(rgb,8,8,3)color(1,0,0,1)\"\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawRectangle",
        "modifiers": []
    },
    "lineintersectsobjs": {
        "name": "lineIntersectsObjs",
        "description": "Returns list of objects intersected by given line from *begPos* to *endPos*.",
        "syntaxArray": [
            {
                "Syntax": "**lineIntersectsObjs** [begPos, endPos, withObj, ignoreObj, sortByDistance, flags]",
                "Params": "begPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - virtual line start\n\nendPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - virtual line end\n\nwithObj: [Object](https://community.bistudio.com/wiki/Object)\n\nignoreObj: [Object](https://community.bistudio.com/wiki/Object)\n\nsortByDistance: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true): furthest object first, closest object last; [false](https://community.bistudio.com/wiki/false): unsorted\n\nflags: [Number](https://community.bistudio.com/wiki/Number)\n1 - CF_ONLY_WATER \n2 - CF_NEAREST_CONTACT \n4 - CF_ONLY_STATIC \n8 - CF_ONLY_DYNAMIC \n16 - CF_FIRST_CONTACT \n32 - CF_ALL_OBJECTS (Usable only with CF_FIRST_CONTACT and it will check one contact per object)\nFlags can be combined: 2 + 4 = 6 is CF_NEAREST_OBJECT + CF_ONLY_STATIC\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - intersecting objects"
            }
        ],
        "examples": [
            "\n```sqf\nSto = [];\nFn = {\n  {\n    Sto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLtoASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]];\n  } forEach [1,2,4,8,16,32];\n  hintSilent format [\"\n  ONLY_WATER: %1, \n  NEAREST_CONTACT: %2, \n  ONLY_STATIC: %3, \n  ONLY_DYNAMIC: %4,\n  FIRST_CONTACT: %5,\n  ALL_OBJECTS: %6\",\n  Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5];\n};\n[\"sample_id\",\"onEachFrame\",\"Fn\"] call BIS_fnc_addStackedEventHandler;\n//Example display objects' array in the middle of the screen sorted by 6 flags\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lineIntersectsObjs",
        "modifiers": [
            "Global argument"
        ]
    },
    "getdirvisual": {
        "name": "getDirVisual",
        "description": "Returns object's heading in the range from 0 to 360 in render time scope.",
        "syntaxArray": [
            {
                "Syntax": "**getDirVisual** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_dir = getDirVisual player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDirVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "moveinturret": {
        "name": "moveInTurret",
        "description": "Moves the soldier into the vehicle's turret. (Immediately, without animation). *turret path* is an array of positions inside a turret, or positions inside a turret of a turret.\n\n[0] means first turret.\n[1] means second turret.\n[0,0] means first turret of first turret.\n[0,1] means second turret of first turret.\n[1,0] means first turret of the second turret.\nAnd so on.",
        "syntaxArray": [
            {
                "Syntax": "unitName **moveInTurret** [vehicle, turretPath]",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - see Description.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne moveInTurret [_tank, [0, 0]] \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveInTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "lnbsetpictureright": {
        "name": "lnbSetPictureRight",
        "description": "Sets the cell's right-picture. The picture is set to the end of the **row**, the *column* parameter does not matter.\n> ",
        "syntaxArray": [
            {
                "Syntax": "lnbSetPictureRight [idc, [row, column], path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first row is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\npath: [String](https://community.bistudio.com/wiki/String) - the picture's file path\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl [lnbSetPicture](https://community.bistudio.com/wiki/lnbSetPicture) [[row, column], path]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first row is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\npath: [String](https://community.bistudio.com/wiki/String) - the picture's file path\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetPictureRight [1, [0, 0], \"Picture.paa\"];\n```\n",
            "\n```sqf\n_ctrl lnbSetPictureRight [ [0, 0], \"\\A3\\Ui_f\\data\\GUI\\Cfg\\Ranks\\lieutenant_gs.paa\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetPictureRight",
        "modifiers": []
    },
    "removeallprimaryweaponitems": {
        "name": "removeAllPrimaryWeaponItems",
        "description": "Removes all items from [primaryWeapon](https://community.bistudio.com/wiki/primaryWeapon), except magazine.",
        "syntaxArray": [
            {
                "Syntax": "removeAllPrimaryWeaponItems unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllPrimaryWeaponItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllPrimaryWeaponItems",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "menusort": {
        "name": "menuSort",
        "description": "Sorts subentries of item on given path by their text.",
        "syntaxArray": [
            {
                "Syntax": "menuSort [idc, path, AtoZ]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nAtoZ: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to sort from A to Z, [false](https://community.bistudio.com/wiki/false) to sort from Z to A\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSort [path, AtoZ]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nAtoZ: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to sort from A to Z, [false](https://community.bistudio.com/wiki/false) to sort from Z to A\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSort [[],true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSort",
        "modifiers": []
    },
    "gettotaldlcusagetime": {
        "name": "getTotalDLCUsageTime",
        "description": "Returns total DLC usage time in this game session",
        "syntaxArray": [
            {
                "Syntax": "getTotalDLCUsageTime",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - time (in seconds?)"
            }
        ],
        "examples": [
            "\n```sqf\n_dlcTime = getTotalDLCUsageTime;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getTotalDLCUsageTime",
        "modifiers": []
    },
    "setspeedmode": {
        "name": "setSpeedMode",
        "description": "Sets group speed mode. If unit is passed as param, unit's group is used. Mode may be one of: \n\n* **\"UNCHANGED\"** (unchanged)\n\n* **\"LIMITED\"** (half speed)\n\n* **\"NORMAL\"** (full speed, maintain formation)\n\n* **\"FULL\"** (do not wait for any other units in formation)",
        "syntaxArray": [
            {
                "Syntax": "groupName **setSpeedMode** mode",
                "Params": "groupName: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nmode: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_groupOne setSpeedMode \"LIMITED\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSpeedMode",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "configsourcemodlist": {
        "name": "configSourceModList",
        "description": "Returns an array of mods (CfgMods) in which the given config class is defined.",
        "syntaxArray": [
            {
                "Syntax": "**configSourceModList** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_mods = configSourceModList (configFile >> \"CfgVehicles\" >> \"Man\");\nhint str _mods; // [\"A3\",\"curator\",\"heli\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configSourceModList",
        "modifiers": []
    },
    "setairplanethrottle": {
        "name": "setAirplaneThrottle",
        "description": "Sets a wanted throttle position, works only on player's vehicle.",
        "syntaxArray": [
            {
                "Syntax": "airplane setAirplaneThrottle value",
                "Params": "airplane: [Object](https://community.bistudio.com/wiki/Object) -\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - Wanted throttle\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle setAirplaneThrottle 0.5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAirplaneThrottle",
        "modifiers": []
    },
    "curatorcameraarea": {
        "name": "curatorCameraArea",
        "description": "Returns all curator camera areas.",
        "syntaxArray": [
            {
                "Syntax": "**curatorCameraArea** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of camera areas in format [cameraAreaID,position,radius]. See [addCuratorCameraArea](https://community.bistudio.com/wiki/addCuratorCameraArea)."
            }
        ],
        "examples": [
            "\n```sqf\n_camArea = curatorCameraArea myCurator; // [[8052,[4027.36,4024.89,0],250]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorCameraArea",
        "modifiers": []
    },
    "scoreside": {
        "name": "scoreSide",
        "description": "Returns score for the given [side](https://community.bistudio.com/wiki/Side). MP Only.",
        "syntaxArray": [
            {
                "Syntax": "**scoreSide** side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_number = scoreSide west;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/scoreSide",
        "modifiers": []
    },
    "exportjipmessages": {
        "name": "exportJIPMessages",
        "description": "Export list of JIP to a file. Special: BattlEye's RCON variant of this command is #exportJIPqueue (see also [Multiplayer_Server_Commands](https://community.bistudio.com/wiki/Multiplayer_Server_Commands))",
        "syntaxArray": [
            {
                "Syntax": "**exportJIPMessages** fileName",
                "Params": "fileName: [String](https://community.bistudio.com/wiki/String) - File where to store the list\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nexportJIPMessages \"myFileNameWithoutExtension\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/exportJIPMessages",
        "modifiers": []
    },
    "hidebody": {
        "name": "hideBody",
        "description": "Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground. After awhile, when group of the unit becomes [grpNull](https://community.bistudio.com/wiki/grpNull), the body gets deleted and becomes [objNull](https://community.bistudio.com/wiki/objNull). If applied to alive unit, nothing happens until unit dies, then the unit's body gets hidden. If a dead unit is human player, the body is hidden but not deleted until player respawns.",
        "syntaxArray": [
            {
                "Syntax": "**hideBody** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - person\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhideBody player1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hideBody",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "allowfleeing": {
        "name": "allowFleeing",
        "description": "Sets the cowardice level (the lack of courage or bravery) of a group or unit. \n\nNotes:\n\n* Fleeing only affects AI led groups.\n\n* Only the group as a whole can flee (or not).\n\n* The courage of the AI group is based on the group's leader [courage subskill](https://community.bistudio.com/wiki/Arma_3_AI_Skill#Sub-Skills).\n\n* Each group has a max strength (summed \"armor\" of all infantry units - plus armor when inside vehicles).\n\n* If the group losses by injury/damage or death/destruction are higher than the max strength, multiplied by leader's courage or allowFleeing level , then the group will start fleeing.\n\n* As result primarily the AI flees to a nearby \"supply point\" (some friendly units - preferably with medic or engineer, or a vehicle with repair/ammo/fuel cargo). Alternatively it will try to find a safe position within a 600m radius from the initial waypoint (danger, distance, amount of cover positions are taken into account).\n\n* After the fleeing has been finished the group's initial strength is reset.\n\n* Fleeing units in [combatMode](https://community.bistudio.com/wiki/combatMode) red, will be set to yellow when fleeing to avoid engaging enemies while doing so.\n\n* While fleeing, the group leader will be set to green, to avoid giving engage or fire orders, unless in [combatMode](https://community.bistudio.com/wiki/combatMode) blue already. Also [speedMode](https://community.bistudio.com/wiki/speedMode) is set to full.\n\n* When reaching their flee point/destination, they will change to [combatMode](https://community.bistudio.com/wiki/combatMode) yellow and [speedMode](https://community.bistudio.com/wiki/speedMode) normal.\n\n* With allowFleeing one can make unit's flee earlier (or essentially never flee). Apply it, overrides the courage subskill influence.",
        "syntaxArray": [
            {
                "Syntax": "unitOrGroup **allowFleeing** cowardice",
                "Params": "unitOrGroup: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\ncowardice: [Number](https://community.bistudio.com/wiki/Number) - 1 is maximum cowardice and 0 minimum. A value of 0 will disable fleeing all together\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group1 allowFleeing 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowFleeing",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "issteammission": {
        "name": "isSteamMission",
        "description": "Returns true if the current mission is a Steam Workshop mission.",
        "syntaxArray": [
            {
                "Syntax": "**isSteamMission**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isSteamMission) then\n{\n    hint \"Thank you for subscribing to my mission on Steam!\";\n}\nelse\n{\n    hint \"Thank you for downloading my mission off the Internet!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isSteamMission",
        "modifiers": []
    },
    "scriptnull": {
        "name": "scriptNull",
        "description": "A non-existing [Script](https://community.bistudio.com/wiki/Script) or script that has finished ([scriptDone](https://community.bistudio.com/wiki/scriptDone)). To compare non-existent scripts use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* scriptNull == scriptNull; // ERROR! == cannot be used with script object\n\n* [isNull](https://community.bistudio.com/wiki/isNull) scriptNull; // true\n\n* scriptNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) scriptNull; // true",
        "syntaxArray": [
            {
                "Syntax": "**scriptNull**",
                "Params": "",
                "Return": "[Script](https://community.bistudio.com/wiki/Script) - NULL script"
            }
        ],
        "examples": [
            "Wait until previous script is finished before starting a new one:\n```sqf\n[] spawn\n{\n\t_script = scriptNull;\n\tfor \"_i\" from 1 to 10 do {\n\t\twaitUntil {isNull _script};\n\t\t_script = _i spawn {\n\t\t\thint format [\"script %1 started\", _this];\n\t\t\tsleep 1;\n\t\t\thint format [\"script %1 finished\", _this];\n\t\t\tsleep 0.2;\n\t\t};\n\t};\n};\n```\n",
            "\n```sqf\nif (scriptDone (_obj getVariable [\"objScript\", scriptNull])) then {\n\t_obj setVariable [\"objScript\", _obj spawn {\n\t\twaitUntil {damage _this > 0.9};\n\t\thint \"Critical Damage!\";\n\t}];\n};\n```\n",
            "\n```sqf\nstr scriptNull; // <NULL-script>\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/scriptNull",
        "modifiers": []
    },
    "forceadduniform": {
        "name": "forceAddUniform",
        "description": "Create a new uniform and hard link it into slot (without any restrictions).",
        "syntaxArray": [
            {
                "Syntax": "unit forceAddUniform type",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit forceAddUniform \"U_B_CombatUniform_mcam\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceAddUniform",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "waypointloitertype": {
        "name": "waypointLoiterType",
        "description": "Gets the waypoint loiter type. Waypoint uses format [Waypoint](https://community.bistudio.com/wiki/Waypoint).",
        "syntaxArray": [
            {
                "Syntax": "waypointLoiterType waypoint",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_type = waypointLoiterType [groupOne, 1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointLoiterType",
        "modifiers": []
    },
    "addvest": {
        "name": "addVest",
        "description": "Create a new vest and try to link it into vest slot.",
        "syntaxArray": [
            {
                "Syntax": "unit addVest type",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addVest \"V_TacVest_blk_POLICE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addVest",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "commitoverlay": {
        "name": "commitOverlay",
        "description": "Commit the current overlay. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**commitOverlay** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\ncommitOverlay _map,\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commitOverlay",
        "modifiers": []
    },
    "triggerarea": {
        "name": "triggerArea",
        "description": "Returns currently monitored trigger area. Since Arma 3 v1.60, the command returns 3rd dimension for the monitored area. If height is not set, the value for it would be -1.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**triggerArea** trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [a, b, angle, isRectangle, c], where:\n\n* a - trigger area X size / 2\n\n* b - trigger area Y size / 2\n\n* angle\n\n* isRectangle\n\n* c - trigger area Z size / 2 *Since Arma 3 v1.59.135137*"
            }
        ],
        "examples": [
            "\n```sqf\n_area = triggerArea sensor1; // result is [200, 120, 45, false, -1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerArea",
        "modifiers": [
            "Global argument"
        ]
    },
    "setside": {
        "name": "setSide",
        "description": "Sets a location's [side](https://community.bistudio.com/wiki/Side). The default side is Unknown.",
        "syntaxArray": [
            {
                "Syntax": "location **setSide** side",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setSide resistance\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSide",
        "modifiers": []
    },
    "setammocargo": {
        "name": "setAmmoCargo",
        "description": "Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo.\n\nThe actual **quantity** to work with is determined by the model's class in [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles)",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **setAmmoCargo** ammoCargo",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nammoCargo: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _ammoTruck1 setAmmoCargo 0.5; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAmmoCargo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "enableaifeature": {
        "name": "enableAIFeature",
        "description": "Enables/disables given AI feature.",
        "syntaxArray": [
            {
                "Syntax": "feature **enableAIFeature** enable",
                "Params": "feature: [String](https://community.bistudio.com/wiki/String) - Can be:\n\n* \"AwareFormationSoft\"\n\n* \"CombatFormationSoft\"\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to enable, [false](https://community.bistudio.com/wiki/false) to disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit **enableAIFeature** [feature, enable] *Since Arma 3 v1.96*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Unit to test AI feature for\n\nfeature: [String](https://community.bistudio.com/wiki/String) - See [disableAI](https://community.bistudio.com/wiki/disableAI) / [enableAI](https://community.bistudio.com/wiki/enableAI) for possible values\n\nenabled: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to enable, [false](https://community.bistudio.com/wiki/false) to disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"AwareFormationSoft\" enableAIFeature true;\n```\n",
            "\n```sqf\nbob enableAIFeature [\"AUTOTARGET\", false];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAIFeature",
        "modifiers": []
    },
    "crew": {
        "name": "crew",
        "description": "Returns the crew (both dead and alive) of the given vehicle.",
        "syntaxArray": [
            {
                "Syntax": "**crew** vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  An array with all units in the vehicle is returned."
            }
        ],
        "examples": [
            "\n```sqf\nplayer in (crew _tank);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/crew",
        "modifiers": [
            "Global argument"
        ]
    },
    "currentnamespace": {
        "name": "currentNamespace",
        "description": "Returns current [global namespace](https://community.bistudio.com/wiki/Namespace) the script runs in. Could be one of the following:\n\n* [missionNamespace](https://community.bistudio.com/wiki/missionNamespace)\n\n* [uiNamespace](https://community.bistudio.com/wiki/uiNamespace)\n\n* [parsingNamespace](https://community.bistudio.com/wiki/parsingNamespace)\n\n* [profileNamespace](https://community.bistudio.com/wiki/profileNamespace)\n\n* [localNamespace](https://community.bistudio.com/wiki/localNamespace) (since Arma 3 v2.00)\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**currentNamespace**",
                "Params": "",
                "Return": "[Namespace](https://community.bistudio.com/wiki/Namespace)"
            }
        ],
        "examples": [
            "\n```sqf\nif (currentNamespace isEqualTo uiNamespace) then {hint \"This is uiNamespace\"};\n```\n",
            "Quick function to get namespace name\n```sqf\n_fn_currentNamespace = {\n\tif (currentNamespace isEqualTo missionNamespace) exitWith {\"missionNamespace\"};\n\tif (currentNamespace isEqualTo parsingNamespace) exitWith {\"parsingNamespace\"};\n\tif (currentNamespace isEqualTo profileNamespace) exitWith {\"profileNamespace\"};\n\tif (currentNamespace isEqualTo uiNamespace) exitWith {\"uiNamespace\"};\n};\n\nwith profileNamespace do {\n\tsystemChat call _fn_currentNamespace;\t// profileNamespace\n};\nsystemChat call _fn_currentNamespace;\t\t// missionNamespace\nwith uiNamespace do {\n\tsystemChat call _fn_currentNamespace;\t// uiNamespace\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentNamespace",
        "modifiers": []
    },
    "selectweapon": {
        "name": "selectWeapon",
        "description": "Selects the given weapon.",
        "syntaxArray": [
            {
                "Syntax": "unitName **selectWeapon** muzzleName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nmuzzleName: [String](https://community.bistudio.com/wiki/String) - Name of the weapon or muzzle\n> \n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 selectWeapon \"LAWLauncher\";\n```\n",
            "\n```sqf\nplayer selectWeapon \"M203Muzzle\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectWeapon",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "createdialog": {
        "name": "createDialog",
        "description": "Creates a dialog which is defined either in the mission's [description.ext](https://community.bistudio.com/wiki/description.ext), in the campaign's description.ext or in the global [resource.cpp](https://community.bistudio.com/wiki/Resource.cpp/bin). The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.",
        "syntaxArray": [
            {
                "Syntax": "**createDialog** dialogName",
                "Params": "dialogName: [String](https://community.bistudio.com/wiki/String) - Class name used in the description.ext, resource.cpp or config.cpp\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) -  [True](https://community.bistudio.com/wiki/true) when the dialog was created successfully"
            }
        ],
        "examples": [
            "\n```sqf\n_ok = createDialog \"RscDisplayGame\";\nif (!_ok) then {hint \"Dialog couldn't be opened!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createDialog",
        "modifiers": [
            "Local effect"
        ]
    },
    "progresssetposition": {
        "name": "progressSetPosition",
        "description": "Sets progress position of a progress bar ([CT_PROGRESS](https://community.bistudio.com/wiki/CT_PROGRESS)).",
        "syntaxArray": [
            {
                "Syntax": "control **progressSetPosition** pos",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - progress bar control\n\npos: [Number](https://community.bistudio.com/wiki/Number) - 0: no progress; 1: full progress\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control progressSetPosition 0.5\n```\n",
            "\n```sqf\nwith uiNamespace do {\n\tbar = findDisplay 46 ctrlCreate [\"RscProgress\", -1]; \n\tbar ctrlSetPosition [0,0,1,0.01]; \n\tbar ctrlCommit 0;\n\tbar progressSetPosition 0.75; \n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/progressSetPosition",
        "modifiers": []
    },
    "triggerinterval": {
        "name": "triggerInterval",
        "description": "Returns trigger condition check frequency in seconds.  \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "triggerInterval trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - Trigger object\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Trigger interval in seconds"
            }
        ],
        "examples": [
            "\n```sqf\n_interval = triggerInterval someTrigger;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerInterval",
        "modifiers": [
            "Global argument"
        ]
    },
    "getobjectviewdistance": {
        "name": "getObjectViewDistance",
        "description": "Gets the values of rendering distances of objects and shadows.",
        "syntaxArray": [
            {
                "Syntax": "**getObjectViewDistance**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [objectDistance, shadowDistance]"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = getObjectViewDistance;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectViewDistance",
        "modifiers": []
    },
    "deletegroup": {
        "name": "deleteGroup",
        "description": "Destroys the given group. Group must be empty and local to the machine executing command. \n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**deleteGroup** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteGroup _groupname;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteGroup",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "buildingpos": {
        "name": "buildingPos",
        "description": "Returns [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) of a given indexed position in a [building](https://community.bistudio.com/wiki/Object#Building). The index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). Command will return [0,0,0] if buildingPos with given index is non-existent. \nSince Arma 3 v.155.133934 if index -1 is supplied, the command will return array with all available positions.",
        "syntaxArray": [
            {
                "Syntax": "building **buildingPos** index",
                "Params": "building: [Object](https://community.bistudio.com/wiki/Object)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index of a specific position or -1 to return available all positions\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - a single building position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or (*since Arma 3 v.155.133934*) [Array](https://community.bistudio.com/wiki/Array) of all building positions in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) if index is -1"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier setPosATL (_house1 buildingPos 2);\n```\n",
            "\n```sqf\n_allpositions = nearestBuilding player buildingPos -1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buildingPos",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlsetfonth1b": {
        "name": "ctrlSetFontH1B",
        "description": "Sets H1 bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH1B** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH1B \"TahomaB\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH1B",
        "modifiers": []
    },
    "savevar": {
        "name": "saveVar",
        "description": "Save variable value into the campaign space. This variable is available to all following missions in the campaign.",
        "syntaxArray": [
            {
                "Syntax": "**saveVar** varname",
                "Params": "varname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsaveVar \"varOne\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveVar",
        "modifiers": []
    },
    "remove3denlayer": {
        "name": "remove3DENLayer",
        "description": "Remove [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) editing layer.",
        "syntaxArray": [
            {
                "Syntax": "**remove3DENLayer** layerID",
                "Params": "layerID : [Number](https://community.bistudio.com/wiki/Number) - layer ID as returned by [add3DENLayer](https://community.bistudio.com/wiki/add3DENLayer) command\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the layer was removed successfully (i.e., correct layer ID was used)"
            }
        ],
        "examples": [
            "\n```sqf\n_myLayer = -1 add3DENLayer \"Enemy Base\";\nremove3DENLayer _myLayer ;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/remove3DENLayer",
        "modifiers": []
    },
    "setwaypointposition": {
        "name": "setWaypointPosition",
        "description": "Attempts to move given waypoint to a random position inside a circle with the given center and radius. \n> \nThe waypoint will be placed similar to \"NONE\" attribute in [setVehiclePosition](https://community.bistudio.com/wiki/setVehiclePosition), even if the radius is 0, which means it could still be off center. In order to force waypoint to the exact position, similar to \"CAN_COLLIDE\" attribute, use negative radius, like -1 for example. You will probably laugh at this, but be warned:\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointPosition** [center, radius]",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n[center, radius]: [Array](https://community.bistudio.com/wiki/Array)\n\ncenter: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Object](https://community.bistudio.com/wiki/Object) (or [PositionASL](https://community.bistudio.com/wiki/PositionASL) if the radius is negative)\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - random placement radius in meters. Set it to -1 and convert center to [PositionASL](https://community.bistudio.com/wiki/PositionASL) for the exact center placement.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointPosition [position player, 0];\n```\n",
            "Exact placement (see description): \n```sqf\n_wp setWaypointPosition [getPosASL player, -1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointPosition",
        "modifiers": []
    },
    "setwaypointloitertype": {
        "name": "setWaypointLoiterType",
        "description": "Sets the waypoint loiter type.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointLoiterType** type",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointLoiterType \"CIRCLE\";\n```\n",
            "\n```sqf\n[_grp, 2] setWaypointLoiterType \"CIRCLE_L\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointLoiterType",
        "modifiers": []
    },
    "setwaypointdescription": {
        "name": "setWaypointDescription",
        "description": "Sets the description shown in the HUD while the waypoint is active.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointDescription** text",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointDescription \"Move here.\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointDescription",
        "modifiers": []
    },
    "removeweaponglobal": {
        "name": "removeWeaponGlobal",
        "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeWeaponGlobal** weapon",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\nweapon: [String](https://community.bistudio.com/wiki/String) - weapon class name\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n{\n\t_x removeWeaponGlobal \"Laserdesignator\";\n} forEach allUnits;\n```\n",
            "\n```sqf\n{\n\tif (typeOf _x == \"O_Heli_Attack_02_black_F\") then {\n\t\t_x removeWeaponGlobal \"rockets_Skyfire\";\n\t};\n} forEach vehicles;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeWeaponGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "showncompass": {
        "name": "shownCompass",
        "description": "Checks if client has Compass enabled in [description.ext](https://community.bistudio.com/wiki/description.ext) (*showCompass* param) or force enabled with [showCompass](https://community.bistudio.com/wiki/showCompass) command.",
        "syntaxArray": [
            {
                "Syntax": "**shownCompass**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (shownCompass) then {hint \"You have Compass enabled\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownCompass",
        "modifiers": []
    },
    "setradiomsg": {
        "name": "setRadioMsg",
        "description": "Sets radio trigger menu title text (0 -> 0 -> map radio). Use \"NULL\" to disable radio slot. Use \"\" to restore default title",
        "syntaxArray": [
            {
                "Syntax": "index **setRadioMsg** text",
                "Params": "index: [Number](https://community.bistudio.com/wiki/Number) - from 1 to 10\n\n\n* 1 - Alpha (key 1)\n\n* 2 - Bravo (key 2)\n\n* 3 - Charlie (key 3)\n\n* 4 - Delta (key 4)\n\n* 5 - Echo (key 5)\n\n* 6 - Foxtrot (key 6)\n\n* 7 - Golf (key 7)\n\n* 8 - Hotel (key 8)\n\n* 9 - India (key 9)\n\n* 10 - Juliet (key 0)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n1 setRadioMsg \"Click meeeeeeeeee\"; //changes title of radio Alpha\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRadioMsg",
        "modifiers": [
            "Local effect"
        ]
    },
    "composetext": {
        "name": "composeText",
        "description": "Creates a [Structured Text](https://community.bistudio.com/wiki/Structured_Text) by joining the given [ structured](https://community.bistudio.com/wiki/Structured_Text) or [ plain](https://community.bistudio.com/wiki/String) text arguments.",
        "syntaxArray": [
            {
                "Syntax": "composeText [argument1, argument2, ...]",
                "Params": "[argument1, argument2, ...]: [Array](https://community.bistudio.com/wiki/Array)\n\nargument: [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text) - use [Structured Text](https://community.bistudio.com/wiki/Structured_Text) where necessary (see [Example 2](https://community.bistudio.com/wiki/composeText#Examples))\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\nhint composeText [\"Image: \", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"];\n```\n",
            "\n```sqf\nhint composeText [\"line1\", \"<br/>\", \"line2\"];\t// result displayed in one line\nhint composeText [\"line1\", lineBreak, \"line2\"];\t// result displayed in two lines\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/composeText",
        "modifiers": []
    },
    "distributionregion": {
        "name": "distributionRegion",
        "description": "Returns the numerical index for the distribution region of this copy of [Armed Assault](https://community.bistudio.com/wiki/Armed_Assault).\n\n* USA\n\n* Rest of the world",
        "syntaxArray": [
            {
                "Syntax": "distributionRegion",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nif (distributionRegion == 1) then { hint \"miles\"; } else { hint \"kilometres\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/distributionRegion",
        "modifiers": []
    },
    "ctrlautoscrollspeed": {
        "name": "ctrlAutoScrollSpeed",
        "description": "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present. \n\nAutorscroll is available for [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) and [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) types of controls only. Autoscroll will wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If [ctrlAutoScrollRewind](https://community.bistudio.com/wiki/ctrlAutoScrollRewind) is [true](https://community.bistudio.com/wiki/true), the control will fade out, immediately rewind to the top, then fade in, wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlAutoScrollSpeed** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) or [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlSpeed =  ctrlAutoScrollSpeed _ctrlGroup;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAutoScrollSpeed",
        "modifiers": []
    },
    "settriggertext": {
        "name": "setTriggerText",
        "description": "Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTriggerText** text",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntrigger setTriggerText \"Call for support\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerText",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "ppeffectenabled": {
        "name": "ppEffectEnabled",
        "description": "Checks whether given post process effect is enabled",
        "syntaxArray": [
            {
                "Syntax": "ppEffectEnabled effect",
                "Params": "effect: [Number](https://community.bistudio.com/wiki/Number) - effect handle\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "ppEffectEnabled effect *Since Arma 3 v2.03.147162*",
                "Params": "effect: [String](https://community.bistudio.com/wiki/String) - effect name\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_enabled = ppEffectEnabled _hndl;\n```\n",
            "\n```sqf\n_enabled = ppEffectEnabled \"DynamicBlur\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectEnabled",
        "modifiers": []
    },
    "drop": {
        "name": "drop",
        "description": "Creates a particle effect.\nThis command is used to create smoke, fire and similar effects.\nThe particles are single polygons with single textures that always face the player.\nThey can be set to dynamically change their position, size, direction, can be set to different weights and to be more or less dependent on the wind.",
        "syntaxArray": [
            {
                "Syntax": "drop parameters",
                "Params": "parameters: [Array](https://community.bistudio.com/wiki/Array) in format [ParticleArray](https://community.bistudio.com/wiki/ParticleArray)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndrop [\"cl_basic\", \"\", \"Billboard\", 1, 1,\n\t[-3.5 * (sin (direction xural)), -3.5 * (cos (direction xural)), 0],\n\t[random 0.1, random 0.1, random 0.5],\n\t1, 0.005, 0.0042, 0.7, [0.3,3],\n\t[[0.5,0.5,0.5,0], [0.7,0.7,0.7,0.5], [0.9,0.9,0.9,0]],\n\t[0,1,0,1,0,1],\n\t0.2, 0.2, \"\", \"\", xural];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drop",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "lockcargo": {
        "name": "lockCargo",
        "description": "Lock all cargo positions of a vehicle or lock by index.\nThis command will remove user \"get in\" action (not get out) but will also stop player getting into vehicle via script commands (e.g [moveInCargo](https://community.bistudio.com/wiki/moveInCargo)) unlike [lock](https://community.bistudio.com/wiki/lock) command.",
        "syntaxArray": [
            {
                "Syntax": "vehicle lockCargo lock",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nlock: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "vehicle lockCargo [index, lock]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[index, lock]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nlock: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicleName lockCargo true;\n```\n",
            "\n```sqf\nvehicleName lockCargo [0, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockCargo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "logentities": {
        "name": "logEntities",
        "description": "Creates a log file containing the list of all game entities in scene. \nFile is created in the same directory as [.rpt file](https://community.bistudio.com/wiki/Crash_Files). \nSpecial: BattlEye's RCON variant of this command is #logEntities (see also [Multiplayer_Server_Commands](https://community.bistudio.com/wiki/Multiplayer_Server_Commands))",
        "syntaxArray": [
            {
                "Syntax": "**logEntities**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlogEntities;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/logEntities",
        "modifiers": []
    },
    "isactionmenuvisible": {
        "name": "isActionMenuVisible",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if scroll menu is visible.",
        "syntaxArray": [
            {
                "Syntax": "isActionMenuVisible",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isActionMenuVisible) then { hint \"Scroll menu is opened\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isActionMenuVisible",
        "modifiers": []
    },
    "lnbsetcolor": {
        "name": "lnbSetColor",
        "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "lnbSetColor [idc, [row, column], color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetColor [[row, column], color]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbSetColor [[0,0], [1,0,0,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetColor",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "setmarkerpolyline": {
        "name": "setMarkerPolyline",
        "description": "Sets a polyline marker's path.\n> ",
        "syntaxArray": [
            {
                "Syntax": "marker setMarkerPolyline path",
                "Params": "marker: [String](https://community.bistudio.com/wiki/String)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [x1, y1, x2, y2, ... xn, yn]> \n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Changes \"marker_1\" into a polyline and draws a sine curve on your position\n```sqf\n\"marker_1\" setMarkerShape \"polyline\";\nprivate _return = [] ;\n\nfor \"_i\" from 0 to 100 step 0.1 do {\n\t_return pushBack (_i + getPos player#0);\n\t_return pushBack ((sin (_i*10))*10 + getPos player#1);\n} ;\n\n\"marker_1\" setMarkerPolyline _return;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerPolyline",
        "modifiers": [
            "Global effect"
        ]
    },
    "getremotesensorsdisabled": {
        "name": "getRemoteSensorsDisabled",
        "description": "Get status of disabled raycasts for remote entities. See [disableRemoteSensors](https://community.bistudio.com/wiki/disableRemoteSensors) for detailed description.",
        "syntaxArray": [
            {
                "Syntax": "getRemoteSensorsDisabled",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_status = getRemoteSensorsDisabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getRemoteSensorsDisabled",
        "modifiers": []
    },
    "removesimpletask": {
        "name": "removeSimpleTask",
        "description": "Remove a simple task from the list of simple tasks.\n> ",
        "syntaxArray": [
            {
                "Syntax": "person **removeSimpleTask** task",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\ntask: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeSimpleTask _tskKillSpongebob\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeSimpleTask",
        "modifiers": []
    },
    "radiovolume": {
        "name": "radioVolume",
        "description": "Returns the current radio volume (set by [fadeRadio](https://community.bistudio.com/wiki/fadeRadio)).",
        "syntaxArray": [
            {
                "Syntax": "**radioVolume**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str radioVolume;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioVolume",
        "modifiers": []
    },
    "lbadd": {
        "name": "lbAdd",
        "description": "Adds an item with the given text to the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO).",
        "syntaxArray": [
            {
                "Syntax": "lbAdd [idc, text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\ntext: [String](https://community.bistudio.com/wiki/String) - Visible text\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Index (row) of newly added item"
            },
            {
                "Syntax": "control lbAdd text",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Index (row) of newly added item"
            }
        ],
        "examples": [
            "\n```sqf\n_index = lbAdd [101, \"First item\"];\n```\n",
            "\n```sqf\n_index = _control lbAdd \"First item\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbAdd",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "gunner": {
        "name": "gunner",
        "description": "Returns the gunner of a vehicle.",
        "syntaxArray": [
            {
                "Syntax": "**gunner** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - The person sitting in the gunner place is returned. If vehicle is not a vehicle but a person, the person is returned."
            }
        ],
        "examples": [
            "\n```sqf\ngunner _tank action [\"getout\", _tank];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/gunner",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlsettooltip": {
        "name": "ctrlSetTooltip",
        "description": "Sets tooltip text of given control.\n> ",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetTooltip** text",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - Any [control type](https://community.bistudio.com/wiki/Dialogs), (except for CT_STATIC & CT_STRUCTURED_TEXT, although Arma 3 now supports these too)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetTooltip \"tooltip\";\n```\n",
            "\n```sqf\nfindDisplay 10000 displayCtrl 10001 ctrlSetTooltip \"ThisIsAGoodTip\";\n```\n",
            "\n```sqf\nwith uiNamespace do \n{\n\tbar = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscProgress\", -1]; \n\tbar ctrlSetPosition [0,0,1,0.01]; \n\tbar ctrlCommit 0;\n\tbar progressSetPosition 0.75;\n\tbar ctrlSetTooltip \"lalalalalalalala\";\t\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTooltip",
        "modifiers": []
    },
    "pickweaponpool": {
        "name": "pickWeaponPool",
        "description": "Transfers weapons and magazines from cargo of object into the weapon pool. This is used in the campaign to transfer weapons into the next mission.",
        "syntaxArray": [
            {
                "Syntax": "pickWeaponPool object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\npickWeaponPool vehicle player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pickWeaponPool",
        "modifiers": []
    },
    "lnbtext": {
        "name": "lnbText",
        "description": "Returns the shown text in the item with the given position of the given 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "control lnbText [row,column]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[row,column]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbText [0,0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbText",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getmarkerpos": {
        "name": "getMarkerPos",
        "description": "Returns marker position. See also [setMarkerPos](https://community.bistudio.com/wiki/setMarkerPos).\n> ",
        "syntaxArray": [
            {
                "Syntax": "getMarkerPos markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [x,y,0]"
            },
            {
                "Syntax": "getMarkerPos [markerName, preserveElevation] *Since Arma 3 v1.93*",
                "Params": "[markerName, preserveElevation]: [Array](https://community.bistudio.com/wiki/Array)\n\nmarkerName: [String](https://community.bistudio.com/wiki/String)\n\npreserveElevation (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) if *preserveElevation* is [true](https://community.bistudio.com/wiki/true) or [x,y,0] if *preserveElevation* is [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_mPos1 = getMarkerPos \"markerOne\";\n```\n",
            "\n```sqf\n_mPos2 = getMarkerPos [\"markerTwo\", true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMarkerPos",
        "modifiers": [
            "Local effect"
        ]
    },
    "isfilepatchingenabled": {
        "name": "isFilePatchingEnabled",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if file patching is enabled otherwise [false](https://community.bistudio.com/wiki/false)",
        "syntaxArray": [
            {
                "Syntax": "**isFilePatchingEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_state = isFilePatchingEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isFilePatchingEnabled",
        "modifiers": []
    },
    "safezonew": {
        "name": "safeZoneW",
        "description": "Returns the width of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the X axis, the value will be positive but resulting X will end up beyond the right border. Therefore in order to calculate X of the right screen border, the length of [safeZoneX](https://community.bistudio.com/wiki/safeZoneX) must be subtracted from safeZoneW, but because it is negative, it must be added instead. _screenRightBorderX = safeZoneW + [safeZoneX](https://community.bistudio.com/wiki/safeZoneX). The measurement units depend on the current screen resolution [getResolution](https://community.bistudio.com/wiki/getResolution). See also [SafeZone](https://community.bistudio.com/wiki/SafeZone)\n[](https://community.bistudio.com/wiki/File:safezone.jpg)",
        "syntaxArray": [
            {
                "Syntax": "safeZoneW",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Screen width in screen measurement units"
            }
        ],
        "examples": [
            "\n```sqf\n_screenWidth = safeZoneW;\n```\n",
            "\n```sqf\n_screenLeftBorderX = safeZoneX;\n_screenRightBorderX = safeZoneW + safeZoneX;\n```\n",
            "Create control 50% wide, 30% tall, centered on screen:\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth; \n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/safeZoneW",
        "modifiers": []
    },
    "landat": {
        "name": "landAt",
        "description": "Order an AI airplane to land at a given airport. **ID** is the number to identify which map airport you want the airplane to land at. See [Arma: Airport IDs](https://community.bistudio.com/wiki/Arma:_Airport_IDs) for more information.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "plane landAt ID",
                "Params": "plane: [Object](https://community.bistudio.com/wiki/Object) - A plane\n\nID: [Number](https://community.bistudio.com/wiki/Number) - [Airport ID](https://community.bistudio.com/wiki/Arma:_Airport_IDs)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "plane landAt airportObject *Since Arma 3 v1.68*",
                "Params": "plane: [Object](https://community.bistudio.com/wiki/Object)\n\nairportObject: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_plane1 landAt 1;\n```\n",
            "\n```sqf\n_dynamicAirport1 = \"DynamicAirport_01_F\" createVehicle position player;\n_plane1 landAt _dynamicAirport1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/landAt",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "getmagazinecargo": {
        "name": "getMagazineCargo",
        "description": "Returns all magazines types and count from the cargo space",
        "syntaxArray": [
            {
                "Syntax": "getMagazineCargo object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Vehicle or ammo box\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of arrays. [[\"5MagsType1\",\"10MagsType2\"],[5,10]]"
            }
        ],
        "examples": [
            "\n```sqf\n_content = getMagazineCargo carName;\n```\n",
            "\n```sqf\n_content = getMagazineCargo ammoBoxName;\n```\n",
            "\n```sqf\nhint str getMagazineCargo unitBackpack cursorTarget;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMagazineCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "lnbsettext": {
        "name": "lnbSetText",
        "description": "Sets the text in the item with the given position of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetText [idc, [row, column], data]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetText [[row, column], data]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetText [101, [0,1], \"#1\"];\n```\n",
            "\n```sqf\n_ctrl lnbSetText [[0,1], \"#1\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetText",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "mapgridposition": {
        "name": "mapGridPosition",
        "description": "Returns the map grid position of an object or position.\nThe format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar.",
        "syntaxArray": [
            {
                "Syntax": "mapGridPosition param",
                "Params": "param: [Object](https://community.bistudio.com/wiki/Object) or [Position](https://community.bistudio.com/wiki/Position) - determines reference position\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - grid position"
            }
        ],
        "examples": [
            "\n```sqf\n_gridPos = mapGridPosition player;\n```\n",
            "\n```sqf\n_gridPos = mapGridPosition getPos player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mapGridPosition",
        "modifiers": []
    },
    "reloadenabled": {
        "name": "reloadEnabled",
        "description": "Check whether magazine is reloaded whenever emptied.",
        "syntaxArray": [
            {
                "Syntax": "reloadEnabled unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _canReload = reloadEnabled _unit1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/reloadEnabled",
        "modifiers": []
    },
    "typename": {
        "name": "typeName",
        "description": "Returns the [data type](https://community.bistudio.com/wiki/Category:Data_Types) of an expression. \n\nThe type is returned as on of the following all-uppercase strings:\n\n* \"[ARRAY](https://community.bistudio.com/wiki/Array)\"\n\n* \"[BOOL](https://community.bistudio.com/wiki/Bool)\"\n\n* \"[CODE](https://community.bistudio.com/wiki/Code)\"\n\n* \"[CONFIG](https://community.bistudio.com/wiki/Config)\"\n\n* \"[CONTROL](https://community.bistudio.com/wiki/Control)\"\n\n* \"[DISPLAY](https://community.bistudio.com/wiki/Display)\"\n\n* \"[GROUP](https://community.bistudio.com/wiki/Group)\"\n\n* \"[LOCATION](https://community.bistudio.com/wiki/Location)\"\n\n* \"[OBJECT](https://community.bistudio.com/wiki/Object)\"\n\n* \"[SCALAR](https://community.bistudio.com/wiki/Scalar)\"\n\n* \"[SCRIPT](https://community.bistudio.com/wiki/Script)\"\n\n* \"[SIDE](https://community.bistudio.com/wiki/Side)\"\n\n* \"[STRING](https://community.bistudio.com/wiki/String)\"\n\n* \"[TEXT](https://community.bistudio.com/wiki/Text)\"\n\n* \"[TEAM_MEMBER](https://community.bistudio.com/wiki/Team_Member)\"\n\n* \"[NAMESPACE](https://community.bistudio.com/wiki/Namespace)\"\n\n* \"[DIARY_RECORD](https://community.bistudio.com/wiki/Diary_Record)\"\n\n* \"[TASK](https://community.bistudio.com/wiki/Task)\"\n\n* \"[HASHMAP](https://community.bistudio.com/wiki/HashMap)\"\nThey represent the available [data types](https://community.bistudio.com/wiki/Data_Types) in Arma.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**typeName** anything",
                "Params": "anything: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_msg = \"hello\"; _result = typeName _msg;  //_result will be \"STRING\"\n```\n",
            "\n```sqf\n_unit = player; _result = typeName _unit; //_result becomes \"OBJECT\"\n```\n",
            "Values representing direct [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types):\n```sqf\nhint typeName 0; //SCALAR\nhint typeName \"\"; //STRING\nhint typeName true; //BOOL\nhint typeName []; //ARRAY\nhint typeName {}; //CODE\nhint typeName objNull; //OBJECT\nhint typeName grpNull; //GROUP\nhint typeName controlNull; //CONTROL\nhint typeName teamMemberNull; //TEAM_MEMBER\nhint typeName displayNull; //DISPLAY\nhint typeName taskNull; //TASK\nhint typeName locationNull; //LOCATION\nhint typeName sideUnknown; //SIDE\nhint typeName text \"\"; //TEXT\nhint typeName configFile; //CONFIG\nhint typeName configNull; //CONFIG (Since Arma 3 v1.54)\nhint typeName missionNamespace; //NAMESPACE\nhint typeName diaryRecordNull; //DIARY_RECORD (Since Arma 3 v2.00)\nhint typeName createHashMap; //HASHMAP (Since Arma 3 v2.02)\n```\n",
            "\n```sqf\nif (typeName _this != \"ARRAY\") exitWith {\n\thint \"_this is not an array!\"\n}\n//is the same as \nif (typeName _this != typeName []) exitWith {\n\thint \"_this is not an array!\"\n}\n//same result but faster in Arma 3\nif !(_this isEqualType []) exitWith {\n\thint \"_this is not an array!\"\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/typeName",
        "modifiers": []
    },
    "ropeunwound": {
        "name": "ropeUnwound",
        "description": "Returns [false](https://community.bistudio.com/wiki/false) if rope length changing animation is in progress. Returns [true](https://community.bistudio.com/wiki/true) if animation is done.",
        "syntaxArray": [
            {
                "Syntax": "ropeUnwound rope",
                "Params": "rope: [Object](https://community.bistudio.com/wiki/Object) - given rope object\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if unwinding is complete"
            }
        ],
        "examples": [
            "\n```sqf\nwaitUntil { ropeUnwound (ropes heli1 select 0) };\nhint \"Unwinding Complete\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeUnwound",
        "modifiers": []
    },
    "uinamespace": {
        "name": "uiNamespace",
        "description": "Returns the global namespace attached to user interface.",
        "syntaxArray": [
            {
                "Syntax": "**uiNamespace**",
                "Params": "",
                "Return": "[Namespace](https://community.bistudio.com/wiki/Namespace)"
            }
        ],
        "examples": [
            "\n```sqf\nuiNamespace setVariable [\"LIB_interruptDisplay\", _display];\n```\n",
            "\n```sqf\nuiNamespace setVariable [\"myVar\", 46];\nwith uiNamespace do {\n\thint str myVar; //46\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/uiNamespace",
        "modifiers": []
    },
    "parsingnamespace": {
        "name": "parsingNamespace",
        "description": "Returns the global namespace attached to config parser.",
        "syntaxArray": [
            {
                "Syntax": "**parsingNamespace**",
                "Params": "",
                "Return": "[Namespace](https://community.bistudio.com/wiki/Namespace)"
            }
        ],
        "examples": [
            "\n```sqf\nparsingNamespace setVariable [\"var1\",101.23124];\n_profVar1 = parsingNamespace getVariable \"var1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/parsingNamespace",
        "modifiers": []
    },
    "ctrlsetfontheighth1": {
        "name": "ctrlSetFontHeightH1",
        "description": "Sets H1 font size of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontHeightH1** height",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightH1 0.05"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightH1",
        "modifiers": []
    },
    "ctrlstyle": {
        "name": "ctrlStyle",
        "description": "Returns the provided control's style. See [Arma: GUI Configuration - Control Styles](https://community.bistudio.com/wiki/Arma:_GUI_Configuration#Control_Styles).",
        "syntaxArray": [
            {
                "Syntax": "ctrlStyle control",
                "Params": "control\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - see [Arma: GUI Configuration - Control Styles](https://community.bistudio.com/wiki/Arma:_GUI_Configuration#Control_Styles)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _ctrlStyle = ctrlStyle _myControl;\n\nprivate _bitFlags = _ctrlStyle call BIS_fnc_bitflagsToArray;\nif (2 in _bitFlags) then\n{\n\thint \"This control has centered text!\";\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlStyle",
        "modifiers": []
    },
    "driver": {
        "name": "driver",
        "description": "Returns the driver of a vehicle.",
        "syntaxArray": [
            {
                "Syntax": "[Object](https://community.bistudio.com/wiki/Object) = **driver** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) -  \nThe unit sitting in the driver place is returned. If vehicle is not a vehicle but a person, the person is returned."
            }
        ],
        "examples": [
            "\n```sqf\n(driver _tank) action [\"getout\", _tank];\n```\n",
            "\n```sqf\n(driver (vehicle player)) isEqualTo player //check if player is driver of current vehicle\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/driver",
        "modifiers": [
            "Global argument"
        ]
    },
    "ispipenabled": {
        "name": "isPiPEnabled",
        "description": "Returns whether Picture-In-Picture video option (Render to Texture) is enabled or not.",
        "syntaxArray": [
            {
                "Syntax": "isPiPEnabled",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _PiPState = isPiPEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isPiPEnabled",
        "modifiers": []
    },
    "addmagazinecargo": {
        "name": "addMagazineCargo",
        "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicleName addMagazineCargo [magazineName, count]",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object) - vehicle to add the magazines to\n\n[magazineName, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String) - magazine name. See [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - number of magazines to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_truck addMagazineCargo [\"M16\", 5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMagazineCargo",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "campreparedive": {
        "name": "camPrepareDive",
        "description": "Prepares the camera dive angle. \n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareDive** dive",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\ndive: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareDive -0.1 \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareDive",
        "modifiers": []
    },
    "elevateperiscope": {
        "name": "elevatePeriscope",
        "description": "Elevates periscope of a vehicle. Vehicles in Arma 3 which are compatible with this tech are Strider, remote laser designators, the robot arm on Eddie, etc. Please note that SDV submarine has a different periscope, which is just an animated selection and could be raised and lowered with [animate](https://community.bistudio.com/wiki/animate) command. \n> \nA [ PeriscopeElevationChanged](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#PeriscopeElevationChanged) entity event handler is also provided.",
        "syntaxArray": [
            {
                "Syntax": "vehicle elevatePeriscope [turret, elevation, speed, blockuser]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle with periscope tech\n\n[turret, elevation, speed, blockuser]: [Array](https://community.bistudio.com/wiki/Array)\n\nturret: [Array](https://community.bistudio.com/wiki/Array) - turret on which periscope is located\n\nelevation: [Number](https://community.bistudio.com/wiki/Number) - elevation range 0...1\n\nspeed (Optional): [Number](https://community.bistudio.com/wiki/Number) or [Boolean](https://community.bistudio.com/wiki/Boolean) - config anim speed multiplier, 2 - twice as fast, 0.5 - twice as slow, etc. -1 - default config speed. If [true](https://community.bistudio.com/wiki/true) is used as param, the change in elevation is almost instant.\n\nblockuser (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable user ability to control periscope with keyboard. The change is persistent unless you set it to [false](https://community.bistudio.com/wiki/false) again.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_eddie elevatePeriscope [[0], 0.75, 0.1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/elevatePeriscope",
        "modifiers": []
    },
    "closeoverlay": {
        "name": "closeOverlay",
        "description": "Closes the current overlay without committing. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**closeOverlay** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/closeOverlay",
        "modifiers": []
    },
    "eyedirection": {
        "name": "eyeDirection",
        "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).",
        "syntaxArray": [
            {
                "Syntax": "**eyeDirection** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - 3D Vector"
            }
        ],
        "examples": [
            "\n```sqf\ncan = \"Land_Can_V3_F\" createVehicle position player; \nonEachFrame {\n    can setPosASL [\n        (eyePos player select 0) + (eyeDirection player select 0),\n        (eyePos player select 1) + (eyeDirection player select 1),\n        (eyePos player select 2) + (eyeDirection player select 2)\n    ]\n}\n\n```\n",
            "Draw AI eye direction (green) and weapon direction (red) in 3D: \n```sqf\nbob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"];\nbob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"];\nonEachFrame\n{\n\t_beg = ASLToAGL eyePos bob;\n\t_endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100));\n\tdrawLine3D [ _beg, _endE, [0,1,0,1]];\n\t_endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endW, [1,0,0,1]];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/eyeDirection",
        "modifiers": [
            "Global argument"
        ]
    },
    "copytoclipboard": {
        "name": "copyToClipboard",
        "description": "Copies ANSI text string to the clipboard. If Unicode support is desired, see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode).",
        "syntaxArray": [
            {
                "Syntax": "**copyToClipboard** text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncopyToClipboard str _data;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/copyToClipboard",
        "modifiers": []
    },
    "setmarkertext": {
        "name": "setMarkerText",
        "description": "Sets the text label of an existing marker.\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerText** text",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerText \"You are here.\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerText",
        "modifiers": [
            "Global effect"
        ]
    },
    "removemagazinesturret": {
        "name": "removeMagazinesTurret",
        "description": "Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **removeMagazinesTurret** [magazineName, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[magazineName, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nmagazineName: [String](https://community.bistudio.com/wiki/String)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player removeMagazinesTurret [\"60rnd_cmflaremagazine\",[-1]]\n```\n",
            "\n```sqf\n_tank removeMagazinesTurret [\"20Rnd_120mmSABOT_M1A2\",[0]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMagazinesTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "groupradio": {
        "name": "groupRadio",
        "description": "Sends the audio message to the group radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or config radio protocol. \nWhen transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
        "syntaxArray": [
            {
                "Syntax": "unit **groupRadio** radioName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Unit to transmit\n\nradioName: [String](https://community.bistudio.com/wiki/String) - Class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne groupRadio \"messageOne\";\n```\n",
            "\n```sqf\nplayer groupRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupRadio",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "allowcuratorlogicignoreareas": {
        "name": "allowCuratorLogicIgnoreAreas",
        "description": "Allows curator placing and working with modules outside of edit areas.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **allowCuratorLogicIgnoreAreas** allow",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\nallow: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule allowCuratorLogicIgnoreAreas true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowCuratorLogicIgnoreAreas",
        "modifiers": [
            "Server execution"
        ]
    },
    "sideempty": {
        "name": "sideEmpty",
        "description": "Returns empty side, for example static buildings in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**sideEmpty**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\n_sideEmpty = sideEmpty;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideEmpty",
        "modifiers": []
    },
    "primaryweaponmagazine": {
        "name": "primaryWeaponMagazine",
        "description": "Collects all loaded [magazines](https://community.bistudio.com/wiki/magazines) from all [primaryWeapon](https://community.bistudio.com/wiki/primaryWeapon) muzzles and returns them in [Array](https://community.bistudio.com/wiki/Array), otherwise it returns []. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**primaryWeaponMagazine** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"]\n\n```\n",
            "\n```sqf\n_array = primaryWeaponMagazine player;\nif (count _array > 0) then {\n\thint (\"Primary weapon is loaded with \" + (_array select 0) + \"!\");\n} else {\n\tif (primaryWeapon player != \"\") then {\n\t\thint \"Primary weapon is not loaded!\";\n\t} else {\n\t\thint \"Player doesn't have a primary weapon!\";\n\t};\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/primaryWeaponMagazine",
        "modifiers": []
    },
    "timemultiplier": {
        "name": "timeMultiplier",
        "description": "Returns the value set with [setTimeMultiplier](https://community.bistudio.com/wiki/setTimeMultiplier).",
        "syntaxArray": [
            {
                "Syntax": "**timeMultiplier**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - current time multiplier"
            }
        ],
        "examples": [
            "\n```sqf\n_multiplier = timeMultiplier;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/timeMultiplier",
        "modifiers": []
    },
    "getdescription": {
        "name": "getDescription",
        "description": "Returns the string representation of unit as an four slots array.",
        "syntaxArray": [
            {
                "Syntax": "getDescription unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) to format [unit**Class**, uniform**Name**, vest**Name**, backpack**Class**]"
            }
        ],
        "examples": [
            "\n```sqf\ngetDescription player; // (UAV Operator)\n// returns [\"B_soldier_UAV_F\", \"Combat Fatigues (MTP)\", \"Carrier Special Rig (Green)\", \"B_UAV_01_backpack_F\"]\n```\n",
            "\n```sqf\ngetDescription objNull; // returns [\"ERROR\", \"ERROR\", \"ERROR\", \"ERROR\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDescription",
        "modifiers": []
    },
    "removeweaponturret": {
        "name": "removeWeaponTurret",
        "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.",
        "syntaxArray": [
            {
                "Syntax": "vehicle removeWeaponTurret [weaponName, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[weaponName, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponName: [String](https://community.bistudio.com/wiki/String)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tank removeWeaponTurret [\"LMG_M200\", [0,0]];\n```\n",
            "\n```sqf\nvehicle player removeWeaponTurret [\"SportCarHorn\", [-1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeWeaponTurret",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "lnbaddcolumn": {
        "name": "lnbAddColumn",
        "description": "Adds a column at given position.",
        "syntaxArray": [
            {
                "Syntax": "control lnbAddColumn position",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nposition: [Number](https://community.bistudio.com/wiki/Number) - Position of the new column where 0 means all the way to the left and 1 all the way to the right of the control\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) or [nil](https://community.bistudio.com/wiki/nil) - Returns the zero based index of the new column"
            },
            {
                "Syntax": "lnbAddColumn [controlOrIdc, position]",
                "Params": "controlOrIdc: [Control](https://community.bistudio.com/wiki/Control), [Number](https://community.bistudio.com/wiki/Number) - Control or the idc of the control\n\nposition: [Number](https://community.bistudio.com/wiki/Number) - Position of the new column where 0 means all the way to the left and 1 all the way to the right of the control\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) or [nil](https://community.bistudio.com/wiki/nil) - Returns the zero based index of the new column"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbAddColumn 0.8;\n```\n",
            "\n```sqf\nlnbAddColumn [105, 0.8];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbAddColumn",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "assignedgunner": {
        "name": "assignedGunner",
        "description": "Returns the soldier assigned to the given vehicle as a gunner.",
        "syntaxArray": [
            {
                "Syntax": "**assignedGunner** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_gunner = assignedGunner vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignedGunner",
        "modifiers": []
    },
    "showmap": {
        "name": "showMap",
        "description": "Enable Map (default [true](https://community.bistudio.com/wiki/true))",
        "syntaxArray": [
            {
                "Syntax": "**showMap** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowMap false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showMap",
        "modifiers": []
    },
    "ctvalue": {
        "name": "ctValue",
        "description": "Returns metadata (number) associated with a particular row of RscControlsTable.",
        "syntaxArray": [
            {
                "Syntax": "control **ctValue** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_number = _control ctValue 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctValue",
        "modifiers": []
    },
    "createagent": {
        "name": "createAgent",
        "description": "Creates an agent of the given type. An agent does not have a group or leader or the standard soldier [FSM](https://community.bistudio.com/wiki/FSM) associated with it - for instance, an enemy soldier spawned as an agent has limited AI and will do nothing when fired upon - which can be useful to limit the amount of AI processing being done in a mission with very large numbers of \"AI\".\n> ",
        "syntaxArray": [
            {
                "Syntax": "createAgent [type, position, markers, placement, special]",
                "Params": "[type, position, markers, placement, special]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - class from [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles)\n\nposition: [PositionAGL](https://community.bistudio.com/wiki/PositionAGL),  [Position2D](https://community.bistudio.com/wiki/Position2D), [Object](https://community.bistudio.com/wiki/Object) - desired placement position\n\nmarkers: [Array](https://community.bistudio.com/wiki/Array) - if the markers array contains any markers, the position is randomly picked from array of given markers plus desired placement position. If any of the markers were given z coordinate with setMarkerPos, the vehicle will also be created at given z coordinate.\n\nplacement: [Number](https://community.bistudio.com/wiki/Number) radius, the unit is randomly place in a circle with this radius\n\nspecial: [String](https://community.bistudio.com/wiki/String) - one of:\n\n* \"NONE\" - will look for a suitable empty position near given position (subject to other placement params) before creating the agent\n\n* \"CAN_COLLIDE\" - creates the agent at given position (subject to other placement params), without checking if others objects can cross its 3D model\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _agent = createAgent [\"B_Soldier_F\", getPosATL player, [], 0, \"FORM\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createAgent",
        "modifiers": [
            "Global effect"
        ]
    },
    "ctrlsetdisabledcolor": {
        "name": "ctrlSetDisabledColor",
        "description": "Sets the colorDisabled attribute of a control.",
        "syntaxArray": [
            {
                "Syntax": "ctrlSetDisabledColor [idc, color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color](https://community.bistudio.com/wiki/Color) - RGBA Color\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl ctrlSetDisabledColor color",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Color](https://community.bistudio.com/wiki/Color) - RGBA Color\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetDisabledColor [0.5, 0.5, 0.5, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetDisabledColor",
        "modifiers": []
    },
    "isnotequalto": {
        "name": "isNotEqualTo",
        "description": "Performs strict comparison between var1 and var2 and returns [false](https://community.bistudio.com/wiki/false) if equal, otherwise true.",
        "syntaxArray": [
            {
                "Syntax": "val1 isNotEqualTo val2",
                "Params": "val1: [Anything](https://community.bistudio.com/wiki/Anything)\n\nval2: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_true = 0 isNotEqualTo 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isNotEqualTo",
        "modifiers": []
    },
    "posworldtoscreen": {
        "name": "posWorldToScreen",
        "description": "Converts world coordinates into map screen coordinates. This command is identical to [ctrlMapWorldToScreen](https://community.bistudio.com/wiki/ctrlMapWorldToScreen).",
        "syntaxArray": [
            {
                "Syntax": "map **posWorldToScreen** position",
                "Params": "map : [Control](https://community.bistudio.com/wiki/Control) - map control\n\nposition : [Array](https://community.bistudio.com/wiki/Array) - world position in format [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - screen coordinates in format [x, y]"
            }
        ],
        "examples": [
            "\n```sqf\n_screenCoord = _control posWorldToScreen _worldCoord;\n```\n",
            "\n```sqf\n_screenCoord = _control posWorldToScreen position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/posWorldToScreen",
        "modifiers": []
    },
    "cursorobject": {
        "name": "cursorObject",
        "description": "Returns the object under cursor. This command is quite different from [cursorTarget](https://community.bistudio.com/wiki/cursorTarget) as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.",
        "syntaxArray": [
            {
                "Syntax": "**cursorObject**",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str [getModelInfo cursorObject, typeOf cursorObject];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cursorObject",
        "modifiers": []
    },
    "configclasses": {
        "name": "configClasses",
        "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative [count](https://community.bistudio.com/wiki/count) command implementation). Condition has to return [true](https://community.bistudio.com/wiki/true) in order for the looked at config to be added to the resulting array. Slightly faster than [configProperties](https://community.bistudio.com/wiki/configProperties), but doesn't account for config properties or inherited entries.\n> ",
        "syntaxArray": [
            {
                "Syntax": "condition configClasses config",
                "Params": "condition: [String](https://community.bistudio.com/wiki/String)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of [Configs](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "collect all CfgVehicles configs: \n```sqf\n_configs = \"true\" configClasses (configFile >> \"CfgVehicles\");\n```\n",
            "Return all classes that can transport 10 and more soldiers: \n```sqf\n_transporters = \"getNumber (_x >> 'transportSoldier') >= 10\" configClasses (configFile >> \"CfgVehicles\");\n```\n",
            "Return all classes that inherit from 'RscText': \n```sqf\nhint str (\"inheritsFrom _x == (configFile >> 'RscText')\" configClasses configFile);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configClasses",
        "modifiers": []
    },
    "savingenabled": {
        "name": "savingEnabled",
        "description": "Check if saving the game is enabled.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**savingEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (savingEnabled) then {\n  hint \"Saving is enabled!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/savingEnabled",
        "modifiers": []
    },
    "resize": {
        "name": "resize",
        "description": "Changes the size of the given array. The command does not return new array, it resizes the source array to the desired number of elements. If the new size is bigger than the current size, the new places are filled with [nils](https://community.bistudio.com/wiki/nil).",
        "syntaxArray": [
            {
                "Syntax": "array **resize** count",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - The new number of elements.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_arrayNum = [0,1,2,3,4];\n_arrayNum resize 2; // _arrayNum is now [0,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/resize",
        "modifiers": []
    },
    "isautohoveron": {
        "name": "isAutoHoverOn",
        "description": "Return [true](https://community.bistudio.com/wiki/true) if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)",
        "syntaxArray": [
            {
                "Syntax": "**isAutoHoverOn** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n _isOn = isAutoHoverOn vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAutoHoverOn",
        "modifiers": []
    },
    "removedrawicon": {
        "name": "removeDrawIcon",
        "description": "Removes an icon for an editor object. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **removeDrawIcon** [object,string identifier]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[object,string identifier]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/removeDrawIcon",
        "modifiers": []
    },
    "incapacitatedstate": {
        "name": "incapacitatedState",
        "description": "Returns the incapacitated sub-state of the given unit, when the [lifeState](https://community.bistudio.com/wiki/lifeState) of the unit is \"INCAPACITATED\". Could be one of:\n\n* \"UNCONSCIOUS\"\n\n* \"MOVING\"\n\n* \"SHOOTING\"",
        "syntaxArray": [
            {
                "Syntax": "**incapacitatedState** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - incapacitated sub-state (see description) or empty string \"\""
            }
        ],
        "examples": [
            "\n```sqf\n_result = incapacitatedState player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/incapacitatedState",
        "modifiers": []
    },
    "onshownewobject": {
        "name": "onShowNewObject",
        "description": "Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position, \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **onShowNewObject** command",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\ncommand: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/onShowNewObject",
        "modifiers": []
    },
    "setcamuseti": {
        "name": "setCamUseTI",
        "description": "Sets thermal vision mode for currently used camera. This command only works with [camCreate](https://community.bistudio.com/wiki/camCreate) created camera that is currently the main camera for the player (see Example 2).",
        "syntaxArray": [
            {
                "Syntax": "state **setCamUseTI** modeIndex",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to enable, [false](https://community.bistudio.com/wiki/false) to disable the effect\n\nmodeIndex: [Number](https://community.bistudio.com/wiki/Number) - TI mode. Can be:\n\n* 0 - White Hot\n\n* 1 - Black Hot\n\n* 2 - Light Green Hot / Darker Green cold\n\n* 3 - Black Hot / Darker Green cold\n\n* 4 - Light Red Hot /Darker Red Cold\n\n* 5 - Black Hot / Darker Red Cold\n\n* 6 - White Hot . Darker Red Cold\n\n* 7 - Thermal (Shade of Red and Green, Bodies are white)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntrue setCamUseTI 1;\n```\n",
            "*Predator* vision:\n```sqf\n_cam = \"camera\" camCreate [0,0,0];\n_cam camSetTarget player;\n_cam camSetRelPos [0,1,1.5];\n_cam cameraEffect [\"Internal\",\"Back\"];\n_cam camCommit 0;\ntrue setCamUseTI 7;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCamUseTI",
        "modifiers": []
    },
    "alladdonsinfo": {
        "name": "allAddonsInfo",
        "description": "Returns the list of all loaded addons.",
        "syntaxArray": [
            {
                "Syntax": "allAddonsInfo",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in format [prefix, version, isPatched], where:\n\n* prefix: [String](https://community.bistudio.com/wiki/String) - addon prefix\n\n* version: [String](https://community.bistudio.com/wiki/String) - addon revision version\n\n* isPatched: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if patching is enabled and this addon is being patched"
            }
        ],
        "examples": [
            "\n```sqf\nallAddonsInfo\n/*\n\t[\n\t\t[\"bin\\\",\"146398\",false],\n\t\t[\"core\\\",\"129618\",false],\n\t\t[\"Languagecore_F\\\",\"148726\",false],\n\t\t[\"a3\\air_f_enoch\\\",\"145904\",false],\n\t\t[\"a3\\anims_f_enoch\\\",\"146917\",false],\n\t\t[\"a3\\armor_f_enoch\\\",\"145904\",false],\n\t\t...\n\t]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allAddonsInfo",
        "modifiers": []
    },
    "execeditorscript": {
        "name": "execEditorScript",
        "description": "Execute an editor script for the specified object.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **execEditorScript** [object,script]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[object,script]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\n_map execEditorScript [\"_team_1\",\"create\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/execEditorScript",
        "modifiers": []
    },
    "selectededitorobjects": {
        "name": "selectedEditorObjects",
        "description": "Returns a list of currently selected editor objects. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**selectedEditorObjects** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "_selObjects = selectedEditorObjects _map  \nResult can be: [\"_vehicle_0\",\"_vehicle_9\",\"_vehicle_11\"]"
        ],
        "Url": "https://community.bistudio.com/wiki/selectedEditorObjects",
        "modifiers": []
    },
    "gettext": {
        "name": "getText",
        "description": "Extracts [localized](https://community.bistudio.com/wiki/localize) text from config entry, if entry is subject to [ localization](https://community.bistudio.com/wiki/localize), otherwise returns text value. To obtain the translation key itself, see [getTextRaw](https://community.bistudio.com/wiki/getTextRaw).",
        "syntaxArray": [
            {
                "Syntax": "getText config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - text value"
            }
        ],
        "examples": [
            "\n```sqf\n_text = getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"icon\"); // \"Get in %1 as Driver\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getText",
        "modifiers": []
    },
    "configsourcemod": {
        "name": "configSourceMod",
        "description": "Returns modDir of the mod that given config class was loaded from.",
        "syntaxArray": [
            {
                "Syntax": "**configSourceMod** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nconfigSourceMod (configFile >> \"CfgVehicles\" >> \"Heli_Transport_04_base_F\"); //Returns \"heli\" \n```\n",
            "\n```sqf\nconfigSourceMod (configFile >> \"CfgVehicles\" >> \"Car\"); //Returns \"A3\" \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/configSourceMod",
        "modifiers": []
    },
    "showcompass": {
        "name": "showCompass",
        "description": "Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default [true](https://community.bistudio.com/wiki/true))",
        "syntaxArray": [
            {
                "Syntax": "**showCompass** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowCompass false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showCompass",
        "modifiers": []
    },
    "ctrltextheight": {
        "name": "ctrlTextHeight",
        "description": "Returns the control text height. Supported control [types](https://community.bistudio.com/wiki/ctrlType) are:\n\n* [CT_STATIC](https://community.bistudio.com/wiki/CT_STATIC)\n\n* [CT_STRUCTURED_TEXT](https://community.bistudio.com/wiki/CT_STRUCTURED_TEXT)\n\n* [CT_EDIT](https://community.bistudio.com/wiki/CT_EDIT) *Since Arma 3 v1.58*",
        "syntaxArray": [
            {
                "Syntax": "**ctrlTextHeight** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_h = ctrlTextHeight _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlTextHeight",
        "modifiers": []
    },
    "setlightambient": {
        "name": "setLightAmbient",
        "description": "Set ambient color of light. This includes surfaces that **face away** from the light, unlike [setLightColor](https://community.bistudio.com/wiki/setLightColor).",
        "syntaxArray": [
            {
                "Syntax": "light setLightAmbient [r, g, b]",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\n[r, g, b]: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightAmbient [0.5,0,0]; // produces red light around the origin source\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightAmbient",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlsetstructuredtext": {
        "name": "ctrlSetStructuredText",
        "description": "Set the [Structured Text](https://community.bistudio.com/wiki/Structured_Text) which will be displayed in [structured text control](https://community.bistudio.com/wiki/DialogControls-Text#CT_STRUCTURED_TEXT.3D13).",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetStructuredText structuredText",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nstructuredText: [Structured Text](https://community.bistudio.com/wiki/Structured_Text)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetStructuredText parseText \"First line<img image=data\\isniper.paa /><br />Second line\"\n```\n",
            "To adjust text vertically, add extra line above with blank space (&#160;) and set its size accordingly:\n```sqf\nwith uiNamespace do {\n\tbutton = findDisplay 46 ctrlCreate [\"RscShortcutButton\", -1];\n\tbutton ctrlSetPosition [0,0,0.3,0.1];\n\tbutton ctrlCommit 0;\n\tbutton ctrlSetStructuredText parseText \n\t\"<t size='0.5'>&#160;</t><br/><t size='1' align='center'>Button Text&#160;&#160;</t>\";\n};\n```\n",
            "There is a bug with valign that requires adding 1 extra trailing space per line to the displayed text in order to keep it centered horizontally:\n\n```sqf\ndisableSerialization;\nprivate _ctrl = findDisplay 46 ctrlCreate [\"RscStructuredText\", -1];\n_ctrl ctrlSetPosition [0, 0, 0.5, 0.5];\n_ctrl ctrlSetBackgroundColor [0, 0, 0, 1]; \n_ctrl ctrlCommit 0;\nprivate _lineHeight = getNumber (configFile >> \"RscStructuredText\" >> \"size\");\nprivate _linesTotal = (ctrlPosition _ctrl select 2) / _lineHeight;\nprivate _trailingSpace = \"\";\nfor \"_i\" from 1 to _linesTotal do { _trailingSpace = _trailingSpace + \" \" };\n_ctrl ctrlSetStructuredText parseText format [\"<t size='%1'><t size='1' align='center' valign='middle'>%2%3</t> </t>\", _linesTotal, \"------ Centered Text ------\", _trailingSpace];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetStructuredText",
        "modifiers": []
    },
    "endmission": {
        "name": "endMission",
        "description": "Finish the mission.\n\nThe end type can be:\n\n* \"CONTINUE\"\n\n* \"KILLED\"\n\n* \"LOSER\"\n\n* \"END1\"\n\n* \"END2\"\n\n* \"END3\"\n\n* \"END4\"\n\n* \"END5\"\n\n* \"END6\"\n\n**Mission saves are deleted**. Use [failMission](https://community.bistudio.com/wiki/failMission) if they should not.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**endMission** endType",
                "Params": "endType: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nendMission \"END1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/endMission",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "allowsprint": {
        "name": "allowSprint",
        "description": "Force player to run/jog if set to false.",
        "syntaxArray": [
            {
                "Syntax": "unit **allowSprint** state",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer allowSprint false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowSprint",
        "modifiers": []
    },
    "animationnames": {
        "name": "animationNames",
        "description": "Returns [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/Strings) where elements are the names of model animations, which should theoretically be available for use with [animate](https://community.bistudio.com/wiki/animate) command. However in practice this depends on whether animation is also made available for use in scripts via config.",
        "syntaxArray": [
            {
                "Syntax": "**animationNames** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/Strings)"
            }
        ],
        "examples": [
            "\n```sqf\n_names = animationNames static_AT;\n```\n Returns: [\"MainTurret\", \"MainGun\", \"MainTurret_destructX\", \"MainTurret_destructY\", \"MainTurret_destructZ\", \"MainGun_destructX\", \"MainGun_destructY\", \"MainGun_destructZ\", \"magazine_destruct\", \"ammo_belt_destruct\", \"bolt_destruct\", \"charging_handle_destruct\", \"damagehideVez_destruct\", \"damagehideHlaven_destruct\", \"damagehideRecoil_destruct\", \"Turret_shake\", \"Turret_shake_aside\", \"Magazine_hide\", \"Ammo_belt_hide\", \"muzzleFlash\", \"AddAutonomous_unhide\", \"bullet001_reload_hide\", \"bullet002_reload_hide\", \"bullet003_reload_hide\", \"bullet004_reload_hide\", \"bullet005_reload_hide\", \"bullet006_reload_hide\", \"bullet007_reload_hide\", \"bullet008_reload_hide\"]"
        ],
        "Url": "https://community.bistudio.com/wiki/animationNames",
        "modifiers": []
    },
    "createsite": {
        "name": "createSite",
        "description": "Create a new site. \n> ",
        "syntaxArray": [
            {
                "Syntax": "type **createSite** pos",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\npos: [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/createSite",
        "modifiers": []
    },
    "enablegunlights": {
        "name": "enableGunLights",
        "description": "Toggles the target group's gun light(s).",
        "syntaxArray": [
            {
                "Syntax": "target enableGunLights mode",
                "Params": "target: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object) - The group forced to use gun lights. If unit is supplied as argument, unit's group is used\n\nmode: [String](https://community.bistudio.com/wiki/String) - Can be:\n\n* \"Auto\" - Depends on combat mode\n\n* \"ForceOn\" - Always on\n\n* \"ForceOff\" - Always off\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit enableGunLights \"Auto\";\n```\n",
            "\n```sqf\n_unit enableGunLights \"ForceOff\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableGunLights",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "continue": {
        "name": "continue",
        "description": "Skips current loop iteration and continues with the next one.",
        "syntaxArray": [
            {
                "Syntax": "continue",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfor \"_i\" from 0 to 3 do \n{\n    if (_i == 2) then {continue}; \n    systemChat str _i;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/continue",
        "modifiers": []
    },
    "triggerattachvehicle": {
        "name": "triggerAttachVehicle",
        "description": "Specifies the entity which will activate the selected trigger.\n\n* If **[]** is given, the trigger is decoupled from the assigned vehicle (example 2).\n\n* If the activation source is **\"VEHICLE\"**, **\"GROUP\"**, **\"LEADER\"** or **\"MEMBER\"**, it is changed to **\"NONE\"**.\n\n* If **[vehicle]** is given, the trigger is coupled to the vehicle or its group.\n\n* When the source is **\"GROUP\"**, **\"LEADER\"** or **\"MEMBER\"**, it is coupled to the group, otherwise it is coupled to the vehicle and the source is changed to **\"VEHICLE\"**.",
        "syntaxArray": [
            {
                "Syntax": "triggerName **triggerAttachVehicle** objects",
                "Params": "triggerName: [Object](https://community.bistudio.com/wiki/Object)\n\nobjects: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntrigger triggerAttachVehicle [player];\n```\n",
            "\n```sqf\ntrigger triggerAttachVehicle [];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerAttachVehicle",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "currentpilot": {
        "name": "currentPilot",
        "description": "Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned. If you need current pilot of a UAV or UGV, see [UAVControl](https://community.bistudio.com/wiki/UAVControl) command.",
        "syntaxArray": [
            {
                "Syntax": "currentPilot vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - piloting unit or [objNull](https://community.bistudio.com/wiki/objNull)"
            }
        ],
        "examples": [
            "\n```sqf\n_pilot = currentPilot vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentPilot",
        "modifiers": []
    },
    "vectormagnitudesqr": {
        "name": "vectorMagnitudeSqr",
        "description": "Squared magnitude of a 3D vector.",
        "syntaxArray": [
            {
                "Syntax": "vectorMagnitudeSqr vector",
                "Params": "vector: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_sizeSqr = vectorMagnitudeSqr [0,3,4]; // returns 25\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorMagnitudeSqr",
        "modifiers": []
    },
    "shownuavfeed": {
        "name": "shownUAVFeed",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if video feed transmitted from UAV is shown. A getter for [showUAVFeed](https://community.bistudio.com/wiki/showUAVFeed).",
        "syntaxArray": [
            {
                "Syntax": "shownUAVFeed",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = shownUAVFeed;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownUAVFeed",
        "modifiers": []
    },
    "lbsetpicturerightcolordisabled": {
        "name": "lbSetPictureRightColorDisabled",
        "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). Color which consists from only zeros means disable this override.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureRightColorDisabled** [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureRightColorDisabled** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureRightColorDisabled [101, 0, [1, 1, 1, 0.25]];\n```\n",
            "\n```sqf\n_ctrl lbSetPictureRightColorDisabled [0, [1, 1, 1, 0.25]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureRightColorDisabled",
        "modifiers": []
    },
    "pixelgridnouiscale": {
        "name": "pixelGridNoUIScale",
        "description": "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids. As mentioned in the name of this command, the **user interface scale is ignored**.",
        "syntaxArray": [
            {
                "Syntax": "**pixelGridNoUIScale**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Grid size, see [Arma 3: Pixel Grid System](https://community.bistudio.com/wiki/Arma_3:_Pixel_Grid_System)"
            }
        ],
        "examples": [
            "\n```sqf\n_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pixelGridNoUIScale",
        "modifiers": []
    },
    "setmarkersizelocal": {
        "name": "setMarkerSizeLocal",
        "description": "Set marker size.\nSize is in format [a-axis, b-axis].",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerSizeLocal** [a-axis, b-axis]",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n[a-axis, b-axis]: [Array](https://community.bistudio.com/wiki/Array)\n\na-axis: [Number](https://community.bistudio.com/wiki/Number) - 1/2 width of marker\n\nb-axis: [Number](https://community.bistudio.com/wiki/Number) - 1/2 height of marker\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerSizeLocal [100, 200];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerSizeLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "setwaypointcompletionradius": {
        "name": "setWaypointCompletionRadius",
        "description": "The completion radius allows units to call the waypoint completed once they are inside of the given circle.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointCompletionRadius** radius",
                "Params": "waypoint:  [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[grp, 2] setWaypointCompletionRadius 30;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointCompletionRadius",
        "modifiers": []
    },
    "units": {
        "name": "units",
        "description": "Returns an array with all the units in the group or group of the unit.",
        "syntaxArray": [
            {
                "Syntax": "units type",
                "Params": "type: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object), *since Arma 3 v2.02* also [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - If *type* is a destroyed object, an empty array is returned"
            }
        ],
        "examples": [
            "\n```sqf\n_myUnitCount = count units group player;\n```\n",
            "\n```sqf\n_isInMyGroup = _soldier1 in units player;\n```\n",
            "\n```sqf\n_unitsEast = units opfor;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/units",
        "modifiers": []
    },
    "resetcamshake": {
        "name": "resetCamShake",
        "description": "Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, [enableCamShake](https://community.bistudio.com/wiki/enableCamShake) should be used.",
        "syntaxArray": [
            {
                "Syntax": "**resetCamShake**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nresetCamShake; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/resetCamShake",
        "modifiers": [
            "Local effect"
        ]
    },
    "posscreentoworld": {
        "name": "posScreenToWorld",
        "description": "Converts map screen coordinates into world coordinates. Unlike [ctrlMapScreenToWorld](https://community.bistudio.com/wiki/ctrlMapScreenToWorld), this command returns world position is format [x, y, 0], otherwise it is identical to [ctrlMapScreenToWorld](https://community.bistudio.com/wiki/ctrlMapScreenToWorld).",
        "syntaxArray": [
            {
                "Syntax": "map **posScreenToWorld** [x, y]",
                "Params": "map : [Control](https://community.bistudio.com/wiki/Control) - map control\n\n[x, y]: [Array](https://community.bistudio.com/wiki/Array)\n\nx: [Number](https://community.bistudio.com/wiki/Number) - screen X\n\ny: [Number](https://community.bistudio.com/wiki/Number) - screen Y\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - world position in format [x,y,0]"
            }
        ],
        "examples": [
            "\n```sqf\n_worldCoord = _control posScreenToWorld _ScreenCoord;\n```\n",
            "\n```sqf\n_worldCoord = _control posScreenToWorld [_x, _y];\n```\n",
            "\n```sqf\n_worldCoord = _control posScreenToWorld [0.5, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/posScreenToWorld",
        "modifiers": []
    },
    "showradio": {
        "name": "showRadio",
        "description": "Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default [true](https://community.bistudio.com/wiki/true)).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**showRadio** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowRadio false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showRadio",
        "modifiers": []
    },
    "preloadtitlersc": {
        "name": "preloadTitleRsc",
        "description": "Resource title - Preload data.\n\nThe resource can be defined in the [Description.ext](https://community.bistudio.com/wiki/Description.ext) file.",
        "syntaxArray": [
            {
                "Syntax": "**preloadTitleRsc** [name, type]",
                "Params": "[name, type]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) defined in [Description.ext](https://community.bistudio.com/wiki/Description.ext) for the mission\n\ntype: [String](https://community.bistudio.com/wiki/String) \"PLAIN\" e.g.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "**preloadTitleRsc** [name, type, speed, showInMap]",
                "Params": "[name, type, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) defined in [Description.ext](https://community.bistudio.com/wiki/Description.ext) for the mission\n\ntype: [String](https://community.bistudio.com/wiki/String) \"PLAIN\" e.g.\n\nspeed (optional): [Number](https://community.bistudio.com/wiki/Number) - IGNORED\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "_ok=preloadTitleRsc [\"BIS\", \"PLAIN\"]"
        ],
        "Url": "https://community.bistudio.com/wiki/preloadTitleRsc",
        "modifiers": []
    },
    "setattributes": {
        "name": "setAttributes",
        "description": "Returns a [Structured Text](https://community.bistudio.com/wiki/Structured_Text) created from the given [structured](https://community.bistudio.com/wiki/Structured_Text) text and sets [ attributes](https://community.bistudio.com/wiki/Structured_Text#Attributes) to the given values.\n> ",
        "syntaxArray": [
            {
                "Syntax": "text **setAttributes** [name1, value1, name2, value2, ...]",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text) - only passing [Structured Text](https://community.bistudio.com/wiki/Structured_Text) has any effect\n\n[name1, value1, name2, value2, ...]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of the attribute\n\nvalue: [String](https://community.bistudio.com/wiki/String) - value of the attribute\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\n_txt = text \"Red text, right align\";\n_txt setAttributes [\"color\", \"#ff0000\", \"align\", \"right\"];\nhint composeText [_txt];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAttributes",
        "modifiers": []
    },
    "infopanelcomponents": {
        "name": "infoPanelComponents",
        "description": "Returns array of all components available to given object info panel.",
        "syntaxArray": [
            {
                "Syntax": "unit infoPanelComponents panelID",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\npanelID: [String](https://community.bistudio.com/wiki/String) - \"left\" or \"right\" can be used as panel names\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [className, componentType, isAccessible]:\n\n* className: [String](https://community.bistudio.com/wiki/String) - component classname as defined in object/vehicle config\n\n* componentType: [String](https://community.bistudio.com/wiki/String) - componentType - component type\n\n* isAccessible: [Boolean](https://community.bistudio.com/wiki/Boolean) - boolean flag that shows if component is currently accessible (lack of required item can make it temporarily inaccessible)"
            },
            {
                "Syntax": "[unit, turretPath] infoPanelComponents panelID",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - turret index\n\npanelID: [String](https://community.bistudio.com/wiki/String) - \"left\" or \"right\" can be used as panel names\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [className, componentType, isAccessible]:\n\n* className: [String](https://community.bistudio.com/wiki/String) - component classname as defined in object/vehicle config\n\n* componentType: [String](https://community.bistudio.com/wiki/String) - componentType - component type\n\n* isAccessible: [Boolean](https://community.bistudio.com/wiki/Boolean) - boolean flag that shows if component is currently accessible (lack of required item can make it temporarily inaccessible)"
            }
        ],
        "examples": [
            "\n```sqf\n// returns array of all components configured for _helicopter pilot seat\n_componentsData = [_helicopter, [-1]] infoPanelComponents \"left\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/infoPanelComponents",
        "modifiers": []
    },
    "kbaddtopic": {
        "name": "kbAddTopic",
        "description": "Register conversation topic to given person. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.\n> ",
        "syntaxArray": [
            {
                "Syntax": "person kbAddTopic [topicName, conversationFile, fsmFile, eventHandler]",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\ntopicName: [String](https://community.bistudio.com/wiki/String) - the topic id for further reference\n\nconversationFile: [String](https://community.bistudio.com/wiki/String) - .bikb file path\n\nfsmFile: [String](https://community.bistudio.com/wiki/String) - (Optional) .fsm file path. Receives the following parameters:\n\n* **_sentenceId:** the sentence as defined in the .bikb file\n\n* **_topic:** TopicName registered via kbAddTopic\n\n* **_this:** the person that was talked to (receiver)\n\n* **_from:** the person that talked to the receiver and triggered the script\n\neventHandler: [Code](https://community.bistudio.com/wiki/Code) or [String](https://community.bistudio.com/wiki/String) - (Optional) code to execute - given String will be [compiled](https://community.bistudio.com/wiki/compile). This is **not** an sqf file path.\nParameters: identical to *fsmFile* - see above.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer kbAddTopic [\"myTest\", \"myTest.bikb\", \"myTest.fsm\", compile preprocessFileLineNumbers \"myTest.sqf\"];\n```\n",
            "\n```sqf\nplayer kbAddTopic [\"itsGettingWarm\", \"weatherTalk.bikb\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbAddTopic",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "selectionposition": {
        "name": "selectionPosition",
        "description": "Returns position in model space and returns its relative position. Searches first in memory level, then in geometry [LODs](https://community.bistudio.com/wiki/LOD).\nIn Arma it returns the initial position of the selection, in Arma 2/Arma 3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned.",
        "syntaxArray": [
            {
                "Syntax": "object **selectionPosition** selectionName",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nselectionName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - relative position in model space. If selection does not exist, \n```sqf\n[0, 0, 0]\n```\n is returned."
            },
            {
                "Syntax": "object **selectionPosition** [selectionName, LODName] *Since Arma 3 v1.49.131660*",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n[selectionName, LODName]: [Array](https://community.bistudio.com/wiki/Array)\n\nselectionName: [String](https://community.bistudio.com/wiki/String)\n\nLODName: [String](https://community.bistudio.com/wiki/String) - LOD name, one of the following:\n\n* \"Memory\"\n\n* \"Geometry\"\n\n* \"FireGeometry\"\n\n* \"LandContact\"\n\n* \"HitPoints\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - relative position in model space. If selection does not exist, \n```sqf\n[0, 0, 0]\n```\n is returned."
            }
        ],
        "examples": [
            "\n```sqf\n_inModelPosition = player selectionPosition \"head_hit\";\n```\n",
            "\n```sqf\n_inModelPosition = player selectionPosition \"pelvis\";\n```\n",
            "\n```sqf\n_inModelPosition = player selectionPosition \"head\";\n```\n",
            "\n```sqf\n_inModelPosition = player selectionPosition \"camera\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectionPosition",
        "modifiers": [
            "Global argument"
        ]
    },
    "airportside": {
        "name": "airportSide",
        "description": "Gets the side of an airport, set by [setAirportSide](https://community.bistudio.com/wiki/setAirportSide). Default side is [sideUnknown](https://community.bistudio.com/wiki/sideUnknown).\n> ",
        "syntaxArray": [
            {
                "Syntax": "airportSide id",
                "Params": "id: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            },
            {
                "Syntax": "airportSide target *Since Arma 3 v1.68*",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _airportSide = airportSide 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/airportSide",
        "modifiers": []
    },
    "lnbaddrow": {
        "name": "lnbAddRow",
        "description": "Adds a row of strings.",
        "syntaxArray": [
            {
                "Syntax": "lnbAddRow [idc, data]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\ndata: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Row index"
            },
            {
                "Syntax": "ctrl lnbAddRow data",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\ndata: [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Row index"
            }
        ],
        "examples": [
            "\n```sqf\nlnbAddRow [1, [\"COL1\", \"COL2\"]];\n```\n",
            "\n```sqf\n_ctrl lnbAddRow [\"COL1\", \"COL2\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbAddRow",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "clearmagazinecargoglobal": {
        "name": "clearMagazineCargoGlobal",
        "description": "Removes all magazines from the vehicle cargo space. MP synchronized.",
        "syntaxArray": [
            {
                "Syntax": "**clearMagazineCargoGlobal** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - vehicle or ammo box\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearMagazineCargoGlobal jeepOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearMagazineCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "compile": {
        "name": "compile",
        "description": "Compiles [String](https://community.bistudio.com/wiki/String) expression into [Code](https://community.bistudio.com/wiki/Code).",
        "syntaxArray": [
            {
                "Syntax": "**compile** expression",
                "Params": "expression: [String](https://community.bistudio.com/wiki/String) - expression to be compiled\n\n",
                "Return": "[Code](https://community.bistudio.com/wiki/Code) - compiled expression"
            }
        ],
        "examples": [
            "\n```sqf\n_string = \"a = a + 1\";\n_code = compile _string; \ncall _code;\n```\n",
            "\n```sqf\nhint str compile \"a = b\";\n//Result: {a=b}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/compile",
        "modifiers": []
    },
    "ctrlsetfontp": {
        "name": "ctrlSetFontP",
        "description": "Sets P font of given HTML control or its size.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetFontP** fontOrSize",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nfontOrSize: [String](https://community.bistudio.com/wiki/String) or [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontP \"TahomaB\";\n```\n",
            "\n```sqf\n_control ctrlSetFontP 0.05;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontP",
        "modifiers": []
    },
    "getspeed": {
        "name": "getSpeed",
        "description": "Get the speed for the given speed mode.\n\nSpeedMode can be:\n\n* \"AUTO\"\n\n* \"SLOW\"\n\n* \"NORMAL\"\n\n* \"FAST\"",
        "syntaxArray": [
            {
                "Syntax": "object **getSpeed** speedMode",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nspeedMode: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) (m/s)"
            }
        ],
        "examples": [
            "\n```sqf\n_spd = player getSpeed \"FAST\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSpeed",
        "modifiers": [
            "Global argument"
        ]
    },
    "setformationtask": {
        "name": "setFormationTask",
        "description": "Set the current task of the formation member. > ",
        "syntaxArray": [
            {
                "Syntax": "unit **setFormationTask** task",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntask: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit setFormationTask \"MOVE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFormationTask",
        "modifiers": []
    },
    "servercommandavailable": {
        "name": "serverCommandAvailable",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if given [serverCommand](https://community.bistudio.com/wiki/serverCommand) is available on current machine, [false](https://community.bistudio.com/wiki/false) if not. Here is the general table of availability of Arma 3 server commands:\n\n\n* **Available to anyone**\n#login, #userlist,  #beclient,  #vote#login, #userlist,  #beclient,  #vote\n\n* **Available to any [admin](https://community.bistudio.com/wiki/admin) (voted in / logged in) or [server](https://community.bistudio.com/wiki/isServer) host**\n#kick, #debug#kick, #debug\n\n* **Available to logged in [admin](https://community.bistudio.com/wiki/admin) or [server](https://community.bistudio.com/wiki/isServer) host**\n#lock, #unlock, #maxping, #maxdesync, #maxpacketloss#lock, #unlock, #maxping, #maxdesync, #maxpacketloss\n\n* **Available to any [admin](https://community.bistudio.com/wiki/admin) (voted in / logged in)**\n#logout, #restart, #mission, #missions, #reassign, #monitor, #init#logout, #restart, #mission, #missions, #reassign, #monitor, #init\n\n* **Available to logged in [admin](https://community.bistudio.com/wiki/admin)**\n#shutdown, #restartserver, #exec, #beserver, #monitords, #logentities, #exportjipqueue#shutdown, #restartserver, #exec, #beserver, #monitords, #logentities, #exportjipqueue\n\n* **Available to logged in [admin](https://community.bistudio.com/wiki/admin) on certain game builds**\n#captureframe, #enabletest, #disabletest#captureframe, #enabletest, #disabletest\nTo check if server command could be executed in current environment use [serverCommandExecutable](https://community.bistudio.com/wiki/serverCommandExecutable). For more information on what each server command does, see [Multiplayer Server Commands](https://community.bistudio.com/wiki/Multiplayer_Server_Commands).\n\n**NOTE**: When password variant of [serverCommand](https://community.bistudio.com/wiki/serverCommand) is used on dedicated server, the table above does not apply as everything is available to it.",
        "syntaxArray": [
            {
                "Syntax": "**serverCommandAvailable** command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_can = serverCommandAvailable \"#kick\";\n```\n",
            "\n```sqf\nif (serverCommandAvailable \"#logout\") then \n{\n\thint \"You are a some sort of admin\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/serverCommandAvailable",
        "modifiers": []
    },
    "step": {
        "name": "step",
        "description": "Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1.",
        "syntaxArray": [
            {
                "Syntax": "for **step** stepSize",
                "Params": "for: [For Type](https://community.bistudio.com/wiki/For_Type)\n\nstepSize: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[For Type](https://community.bistudio.com/wiki/For_Type)"
            }
        ],
        "examples": [
            "for \"_x\" from 20 to 10 step -2 do {..code..}"
        ],
        "Url": "https://community.bistudio.com/wiki/step",
        "modifiers": []
    },
    "showhud": {
        "name": "showHUD",
        "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with [drawIcon3D](https://community.bistudio.com/wiki/drawIcon3D).\n> ",
        "syntaxArray": [
            {
                "Syntax": "showHUD enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "showHUD [scriptedHUD, info radar, compass, direction, menu, group, cursors, panels, kills, showIcon3D]",
                "Params": "scriptedHUD: [Boolean](https://community.bistudio.com/wiki/Boolean) - Show scripted HUD such as weapon crosshair, action menu and overlays created with [cutRsc](https://community.bistudio.com/wiki/cutRsc) and [titleRsc](https://community.bistudio.com/wiki/titleRsc). Same as showHUD's first syntax\n\ninfo: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show vehicle, soldier and weapon info\n\nradar: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show vehicle radar\n\ncompass: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show vehicle compass\n\ndirection: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show tank direction indicator. Not present in vanilla Arma 3\n\nmenu: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show commanding menu (HC related menus)\n\ngroup: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show group info bar (Squad leader info bar)\n\ncursors: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show HUD weapon cursors (connected with scripted HUD)\n\npanels: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show [Arma 3: Custom Info](https://community.bistudio.com/wiki/Arma_3:_Custom_Info) *since Arma 3 v1.70*\n\nkills: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [true](https://community.bistudio.com/wiki/true)) - Show \"x killed by y\" [systemChat](https://community.bistudio.com/wiki/systemChat) messages\n\nshowIcon3D: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [false](https://community.bistudio.com/wiki/false)) - Show icons drawn with [drawIcon3D](https://community.bistudio.com/wiki/drawIcon3D) even when the HUD is hidden *since Arma 3 v2.04*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowHUD false;\n```\n",
            "Hide vehicle radar and compass:\n```sqf\nshowHUD [\n  true, // scriptedHUD\n  true, // info\n  true, // radar\n  true, // compass\n  true, // direction\n  true, // menu\n  true, // group\n  true, // cursors\n  true, // panels\n  true, // kills\n  true  // showIcon3D\n];\n```\n",
            "Check if HUD visibility is hardcoded in mission config and showHUD command is overriden:\n```sqf\n_disabledShowHUD = isArray (missionConfigFile >> \"showHUD\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showHUD",
        "modifiers": [
            "Local effect"
        ]
    },
    "lbsetpicturerightcolor": {
        "name": "lbSetPictureRightColor",
        "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color). Color which consists from only zeros means disable this override.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureRightColor** [idc, index, color]",
                "Params": "[idc, index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureRightColor** [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureRightColor [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_ctrl lbSetPictureRightColor [0, [1, 1, 1, 1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureRightColor",
        "modifiers": []
    },
    "shownwatch": {
        "name": "shownWatch",
        "description": "Checks if client has Watch enabled in [description.ext](https://community.bistudio.com/wiki/description.ext) (*showWatch* param) or force enabled with [showWatch](https://community.bistudio.com/wiki/showWatch) command.",
        "syntaxArray": [
            {
                "Syntax": "**shownWatch**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (shownWatch) then {hint \"You have Watch enabled\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownWatch",
        "modifiers": []
    },
    "getobjecttype": {
        "name": "getObjectType",
        "description": "Returns object type as a number:\n\n* 1 - Primary - Normal object placed in Visitor, part of landscape\n\n* 2 - Network - Road placed in Visitor, part of landscape\n\n* 4 - Temporary - Temporary object (like tracks)\n\n* 8 - TypeVehicle - Some entity added by game\n\n* 16 - TypeTempVehicle - Temporary entity\n\n* 32 - LandDecal - Land decal",
        "syntaxArray": [
            {
                "Syntax": "**getObjectType** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Object type"
            }
        ],
        "examples": [
            "\n```sqf\n_objType = getObjectType player;\n```\n",
            "\n```sqf\n_objType = getObjectType cursorObject;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectType",
        "modifiers": []
    },
    "currentweaponmode": {
        "name": "currentWeaponMode",
        "description": "Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\"\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**currentWeaponMode** gunner",
                "Params": "gunner: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n _weaponMode = currentWeaponMode player;\n```\n",
            "\n```sqf\n _weaponMode = currentWeaponMode gunner vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentWeaponMode",
        "modifiers": []
    },
    "handshit": {
        "name": "handsHit",
        "description": "Checks if a soldier's hands are hit, which results in inaccurate aiming.",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = **handsHit** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) -  \nIf the hands are not damaged, the returned value is 0. If the hands are hit or the unit is dead, the returned value is 1."
            }
        ],
        "examples": [
            "\n```sqf\n? (handsHit player == 1) : player globalChat \"Ouch! Don't shoot at my hands dammit!\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/handsHit",
        "modifiers": [
            "Global argument"
        ]
    },
    "priority": {
        "name": "priority",
        "description": "Return the priority of the task.",
        "syntaxArray": [
            {
                "Syntax": "**priority** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_prioTsk01 = priority task01\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/priority",
        "modifiers": []
    },
    "opencuratorinterface": {
        "name": "openCuratorInterface",
        "description": "Force opens curator interface.",
        "syntaxArray": [
            {
                "Syntax": "**openCuratorInterface**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Open interface: \n```sqf\nopenCuratorInterface;\n```\n",
            "Close interface: \n```sqf\nfindDisplay 312 closeDisplay 2;\n```\n",
            "Detect if user used \"Zeus\" key to open curator interface in the absence of event handler for it: \n```sqf\nfindDisplay 46 displayAddEventHandler [\"KeyDown\", {\n\tif (inputAction \"CuratorInterface\" > 0) then {\n\t\thint \"Curator interface is open\";\n\t};\n\tfalse\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/openCuratorInterface",
        "modifiers": []
    },
    "safezoney": {
        "name": "safeZoneY",
        "description": "Returns the Y of the top border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the top border of the screen. Since it is going in opposite way of the Y axis, the value is negative. The measurement units depend on the current screen resolution [getResolution](https://community.bistudio.com/wiki/getResolution). See also [SafeZone](https://community.bistudio.com/wiki/SafeZone).\n[](https://community.bistudio.com/wiki/File:safezone.jpg)",
        "syntaxArray": [
            {
                "Syntax": "safeZoneY",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_screenTopBorderY = safeZoneY; // returns a float value < 0\n```\n",
            "Create control 50% wide, 30% tall, centered on screen:\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth; \n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/safeZoneY",
        "modifiers": []
    },
    "setsimpletaskalwaysvisible": {
        "name": "setSimpleTaskAlwaysVisible",
        "description": "Sets task's visibility.",
        "syntaxArray": [
            {
                "Syntax": "taskID setSimpleTaskAlwaysVisible state",
                "Params": "taskID: [Task](https://community.bistudio.com/wiki/Task)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) for always visible, [false](https://community.bistudio.com/wiki/false) for fade out\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "[currentTask](https://community.bistudio.com/wiki/currentTask) [player](https://community.bistudio.com/wiki/player) setSimpleTaskAlwaysVisible [true](https://community.bistudio.com/wiki/true);"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimpleTaskAlwaysVisible",
        "modifiers": [
            "Local effect"
        ]
    },
    "detach": {
        "name": "detach",
        "description": "Detaches previously attached with [attachTo](https://community.bistudio.com/wiki/attachTo) object.",
        "syntaxArray": [
            {
                "Syntax": "**detach** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nobj1 attachTo [player];\ndetach obj1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/detach",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "menuadd": {
        "name": "menuAdd",
        "description": "Adds new submenu entry into item on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuAdd [idc, path, text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "control menuAdd [path, text]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path where the items should be added\n\ntext: [String](https://community.bistudio.com/wiki/String) - Displayed name for the entry\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Index of the item"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuAdd [[], \"Custom Tools\"]; // Add new entry at the top level to the menu strip in Eden Editor\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuAdd",
        "modifiers": []
    },
    "ctrlsetscale": {
        "name": "ctrlSetScale",
        "description": "Sets scale of a control. Top left corner remains same. This command requires [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit).",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetScale** scale",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nscale: [Number](https://community.bistudio.com/wiki/Number) - Scale e.g. 2 = 200% in size\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetScale 0.5;// Makes the control 50% smaller\n_control ctrlCommit 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetScale",
        "modifiers": []
    },
    "setpitch": {
        "name": "setPitch",
        "description": "Sets the pitch of a persons voice.",
        "syntaxArray": [
            {
                "Syntax": "person **setPitch** pitch",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\npitch: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit1 setPitch 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPitch",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "clearbackpackcargoglobal": {
        "name": "clearBackpackCargoGlobal",
        "description": "Removes all backpacks from the vehicle cargo space. MP synchronized.",
        "syntaxArray": [
            {
                "Syntax": "clearBackpackCargoGlobal unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearBackpackCargoGlobal jeepOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearBackpackCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "enableinfopanelcomponent": {
        "name": "enableInfoPanelComponent",
        "description": "Controls availability of component to given object info panel.",
        "syntaxArray": [
            {
                "Syntax": "unit enableInfoPanelComponent [panelID, componentClassOrType, enable]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\npanelID: [String](https://community.bistudio.com/wiki/String) - \"left\" or \"right\" can be used as panel names\n\ncomponentClassOrType: [String](https://community.bistudio.com/wiki/String)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if component was successfully enabled on the panel, [false](https://community.bistudio.com/wiki/false) otherwise (e.g. component is not available for the object)"
            },
            {
                "Syntax": "[unit, turretPath] enableInfoPanelComponent [panelID, componentClassOrType, enable]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - turret index\n\npanelID: [String](https://community.bistudio.com/wiki/String) - \"left\" or \"right\" can be used as panel names\n\ncomponentClassOrType: [String](https://community.bistudio.com/wiki/String)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if component was successfully enabled on the panel, [false](https://community.bistudio.com/wiki/false) otherwise (e.g. component is not available for the object)"
            }
        ],
        "examples": [
            "\n```sqf\n// enables slingload assistant on player's vehicle right panel at driver position\n[vehicle player, [-1]] enableInfoPanelComponent [\"VehicleSystemsDisplayManagerComponentRight\", \"SlingLoadDisplay\", true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableInfoPanelComponent",
        "modifiers": []
    },
    "publicvariableclient": {
        "name": "publicVariableClient",
        "description": "Send the variable value to the client computer - same limitations regarding variable type as [publicVariable](https://community.bistudio.com/wiki/publicVariable#Description).\n\nThe Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the [owner](https://community.bistudio.com/wiki/owner) command (using it on a player's character, for example, will give you that players client ID).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "clientID **publicVariableClient** varName",
                "Params": "clientID: [Number](https://community.bistudio.com/wiki/Number)\n\nvarName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n3 publicVariableClient \"CTFscoreOne\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/publicVariableClient",
        "modifiers": []
    },
    "isequaltypeany": {
        "name": "isEqualTypeAny",
        "description": "Compares type of given value to every type in the given array and if match is found, [true](https://community.bistudio.com/wiki/true) is returned.",
        "syntaxArray": [
            {
                "Syntax": "val **isEqualTypeAny** types",
                "Params": "val: [Anything](https://community.bistudio.com/wiki/Anything)\n\ntypes: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_var = [1,2,3];\n_var isEqualTypeAny [0,\"\",objNull]; //false\n_var isEqualTypeAny [0,\"\",objNull,[]]; //true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isEqualTypeAny",
        "modifiers": []
    },
    "atan": {
        "name": "atan",
        "description": "Returns the **arcus tangens**.[](https://community.bistudio.com/wiki/File:atan.jpg)",
        "syntaxArray": [
            {
                "Syntax": "**atan** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Result is in degrees"
            }
        ],
        "examples": [
            "\n```sqf\n_degrees = atan 1; // 45\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/atan",
        "modifiers": []
    },
    "getwingspositionrtd": {
        "name": "getWingsPositionRTD",
        "description": "Returns position of stabilizers.> ",
        "syntaxArray": [
            {
                "Syntax": "getWingsPositionRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_position = getWingsPositionRTD myHelicopter;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getWingsPositionRTD",
        "modifiers": []
    },
    "locked": {
        "name": "locked",
        "description": "Check if [vehicle](https://community.bistudio.com/wiki/vehicle) is locked. If it is locked, [Persons](https://community.bistudio.com/wiki/Object#Person) cannot mount / dismount without order.",
        "syntaxArray": [
            {
                "Syntax": "locked vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "\n\n* [Number](https://community.bistudio.com/wiki/Number) - since [](https://community.bistudio.com/wiki/Category:Arma_3)[0.50](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_0.50)\n\n* 0: Unlocked\n\n* 1: Default - a subordinate player cannot enter without AI leader order\n\n* 2: Locked\n\n* 3: Locked for player\n\n* -1: vehicle [is null](https://community.bistudio.com/wiki/isNull)\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) for older games"
            }
        ],
        "examples": [
            "\n```sqf\n_locked = locked _jeepOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/locked",
        "modifiers": [
            "Global argument"
        ]
    },
    "tvexpand": {
        "name": "tvExpand",
        "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "**tvExpand** [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Item [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path). [] will expand the whole tree if it was collapsed previously with []\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvExpand path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Item [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path). [] will expand the whole tree if it was collapsed previously with []\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvExpand [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvExpand [1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvExpand",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "try": {
        "name": "try",
        "description": "Defines a try-catch structure. This sets up an [exception handling](https://community.bistudio.com/wiki/Exception_handling) block. Any thrown exception in a try block is caught in a [catch](https://community.bistudio.com/wiki/catch) block. The structured exception block has the following form:\n\n```sqf\ntry\n{ /* block that can throw exception */ }\ncatch\n{ /* block that processes the exception. Exception is described in the _exception variable */ };\n```\n",
        "syntaxArray": [
            {
                "Syntax": "try code",
                "Params": "code: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Exception Type](https://community.bistudio.com/wiki/Exception_handling)"
            },
            {
                "Syntax": "args try code *Since Arma 3 v1.53.133045*",
                "Params": "args: [Anything](https://community.bistudio.com/wiki/Anything) - passed arguments, will be put in *_this* variable inside the \"code\"\n\ncode: [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Exception Type](https://community.bistudio.com/wiki/Exception_handling)"
            }
        ],
        "examples": [
            "\n```sqf\ntry {throw \"invalid argument\"} catch {hint str _exception};\n```\n",
            "*since Arma 3 v1.53.133045*: \n```sqf\n123 try {if (_this != 123) throw \"invalid argument\"} catch {hint str _exception};\n```\n",
            "The correct usage of shorthand alt syntax: \n```sqf\ntry {\n\tif (a > b) throw \"Error: some error\"; // OK\n\t// The command argument is static\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) throw (call _someFunc); // NOT OK\n\t// The command argument is dynamic\n\t// _someFunc is called first to get the value regardless of (a > b) outcome\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) then {throw (call _someFunc)}; /// OK\n\t// The command argument is dynamic\n\t// _someFunc is only called when (a > b) is true\n} catch {\n\thint str _exception;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/try",
        "modifiers": []
    },
    "inflamed": {
        "name": "inflamed",
        "description": "Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use [isBurning](https://community.bistudio.com/wiki/isBurning) command.",
        "syntaxArray": [
            {
                "Syntax": "**inflamed** fireplace",
                "Params": "fireplace: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_inflamed = inflamed _fireplaceOne;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/inflamed",
        "modifiers": [
            "Global argument"
        ]
    },
    "setwaypointforcebehaviour": {
        "name": "setWaypointForceBehaviour",
        "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.",
        "syntaxArray": [
            {
                "Syntax": "waypoint setWaypointForceBehaviour state",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint) - format [[Group](https://community.bistudio.com/wiki/Group), *index*]\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean) - Force or not\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n[grp, 2] setWaypointForceBehaviour true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointForceBehaviour",
        "modifiers": []
    },
    "cutobj": {
        "name": "cutObj",
        "description": "Displays an object defined in the global config in CfgTitles.\n> ",
        "syntaxArray": [
            {
                "Syntax": "cutObj [class, type, speed, showInMap]",
                "Params": "[class, type, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - the className of the object defined in [configFile](https://community.bistudio.com/wiki/configFile) >> \"CfgTitles\" >> class\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed (Optional): [Number](https://community.bistudio.com/wiki/Number) - Time in seconds to fade in resource. Default: -1\n\nshowInMap (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened. Default: [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "layer cutObj [class, type, speed, showInMap]",
                "Params": "layer: [Number](https://community.bistudio.com/wiki/Number) - layer number on which the effect is shown, where 0 is the back most. Layer number is rounded to the nearest integer and also cannot be negative. Layer 99.5 will be treated as layer 100.\n\n[class, type, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - the className of the object defined in [configFile](https://community.bistudio.com/wiki/configFile) >> \"CfgTitles\" >> class\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default -1) Time in seconds to fade in resource.\n\nshowInMap: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "layerName cutObj [class, type, speed, showInMap] *Since Arma 3 v1.57.134673*",
                "Params": "layerName: [String](https://community.bistudio.com/wiki/String) - layer name on which the effect is shown. Layer names are CaSe SeNsItIvE\n\n[class, type, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nclass: [String](https://community.bistudio.com/wiki/String) - the className of the object defined in [configFile](https://community.bistudio.com/wiki/configFile) >> \"CfgTitles\" >> class\n\ntype: [String](https://community.bistudio.com/wiki/String) one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See [Title Effect Types](https://community.bistudio.com/wiki/Title_Effect_Type) for more information about these values.\n\nspeed (Optional): [Number](https://community.bistudio.com/wiki/Number) - Time in seconds to fade in resource. Default: -1\n\nshowInMap (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) to hide the text when the map is opened. Default: [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - number of the allocated layer"
            }
        ],
        "examples": [
            "\n```sqf\ncutObj [\"TVSet\", \"PLAIN\"];\ncutObj [\"TVSet\", \"PLAIN\", 2]\n```\n",
            "\n```sqf\n2 cutObj [\"Sphere\", \"PLAIN\"];\n```\n",
            "\n```sqf\nprivate _layer = \"layer1\" cutObj [\"BISLogo\", \"PLAIN\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cutObj",
        "modifiers": [
            "Local effect"
        ]
    },
    "curatoraddons": {
        "name": "curatorAddons",
        "description": "Returns list of addons allowed to given curator. The addon names are not guaranteed to be all lower case",
        "syntaxArray": [
            {
                "Syntax": "curatorAddons curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _addons = curatorAddons myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorAddons",
        "modifiers": []
    },
    "particlesquality": {
        "name": "particlesQuality",
        "description": "Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high",
        "syntaxArray": [
            {
                "Syntax": "**particlesQuality**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_currentQuality = particlesQuality;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/particlesQuality",
        "modifiers": [
            "Local effect"
        ]
    },
    "tvsetpicture": {
        "name": "tvSetPicture",
        "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.",
        "syntaxArray": [
            {
                "Syntax": "tvSetPicture [idc, path, name]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvSetPicture [path, name]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetPicture [101, [0], \"picture\"];\n```\n",
            "\n```sqf\n_ctrl tvSetPicture [[0,0,0], getText (configFile >> \"CfgWeapons\" >> \"optic_NVS\" >> \"picture\")];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPicture",
        "modifiers": []
    },
    "teamswitch": {
        "name": "teamSwitch",
        "description": "Invoke the [Team Switch](https://community.bistudio.com/wiki/Team_Switch) dialog (force it even when conditions are not met).\nThere has to be at least one playable unit for team switch to work, and for this command to work in MP, respawn type in [description.ext](https://community.bistudio.com/wiki/description.ext) should be 5 (SIDE).\n> ",
        "syntaxArray": [
            {
                "Syntax": "teamSwitch",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nteamSwitch;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teamSwitch",
        "modifiers": []
    },
    "tvdelete": {
        "name": "tvDelete",
        "description": "Removes an item with given [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) from Tree View.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**tvDelete** [idc, path]",
                "Params": "[idc, path]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the item\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvDelete path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [Tree View Path](https://community.bistudio.com/wiki/Tree_View_Path) of the item\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvDelete [101, [0, 0]];\n```\n",
            "\n```sqf\n_ctrl tvDelete [0, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvDelete",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "dosuppressivefire": {
        "name": "doSuppressiveFire",
        "description": "Orders the given unit or a group of units to suppress the given position or target (without radio messages, see [commandSuppressiveFire](https://community.bistudio.com/wiki/commandSuppressiveFire) is you need messages). \n\n* When an [Array](https://community.bistudio.com/wiki/Array) of units is passed as param, only units from the same [Group](https://community.bistudio.com/wiki/Group) as the first unit in array are considered.\n\n* The unit (units) starts firing at the given target or position random amount of shots (exact formula unknown, but seems to depend on amount of ammo unit has) after which it stops.\n\n* [currentCommand](https://community.bistudio.com/wiki/currentCommand) shows \"Suppress\" and there is no way of stopping unit before it completes random amount of rounds.\n\n* If position is passed as target param, it stays fixed.\n\n* If object is passed as target param, it depends on what kind of object. If it is considered a proper target by the unit, it is tracked by the unit dynamically. If it is not, the position gets obtained via [getPosWorld](https://community.bistudio.com/wiki/getPosWorld), which could be different from [PositionASL](https://community.bistudio.com/wiki/PositionASL) of the object, and it is fixed even if the target is able to change position later.",
        "syntaxArray": [
            {
                "Syntax": "unit **doSuppressiveFire** target",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) - A single unit or array of units\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) - Actual target or position of the target in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier doSuppressiveFire [1869.508,5760.962,0.000]\n```\n",
            "\n```sqf\nunits player doSuppressiveFire cursorTarget\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doSuppressiveFire",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "keys": {
        "name": "keys",
        "description": "Retrieves a list of all keys in a [HashMap](https://community.bistudio.com/wiki/HashMap).",
        "syntaxArray": [
            {
                "Syntax": "keys hashMap",
                "Params": "hashMap : [HashMap](https://community.bistudio.com/wiki/HashMap)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of all keys in the HashMap"
            }
        ],
        "examples": [
            "\n```sqf\nkeys _myHashMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/keys",
        "modifiers": []
    },
    "animatepylon": {
        "name": "animatePylon",
        "description": "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released  when pylon state =1. Supports pylon name since Arma 3 v1.94",
        "syntaxArray": [
            {
                "Syntax": "vehicle **animatePylon** [pylon, animphase, instant]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[pylon, animphase, instant] : [Array](https://community.bistudio.com/wiki/Array)\n\npylon: [Number](https://community.bistudio.com/wiki/Number) or [String](https://community.bistudio.com/wiki/String) - pylon index (index starts from 1) or pylon name (see [getCompatiblePylonMagazines](https://community.bistudio.com/wiki/getCompatiblePylonMagazines) Example 4)\n\nanimphase: [Number](https://community.bistudio.com/wiki/Number) - animation phase (0...1)\n\ninstant (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - animate immediately\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player animatePylon [1, 0.5];\n```\n",
            "\n```sqf\nvehicle player animatePylon [\"pylon1\", 0.5];\n```\n",
            "\n```sqf\nvehicle player animatePylon [\"pylon1\", 1, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animatePylon",
        "modifiers": []
    },
    "unitrecoilcoefficient": {
        "name": "unitRecoilCoefficient",
        "description": "Returns recoil coefficient of a soldier.",
        "syntaxArray": [
            {
                "Syntax": "**unitRecoilCoefficient** soldier",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_myRecoil = unitRecoilCoefficient player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitRecoilCoefficient",
        "modifiers": []
    },
    "isserver": {
        "name": "isServer",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the machine (executing the command) is the server in a multiplayer game or is running single player. It will return [true](https://community.bistudio.com/wiki/true) for both dedicated and player-hosted server.\n> ",
        "syntaxArray": [
            {
                "Syntax": "isServer",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (!isServer) exitWith {};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isServer",
        "modifiers": []
    },
    "ppeffectcommitted": {
        "name": "ppEffectCommitted",
        "description": "Check whether given [post process effect](https://community.bistudio.com/wiki/Post_process_effects) is committed.",
        "syntaxArray": [
            {
                "Syntax": "**ppEffectCommitted** effect",
                "Params": "effect: [String](https://community.bistudio.com/wiki/String) - Effect name\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "**ppEffectCommitted** handle",
                "Params": "handle: [Number](https://community.bistudio.com/wiki/Number) - Effect handle\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nppEffectCommitted \"colorCorrection\";\n```\n",
            "\n```sqf\nppEffectCommitted _hndl;\n```\n",
            "\n```sqf\nif (ppEffectCommitted \"colorCorrection\") then { hint \"alteration done !\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectCommitted",
        "modifiers": []
    },
    "menucollapse": {
        "name": "menuCollapse",
        "description": "Collapses item on given path and all its children.",
        "syntaxArray": [
            {
                "Syntax": "menuCollapse [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuCollapse path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuCollapse [0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuCollapse",
        "modifiers": []
    },
    "lockedcargo": {
        "name": "lockedCargo",
        "description": "Check whether cargo position of the vehicle is locked.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **lockedCargo** cargoIndex",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\ncargoIndex: [Number](https://community.bistudio.com/wiki/Number) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_result = vehicleName lockedCargo 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lockedCargo",
        "modifiers": []
    },
    "tofixed": {
        "name": "toFixed",
        "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript [toFixed()](https://community.bistudio.comhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed)\n**NOTE:** Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 [significant figures](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Significant_figures), whereas with this command it is possible to preserve some extra precision.\n\n```sqf\nstr (pi/100000); //\"3.14159e-005\" - scientific notation\n(pi/100000) toFixed 10; //\"0.0000314159\" - no scientific notation\nstr pi; //\"3.14159\" - 6 significant figures (default)\npi toFixed 6; //\"3.141593\" - forced to 7 significant figures\npi toFixed 7; //\"3.1415927\" - forced to 8 significant figures\n```\n\n\nSince Arma 3 v1.72 an alternative syntax is added, which takes no number and returns [Nothing](https://community.bistudio.com/wiki/Nothing). Instead it acts as keyword and switches engine [Number](https://community.bistudio.com/wiki/Number) to [String](https://community.bistudio.com/wiki/String) global conversion into desired format, from the moment it is applied until the end of script. To reset output back to default at any time, use toFixed -1. For example:\n\n```sqf\nsystemChat str position player;\ncall\n{\n\ttoFixed 6; \n\tsystemChat str position player;\n}; \nsystemChat str position player;\ntoFixed -1;\nsystemChat str position player;\n```\n\nThe result is:\n\n* [11580.3,11797.7,0.00146675]\n\n* [11580.341797,11797.737305,0.001467]\n\n* [11580.341797,11797.737305,0.001467]\n\n* [11580.3,11797.7,0.00146675]\nIdeal to be used when saving data to a database when more precise positioning is required.",
        "syntaxArray": [
            {
                "Syntax": "number **toFixed** decimals",
                "Params": "number: [Number](https://community.bistudio.com/wiki/Number) - number to convert\n\ndecimals: [Number](https://community.bistudio.com/wiki/Number) - number of decimals to display (range 0-20)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "**toFixed** decimals *Since Arma 3 v1.71.141859*",
                "Params": "decimals: [Number](https://community.bistudio.com/wiki/Number) - number of decimals to display (range 0-20). -1 to reset to default number of decimals\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n123 toFixed 2; // \"123.00\"\n```\n",
            "\n```sqf\n2.34 toFixed 1; // \"2.3\"\n2.35 toFixed 1; // \"2.4\"\n```\n",
            "Convert position to string preserving position precision: \n```sqf\nfn_posToString = \n{\n\tformat [\n\t\t\"[%1,%2,%3]\", \n\t\t_this select 0 toFixed 8, \n\t\t_this select 1 toFixed 8, \n\t\t_this select 2 toFixed 8\n\t]\n};\nstr getPos player;\t\t\t\t\t// \"[3231.05,171.802,0.00143862]\"\ngetPos player call fn_posToString;\t// \"[3231.04882813,171.80192566,0.00143862]\"\n```\n",
            "Same as **Example 3** only using new alternative syntax:\n```sqf\nstr getPos player; // \"[3231.05,171.802,0.00143862]\"\ntoFixed 8;\nstr getPos player; // \"[3231.04882813,171.80192566,0.00143862]\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toFixed",
        "modifiers": []
    },
    "forceflagtexture": {
        "name": "forceFlagTexture",
        "description": "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If \"\" is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using [flagTexture](https://community.bistudio.com/wiki/flagTexture), but [getForcedFlagTexture](https://community.bistudio.com/wiki/getForcedFlagTexture).\n> ",
        "syntaxArray": [
            {
                "Syntax": "object forceFlagTexture texture",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - vehicle, unit of flag pole\n\ntexture: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer forceFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceFlagTexture",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "removeeventhandler": {
        "name": "removeEventHandler",
        "description": "Removes a given Event Handler that was added with [addEventHandler](https://community.bistudio.com/wiki/addEventHandler).",
        "syntaxArray": [
            {
                "Syntax": "object removeEventHandler [type, index]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String) - See [Event Handlers](https://community.bistudio.com/wiki/Category:Event_Handlers) for the full list of available options\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - The value originally returned by [addEventHandler](https://community.bistudio.com/wiki/addEventHandler)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeEventHandler [\"Killed\", 0];\n```\n",
            "Since Arma 3 v1.64 the Event Handler index is available as _thisEventHandler during Event Handler code execution and can be used to easily remove the Event Handler:\n\n```sqf\nplayer addEventHandler [\"FiredNear\",\n{\n\tsystemChat \"This Event Handler is now removing itself!\";\n\tplayer removeEventHandler [\"FiredNear\", _thisEventHandler];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeEventHandler",
        "modifiers": []
    },
    "addweaponwithattachmentscargoglobal": {
        "name": "addWeaponWithAttachmentsCargoGlobal",
        "description": "Adds a weapon into cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added. This command has a global effect.",
        "syntaxArray": [
            {
                "Syntax": "container addWeaponWithAttachmentsCargoGlobal [[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod], weaponsCount]",
                "Params": "container: [Object](https://community.bistudio.com/wiki/Object) - Container to add the weapon to, might be backpack, ammobox or vehicle\n\n[[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod], weaponsCount]: [Array](https://community.bistudio.com/wiki/Array)\n\n[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod]: [Array](https://community.bistudio.com/wiki/Array) in format [weaponsItems](https://community.bistudio.com/wiki/weaponsItems)\n\nweapon: [String](https://community.bistudio.com/wiki/String) - Weapon class name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values\n\nmuzzle: [String](https://community.bistudio.com/wiki/String) - Muzzle attachment class name or \"\" if not needed\n\nflashlight: [String](https://community.bistudio.com/wiki/String) - Side rail attachment class name or \"\" if not needed\n\noptics: [String](https://community.bistudio.com/wiki/String) - Top rail attachment class name or \"\" if not needed\n\n[primaryMuzzleMagazine, ammoCount]: [Array](https://community.bistudio.com/wiki/Array) - Primary muzzle magazine info or [] if not needed\n\nprimaryMuzzleMagazine: [String](https://community.bistudio.com/wiki/String) - Magazine class name\n\nammoCount: [Number](https://community.bistudio.com/wiki/Number) - Ammo count in magazine (will be clipped in 0 and max mag capacity range)\n\n[secondaryMuzzleMagazine, ammoCount]: [Array](https://community.bistudio.com/wiki/Array) - Secondary muzzle magazine info or [] if not needed\n\nsecondaryMuzzleMagazine: [String](https://community.bistudio.com/wiki/String) - Magazine class name\n\nammoCount: [Number](https://community.bistudio.com/wiki/Number) - Ammo count in magazine (will be clipped in 0 and max mag capacity range)\n\nbipod: [String](https://community.bistudio.com/wiki/String) - Underbarrel rail attachment class name or \"\" if not needed\n\nweaponsCount: [Number](https://community.bistudio.com/wiki/Number) - Number of weapons to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2];\n\n```\n",
            "Add five MX GL rifles with flashlight side attachment and a full 30 round magazine loaded into the gun, and full 3Rnd HE grenade magazine loaded into the grenade launcher: \n```sqf\ncursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_GL_F\", \"\", \"acc_flashlight\", \"\", [\"30Rnd_65x39_caseless_mag\", 30], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 5]\n```\n",
            "Add one MX rifle without any attachments or magazines event though the class has linked items: \n```sqf\ncursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_Holo_pointer_F\", \"\", \"\", \"\", [], [], \"\"], 1];\n```\n",
            "Add all weapons on player with attachments: \n```sqf\n{ cursorObject addWeaponWithAttachmentsCargoGlobal [_x, 1] } forEach weaponsItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponWithAttachmentsCargoGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "issensortargetconfirmed": {
        "name": "isSensorTargetConfirmed",
        "description": "Returns if given unit is confirmed target for given side.",
        "syntaxArray": [
            {
                "Syntax": "unit **isSensorTargetConfirmed** side",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nside: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if confirmed target, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_enemyConfirmed = _possibleEnemy isSensorTargetConfirmed  opfor;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isSensorTargetConfirmed",
        "modifiers": []
    },
    "ppeffectforceinnvg": {
        "name": "ppEffectForceInNVG",
        "description": "Forces use of [Post process effects](https://community.bistudio.com/wiki/Post_process_effects) in NVG.",
        "syntaxArray": [
            {
                "Syntax": "ppHandle **ppEffectForceInNVG** force",
                "Params": "ppHandle: [Number](https://community.bistudio.com/wiki/Number) -  Handle of the post processing returned by [ppEffectCreate](https://community.bistudio.com/wiki/ppEffectCreate)\n\nforce: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ppGrain ppEffectForceInNVG true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectForceInNVG",
        "modifiers": [
            "Local effect"
        ]
    },
    "or": {
        "name": "or",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if one or both conditions are [true](https://community.bistudio.com/wiki/true). In case of the alternative syntax, [lazy evaluation](https://community.bistudio.comhttp://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures) is used (if left operand is [true](https://community.bistudio.com/wiki/true), evaluation of the right side is skipped completely).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "a or b",
                "Params": "a: [Boolean](https://community.bistudio.com/wiki/Boolean) - test condition or variable\n\nb: [Boolean](https://community.bistudio.com/wiki/Boolean) - test condition or variable\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "a or b *Since Arma 2: Operation Arrowhead v1.62*",
                "Params": "a: [Boolean](https://community.bistudio.com/wiki/Boolean) - test condition or variable\n\nb: [Code](https://community.bistudio.com/wiki/Code) - code that returns [Boolean](https://community.bistudio.com/wiki/Boolean); it is not evaluated if *a* returns [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (_obj1 or (_enemycount == 0) or (not alive _enemyGeneral)) then { hint \"you win !\"; };\n```\n",
            "\n```sqf\n// without lazy evaluation, select would throw an error in the event of an empty array\nif ((count _array == 0) or { (_array select 0) != player }) then\n{\n\thint \"It works!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/or",
        "modifiers": []
    },
    "sethorizonparallaxcoef": {
        "name": "setHorizonParallaxCoef",
        "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).",
        "syntaxArray": [
            {
                "Syntax": "**setHorizonParallaxCoef** coef",
                "Params": "coef: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetHorizonParallaxCoef 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setHorizonParallaxCoef",
        "modifiers": []
    },
    "speaker": {
        "name": "speaker",
        "description": "Returns the speaker class name of a unit.",
        "syntaxArray": [
            {
                "Syntax": "**speaker** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nspeaker player; // Can return \"male09eng\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/speaker",
        "modifiers": []
    },
    "isuniformallowed": {
        "name": "isUniformAllowed",
        "description": "Check whether given uniform can be dressed by target soldier.",
        "syntaxArray": [
            {
                "Syntax": "unit isUniformAllowed type",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ntype: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isUniformAllowed",
        "modifiers": [
            "Global argument"
        ]
    },
    "setsimpletaskdescription": {
        "name": "setSimpleTaskDescription",
        "description": "Attach descriptions to the simple task.",
        "syntaxArray": [
            {
                "Syntax": "task **setSimpleTaskDescription** [description, descriptionShort, descriptionHUD]",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n[description, descriptionShort, descriptionHUD]: [Array](https://community.bistudio.com/wiki/Array)\n\ndescription: [String](https://community.bistudio.com/wiki/String) - Task description\n\ndescriptionShort: [String](https://community.bistudio.com/wiki/String) - Task title\n\ndescriptionHUD: [String](https://community.bistudio.com/wiki/String) - Task waypoint description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmytask setSimpleTaskDescription [\"Today you have to kill Spongebob\",\"Kill Spongebob\",\"Here he is!\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimpleTaskDescription",
        "modifiers": []
    },
    "getsoundcontroller": {
        "name": "getSoundController",
        "description": "Returns value of the given sound controller.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **getSoundController** controller",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - must be a vehicle (does not work on soldiers)\n\ncontroller: [String](https://community.bistudio.com/wiki/String) - name of sound controller, for example \"rpm\" or \"thrust\".\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player getSoundController \"rpm\"; //600\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSoundController",
        "modifiers": []
    },
    "ctrlsettooltipcolortext": {
        "name": "ctrlSetTooltipColorText",
        "description": "Sets tooltip text color of given control. Color is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "display **ctrlSetTooltipColorText** color",
                "Params": "display: [Control](https://community.bistudio.com/wiki/Control)\n\ncolor: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetTooltipColorText [1, 0, 0, 1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTooltipColorText",
        "modifiers": []
    },
    "isautostartupenabledrtd": {
        "name": "isAutoStartUpEnabledRTD",
        "description": "Returns state of automatic start up action. > ",
        "syntaxArray": [
            {
                "Syntax": "isAutoStartUpEnabledRTD helicopter",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if automatic start up action is enabled."
            }
        ],
        "examples": [
            "\n```sqf\n_state = isAutoStartUpEnabledRTD _myHelicopter;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAutoStartUpEnabledRTD",
        "modifiers": []
    },
    "savestatus": {
        "name": "saveStatus",
        "description": "Saves object's properties to [Objects.sav](https://community.bistudio.com/wiki/Objects.sav) file in campaign directory as entry name.",
        "syntaxArray": [
            {
                "Syntax": "object **saveStatus** name",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if successful, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer saveStatus \"playerstate\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveStatus",
        "modifiers": []
    },
    "setpilotcameradirection": {
        "name": "setPilotCameraDirection",
        "description": "Sets the direction of object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera) (vector in model space).",
        "syntaxArray": [
            {
                "Syntax": "object **setPilotCameraDirection** Vector3D",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nVector3D: [Array](https://community.bistudio.com/wiki/Array) - [x,y,z] - format [Vector3D](https://community.bistudio.com/wiki/Vector3D) relative to the model centre (In a similar fashion to [PositionRelative](https://community.bistudio.com/wiki/PositionRelative))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n vehicle player setPilotCameraDirection [0,1,0] //re-centers the camera\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPilotCameraDirection",
        "modifiers": [
            "Local argument"
        ]
    },
    "removebackpack": {
        "name": "removeBackpack",
        "description": "Removes unit's backpack",
        "syntaxArray": [
            {
                "Syntax": "removeBackpack unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveBackpack this;\n```\n",
            "\n```sqf\nremoveBackpack mySoldierDude;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeBackpack",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "unitturret": {
        "name": "unitTurret",
        "description": "Returns the turret path the given vehicle's gunner is in. [-1] is returned if gunner is driver. When unit is not in any of vehicle's turret, empty array [] is returned. To get unit in turret see [turretUnit](https://community.bistudio.com/wiki/turretUnit)",
        "syntaxArray": [
            {
                "Syntax": "vehicle unitTurret gunner",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\ngunner: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - turret path"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle unitTurret _gunner;\n```\n",
            "\n```sqf\nvehicle player unitTurret player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitTurret",
        "modifiers": []
    },
    "ctrlfontheight": {
        "name": "ctrlFontHeight",
        "description": "Returns control's font size, usually sizeEx value (see [ctrlSetFontHeight](https://community.bistudio.com/wiki/ctrlSetFontHeight)).",
        "syntaxArray": [
            {
                "Syntax": "ctrlFontHeight control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlFontHeight _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlFontHeight",
        "modifiers": []
    },
    "formation": {
        "name": "formation",
        "description": "Returns the current formation of a group.",
        "syntaxArray": [
            {
                "Syntax": "**formation** target",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Can return:\n\n* \"COLUMN\"\n\n* \"STAG COLUMN\"\n\n* \"WEDGE\"\n\n* \"ECH LEFT\"\n\n* \"ECH RIGHT\"\n\n* \"VEE\"\n\n* \"LINE\"\n\n* \"FILE\"\n\n* \"DIAMOND\""
            }
        ],
        "examples": [
            "\n```sqf\nformation group player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/formation",
        "modifiers": [
            "Global argument"
        ]
    },
    "setrain": {
        "name": "setRain",
        "description": "Sets rain density smoothly over the given transition time. A transition time of zero means an immediate change.\nA rain density of zero is no rain, one is maximum rain. Rain is not possible when [overcast](https://community.bistudio.com/wiki/overcast) is less than 0.7.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "time setRain rain",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - Transition time in seconds to the new value\n\nrain: [Number](https://community.bistudio.com/wiki/Number) - New rain value in range 0 to 1.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n60 setRain 1;\n```\n",
            "Force no rain: \n```sqf\n0 setRain 0;\nforceWeatherChange;\n999999 setRain 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRain",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "ctrowcontrols": {
        "name": "ctRowControls",
        "description": "Returns array of controls on the row with the given index.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) = [Control](https://community.bistudio.com/wiki/Control) **ctRowControls** [Number](https://community.bistudio.com/wiki/Number)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_array = _control ctRowControls 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctRowControls",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlsettextcolorsecondary": {
        "name": "ctrlSetTextColorSecondary",
        "description": "Sets the secondary text color of a text control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetTextColorSecondary** color",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - Text control\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color in format RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlText ctrlSetTextColorSecondary [1, 0.5, 0.1, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetTextColorSecondary",
        "modifiers": []
    },
    "finite": {
        "name": "finite",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the provided number is finite (not infinite and a valid number). \n> ",
        "syntaxArray": [
            {
                "Syntax": "finite number",
                "Params": "number: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nfinite 123; // returns true\n```\n",
            "\n```sqf\nfinite log -1; // returns false\n```\n",
            "\n```sqf\nif (not finite log -1) then { hint \"Infinite\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/finite",
        "modifiers": []
    },
    "getdlcassetsusage": {
        "name": "getDLCAssetsUsage",
        "description": "Returns an array of the DLC usage times.",
        "syntaxArray": [
            {
                "Syntax": "getDLCAssetsUsage",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of DLC usage informations, containing DLC items in format:\n[[name, dlcAppId, sessionTime, totalTime], [name, dlcAppId, sessionTime, totalTime], (…)]\n**NOTE:** unused assets won't appear in the result (usage time = 0)."
            }
        ],
        "examples": [
            "\n```sqf\n_dlcAssetsUsageInfo = getDLCAssetsUsage;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDLCAssetsUsage",
        "modifiers": []
    },
    "preprocessfile": {
        "name": "preprocessFile",
        "description": "Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and [PreProcessor Commands](https://community.bistudio.com/wiki/PreProcessor_Commands). Due to the hard-drive access this command executes and the lack of caching this command should not be used in time-critical script loops.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**preprocessFile** fileName",
                "Params": "fileName: [String](https://community.bistudio.com/wiki/String) - Path to the file and name of the file\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_content = preprocessFile \"myFunction.sqf\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/preprocessFile",
        "modifiers": []
    },
    "lnbtextright": {
        "name": "lnbTextRight",
        "description": "Returns [CT_LISTNBOX](https://community.bistudio.com/wiki/CT_LISTNBOX)'s right aligned cell text.",
        "syntaxArray": [
            {
                "Syntax": "lnbTextRight [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "ctrl lnbTextRight [row, column]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_text = _control lnbTextRight [0, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbTextRight",
        "modifiers": []
    },
    "ctremoveheaders": {
        "name": "ctRemoveHeaders",
        "description": "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctRemoveHeaders** indices",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nindices: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctRemoveHeaders [0, 1, 2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctRemoveHeaders",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getallunittraits": {
        "name": "getAllUnitTraits",
        "description": "Returns unit traits, native or set by [setUnitTrait](https://community.bistudio.com/wiki/setUnitTrait).",
        "syntaxArray": [
            {
                "Syntax": "getAllUnitTraits unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) of [[String](https://community.bistudio.com/wiki/String), [String](https://community.bistudio.com/wiki/String)/[Boolean](https://community.bistudio.com/wiki/Boolean)] - to format [[\"traitName1\",value1], [\"traitName2\", value2]]"
            }
        ],
        "examples": [
            "\n```sqf\n/* can return:\n[\n\t[\"Medic\", false],\n\t[\"Engineer\", false],\n\t[\"ExplosiveSpecialist\", false],\n\t[\"UavHacker\", false],\n\t[\"CamouflageCoef\", 1],\n\t[\"AudibleCoef\", 1],\n\t[\"LoadCoef\", 1],\n\t[\"test\", \"custom\"]\n]\n*/\nprivate _playerTraits = getAllUnitTraits player;\n```\n",
            "\n```sqf\nprivate _unitTraits = getAllUnitTraits _unit;\nprivate _indexes = [_unitTraits, \"Medic\"] call BIS_fnc_findNestedElement;\nprivate _unitCanHeal = _unitTraits select (_indexes select 0) select 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAllUnitTraits",
        "modifiers": []
    },
    "getanimspeedcoef": {
        "name": "getAnimSpeedCoef",
        "description": "Get coefficient for animation speed.",
        "syntaxArray": [
            {
                "Syntax": "**getAnimSpeedCoef** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ngetAnimSpeedCoef player;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAnimSpeedCoef",
        "modifiers": []
    },
    "cameraview": {
        "name": "cameraView",
        "description": "Returns mode of active camera view. Mode is one of: \n\n* \"INTERNAL\" (1st person)\n\n* \"EXTERNAL\" (3rd person)\n\n* \"GUNNER\" (optics / sights)\n\n* \"GROUP\" (commander view)",
        "syntaxArray": [
            {
                "Syntax": "**cameraView**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nif (cameraOn == _vehicle && cameraView == \"External\") then\n{\n  _vehicle switchCamera \"Internal\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cameraView",
        "modifiers": []
    },
    "vectorworldtomodel": {
        "name": "vectorWorldToModel",
        "description": "Converts vector direction from world to model space.",
        "syntaxArray": [
            {
                "Syntax": "object **vectorWorldToModel** worldDir",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nworldDir: [Array](https://community.bistudio.com/wiki/Array) - vector direction in world space in format [x,y,z]\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - vector direction in model space in format [x,y,z]"
            }
        ],
        "examples": [
            "Convert world space vector [0,-10,4] to model space of object _airplane: \n\n```sqf\n_airplane vectorWorldToModel [0,-10,4];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorWorldToModel",
        "modifiers": []
    },
    "ctclear": {
        "name": "ctClear",
        "description": "Removes all the lines from the RscControlsTable. Returns Nothing.",
        "syntaxArray": [
            {
                "Syntax": "**ctClear** ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctClear _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctClear",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "remotecontrol": {
        "name": "remoteControl",
        "description": "Switches on remote control of the unit. Command needs to be executed locally to the player.\nIf driver is remote it will get transferred to players PC.\nThere is currently no getter command for remote control, but it is possible to use a trick described in Example 3.",
        "syntaxArray": [
            {
                "Syntax": "who remoteControl whom",
                "Params": "who: [Object](https://community.bistudio.com/wiki/Object) - controlling unit\n\nwhom: [Object](https://community.bistudio.com/wiki/Object) - controlled unit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Set player remote control of driver:\n\n```sqf\nplayer remoteControl driver UAV;\ndriver UAV switchCamera \"Internal\"; // switchCamera required\n// sometimes switchCamera is not needed\nplayer remoteControl driver UAV;\n\n```\n",
            "Return control to player: \n```sqf\nobjNull remoteControl driver UAV;\n```\n",
            "A dirty hack to return controlling unit because of the absence of dedicated getter:\n\n```sqf\nSQF_fnc_remoteControlledBy =\n{\n\tparams [\"_obj\"];\n\tif (!isNull objectParent _obj) exitWith { UAVControl _obj select 0 };\n\tprivate _res = [objNull];\n\tisNil\n\t{\n\t\tprivate _pos = getPosWorld _obj;\n\t\tprivate _dirUp = [vectorDirVisual _obj, vectorUpVisual _obj];\n\t\tprivate _anim = animationState _obj;\n\t\tprivate _dummy = \"PaperCar\" createVehicleLocal [0,0,0];\n\t\t_obj moveInAny _dummy;\n\t\t_res = uavControl _dummy;\n\t\t_obj setPosWorld _pos;\n\t\t_obj setVectorDirAndUp _dirUp;\n\t\t_obj switchMove _anim;\n\t\tdeleteVehicle _dummy;\n\t};\n\t_res select 0\n};\n```\n\nUsage (could be scheduled or unscheduled):\n\n```sqf\n[] spawn\n{\n\tplayer remoteControl bob;\n\tsystemChat str (bob call SQF_fnc_remoteControlledBy); // B Alpha 1-1:1 (KK)\n\tobjNull remoteControl bob;\n\tsystemChat str (bob call SQF_fnc_remoteControlledBy); // <NULL-object>\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/remoteControl",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "backpackmagazines": {
        "name": "backpackMagazines",
        "description": "Get array with all magazines from backpack of the given unit.",
        "syntaxArray": [
            {
                "Syntax": "**backpackMagazines** unit",
                "Params": "unit : [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nbackpackMagazines player;\n```\n\n\n\n```sqf\n[\n\t\"Titan AT Missile(1/1)[id/cr:16/0](2x)\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/backpackMagazines",
        "modifiers": []
    },
    "get3denmissionattribute": {
        "name": "get3DENMissionAttribute",
        "description": "Return value of [scenario attribute](https://community.bistudio.com/wiki/Eden_Editor:_Scenario_Atttributes). For a list of all available mission attributes see [Mission Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Scenario).\n> ",
        "syntaxArray": [
            {
                "Syntax": "section **get3DENMissionAttribute** class",
                "Params": "section: [String](https://community.bistudio.com/wiki/String) - attribute section\n\nclass: [String](https://community.bistudio.com/wiki/String) - attribute name\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat str (\"Multiplayer\" get3DENMissionAttribute \"respawn\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENMissionAttribute",
        "modifiers": []
    },
    "iskindof": {
        "name": "isKindOf",
        "description": "Checks whether the object is (a subtype) of the given type. While main and alternative syntaxes support only **CfgVehicles**, **CfgAmmo** and **CfgNonAIVehicles**, alternative syntax 2 allows to specify any config, including [mission config](https://community.bistudio.com/wiki/missionConfigFile).",
        "syntaxArray": [
            {
                "Syntax": "object isKindOf typeName",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\ntypeName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "typeName1 isKindOf typeName2",
                "Params": "typeName1: [String](https://community.bistudio.com/wiki/String)\n\ntypeName2: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "typeName1 isKindOf [typeName2, targetConfig] *Since Arma 3 v1.47*",
                "Params": "typeName1: [String](https://community.bistudio.com/wiki/String)\n\ntypeName2: [String](https://community.bistudio.com/wiki/String)\n\ntargetConfig: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player isKindOf \"Tank\";\n```\n",
            "\n```sqf\n\"BMP2\" isKindOf \"Tank\";\n```\n",
            "\n```sqf\ncurrentWeapon player isKindOf [\"Rifle\", configFile >> \"CfgWeapons\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isKindOf",
        "modifiers": []
    },
    "ropelength": {
        "name": "ropeLength",
        "description": "Return rope length in meters (set by [ropeCreate](https://community.bistudio.com/wiki/ropeCreate), [ropeCut](https://community.bistudio.com/wiki/ropeCut), [ropeUnwind](https://community.bistudio.com/wiki/ropeUnwind)).\n> ",
        "syntaxArray": [
            {
                "Syntax": "ropeLength rope",
                "Params": "rope: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_length = ropeLength (ropes heli1 select 0);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeLength",
        "modifiers": []
    },
    "showpad": {
        "name": "showPad",
        "description": "Shows or hides the notebook on the map screen, if enabled for the mission. (default [true](https://community.bistudio.com/wiki/true)). It is no longer relevant to Arma 2.",
        "syntaxArray": [
            {
                "Syntax": "**showPad** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowPad false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showPad",
        "modifiers": []
    },
    "getobjectdlc": {
        "name": "getObjectDLC",
        "description": "Returns appID of the DLC the object belongs to or [nil](https://community.bistudio.com/wiki/nil) if object is vanilla.",
        "syntaxArray": [
            {
                "Syntax": "**getObjectDLC** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) (or [Nothing](https://community.bistudio.com/wiki/Nothing) if vanilla item)"
            }
        ],
        "examples": [
            "\n```sqf\n_appID = getObjectDLC cursorTarget;\nif (!isNil \"_appID\") then {\n\thint format [\"This object belongs to DLC with id: %1\", _appID];\n} else {\n\thint \"This object is vanilla\";\n};\n```\n",
            "\n```sqf\n_akm = createSimpleObject [\"A3\\Weapons_F_Exp\\Rifles\\AKM\\AKM_F.p3d\",getPosASL player];\ngetObjectDLC _akm;\t// 395180\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectDLC",
        "modifiers": [
            "Global argument"
        ]
    },
    "sqrt": {
        "name": "sqrt",
        "description": "Returns square root of x.",
        "syntaxArray": [
            {
                "Syntax": "**sqrt** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _squareRoot = sqrt 9;  // returns 3\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sqrt",
        "modifiers": []
    },
    "fleeing": {
        "name": "fleeing",
        "description": "Checks if a unit is fleeing.\n\nNotes:\n\n* Fleeing only affects AI led groups.\n\n* Only the group as a whole can flee (or not).\n\n* The courage of the AI group is based on the group's leader [courage subskill](https://community.bistudio.com/wiki/Arma_3_AI_Skill#Sub-Skills).\n\n* Each group has a max strength (summed \"armor\" of all infantry units - plus armor when inside vehicles).\n\n* If the group losses by injury/damage or death/destruction are higher than the max strength, multiplied by leader's courage or [allowFleeing](https://community.bistudio.com/wiki/allowFleeing) level , then the group will start fleeing.\n\n* As result primarily the AI flees to a nearby \"supply point\" (some friendly units - preferably with medic or engineer, or a vehicle with repair/ammo/fuel cargo). Alternatively it will try to find a safe position within a 600m radius from the initial waypoint (danger, distance, amount of cover positions are taken into account).\n\n* After the fleeing has been finished the group's initial strength is reset.\n\n* Fleeing units in [combatMode](https://community.bistudio.com/wiki/combatMode) red, will be set to yellow when fleeing to avoid engaging enemies while doing so.\n\n* While fleeing, the group leader will be set to green, to avoid giving engage or fire orders, unless in [combatMode](https://community.bistudio.com/wiki/combatMode) blue already. Also [speedMode](https://community.bistudio.com/wiki/speedMode) is set to full.\n\n* When reaching their flee point/destination, they will change to [combatMode](https://community.bistudio.com/wiki/combatMode) yellow and [speedMode](https://community.bistudio.com/wiki/speedMode) normal.\n\n* With [allowFleeing](https://community.bistudio.com/wiki/allowFleeing) one can make unit's flee earlier (or essentially never flee). Apply it, overrides the courage subskill influence.",
        "syntaxArray": [
            {
                "Syntax": "**fleeing** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (fleeing soldier_1) then {player sideChat \"We have won!\"} else {player sideChat \"Keep fighting!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fleeing",
        "modifiers": [
            "Global argument"
        ]
    },
    "gearslotammocount": {
        "name": "gearSlotAmmoCount",
        "description": "Returns ammo count of assigned magazine.",
        "syntaxArray": [
            {
                "Syntax": "gearSlotAmmoCount control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - CT_ITEMSLOT 103\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nammo = gearSlotAmmoCount _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/gearSlotAmmoCount",
        "modifiers": []
    },
    "isstreamfriendlyuienabled": {
        "name": "isStreamFriendlyUIEnabled",
        "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).",
        "syntaxArray": [
            {
                "Syntax": "**isStreamFriendlyUIEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str isStreamFriendlyUIEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isStreamFriendlyUIEnabled",
        "modifiers": []
    },
    "lasertarget": {
        "name": "laserTarget",
        "description": "Returns laser target object created by given unit (vehicle or soldier) when using a laser targeting device.",
        "syntaxArray": [
            {
                "Syntax": "laserTarget unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - laser target or [objNull](https://community.bistudio.com/wiki/objNull) if no laser target exists"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _target = laserTarget gunner heli;\n```\n",
            "\n```sqf\nprivate _designatedPos = getPosATL laserTarget player; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/laserTarget",
        "modifiers": [
            "Global argument"
        ]
    },
    "dynamicsimulationdistancecoef": {
        "name": "dynamicSimulationDistanceCoef",
        "description": "A getter for [setDynamicSimulationDistanceCoef](https://community.bistudio.com/wiki/setDynamicSimulationDistanceCoef)",
        "syntaxArray": [
            {
                "Syntax": "**dynamicSimulationDistanceCoef** class",
                "Params": "class: [String](https://community.bistudio.com/wiki/String) - see [setDynamicSimulationDistanceCoef](https://community.bistudio.com/wiki/setDynamicSimulationDistanceCoef)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str dynamicSimulationDistanceCoef \"IsMoving\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dynamicSimulationDistanceCoef",
        "modifiers": []
    },
    "swimindepth": {
        "name": "swimInDepth",
        "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.",
        "syntaxArray": [
            {
                "Syntax": "unit **swimInDepth** value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldier swimInDepth -20;\n```\n",
            "\n```sqf\nbob swimInDepth -10;\nbob doMove ASLToAGL getPosASL player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/swimInDepth",
        "modifiers": []
    },
    "dofire": {
        "name": "doFire",
        "description": "Order the given unit(s) to fire on the given target (without radio messages).\n\nThe target is set with [doTarget](https://community.bistudio.com/wiki/doTarget) or [commandTarget](https://community.bistudio.com/wiki/commandTarget).\n\nThe target can be a unit or a vehicle, but not an object.",
        "syntaxArray": [
            {
                "Syntax": "unitName **doFire** target",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ESoldier1 doFire _WSoldier1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/doFire",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "say2d": {
        "name": "say2D",
        "description": "Plays given sound in 2D.",
        "syntaxArray": [
            {
                "Syntax": "from say2D sound",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - Origin of the sound\n\nsound: [String](https://community.bistudio.com/wiki/String) - Class name of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "from say2D [sound, maxTitlesDistance, speed]",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - Origin of the sound\n\nsound: [String](https://community.bistudio.com/wiki/String) - Class name of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\nmaxTitlesDistance: [Number](https://community.bistudio.com/wiki/Number) (Optional, default 100) - Max. distance in meters at which the sound can be heard\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) (Optional, default 1) - Pitch of the sound\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[from, to] say2D sound",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - Origin of the sound\n\nto: [Object](https://community.bistudio.com/wiki/Object) - Target\n\nsound: [String](https://community.bistudio.com/wiki/String) - Class name of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[from, to] say2D [sound, maxTitlesDistance, speed]",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - Origin of the sound\n\nto: [Object](https://community.bistudio.com/wiki/Object) - Target\n\nsound: [String](https://community.bistudio.com/wiki/String) - Class name of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\nmaxTitlesDistance: [Number](https://community.bistudio.com/wiki/Number) (Optional, default 100) - Max. distance in meters at which the sound can be heard\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) (Optional, default 1) - Pitch of the sound\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer say2D \"HelloThere\";\n```\n",
            "\n```sqf\n[player, _officer] say2D [\"HelloThere\", 50, 0.9];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/say2D",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "objectparent": {
        "name": "objectParent",
        "description": "Returns parent of an object if the object is proxy, otherwise [objNull](https://community.bistudio.com/wiki/objNull). In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.\nAnother good use of objectParent is when a static weapon is known and one needs to check if it is assembled or not. objectParent _staticWeapon will return [objNull](https://community.bistudio.com/wiki/objNull) if weapon is unpacked, or backpack object if packed.\n[](https://community.bistudio.com/wiki/File:objectParent.jpg)\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**objectParent** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_weaponholder = objectParent _mybackpack;\n\n```\n",
            "Create and place created backpack in front of player:\n```sqf\n_backpackContainer = \"B_TacticalPack_rgr\" createVehicle [0,0,0];\n_weaponHolder = objectParent _backpackContainer;\n_weaponHolder setPos (player modelToWorld [0,5,0]);\n```\n",
            "Check if player is on foot:\n```sqf\n_isOnFoot = isNull objectParent player;\n```\n",
            "Detect if player is in commander turret of a vehicle:\n```sqf\n_isVehicleCommander = player isEqualTo commander objectParent player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/objectParent",
        "modifiers": []
    },
    "setspeaker": {
        "name": "setSpeaker",
        "description": "Sets the speaker of a person. In order to setSpeaker dynamically in MP, the command needs to run on every computer with exactly the same params otherwise the speaking unit could appear silent on other PCs. Run this on server: \n\n[bob, \"Male02GRE\"] [remoteExec](https://community.bistudio.com/wiki/remoteExec) [\"setSpeaker\", 0, bob];",
        "syntaxArray": [
            {
                "Syntax": "person **setSpeaker** speaker",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nspeaker: [String](https://community.bistudio.com/wiki/String) - The used voice type\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit1 setSpeaker \"Male02GRE\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSpeaker",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setstaminascheme": {
        "name": "setStaminaScheme",
        "description": "Sets the scheme used for the Stamina system.",
        "syntaxArray": [
            {
                "Syntax": "**setStaminaScheme**",
                "Params": "scheme: [String](https://community.bistudio.com/wiki/String) - can be \"Normal\", \"FastDrain\", \"Exhausted\" or \"Default\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetStaminaScheme \"Default\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setStaminaScheme",
        "modifiers": []
    },
    "customwaypointposition": {
        "name": "customWaypointPosition",
        "description": "Returns player's custom waypoint (LShift + LMB) [Position](https://community.bistudio.com/wiki/Position) or an empty array [] if no custom waypoint exists.",
        "syntaxArray": [
            {
                "Syntax": "customWaypointPosition",
                "Params": "",
                "Return": "[Position](https://community.bistudio.com/wiki/Position) in format [x,y,0] or []"
            }
        ],
        "examples": [
            "\n```sqf\ncustomWaypointPosition\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/customWaypointPosition",
        "modifiers": []
    },
    "setstamina": {
        "name": "setStamina",
        "description": "Set units' stamina (seconds until depletion)",
        "syntaxArray": [
            {
                "Syntax": "unit **setStamina** stamina",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nstamina: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setStamina 42;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setStamina",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "enableaudiofeature": {
        "name": "enableAudioFeature",
        "description": "Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\".",
        "syntaxArray": [
            {
                "Syntax": "enableAudioFeature [feature, enable]",
                "Params": "feature: [String](https://community.bistudio.com/wiki/String)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) enable, [false](https://community.bistudio.com/wiki/false), disabled\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Previous state"
            }
        ],
        "examples": [
            "prevState = enableAudioFeature [\"lowpass\", [true](https://community.bistudio.com/wiki/true)];"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAudioFeature",
        "modifiers": []
    },
    "difficultyenabledrtd": {
        "name": "difficultyEnabledRTD",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if Advanced Flight Model is enabled. Forcing of rotorlib simulation could be done with mission param [forceRotorLibSimulation](https://community.bistudio.com/wiki/Description.ext#forceRotorLibSimulation)",
        "syntaxArray": [
            {
                "Syntax": "difficultyEnabledRTD",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_rtdOn = difficultyEnabledRTD;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/difficultyEnabledRTD",
        "modifiers": []
    },
    "ctrlsetfonth5": {
        "name": "ctrlSetFontH5",
        "description": "Sets H5 font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH5** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH5 \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH5",
        "modifiers": []
    },
    "selectplayer": {
        "name": "selectPlayer",
        "description": "Move player into given unit. Some usage advices:\n\n* Try avoiding selectPlayer on editor-placed units in multiplayer, as it may, on occasion, lead to some undefined behaviour.\n\n* If you need to selectPlayer into another unit, consider [creatingUnit](https://community.bistudio.com/wiki/createUnit) dynamically.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "selectPlayer unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nselectPlayer bob;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectPlayer",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "textlog": {
        "name": "textLog",
        "description": "Dump argument value to debugging output. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**textLog** anything",
                "Params": "anything: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntextLog player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/textLog",
        "modifiers": []
    },
    "displayparent": {
        "name": "displayParent",
        "description": "Returns parent display of the given display.",
        "syntaxArray": [
            {
                "Syntax": "**displayParent** display",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\n",
                "Return": "[Display](https://community.bistudio.com/wiki/Display)"
            }
        ],
        "examples": [
            "\n```sqf\n_display = displayParent findDisplay 49; // Display #46\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displayParent",
        "modifiers": []
    },
    "openmap": {
        "name": "openMap",
        "description": "Opens or closes in-game map.\n> ",
        "syntaxArray": [
            {
                "Syntax": "openMap show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean) - if [true](https://community.bistudio.com/wiki/true) opens map, if [false](https://community.bistudio.com/wiki/false) closes map, provided it is not *forced*\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - equivalent of [visibleMap](https://community.bistudio.com/wiki/visibleMap)"
            },
            {
                "Syntax": "openMap [show, forced]",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean) - if [true](https://community.bistudio.com/wiki/true) opens map, if [false](https://community.bistudio.com/wiki/false) closes map, provided it is not *forced*.\n\nforced: [Boolean](https://community.bistudio.com/wiki/Boolean) - if [true](https://community.bistudio.com/wiki/true) keeps map from closing when map is open.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - equivalent of [visibleMap](https://community.bistudio.com/wiki/visibleMap)"
            }
        ],
        "examples": [
            "\n```sqf\nopenMap true;\n```\n",
            "\n```sqf\nopenMap [true, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/openMap",
        "modifiers": [
            "Local effect"
        ]
    },
    "createsoundsource": {
        "name": "createSoundSource",
        "description": "Creates a sound source of the given type (type is the name of the subclass of [CfgVehicles](https://community.bistudio.com/wiki/ArmA:_CfgVehicles) which is pointing to the sound defined in [CfgSFX](https://community.bistudio.com/wiki/CfgSFX)). The actual sound object created is of type \"#dynamicsound\" and could be detected with [allMissionObjects](https://community.bistudio.com/wiki/allMissionObjects). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. Some of the vanilla classes pre-configured in Arma 3:\n\n* \"Sound_Alarm\"\n\n* \"Sound_Alarm2\"\n\n* \"Sound_BattlefieldExplosions\"\n\n* \"Sound_BattlefieldFirefight\"\n\n* \"Sound_Fire\"\n\n* \"Sound_SmokeWreck1\"\n\n* \"Sound_SparklesWreck1\"\n\n* \"Sound_SparklesWreck2\"\n\n* \"Sound_Stream\"\nSince Arma 3 v1.70 it is possible to define sounds for use with createSoundSource in mission config. As mentioned earlier, the sounds needed for this command should be defined inside [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles) class, which itself references [CfgSFX](https://community.bistudio.com/wiki/CfgSFX) class. If given class searched in main config and is not found, the search will continue in [description.ext](https://community.bistudio.com/wiki/description.ext). Here is an example of suitable mission config definition:\n\n\n\n```sqf\n_owl = createSoundSource [\"MyOwlSound\", position player, [], 0];\n```\n\nNote that the sound created by createSoundSource will always be looping. Also when [CfgSFX](https://community.bistudio.com/wiki/CfgSFX) sound definition contains more than 1 sound, there is no guarantee that the sound played will be the same on every PC in Multiplayer.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**createSoundSource** [type, position, markers, placement]",
                "Params": "[type, position, markers, placement]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - [CfgVehicles](https://community.bistudio.com/wiki/CfgVehicles) class\n\nposition:  [PositionAGL](https://community.bistudio.com/wiki/PositionAGL), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Object](https://community.bistudio.com/wiki/Object) - Desired placement position\n\nmarkers: [Array](https://community.bistudio.com/wiki/Array) - If the markers array contains any markers, the position is randomly picked from array of given markers plus desired placement position. If any of the markers were given z coordinate with [setMarkerPos](https://community.bistudio.com/wiki/setMarkerPos), the sound will also be created at given z coordinate\n\nplacement: [Number](https://community.bistudio.com/wiki/Number) - The sound is placed inside a circle with given position as center and placement as its radius\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_soundSource = createSoundSource [\"LittleDog\", position player, [], 0]\n```\n",
            "\n```sqf\n[] spawn \n{\n\t_alarm = createSoundSource [\"Sound_Alarm\", position player, [], 0]; //starts alarm\n\tsleep 10;\n\tdeleteVehicle _alarm; //stops alarm\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createSoundSource",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "switchaction": {
        "name": "switchAction",
        "description": "When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.",
        "syntaxArray": [
            {
                "Syntax": "soldier **switchAction** action",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\naction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne switchAction \"SitDown\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/switchAction",
        "modifiers": []
    },
    "setgusts": {
        "name": "setGusts",
        "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "time **setGusts** value",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n60 setGusts 0.75;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGusts",
        "modifiers": [
            "Local effect"
        ]
    },
    "isformationleader": {
        "name": "isFormationLeader",
        "description": "Returns true if the specified unit is subgroup leader.",
        "syntaxArray": [
            {
                "Syntax": "**isFormationLeader** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Unit being checked.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if unit is subgroup leader."
            }
        ],
        "examples": [
            "\n```sqf\n_isLeader = isFormationLeader player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isFormationLeader",
        "modifiers": []
    },
    "removediarysubject": {
        "name": "removeDiarySubject",
        "description": "Removes a page and all its subjects from the [Diary](https://community.bistudio.com/wiki/Diary).",
        "syntaxArray": [
            {
                "Syntax": "player removeDiarySubject diaryPage",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\ndiaryPage: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeDiarySubject \"myPage\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeDiarySubject",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlsetfontpb": {
        "name": "ctrlSetFontPB",
        "description": "Sets P bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontPB** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontPB \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontPB",
        "modifiers": []
    },
    "ctrlsetmodeldirandup": {
        "name": "ctrlSetModelDirAndUp",
        "description": "Sets orientation of 3D control model. It is similar to [setVectorDirAndUp](https://community.bistudio.com/wiki/setVectorDirAndUp) command for an object.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetModelDirAndUp** [dir, up]",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\n[dir, up] : [Array](https://community.bistudio.com/wiki/Array) - format [ctrlModelDirAndUp](https://community.bistudio.com/wiki/ctrlModelDirAndUp)\n\ndir : [Array](https://community.bistudio.com/wiki/Array) - [vectorDir](https://community.bistudio.com/wiki/vectorDir)\n\nup : [Array](https://community.bistudio.com/wiki/Array) - [vectorUp](https://community.bistudio.com/wiki/vectorUp)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetModelDirAndUp",
        "modifiers": []
    },
    "rotorsrpmrtd": {
        "name": "rotorsRpmRTD",
        "description": "Returns rotors RPM. > ",
        "syntaxArray": [
            {
                "Syntax": "rotorsRpmRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor\n_mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rotorsRpmRTD",
        "modifiers": []
    },
    "isremoteexecuted": {
        "name": "isRemoteExecuted",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the code context is being remote executed by [remoteExec](https://community.bistudio.com/wiki/remoteExec) or [remoteExecCall](https://community.bistudio.com/wiki/remoteExecCall). In SP always returns [false](https://community.bistudio.com/wiki/false). See also [isRemoteExecutedJIP](https://community.bistudio.com/wiki/isRemoteExecutedJIP)",
        "syntaxArray": [
            {
                "Syntax": "**isRemoteExecuted**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_remoteExecuted = isRemoteExecuted;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isRemoteExecuted",
        "modifiers": []
    },
    "setsize": {
        "name": "setSize",
        "description": "Sets the size (radius)  of a location.\n\nThe width  is 2 * x, the height is 2 * y.",
        "syntaxArray": [
            {
                "Syntax": "location **setSize** size",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nsize: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setSize [10,30]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSize",
        "modifiers": []
    },
    "addforce": {
        "name": "addForce",
        "description": "Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space. If you need to define force in model space, use [vectorModelToWorld](https://community.bistudio.com/wiki/vectorModelToWorld) or [vectorModelToWorldVisual](https://community.bistudio.com/wiki/vectorModelToWorldVisual) commands first. The force applied as impulse. For more information see [NVIDIA docs](https://community.bistudio.comhttp://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/apireference/files/classPxRigidBody.html#a22b0a1ef0b6c5656a6063c5c38f5679c)\n> ",
        "syntaxArray": [
            {
                "Syntax": "object **addForce** [force, position]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - PhysX object\n\nforce: [Array](https://community.bistudio.com/wiki/Array) - Force vector (in world space) in format [x,y,z]\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - Model [PositionRelative](https://community.bistudio.com/wiki/PositionRelative) to which force is applied in format [x,y,z]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Apply force [0,1000,0] defined in world space (not factoring object actual positioning) to object position [1,0,0]:\n\n```sqf\n_object addForce [[0,1000,0],[1,0,0]];\n```\n",
            "Apply force [0,1000,0] defined in model space (relative to object) to object position [1,0,0]:\n\n```sqf\n_object addForce [_object vectorModelToWorld [0,1000,0],[1,0,0]];\n```\n",
            "Since Arma 3 v2.03.147267, can be used on units: \n```sqf\n[] spawn \n{\n\tbob addForce [bob vectorModelToWorld [0,-200,0], bob selectionPosition \"rightfoot\"];\n\tsleep 5;\n\tbob setUnconscious false;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addForce",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "east": {
        "name": "east",
        "description": "Pre-defined variable for the eastern [side](https://community.bistudio.com/wiki/Side).",
        "syntaxArray": [
            {
                "Syntax": "**east**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "[SQS](https://community.bistudio.com/wiki/SQS_Syntax):\n```sqf\n?(side _unit == east) : hint \"This is a eastern unit!\"\n```\n",
            "[SQF](https://community.bistudio.com/wiki/SQF_Syntax):\n```sqf\nif (side _unit == east) then\n{\n    hint \"This is an eastern unit!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/east",
        "modifiers": []
    },
    "getfuelcargo": {
        "name": "getFuelCargo",
        "description": "Returns the fuel amount (1 is full) in the cargo space of a refueling vehicle.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**getFuelCargo** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - fuel cargo value, -1 if fuel cargo is not supported, 0 if the vehicle is ![alive](https://community.bistudio.com/wiki/alive) or [isNull](https://community.bistudio.com/wiki/isNull)"
            }
        ],
        "examples": [
            "\n```sqf\nvalue = getFuelCargo myVehicleName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getFuelCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "pixelgridbase": {
        "name": "pixelGridBase",
        "description": "Returns grid size based on screen resolution.",
        "syntaxArray": [
            {
                "Syntax": "**pixelGridBase**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Grid size, see [Arma 3: Pixel Grid System](https://community.bistudio.com/wiki/Arma_3:_Pixel_Grid_System)"
            }
        ],
        "examples": [
            "\n```sqf\n_gridBaseHeight = pixelH * pixelGridBase;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pixelGridBase",
        "modifiers": []
    },
    "markeralpha": {
        "name": "markerAlpha",
        "description": "Gets the marker alpha. See [setMarkerAlpha](https://community.bistudio.com/wiki/setMarkerAlpha).",
        "syntaxArray": [
            {
                "Syntax": "**markerAlpha** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nAlphaMarker = markerAlpha \"myMarker;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerAlpha",
        "modifiers": [
            "Global argument"
        ]
    },
    "leaderboardsrequestuploadscorekeepbest": {
        "name": "leaderboardsRequestUploadScoreKeepBest",
        "description": "Starts async. operation to upload score to board with given name, value is only stored to board if it is better than one already in the board. The details array is optional. The board has to be initialized before the call.",
        "syntaxArray": [
            {
                "Syntax": "**leaderboardsRequestUploadScoreKeepBest** [boardName, score, details]",
                "Params": "boardname: [String](https://community.bistudio.com/wiki/String)\n\nscore: [Number](https://community.bistudio.com/wiki/Number)\n\ndetails: [Array](https://community.bistudio.com/wiki/Array) (optional) - Array of [numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardsRequestUploadScoreKeepBest [\"TT01\", 1234, [5,6,7,8]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardsRequestUploadScoreKeepBest",
        "modifiers": []
    },
    "settimemultiplier": {
        "name": "setTimeMultiplier",
        "description": "Sets a time multiplier for in-game time. The command range is capped at 0.1 - 120 to avoid performance problems.",
        "syntaxArray": [
            {
                "Syntax": "**setTimeMultiplier** value",
                "Params": "value: [Number](https://community.bistudio.com/wiki/Number) - has to be in range from 0.1 to 120\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetTimeMultiplier 60;\n```\n",
            "\n```sqf\nsetTimeMultiplier 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTimeMultiplier",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "goto": {
        "name": "goto",
        "description": "Break script flow and go to given label (defined by **#** - **NOT** to be confused with [SQF](https://community.bistudio.com/wiki/SQF_Syntax)'s [hash sign](https://community.bistudio.com/wiki/a_hash_b)!)\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "goto label",
                "Params": "label: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ngoto \"myLabel\"\nplayer setDamage 1\n\n#myLabel\nhint \"you successfully avoided death!\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/goto",
        "modifiers": []
    },
    "setfsmvariable": {
        "name": "setFSMVariable",
        "description": "Set variable to given value in the variable space of given FSM.\nThe FSM handle is the number returned by the [execFSM](https://community.bistudio.com/wiki/execFSM) command.",
        "syntaxArray": [
            {
                "Syntax": "handle **setFSMVariable** [name, value]",
                "Params": "handle: [Number](https://community.bistudio.com/wiki/Number) - FSM handle\n\n[name,value]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of the FSM variable\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - new value of the FSM variable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_handle = execFSM \"test.fsm\";\n_handle setFSMVariable [\"_foo\", 23];\n\n```\n\nsets variable _foo in the FSM to 23"
        ],
        "Url": "https://community.bistudio.com/wiki/setFSMVariable",
        "modifiers": []
    },
    "ongroupiconclick": {
        "name": "onGroupIconClick",
        "description": "Defines an action performed when player clicked on group marker (3D or in a map). The code executed once. This EH, unlike [onGroupIconOverEnter](https://community.bistudio.com/wiki/onGroupIconOverEnter) and [onGroupIconOverLeave](https://community.bistudio.com/wiki/onGroupIconOverLeave), has one more param which returns 1 if RMB was pressed, 0 otherwise. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**onGroupIconClick** command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code) - script\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonGroupIconClick\n{\n    // Passed values for _this are:\n    _is3D = _this select 0;\n    _group = _this select 1;\n    _wpID = _this select 2;\n    _RMB = _this select 3;\n    _posx = _this select 4;\n    _posy = _this select 5;\n    _shift = _this select 6;\n    _ctrl = _this select 7;\n    _alt = _this select 8;\n\n    _message = format [\"____ Info ____\"];\n    {_message = _message + format [\"\\n %1\",_x]} forEach _this;\n    hint _message;\n}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onGroupIconClick",
        "modifiers": []
    },
    "allcutlayers": {
        "name": "allCutLayers",
        "description": "Returns all named layers used by [cutRsc](https://community.bistudio.com/wiki/cutRsc), [cutText](https://community.bistudio.com/wiki/cutText), [cutObj](https://community.bistudio.com/wiki/cutObj) or [cutFadeOut](https://community.bistudio.com/wiki/cutFadeOut).\nThe layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so: \n```sqf\n_layerNum = \"TAG_myLayerName\" cutFadeOut 0;\n```\n.",
        "syntaxArray": [
            {
                "Syntax": "**allCutLayers**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of [Strings](https://community.bistudio.com/wiki/Strings): The index of the layer name in the array corresponds to the layer number the cut effect will be displayed on. If no layers were defined, the return is \n```sqf\n[\"\"]\n```\n, because 0 layer is reserved for usage in cut commands without layer param or when name of the layer given is empty \n```sqf\n\"\"\n```\n."
            }
        ],
        "examples": [
            "\n```sqf\nprivate _allLayers = allCutLayers;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allCutLayers",
        "modifiers": []
    },
    "customchat": {
        "name": "customChat",
        "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command.",
        "syntaxArray": [
            {
                "Syntax": "unit customChat [customChannelID, message]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\ncustomChannelID: [Number](https://community.bistudio.com/wiki/Number) - [Custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command\n\nmessage: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit customChat [1, \"Hi, I am a custom chat message\"];\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [sideChat](https://community.bistudio.com/wiki/sideChat) \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [globalChat](https://community.bistudio.com/wiki/globalChat) \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [groupChat](https://community.bistudio.com/wiki/groupChat) \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [vehicleChat](https://community.bistudio.com/wiki/vehicleChat) \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [commandChat](https://community.bistudio.com/wiki/commandChat) \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) customChat [1, \"customChat\"];\n[systemChat](https://community.bistudio.com/wiki/systemChat) \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/customChat",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "addmenu": {
        "name": "addMenu",
        "description": "Adds a new menu button. Priority is optional.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **addMenu** [text,priority]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[text,priority]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/addMenu",
        "modifiers": []
    },
    "setpilotcamerarotation": {
        "name": "setPilotCameraRotation",
        "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter [pilotCamera](https://community.bistudio.com/wiki/A3_Targeting_config_reference#class_pilotCamera) .",
        "syntaxArray": [
            {
                "Syntax": "object **setPilotCameraRotation** rotation",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nrotation: [Array](https://community.bistudio.com/wiki/Array) - [x,y] - format [yaw (turn), pitch (elevation)]. Values are in radians, positive values are left yaw and down pitch from the center.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n vehicle player setPilotCameraRotation [rad 90, rad 45 ]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPilotCameraRotation",
        "modifiers": [
            "Local argument"
        ]
    },
    "getcursorobjectparams": {
        "name": "getCursorObjectParams",
        "description": "Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away than 50 meters, selections are always an empty array and distance is 1e10 (10^10).",
        "syntaxArray": [
            {
                "Syntax": "**getCursorObjectParams**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [cursorObject, selections, distance]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str getCursorObjectParams;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getCursorObjectParams",
        "modifiers": []
    },
    "roadsconnectedto": {
        "name": "roadsConnectedTo",
        "description": "Find the road segments connected to the given road segment.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**roadsConnectedTo** roadSegment",
                "Params": "roadSegment: [Object](https://community.bistudio.com/wiki/Object) - Road segment\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - Connected road segments"
            },
            {
                "Syntax": "roadsConnectedTo [roadSegment, extended] *Since Arma 3 v2.00*",
                "Params": "roadSegment: [Object](https://community.bistudio.com/wiki/Object) - Road segment\n\nextended: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) When [true](https://community.bistudio.com/wiki/true), performs a more thorough search on top of base behaviour, slower but returns pedestrian and other missing road segments\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - Connected road segments"
            }
        ],
        "examples": [
            "\n```sqf\n_road = (player nearRoads 50) select 0;\n_connectedRoads = roadsConnectedTo _road;\n```\n",
            "\n```sqf\n_road = (player nearRoads 50) select 0;\n_connectedRoadsIncPedestrian = roadsConnectedTo [_road, true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/roadsConnectedTo",
        "modifiers": []
    },
    "gethitpointdamage": {
        "name": "getHitPointDamage",
        "description": "Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use [getHit](https://community.bistudio.com/wiki/getHit).\n\n* 0: no damage\n\n* 1: full damage",
        "syntaxArray": [
            {
                "Syntax": "vehicle **getHitPointDamage** hitPointName",
                "Params": "vehicle : [Object](https://community.bistudio.com/wiki/Object) - vehicle to be queried\n\nhitPointName: [String](https://community.bistudio.com/wiki/String) - name of the Hit Point class\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) (or, prior to Arma 3 v1.94, [Nothing](https://community.bistudio.com/wiki/Nothing) when invalid input is given)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player getHitPointDamage \"hitEngine\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getHitPointDamage",
        "modifiers": [
            "Global argument"
        ]
    },
    "setunitrecoilcoefficient": {
        "name": "setUnitRecoilCoefficient",
        "description": "Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.",
        "syntaxArray": [
            {
                "Syntax": "unitName **setUnitRecoilCoefficient** coefficient",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\ncoefficient: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setUnitRecoilCoefficient 10\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitRecoilCoefficient",
        "modifiers": []
    },
    "diag_activescripts": {
        "name": "diag_activeScripts",
        "description": "Returns 4 element array with numbers of currently running scripts in format: [[spawn](https://community.bistudio.com/wiki/spawn)-ed, [execVM](https://community.bistudio.com/wiki/execVM)-ed, [exec](https://community.bistudio.com/wiki/exec)-ed, [execFSM](https://community.bistudio.com/wiki/execFSM)-ed]",
        "syntaxArray": [
            {
                "Syntax": "**diag_activeScripts**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str diag_activeScripts; //[0,0,0,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_activeScripts",
        "modifiers": []
    },
    "synchronizedobjects": {
        "name": "synchronizedObjects",
        "description": "Return the list of objects synchronized with the given unit.",
        "syntaxArray": [
            {
                "Syntax": "**synchronizedObjects** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_objects = synchronizedObjects _logic;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizedObjects",
        "modifiers": [
            "Local argument"
        ]
    },
    "getmissionlayers": {
        "name": "getMissionLayers",
        "description": "Returns a list of all layers created in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor). Designed to be used during a scenario. Default layers (BLUFOR, OPFOR...) are not returned.",
        "syntaxArray": [
            {
                "Syntax": "getMissionLayers",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of strings with names of layers"
            }
        ],
        "examples": [
            "\n```sqf\ngetMissionLayers; // [\"Electronics\",\"Camp Endurance\",\"UGV Workstation\",\"Comments\",\"Extraction Air\",\"Comments\",\"Extraction Ground\",\"Extraction\",\"test\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMissionLayers",
        "modifiers": []
    },
    "lightnings": {
        "name": "lightnings",
        "description": "Return the current lightnings value.",
        "syntaxArray": [
            {
                "Syntax": "**lightnings**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "Get the current *lightnings* value:\n```sqf\n_lightningsVal = lightnings;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lightnings",
        "modifiers": []
    },
    "ctsetrowtemplate": {
        "name": "ctSetRowTemplate",
        "description": "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).",
        "syntaxArray": [
            {
                "Syntax": "[Control](https://community.bistudio.com/wiki/Control) **ctSetRowTemplate** [Config](https://community.bistudio.com/wiki/Config)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctSetRowTemplate _configPath;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctSetRowTemplate",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "enableteamswitch": {
        "name": "enableTeamSwitch",
        "description": "Enable / disable [Team Switch](https://community.bistudio.com/wiki/Team_Switch). The default setting is enabled.",
        "syntaxArray": [
            {
                "Syntax": "enableTeamSwitch enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableTeamSwitch true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableTeamSwitch",
        "modifiers": []
    },
    "setposition": {
        "name": "setPosition",
        "description": "Sets the position of a location.",
        "syntaxArray": [
            {
                "Syntax": "location **setPosition** pos",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "myLocation setPosition [1000,5320,10]"
        ],
        "Url": "https://community.bistudio.com/wiki/setPosition",
        "modifiers": []
    },
    "setdropinterval": {
        "name": "setDropInterval",
        "description": "Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is [18000](https://community.bistudio.comhttp://forums.bistudio.com/showthread.php?177797-Ruin-your-copy-of-Arma-and-your-PC#post2691090). Correspondence between CfgCloudlets class param name and command param:\n\n```sqf\nparticleSource setDropInterval interval;\n```\n",
        "syntaxArray": [
            {
                "Syntax": "particleSource **setDropInterval** interval",
                "Params": "particleSource: [Object](https://community.bistudio.com/wiki/Object)\n\ninterval: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_source setDropInterval 0.05;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDropInterval",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "switchlight": {
        "name": "switchLight",
        "description": "Controls whether a lamp is lit or not.\n> ",
        "syntaxArray": [
            {
                "Syntax": "lamp switchLight mode",
                "Params": "lamp: [Object](https://community.bistudio.com/wiki/Object)\n\nmode: [String](https://community.bistudio.com/wiki/String) - Mode can be: \"ON\", \"OFF\" or \"AUTO\" (*lamp* is on only during nighttime, default)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(object 12345) switchLight \"OFF\";\n```\n",
            "\n```sqf\nnearestObject [player, \"Streetlamp\"] switchLight \"OFF\";\n```\n",
            "\n```sqf\ncursorObject switchLight \"ON\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/switchLight",
        "modifiers": [
            "Local effect"
        ]
    },
    "menuaction": {
        "name": "menuAction",
        "description": "Returns action stored in item on given path in [CT_MENU_STRIP](https://community.bistudio.com/wiki/CT_MENU_STRIP) control.",
        "syntaxArray": [
            {
                "Syntax": "menuAction [idc, path]",
                "Params": "[idc, path]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Action"
            },
            {
                "Syntax": "control menuAction path",
                "Params": "control: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Action"
            }
        ],
        "examples": [
            "\n```sqf\nmenuAction [120, [1, 0]];\n```\n",
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuAction [1, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuAction",
        "modifiers": []
    },
    "missionname": {
        "name": "missionName",
        "description": "Return currently loaded mission file (path to mission.pbo, relative to game exe).",
        "syntaxArray": [
            {
                "Syntax": "missionName",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"You are playing mission \"\"%1\"\"\", missionName];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionName",
        "modifiers": []
    },
    "getmouseposition": {
        "name": "getMousePosition",
        "description": "Returns mouse position in UI coordinates.",
        "syntaxArray": [
            {
                "Syntax": "**getMousePosition**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - position in format [x, y], where x and y are UI coordinates"
            }
        ],
        "examples": [
            "\n```sqf\ngetMousePosition params [\"_mouseX\", \"_mouseY\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMousePosition",
        "modifiers": []
    },
    "setrainbow": {
        "name": "setRainbow",
        "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "syntaxArray": [
            {
                "Syntax": "time **setRainbow** value",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n360 setRainbow 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRainbow",
        "modifiers": []
    },
    "disableai": {
        "name": "disableAI",
        "description": "Disables parts of the AI behaviour to get a better control over the actions of a unit. If unit changes locality, it might need to be executed again at the new locality to maintain effect.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "unitName **disableAI** section",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object) - AI unit\n\nsection: [String](https://community.bistudio.com/wiki/String) - Possible values are:\n\n\n\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 disableAI \"AUTOTARGET\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableAI",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setcustomsoundcontroller": {
        "name": "setCustomSoundController",
        "description": "Sets value of the specified custom sound controller to be used in [simple expressions](https://community.bistudio.com/wiki/simple_expression) in config. Returns [true](https://community.bistudio.com/wiki/true) if value was set to the controller, [false](https://community.bistudio.com/wiki/false) if command fails, for example if vehicle is not a transport or controller name is not recognised.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**setCustomSoundController** [vehicle, controller, value]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - A transport type vehicle. Does not work on characters or buildings\n\ncontroller: [String](https://community.bistudio.com/wiki/String) - Name of the custom sound controller. Need to be full string like i.e. \"CustomSoundController1\". Currently you can pick from \"CustomSoundController1\" to \"CustomSoundController32\"\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - Desired value\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "Change value of CustomSoundController1 to 12\n```sqf\nsetCustomSoundController [vehicle player, \"CustomSoundController1\", 12];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCustomSoundController",
        "modifiers": []
    },
    "load": {
        "name": "load",
        "description": "Returns current sum of mass from items stored in all unit's containers. Load is calculated by the following formula:\n\n```sqf\n_loadPlayer = loadAbs player / getNumber (configFile >> \"CfgInventoryGlobalVariable\" >> \"maxSoldierLoad\");\n```\n",
        "syntaxArray": [
            {
                "Syntax": "**load** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nload player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/load",
        "modifiers": []
    },
    "settrafficdensity": {
        "name": "setTrafficDensity",
        "description": "Set the density of ambient cars in a rectangle (in cars per kilometer). > ",
        "syntaxArray": [
            {
                "Syntax": "setTrafficDensity [density, xMin, xMax, zMin, zMax]",
                "Params": "density: [Number](https://community.bistudio.com/wiki/Number) - density (in cars per kilometer)\n\nxMin: [Number](https://community.bistudio.com/wiki/Number) - western border of the affected rectangle\n\nxMax: [Number](https://community.bistudio.com/wiki/Number) - eastern border of the affected rectangle\n\nzMin: [Number](https://community.bistudio.com/wiki/Number) - southern border of the affected rectangle\n\nzMax: [Number](https://community.bistudio.com/wiki/Number) - northern border of the affected rectangle\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetTrafficDensity [40, 31000, 32000, 30000, 32000];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTrafficDensity",
        "modifiers": []
    },
    "removemenuitem": {
        "name": "removeMenuItem",
        "description": "Removes a previously added menu item. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **removeMenuItem** index",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index of menu item to delete\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMenuItem",
        "modifiers": []
    },
    "formationposition": {
        "name": "formationPosition",
        "description": "Return position of unit in the formation.",
        "syntaxArray": [
            {
                "Syntax": "**formationPosition** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Position](https://community.bistudio.com/wiki/Position)"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = formationPosition _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/formationPosition",
        "modifiers": []
    },
    "round": {
        "name": "round",
        "description": "Rounds **x** up or down to the closest integer.",
        "syntaxArray": [
            {
                "Syntax": "**round** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nround 5.25; // Result is 5\n```\n",
            "\n```sqf\nround -5.25; // Result is -5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/round",
        "modifiers": []
    },
    "vehiclemoveinfo": {
        "name": "vehicleMoveInfo",
        "description": "Returns current vehicle move/turn info (a getter for [sendSimpleCommand](https://community.bistudio.com/wiki/sendSimpleCommand)) in format [moveInfo, turnInfo]. Possible values:\n\n",
        "syntaxArray": [
            {
                "Syntax": "vehicleMoveInfo vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [moveInfo, turnInfo], where:\n\n* moveInfo: [String](https://community.bistudio.com/wiki/String) - state of vehicle forward/backward movement (see description)\n\n* turnInfo: [String](https://community.bistudio.com/wiki/String) - state of vehicle left/right turning (see description)"
            }
        ],
        "examples": [
            "\n```sqf\nonEachFrame { hintSilent str vehicleMoveInfo vehicle player };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleMoveInfo",
        "modifiers": []
    },
    "setfuel": {
        "name": "setFuel",
        "description": "Sets fuel level.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setFuel** amount",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\namount: [Number](https://community.bistudio.com/wiki/Number) - Value 0 (empty) to 1 (full)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_jeepOne setFuel 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFuel",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "get3dencamera": {
        "name": "get3DENCamera",
        "description": "Returns the camera [Object](https://community.bistudio.com/wiki/Object) used by the [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**get3DENCamera**",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n// set exact yaw, pitch, and roll\n_y = 45; _p = -80; _r = 0;\nget3DENCamera setVectorDirAndUp [\n\t[ sin _y * cos _p,cos _y * cos _p,sin _p],\n\t[ [sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D\n];\n\n```\n",
            "\n```sqf\n//Look at player\n_a = positionCameraToWorld [0,0,0] vectorFromTo (getPosATL player);\n_y = asin(_a select 0);\n_b = [_a,_y] call BIS_fnc_rotateVector2D;\n_z = _b select 2;\n_p = asin(_z / sqrt((_b select 1)^2 + _z^2));\nget3DENCamera setVectorDirAndUp [\n\t_a,\n\t[ [0,-sin _p,cos _p],-_y] call BIS_fnc_rotateVector2D\n];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENCamera",
        "modifiers": []
    },
    "assignasgunner": {
        "name": "assignAsGunner",
        "description": "Assign a unit as gunner of a vehicle. Used together with [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the gunner place of the vehicle.",
        "syntaxArray": [
            {
                "Syntax": "unitName **assignAsGunner** vehicleName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_soldier1 assignAsGunner _tank\n[_soldier1] orderGetIn true"
        ],
        "Url": "https://community.bistudio.com/wiki/assignAsGunner",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "issimpleobject": {
        "name": "isSimpleObject",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if given object is [simple object](https://community.bistudio.com/wiki/createSimpleObject)",
        "syntaxArray": [
            {
                "Syntax": "**isSimpleObject** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isSimple = isSimpleObject _obj1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isSimpleObject",
        "modifiers": []
    },
    "objectcurators": {
        "name": "objectCurators",
        "description": "Returns array with all curators which can edit given object.",
        "syntaxArray": [
            {
                "Syntax": "**objectCurators** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_curatorsThatcanEdit = objectCurators BIS_Tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/objectCurators",
        "modifiers": []
    },
    "setcamerainterest": {
        "name": "setCameraInterest",
        "description": "Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.",
        "syntaxArray": [
            {
                "Syntax": "entity setCameraInterest interest",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object)\n\ninterest: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier setCameraInterest 50;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCameraInterest",
        "modifiers": []
    },
    "numberofenginesrtd": {
        "name": "numberOfEnginesRTD",
        "description": "Returns the number of engines a helicopter has. > ",
        "syntaxArray": [
            {
                "Syntax": "numberOfEnginesRTD helicopterRTD",
                "Params": "helicopterRTD: [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_engineCount = numberOfEnginesRTD vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/numberOfEnginesRTD",
        "modifiers": []
    },
    "findeditorobject": {
        "name": "findEditorObject",
        "description": "Return object that matches the provided reference. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **findEditorObject** value",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) -\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/findEditorObject",
        "modifiers": []
    },
    "waypointtimeout": {
        "name": "waypointTimeout",
        "description": "Gets the waypoint timeout values.",
        "syntaxArray": [
            {
                "Syntax": "**waypointTimeout** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointTimeout [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointTimeout",
        "modifiers": []
    },
    "ctrlautoscrollrewind": {
        "name": "ctrlAutoScrollRewind",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if auto-scroll should move back to start after it reaches the end.\n\nAutorscroll is available for [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) and [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) types of controls only. Autoscroll will wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. [ctrlAutoScrollSpeed](https://community.bistudio.com/wiki/ctrlAutoScrollSpeed) defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is [true](https://community.bistudio.com/wiki/true), the control will fade out, immediately rewind to the top, then fade in, wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlAutoScrollRewind** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) or [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlRewind = ctrlAutoScrollRewind _ctrlGroup;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAutoScrollRewind",
        "modifiers": []
    },
    "removeallmpeventhandlers": {
        "name": "removeAllMPEventHandlers",
        "description": "Removes all MP event handlers of the given type which were added by [addMPEventHandler](https://community.bistudio.com/wiki/addMPEventHandler). Command needs to be executed only on one PC for MP event handler to be removed globally.",
        "syntaxArray": [
            {
                "Syntax": "objectName **removeAllMPEventHandlers** event",
                "Params": "objectName: [Object](https://community.bistudio.com/wiki/Object)\n\nevent: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n player removeAllMPEventHandlers \"mpkilled\"; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllMPEventHandlers",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "lbsetpictureright": {
        "name": "lbSetPictureRight",
        "description": "Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog). Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with [lbSetPictureRightColor](https://community.bistudio.com/wiki/lbSetPictureRightColor) as default [0,0,0,0] color makes picture invisible. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**lbSetPictureRight** [idc, index, name]",
                "Params": "[idc, index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetPictureRight** [index, name]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetPictureRight [101, 0, \"iskoda\"];\n```\n",
            "\n```sqf\n_control lbSetPictureRight [0, \"iskoda\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetPictureRight",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlanimationphasemodel": {
        "name": "ctrlAnimationPhaseModel",
        "description": "Returns current animation phase of given source. Similar to [animationSourcePhase](https://community.bistudio.com/wiki/animationSourcePhase).",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlAnimationPhaseModel** source",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\nsource: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_phase = _control3D ctrlAnimationPhaseModel \"Close\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAnimationPhaseModel",
        "modifiers": []
    },
    "seteditorobjectscope": {
        "name": "setEditorObjectScope",
        "description": "This command defines the level of access a user has to editor objects.\n\n\"objects\" is an array of either [Editor Objects](https://community.bistudio.com/wiki/Editor_Object) (eg [\"_unit_0\"]) or actual [Game Objects](https://community.bistudio.com/wiki/Object) (eg [player]). If the array is empty then the command will automatically parse all editor objects.\n\n\"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types.\n\n\"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member.\n\n\"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\".\n\n\"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map setEditorObjectScope [objects, editorType, condition, scope, subordinatesAlso]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[objects, editorType, condition, scope, subordinatesAlso]: [Array](https://community.bistudio.com/wiki/Array) -\n\nobjects: [Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) and/or [Editor Objects](https://community.bistudio.com/wiki/Editor_Object)\n\neditorType: [String](https://community.bistudio.com/wiki/String)\n\ncondition: [String](https://community.bistudio.com/wiki/String)\n\nscope: [String](https://community.bistudio.com/wiki/String)\n\nsubordinatesAlso: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_map setEditorObjectScope [ [],\"vehicle\", \"side effectiveCommander _x != side player\", \"HIDE\", false]\n```\n",
            "\n```sqf\n((findDisplay 128) displayCtrl 51) setEditorObjectScope [ [\"_unit_0\"], \"\", \"true\", \"ALLNODRAG\", false]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setEditorObjectScope",
        "modifiers": []
    },
    "bezierinterpolation": {
        "name": "bezierInterpolation",
        "description": "Gets interpolated value based on [Bézier curve](https://community.bistudio.comhttps://en.wikipedia.org/wiki/Bézier_curve) with given control points (progress value is 0...1 for a curve that starts at pos0 and finishes at posN) \n[](https://community.bistudio.com/wiki/File:bezierInterpolation2.jpg)",
        "syntaxArray": [
            {
                "Syntax": "progress bezierInterpolation [pos0, pos1,... posN]",
                "Params": "progress: [Number](https://community.bistudio.com/wiki/Number) - interpolation value\n\n[pos0, pos1,... posN]: [Array](https://community.bistudio.com/wiki/Array)\n\npos: [Array](https://community.bistudio.com/wiki/Array) in format [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - a single point position in format [Position3D](https://community.bistudio.com/wiki/Position3D) based on progress value"
            }
        ],
        "examples": [
            "Quick demonstration that spawns some spheres around player object:\n```sqf\nfor \"_i\" from 0 to 1 step 0.05 do {\n\tcreateVehicle [\"Sign_Sphere10cm_F\",(_i bezierInterpolation [\n\t\tplayer modelToWorld [0,0,0],\n\t\tplayer modelToWorld [0,2,2],\n\t\tplayer modelToWorld [2,0,2],\n\t\tplayer modelToWorld [0,0,4]\n\t]),[],0,\"CAN_COLLIDE\"];\n};\n```\n",
            "Create a map marker curve from 4 control points with overlap (progress is -0.5...1.5 instead of 0...1):\n```sqf\nprivate _controlPoints = [[100,-90],[200,-30],[150,60],[100,90]] apply { player getRelPos _x };\n{\n\tprivate _marker = createMarkerLocal [str _x, _x];\n\t_marker setMarkerTypeLocal \"mil_objective\";\n\t_marker setMarkerTextLocal (\"P\" + str _forEachIndex);\n}\nforEach _controlPoints;\nfor \"_i\" from -0.5 to 1.5 step 0.01 do\n{\n\tprivate _marker = createMarkerLocal [str _i, _i bezierInterpolation _controlPoints];\n\t_marker setMarkerTypeLocal \"mil_dot\";\n};\nopenMap true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/bezierInterpolation",
        "modifiers": []
    },
    "tvselection": {
        "name": "tvSelection",
        "description": "Returns array of paths to selected items.",
        "syntaxArray": [
            {
                "Syntax": "tvSelection control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_selection = tvSelection _ctrlTV;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSelection",
        "modifiers": []
    },
    "tan": {
        "name": "tan",
        "description": "Tangent of x, argument in [Degrees](https://community.bistudio.com/wiki/Number#Degrees).",
        "syntaxArray": [
            {
                "Syntax": "**tan** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_tangent = tan 45 \n```\n \nResult is 1"
        ],
        "Url": "https://community.bistudio.com/wiki/tan",
        "modifiers": []
    },
    "vectorupvisual": {
        "name": "vectorUpVisual",
        "description": "Return object's up vector in world [Position](https://community.bistudio.com/wiki/Position) coordinates ( [x, y, z] ) in render time scope.",
        "syntaxArray": [
            {
                "Syntax": "**vectorUpVisual** objectName",
                "Params": "objectName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)"
            }
        ],
        "examples": [
            "\n```sqf\n_vUp = vectorUpVisual vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorUpVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "pi": {
        "name": "pi",
        "description": "pi (180 degrees converted to [Radians](https://community.bistudio.com/wiki/Number#Radians)).",
        "syntaxArray": [
            {
                "Syntax": "**pi**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_radians = 2 * pi; // Result is 6.2830\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/pi",
        "modifiers": []
    },
    "calculateplayervisibilitybyfriendly": {
        "name": "calculatePlayerVisibilityByFriendly",
        "description": "Friendly units will / will not calculate visibility of player. Default [false](https://community.bistudio.com/wiki/false).",
        "syntaxArray": [
            {
                "Syntax": "calculatePlayerVisibilityByFriendly calculate",
                "Params": "calculate: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncalculatePlayerVisibilityByFriendly true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/calculatePlayerVisibilityByFriendly",
        "modifiers": []
    },
    "setvehiclearmor": {
        "name": "setVehicleArmor",
        "description": "Sets the armor (or health for men) state of the vehicle (a value from 0 to 1). \n\nWorks like [setDamage](https://community.bistudio.com/wiki/setDamage) only in reverse: *player setVehicleArmor 1* is the same as *player setDamage 0*, and *player setVehicleArmor 0* is the same as *player setDamage 0.97*",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **setVehicleArmor** value",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) range 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setVehicleArmor 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleArmor",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setflaganimationphase": {
        "name": "setFlagAnimationPhase",
        "description": "Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole. The changes to the flag position are local to the PC command is executed on. To animate flag use [BIS_fnc_animateFlag](https://community.bistudio.com/wiki/BIS_fnc_animateFlag)",
        "syntaxArray": [
            {
                "Syntax": "flag **setFlagAnimationPhase** phase",
                "Params": "flag: [Object](https://community.bistudio.com/wiki/Object) - flag pole of the type \"FlagCarrier\"\n\nphase: [Number](https://community.bistudio.com/wiki/Number) - 0...1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_flag1 setFlagAnimationPhase 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFlagAnimationPhase",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "parsenumber": {
        "name": "parseNumber",
        "description": "An SQF equivalent of C++ [atof](https://community.bistudio.comhttp://www.cplusplus.com/reference/cstdlib/atof/) function. Parses the string, interpreting its content as a floating point number.\nThe command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of [floating point literals](https://community.bistudio.com/wiki/Floating_Point_Number#Floating_Point_Literals), and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.\nIf the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0.",
        "syntaxArray": [
            {
                "Syntax": "parseNumber string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "parseNumber boolean *Since Arma 3 v1.49.131731*",
                "Params": "boolean: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - 0 if [false](https://community.bistudio.com/wiki/false), 1 if [true](https://community.bistudio.com/wiki/true)"
            }
        ],
        "examples": [
            "\n```sqf\n_number = parseNumber \"0.125\"; // 0.125\n```\n",
            "\n```sqf\n_number = parseNumber \"0050\"; // 50\n```\n",
            "\n```sqf\n_number = parseNumber \"2 abc\"; // 2\n```\n",
            "\n```sqf\n_number = parseNumber true; // 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/parseNumber",
        "modifiers": []
    },
    "setlightuseflare": {
        "name": "setLightUseFlare",
        "description": "Sets if light has flare.",
        "syntaxArray": [
            {
                "Syntax": "light setLightUseFlare bool",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightUseFlare true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightUseFlare",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "nearestobjects": {
        "name": "nearestObjects",
        "description": "Returns a list of nearest objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered by proximity, the closest one will be first in the array. Alternatively, you can use [nearObjects](https://community.bistudio.com/wiki/nearObjects) command, which doesn't sort results.\n\nA list of ClassName types (e.g Tank) can be found in [CfgVehicles](https://community.bistudio.com/wiki/Category:CfgVehicles).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "nearestObjects [position, types, radius, 2Dmode]",
                "Params": "position:  [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D) - Where to find objects, center position.\n\ntypes: [Array](https://community.bistudio.com/wiki/Array) - List of class name of the objects to search for. Use an empty array \n```sqf\n[]\n```\n to search for all classes.\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - Range from center position to search for objects.\n\n2Dmode (Optional, default [false](https://community.bistudio.com/wiki/false)): [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) for 2D distance, [false](https://community.bistudio.com/wiki/false) for 3D distance *Since Arma 3 v1.66*\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of objects"
            }
        ],
        "examples": [
            "\n```sqf\nnearestObjects [player, [\"Car\", \"Tank\"], 200];\n```\n",
            "\n```sqf\nnearestObjects [player, [\"house\"], 200];\n```\n",
            "\n```sqf\nnearestObjects [[2716,2949,0], [\"Car\", \"Truck\"], 100];\n```\n",
            "Return every object in 50 metres radius around player:\n```sqf\nnearestObjects [player, [], 50]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestObjects",
        "modifiers": []
    },
    "systemchat": {
        "name": "systemChat",
        "description": "Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec))",
        "syntaxArray": [
            {
                "Syntax": "systemChat text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) - message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat \"Hello world!\";\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [sideChat](https://community.bistudio.com/wiki/sideChat) \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [globalChat](https://community.bistudio.com/wiki/globalChat) \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [groupChat](https://community.bistudio.com/wiki/groupChat) \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [vehicleChat](https://community.bistudio.com/wiki/vehicleChat) \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [commandChat](https://community.bistudio.com/wiki/commandChat) \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [customChat](https://community.bistudio.com/wiki/customChat) [1, \"customChat\"];\nsystemChat \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/systemChat",
        "modifiers": [
            "Local effect"
        ]
    },
    "safezonewabs": {
        "name": "safeZoneWAbs",
        "description": "Returns absolute [safeZoneW](https://community.bistudio.com/wiki/safeZoneW) including all monitors.\n[](https://community.bistudio.com/wiki/File:UI_12-3.jpg)",
        "syntaxArray": [
            {
                "Syntax": "safeZoneWAbs",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Screen width including multiple monitors in screen measurement units"
            }
        ],
        "examples": [
            "\n```sqf\n_szW = safeZoneWAbs; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/safeZoneWAbs",
        "modifiers": []
    },
    "uniformcontainer": {
        "name": "uniformContainer",
        "description": "Returns a cargo container of a unit's uniform.",
        "syntaxArray": [
            {
                "Syntax": "uniformContainer unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - a soldier\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - cargo container or <NULL-object>"
            }
        ],
        "examples": [
            "\n```sqf\nhint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d\n```\n",
            "\n```sqf\nhint str getMagazineCargo uniformContainer player;\n```\n\n\n[\n\t[\"30Rnd_65x39_caseless_mag\"],\n\t[3]\n]"
        ],
        "Url": "https://community.bistudio.com/wiki/uniformContainer",
        "modifiers": []
    },
    "ropedestroy": {
        "name": "ropeDestroy",
        "description": "Destroys the given rope. If the rope is attached to a vehicle, it will be detached and then destroyed.",
        "syntaxArray": [
            {
                "Syntax": "ropeDestroy rope",
                "Params": "rope: [Object](https://community.bistudio.com/wiki/Object) - rope object returned by [ropeCreate](https://community.bistudio.com/wiki/ropeCreate) command\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nropeDestroy myRope;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeDestroy",
        "modifiers": []
    },
    "fog": {
        "name": "fog",
        "description": "A getter for [setFog](https://community.bistudio.com/wiki/setFog). Returns the current value of the fog in range 0...1.",
        "syntaxArray": [
            {
                "Syntax": "**fog**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_foglevel = fog;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fog",
        "modifiers": []
    },
    "removefromremainscollector": {
        "name": "removeFromRemainsCollector",
        "description": "Removes vehicles/units from the garbage collector, so they do not get deleted automatically; added earlier with [addToRemainsCollector](https://community.bistudio.com/wiki/addToRemainsCollector)",
        "syntaxArray": [
            {
                "Syntax": "**removeFromRemainsCollector** remains",
                "Params": "remains: [Array](https://community.bistudio.com/wiki/Array) - array of vehicles/units\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveFromRemainsCollector [unit1, unit2, vehicle1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeFromRemainsCollector",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "getfatigue": {
        "name": "getFatigue",
        "description": "Returns fatigue of given unit.",
        "syntaxArray": [
            {
                "Syntax": "**getFatigue** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n value = getFatigue player;\n\n```\n",
            "\n```sqf\n if (getFatigue player < 0.5) then { player sideChat \"I'm good to go!\" };\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getFatigue",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlseturl": {
        "name": "ctrlSetURL",
        "description": "Sets URL property of the given control subject to allowedHTMLLoadURIs[] whitelisting in [CfgCommands](https://community.bistudio.com/wiki/CfgCommands) config. Supported controls are:\n\n* CT_BUTTON\n\n* CT_SHORTCUTBUTTON\n\n* CT_ACTIVETEXT\n> ",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetURL URL",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nURL: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetURL \"http://arma3.com/\"; // note the forward slash / at the end\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetURL",
        "modifiers": []
    },
    "getartilleryammo": {
        "name": "getArtilleryAmmo",
        "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.",
        "syntaxArray": [
            {
                "Syntax": "**getArtilleryAmmo** [unit1, unit2, unit3....]",
                "Params": "[unit1, unit2, unit3....]: [Array](https://community.bistudio.com/wiki/Array)\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nif (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [\n\t_mortar1,\n\t_mortar2,\n\t_mortar3, \n\t_mortar4\n]) then {\n\thint \"Sir, we have white flares, sir!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getArtilleryAmmo",
        "modifiers": [
            "Global argument"
        ]
    },
    "enablepersonturret": {
        "name": "enablePersonTurret",
        "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use [assignedVehicleRole](https://community.bistudio.com/wiki/assignedVehicleRole) or [getCargoIndex](https://community.bistudio.com/wiki/getCargoIndex) command.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **enablePersonTurret** [turretPath, enable]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[turretPath, enable]: [Array](https://community.bistudio.com/wiki/Array)\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nheli enablePersonTurret [[1],true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enablePersonTurret",
        "modifiers": []
    },
    "updatedrawicon": {
        "name": "updateDrawIcon",
        "description": "Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **updateDrawIcon** [object,string identifier,color,offset,width,height,maintain size?,angle,shadow]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[object,string identifier,color,offset,width,height,maintain size?,angle,shadow]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/updateDrawIcon",
        "modifiers": []
    },
    "setcompassoscillation": {
        "name": "setCompassOscillation",
        "description": "This command sets random heading on the player's compass (both, in map and in 3D view) with given frequency, which is also randomised. To reset the compass back to defaults, execute: \n```sqf\nsetCompassOscillation [-1, 0, 0];\n```\n.",
        "syntaxArray": [
            {
                "Syntax": "**setCompassOscillation** [angle, frequencyMin, frequencyMax]",
                "Params": "[angle, frequencyMin, frequencyMax]: [Array](https://community.bistudio.com/wiki/Array)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - heading deviation angle in [radians](https://community.bistudio.com/wiki/rad); the random angle will be picked up from [-angle...+angle] range.\n\nfrequencyMin: [Number](https://community.bistudio.com/wiki/Number) - lower bound of heading change in seconds\n\nfrequencyMax: [Number](https://community.bistudio.com/wiki/Number) - higher bound of heading change in seconds. The actual frequency is calculated similar to: \n```sqf\n_frequencyMin + random(_frequencyMax - _frequencyMin);\n```\n\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Set compass to oscillate every second within -90/+90 degrees: \n```sqf\nsetCompassOscillation [rad 90, 1, 1];\n\n```\n",
            "Change heading every 60 to 90 seconds: \n```sqf\nsetCompassOscillation [rad 180, 60, 90];\n\n```\n",
            "Make compass go crazy: \n```sqf\nsetCompassOscillation [rad 360, 0.1, 0.2];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCompassOscillation",
        "modifiers": []
    },
    "moveincargo": {
        "name": "moveInCargo",
        "description": "Move soldier into vehicle cargo position (Immediate, no animation).",
        "syntaxArray": [
            {
                "Syntax": "unitName moveInCargo vehicle",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unitName moveInCargo [vehicle, CargoIndex]",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nCargoIndex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne moveInCargo _jeepOne;\n```\n",
            "\n```sqf\n_soldierOne moveInCargo [_jeepOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveInCargo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "magazinesammofull": {
        "name": "magazinesAmmoFull",
        "description": "Returns array of arrays of all vehicle's magazines with extended information about them.\n> ",
        "syntaxArray": [
            {
                "Syntax": "magazinesAmmoFull vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in format:\n\n* [String](https://community.bistudio.com/wiki/String): magazine class name\n\n* [Number](https://community.bistudio.com/wiki/Number): magazine ammo count\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean): is magazine loaded\n\n* [Number](https://community.bistudio.com/wiki/Number): magazine type:\n\n* -1 = n/a (default if magazine is not loaded)\n\n* 0 - grenade\n\n* 1 - primary weapon mag\n\n* 2 - handgun mag\n\n* 4 - secondary weapon mag\n\n* 4096 - binocular weapon mag\n\n* 65536 - vehicle mag\n\n* [String](https://community.bistudio.com/wiki/String): magazine location: \"Vest\", \"Uniform\", \"Backpack\", \"\" or [currentMuzzle](https://community.bistudio.com/wiki/currentMuzzle) if the magazine is loaded"
            },
            {
                "Syntax": "magazinesAmmoFull [vehicle, includeEmpty] *Since Arma 3 v1.99.146475*",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "same as [Primary Syntax](https://community.bistudio.com/wiki/magazinesAmmoFull#Syntax)"
            }
        ],
        "examples": [
            "\n```sqf\n_magazinesAmmoFull = magazinesAmmoFull player;\n/*\n[\n\t[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\"],\n\t[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\"],\n\t[\"16Rnd_9x21_Mag\",16,false,-1,\"Vest\"],\n\t[\"SmokeShellGreen\",1,true,0,\"SmokeShellGreenMuzzle\"],\n\t[\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\"],\n\t[\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\"],\n\t[\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\"],\n\t[\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\"]\n]\n*/\n```\n",
            "\n```sqf\n_magazinesAmmoFull = magazinesAmmoFull Mi_48;\n/*\n[\n\t[\"250Rnd_30mm_APDS_shells\",250,false,-1,\"\"],\n\t[\"250Rnd_30mm_HE_shells\",250,true,65536,\"gatling_30mm\"],\n\t[\"8Rnd_LG_scalpel\",8,true,65536,\"missiles_SCALPEL\"],\n\t[\"38Rnd_80mm_rockets\",38,true,65536,\"rockets_Skyfire\"]\n]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesAmmoFull",
        "modifiers": []
    },
    "isweaponrested": {
        "name": "isWeaponRested",
        "description": "Returns true if weapon is currently rested.",
        "syntaxArray": [
            {
                "Syntax": "isWeaponRested unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_rest = isWeaponRested player; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isWeaponRested",
        "modifiers": [
            "Local argument"
        ]
    },
    "lbcolorright": {
        "name": "lbColorRight",
        "description": "Returns the text color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog).\n\nThe color is returned in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "**lbColorRight** [idc, index]",
                "Params": "[idc, index]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Color (RGBA)](https://community.bistudio.com/wiki/Color)"
            },
            {
                "Syntax": "control **lbColorRight** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Color (RGBA)](https://community.bistudio.com/wiki/Color)"
            }
        ],
        "examples": [
            "\n```sqf\n_colour = lbColorRight [101, 0];\n```\n",
            "\n```sqf\n_color = _control lbColorRight 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbColorRight",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "insert": {
        "name": "insert",
        "description": "Inserts multiple values into [Array](https://community.bistudio.com/wiki/Array)/[String](https://community.bistudio.com/wiki/String)/[HashMap](https://community.bistudio.com/wiki/HashMap).\nThe [String](https://community.bistudio.com/wiki/String) variant also supports [forceUnicode](https://community.bistudio.com/wiki/forceUnicode).",
        "syntaxArray": [
            {
                "Syntax": "array insert [index, [value1, value2, ...], onlyIfUnique]",
                "Params": "array : [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index at which the values will be inserted, -1 for append.\n\n[value1, value2, ...]: [Array](https://community.bistudio.com/wiki/Array) of [Anything](https://community.bistudio.com/wiki/Anything) - Values to insert at the specified index\n\nonlyIfUnique: [Bool](https://community.bistudio.com/wiki/Bool) - Only insert if the value is unique in the array, like [pushBackUnique](https://community.bistudio.com/wiki/pushBackUnique)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "string insert [index, substring]",
                "Params": "string : [String](https://community.bistudio.com/wiki/String)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index at which the values will be inserted, -1 for append.\n\nsubstring: [String](https://community.bistudio.com/wiki/String) - String to insert\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - The new string"
            },
            {
                "Syntax": "hashMap insert [[key1, value1], [key2, value2], ...] *Since Arma 3 v2.04*",
                "Params": "hashMap: [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nkey: [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "hashMap **insert** [splitArray, [KeysAndValues]] *Since Arma 3 v2.04*",
                "Params": "hashMap: [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nsplitArray: [Boolean](https://community.bistudio.com/wiki/Boolean) - See *KeysAndValues*\n\nKeysAndValues: [Array](https://community.bistudio.com/wiki/Array)\n\n* If *splitArray* is [true](https://community.bistudio.com/wiki/true) then in format \n```sqf\n[[key1, key2, ...], [value1, value2, ...]]\n```\n\n\n* If *splitArray* is [false](https://community.bistudio.com/wiki/false) then \n```sqf\n[[key1, value1], [key2, value2], ...]\n```\n Same as alt. syntax 2\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n \"Test\" insert [0, \"Radio\"]; // Returns \"RadioTest\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/insert",
        "modifiers": []
    },
    "tolower": {
        "name": "toLower",
        "description": "Converts the supplied Unicode string to all lowercase characters. If the string doesn't have characters with [ codes](https://community.bistudio.com/wiki/toArray) > 255, you could benefit from faster conversion using [toLowerANSI](https://community.bistudio.com/wiki/toLowerANSI)",
        "syntaxArray": [
            {
                "Syntax": "**toLower** string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint toLower \"AaBb1\"; // returns \"aabb1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toLower",
        "modifiers": []
    },
    "setvehiclereportremotetargets": {
        "name": "setVehicleReportRemoteTargets",
        "description": "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the [Side](https://community.bistudio.com/wiki/Side) center.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setVehicleReportRemoteTargets** bool",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(vehicle player) setVehicleReportRemoteTargets true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleReportRemoteTargets",
        "modifiers": []
    },
    "setautonomous": {
        "name": "setAutonomous",
        "description": "Sets UAV autonomous mode.",
        "syntaxArray": [
            {
                "Syntax": "uav setAutonomous bool",
                "Params": "uav: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nuav setAutonomous true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAutonomous",
        "modifiers": []
    },
    "createguardedpoint": {
        "name": "createGuardedPoint",
        "description": "Adds a point guarded by the given side (scripted way of adding equivalent of \"GUARDED BY\" trigger in [Editor](https://community.bistudio.com/wiki/3DEN)). A closest AI group in the given side with assigned \"GUARD\" waypoint will attempt to secure this guard point. The actual guarded position is determined via the following rules:\n\n* Given \"position\" is always considered. It could be [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D). In every case, z coordinate will be ignored and point will be placed on nearest surface.\n\n* If \"objectMapID\" is not negative, the position of the object with the given ID is used (Overrides \"position\"). -1 to ignore this argument. z of the object position will be intact.\n\n* If the given \"vehicle\" is valid, the position of the vehicle is extracted and guarded (Overrides both \"position\" and \"objectMapID\"). [objNull](https://community.bistudio.com/wiki/objNull) to ignore. z of the vehicle position will be intact.\nFor use with \"GUARD\" [waypoint](https://community.bistudio.com/wiki/setWaypointType). How does \"GUARD\" waypoint work: [Waypoint:Guard](https://community.bistudio.com/wiki/Waypoint:Guard)",
        "syntaxArray": [
            {
                "Syntax": "**createGuardedPoint** [side, position, objectMapID, vehicle]",
                "Params": "[side, position, idStatic, vehicle]: [Array](https://community.bistudio.com/wiki/Array)\n\nside: [Side](https://community.bistudio.com/wiki/Side) - The side which will be guarding\n\nposition: [Position](https://community.bistudio.com/wiki/Position) - [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\nobjectMapID: [Number](https://community.bistudio.com/wiki/Number) - static id of map object. -1 to ignore\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle to be used for position. [objNull](https://community.bistudio.com/wiki/objNull) to ignore\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncreateGuardedPoint [east, [0,0], -1, vehicle player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createGuardedPoint",
        "modifiers": []
    },
    "isdedicated": {
        "name": "isDedicated",
        "description": "Return [true](https://community.bistudio.com/wiki/true) if the machine (executing the command) is a dedicated multiplayer server. In single player returns [false](https://community.bistudio.com/wiki/false).",
        "syntaxArray": [
            {
                "Syntax": "**isDedicated**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isDedicated) then {diag_log \"Dedicated Server on the run !\";};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isDedicated",
        "modifiers": []
    },
    "getdlcs": {
        "name": "getDLCs",
        "description": "Returns array of app IDs of DLCs.",
        "syntaxArray": [
            {
                "Syntax": "getDLCs filter",
                "Params": "filter: [Number](https://community.bistudio.com/wiki/Number) - can be:\n\n* 0 - all\n\n* 1 - owned\n\n* 2 - not owned\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of DLC numbers."
            }
        ],
        "examples": [
            "\n```sqf\n_ownedDLCs = getDLCs 1;\n```\n",
            "\n```sqf\n_hasKarts = (288520 in (getDLCs 1));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getDLCs",
        "modifiers": []
    },
    "playactionnow": {
        "name": "playActionNow",
        "description": "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.\n\nFor Arma 3 actions see: [playAction/actions](https://community.bistudio.com/wiki/playAction/actions).",
        "syntaxArray": [
            {
                "Syntax": "soldier **playActionNow** action",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object) -\n\naction: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne playActionNow \"SitDown\";\n```\n",
            "\n```sqf\nrabbitTwo playActionNow \"WalkF\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playActionNow",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "teamname": {
        "name": "teamName",
        "description": "Return a name of given [team](https://community.bistudio.com/wiki/Team).",
        "syntaxArray": [
            {
                "Syntax": "**teamName** [team](https://community.bistudio.com/wiki/Team)",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = teamName _team;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teamName",
        "modifiers": []
    },
    "gearidcammocount": {
        "name": "gearIDCAmmoCount",
        "description": "Returns ammo count of assigned magazine.",
        "syntaxArray": [
            {
                "Syntax": "gearIDCAmmoCount idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - idc of control type CT_ITEMSLOT 103\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nammo = gearIDCAmmoCount _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/gearIDCAmmoCount",
        "modifiers": []
    },
    "ctrlscale": {
        "name": "ctrlScale",
        "description": "Returns the current scale of the control.",
        "syntaxArray": [
            {
                "Syntax": "ctrlScale control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_scale = ctrlScale _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlScale",
        "modifiers": []
    },
    "weaponaccessories": {
        "name": "weaponAccessories",
        "description": "Get array with all items linked to a given weapon.\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **weaponAccessories** weapon",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nweapon: [String](https://community.bistudio.com/wiki/String) - primary, secondary or handgun\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [silencer, laserpointer/flashlight, optics, bipod]"
            }
        ],
        "examples": [
            "\n```sqf\nplayer weaponAccessories primaryWeapon player; //[\"\",\"acc_pointer_IR\",\"optic_Aco\",\"\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponAccessories",
        "modifiers": []
    },
    "hintsilent": {
        "name": "hintSilent",
        "description": "Same as [hint](https://community.bistudio.com/wiki/hint), but without a sound.",
        "syntaxArray": [
            {
                "Syntax": "hintSilent text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String) or [Structured Text](https://community.bistudio.com/wiki/Structured_Text)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nhintSilent format [\"Hello, %1!\", name player];\n```\n",
            "\n```sqf\nhint \"Hello there!\";\nsleep 5;\nhintSilent \"\"; // removes message\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hintSilent",
        "modifiers": [
            "Local effect"
        ]
    },
    "setsimpletaskcustomdata": {
        "name": "setSimpleTaskCustomData",
        "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.",
        "syntaxArray": [
            {
                "Syntax": "task **setSimpleTaskCustomData** [IconPath, tooltip, description]",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task) - task the custom data are being added to\n\niconPath: [String](https://community.bistudio.com/wiki/String) - icon path\n\ntooltip: [String](https://community.bistudio.com/wiki/String) - text displayed next to the icon; max. 3 charactersc\n\ndescription: [String](https://community.bistudio.com/wiki/String) - text displayed on the task description panel; html format\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n _task setSimpleTaskCustomData [\"\\A3\\Ui_f\\data\\IGUI\\Cfg\\simpleTasks\\letters\\h_ca.paa\", \"This is the tooltip\", \"This is the description\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimpleTaskCustomData",
        "modifiers": []
    },
    "tvexpandall": {
        "name": "tvExpandAll",
        "description": "Expands all tree items for the given Tree View.",
        "syntaxArray": [
            {
                "Syntax": "**tvExpandAll** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "tvExpandAll control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvExpandAll 101;\n```\n",
            "\n```sqf\ntvExpandAll _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvExpandAll",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "selectmin": {
        "name": "selectMin",
        "description": "Returns the array element with [minimum](https://community.bistudio.com/wiki/min) numerical value. Engine solution to [BIS_fnc_lowestNum](https://community.bistudio.com/wiki/BIS_fnc_lowestNum) and [BIS_fnc_findExtreme](https://community.bistudio.com/wiki/BIS_fnc_findExtreme). Therefore it is expected that supplied array consists of [Numbers](https://community.bistudio.com/wiki/Number) only.  [Booleans](https://community.bistudio.com/wiki/Boolean) however are also supported and will be evaluated as [Numbers](https://community.bistudio.com/wiki/Number): [true](https://community.bistudio.com/wiki/true) - 1, [false](https://community.bistudio.com/wiki/false) - 0. [nil](https://community.bistudio.com/wiki/nil) value treated as 0. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**selectMin** array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - array of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - element with [minimum](https://community.bistudio.com/wiki/min) numerical value"
            }
        ],
        "examples": [
            "\n```sqf\n_min = selectMin [1,2,3,4,5]; //1\n```\n",
            "\n```sqf\n// Same as, for example: \n_min = _a min _b min _c min _d;\n// Only faster:\n_min = selectMin [_a,_b,_c,_d];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectMin",
        "modifiers": []
    },
    "lnbdeletecolumn": {
        "name": "lnbDeleteColumn",
        "description": "Removes column with given index from ListNBox control.",
        "syntaxArray": [
            {
                "Syntax": "lnbDeleteColumn [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbDeleteColumn index",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbDeleteColumn 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbDeleteColumn",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "roadat": {
        "name": "roadAt",
        "description": "Returns a road segment containing given position, [objNull](https://community.bistudio.com/wiki/objNull) otherwise. Same as [isOnRoad](https://community.bistudio.com/wiki/isOnRoad) only returns the actual road object instead of boolean.",
        "syntaxArray": [
            {
                "Syntax": "**roadAt** position",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or  [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) (especially on bridges) or (since Arma 3 v2.00) [Position2D](https://community.bistudio.com/wiki/Position2D), in which case Z will be automatically deduced as the height of the road surface\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - road segment or [objNull](https://community.bistudio.com/wiki/objNull)"
            }
        ],
        "examples": [
            "\n```sqf\n_road = roadAt ASLToAGL getPosASL player;\n```\n",
            "\n```sqf\n_isOnRoad = !isNull roadAt player;\n```\n",
            "For detecting bridges, for example\n```sqf\ngetModelInfo (roadAt ASLToAGL getPosASL player); // [\"bridgesea_01_f.p3d\",\"a3\\structures_f_exp\\infrastructure\\bridges\\bridgesea_01_f.p3d\",true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/roadAt",
        "modifiers": [
            "Global argument"
        ]
    },
    "kbremovetopic": {
        "name": "kbRemoveTopic",
        "description": "Unregister conversation topic from given person. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.",
        "syntaxArray": [
            {
                "Syntax": "person kbRemoveTopic topicName",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\ntopicName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit1 kbRemoveTopic \"howsTheWeather\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbRemoveTopic",
        "modifiers": []
    },
    "drawlink": {
        "name": "drawLink",
        "description": "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **drawLink** [from,to,param type,line type,color]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[from,to,param type,line type,color]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/drawLink",
        "modifiers": []
    },
    "getplatenumber": {
        "name": "getPlateNumber",
        "description": "Get the license plates from any vehicle which has plates configured.",
        "syntaxArray": [
            {
                "Syntax": "**getPlateNumber** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\ngetPlateNumber vehicle player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPlateNumber",
        "modifiers": []
    },
    "getgroupicons": {
        "name": "getGroupIcons",
        "description": "Returns all group icons. [id,icon,[offsetx,offsety],[..],..]",
        "syntaxArray": [
            {
                "Syntax": "**getGroupIcons** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getGroupIcons",
        "modifiers": [
            "Global argument"
        ]
    },
    "unlinkitem": {
        "name": "unlinkItem",
        "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.",
        "syntaxArray": [
            {
                "Syntax": "unit unlinkItem item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbluforUnit unlinkItem \"NVGoggles\";\nopforUnit unlinkItem \"NVGoggles_OPFOR\";\nindependentUnit unlinkItem \"NVGoggles_INDEP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unlinkItem",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "taskresult": {
        "name": "taskResult",
        "description": "Send a result of the task to the task sender.",
        "syntaxArray": [
            {
                "Syntax": "taskResult task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  [state, result] (see [setTaskResult](https://community.bistudio.com/wiki/setTaskResult))"
            }
        ],
        "examples": [
            "\n```sqf\ntaskResult (player createSimpleTask [\"NewTask\"]);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskResult",
        "modifiers": []
    },
    "ctrlurl": {
        "name": "ctrlURL",
        "description": "Returns the URL property of a button control. Getter for [ctrlSetURL](https://community.bistudio.com/wiki/ctrlSetURL).",
        "syntaxArray": [
            {
                "Syntax": "ctrlURL control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlURL _control; // e.g. \"http://arma3.com/\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlURL",
        "modifiers": []
    },
    "removecuratoraddons": {
        "name": "removeCuratorAddons",
        "description": "Restrict curator use of given addons.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **removeCuratorAddons** addons",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\naddons: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule removeCuratorAddons [addon1,addon2]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeCuratorAddons",
        "modifiers": [
            "Server execution"
        ]
    },
    "restarteditorcamera": {
        "name": "restartEditorCamera",
        "description": "Restarts the mission editor camera (if it was deleted by a script,for example).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**restartEditorCamera** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/restartEditorCamera",
        "modifiers": []
    },
    "setmarkertextlocal": {
        "name": "setMarkerTextLocal",
        "description": "Sets the text label of an existing marker.",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerTextLocal** text",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerTextLocal \"You are here.\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerTextLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "get3denlinesvisible": {
        "name": "get3DENLinesVisible",
        "description": "Get visibility state of [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) lines.",
        "syntaxArray": [
            {
                "Syntax": "**get3DENLinesVisible**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [showMap, showScene]\n\n* showScene: [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the scene\n\n* showMap : [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the map"
            }
        ],
        "examples": [
            "\n```sqf\nif (get3DENLinesVisible select 0) then {hint \"Lines are visible in the map.\";};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENLinesVisible",
        "modifiers": []
    },
    "diag_setlightnew": {
        "name": "diag_setLightNew",
        "description": "Overrides currently used scene lightning. The operand is config that is placed as a string (not file). The changes may not be applied immediately, but can be forced by the call of [simulWeatherSync](https://community.bistudio.com/wiki/simulWeatherSync).",
        "syntaxArray": [
            {
                "Syntax": "diag_setLightNew config",
                "Params": "config: [String](https://community.bistudio.com/wiki/String) - Config in string form\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndiag_setLightNew \"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... \"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_setLightNew",
        "modifiers": []
    },
    "attachedto": {
        "name": "attachedTo",
        "description": "Returns object the given object is attached to or [objNull](https://community.bistudio.com/wiki/objNull) if the given object is not attached to anything.",
        "syntaxArray": [
            {
                "Syntax": "**attachedTo** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object) - given object\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - object the given object is attached to"
            }
        ],
        "examples": [
            "\n```sqf\nif (isNull attachedTo _obj1) then {\n  hint \"_obj1 is not attached to anything.\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/attachedTo",
        "modifiers": [
            "Global argument"
        ]
    },
    "enablereload": {
        "name": "enableReload",
        "description": "Enable / disable reload when magazine is empty.",
        "syntaxArray": [
            {
                "Syntax": "object **enableReload** enable",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicle enableReload false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableReload",
        "modifiers": []
    },
    "itemcargo": {
        "name": "itemCargo",
        "description": "Get array with items from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "**itemCargo** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Vehicle or ammo box\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Format: [\"ItemType1\",\"ItemType2\",\"ItemType3\"...]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str itemCargo vestContainer player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/itemCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "tvsetpicturecolorselected": {
        "name": "tvSetPictureColorSelected",
        "description": "Sets the color of the left picture of a tree item defined by path when item is selected",
        "syntaxArray": [
            {
                "Syntax": "control tvSetPictureColorSelected [path, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, color]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - path to tree view item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - color in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvSetPictureColorSelected [[0], [1,0,1,1]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureColorSelected",
        "modifiers": []
    },
    "sethitindex": {
        "name": "setHitIndex",
        "description": "Sets the current level of damage for a specific Hit Point. All hit points can be obtained with [getAllHitPointsDamage](https://community.bistudio.com/wiki/getAllHitPointsDamage) command.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setHitIndex** [hitPartIndex, damage, useEffects]",
                "Params": "vehicle : [Object](https://community.bistudio.com/wiki/Object) - Vehicle to be damaged\n\nhitPartIndex: [Number](https://community.bistudio.com/wiki/Number) - Hit part index of the Hit Point\n\ndamage: [Number](https://community.bistudio.com/wiki/Number) - Level of damage\n\n* 0: no damage\n\n* 1: full damage\n\nuseEffects: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) [False](https://community.bistudio.com/wiki/false) to skip destruction effects. *Since Arma 3 v1.68*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setHitIndex [1, 1];\n```\n",
            "\n```sqf\nplayer setHitIndex [7, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setHitIndex",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "loadstatus": {
        "name": "loadStatus",
        "description": "Loads object's properties from [Objects.sav](https://community.bistudio.com/wiki/Objects.sav) file in campaign directory (from entry name).",
        "syntaxArray": [
            {
                "Syntax": "object **loadStatus** entryName",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nentryName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if successfull, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_ok = player loadStatus \"playerState\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadStatus",
        "modifiers": []
    },
    "fromeditor": {
        "name": "fromEditor",
        "description": "Return if given team was inserted directly from mission editor.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**fromEditor** teamMember",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_fromEditor = fromEditor _member\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fromEditor",
        "modifiers": []
    },
    "compilefinal": {
        "name": "compileFinal",
        "description": "Compile expression and makes it final, preventing it from:\n\n* repeated [compile](https://community.bistudio.com/wiki/compile) or compileFinal\n\n* removal by [nil](https://community.bistudio.com/wiki/nil)\n\n* remote rewrite using [publicVariable](https://community.bistudio.com/wiki/publicVariable), [publicVariableClient](https://community.bistudio.com/wiki/publicVariableClient) and [publicVariableServer](https://community.bistudio.com/wiki/publicVariableServer)\n> ",
        "syntaxArray": [
            {
                "Syntax": "**compileFinal** expression",
                "Params": "expression: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Code](https://community.bistudio.com/wiki/Code)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCode = compileFinal \"a = a + 1\"; \ncall myCode; \n// Repeated compile won't have any effect\nmyCode = compileFinal \"a = a + 2\";\n// Duplicate code will be final as well\nmyDuplicateCode = myCode;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/compileFinal",
        "modifiers": []
    },
    "distance": {
        "name": "distance",
        "description": "\nReturns a distance in meters between [Objects](https://community.bistudio.com/wiki/Object), [Positions](https://community.bistudio.com/wiki/Position) or [Locations](https://community.bistudio.com/wiki/Location).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "param1 **distance** param2",
                "Params": "param1: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\nparam2: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) -  Distance in meters or 1e10 if distance cannot be calculated"
            },
            {
                "Syntax": "location1 **distance** location2",
                "Params": "location1: [Location](https://community.bistudio.com/wiki/Location) or [Array](https://community.bistudio.com/wiki/Array) in format [Position](https://community.bistudio.com/wiki/Position) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\nlocation2: [Location](https://community.bistudio.com/wiki/Location) or [Array](https://community.bistudio.com/wiki/Array) in format [Position](https://community.bistudio.com/wiki/Position) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Distance in meters or 1e10 if distance cannot be calculated"
            }
        ],
        "examples": [
            "\n```sqf\n_meters = player distance _object;\n```\n",
            "\n```sqf\n_meters = player distance [1,2,3];\n```\n",
            "\n```sqf\n_meters = [1,2,3] distance [4,5,6];\n```\n",
            "\n```sqf\n_meters = position player distance nearestLocation [position player, \"hill\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/distance",
        "modifiers": [
            "Global argument"
        ]
    },
    "getelevationoffset": {
        "name": "getElevationOffset",
        "description": "Returns the map elevation offset from [map]/config.cpp.\n\nReturns 0 if there's no elevationOffset defined in the config of the current world.",
        "syntaxArray": [
            {
                "Syntax": "**getElevationOffset**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - elevation offset of the map"
            }
        ],
        "examples": [
            "\n```sqf\n_offset = getElevationOffset;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getElevationOffset",
        "modifiers": []
    },
    "removeallownedmines": {
        "name": "removeAllOwnedMines",
        "description": "Removes ownership of all owned mines/explosive devices of the given unit",
        "syntaxArray": [
            {
                "Syntax": "**removeAllOwnedMines** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllOwnedMines player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllOwnedMines",
        "modifiers": []
    },
    "removecuratoreditableobjects": {
        "name": "removeCuratorEditableObjects",
        "description": "Unregister objects which can be edited by a curator.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj removeCuratorEditableObjects [[objects], removeCrew]",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module\n\nobjects: [Array](https://community.bistudio.com/wiki/Array)\n\nremoveCrew: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule removeCuratorEditableObjects [[cursorTarget], true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeCuratorEditableObjects",
        "modifiers": [
            "Server execution"
        ]
    },
    "setmarkerdir": {
        "name": "setMarkerDir",
        "description": "Sets the orientation of the marker. Angle is in degrees.\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerDir** angle",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\nangle: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerDir 90;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerDir",
        "modifiers": [
            "Global effect"
        ]
    },
    "disablecollisionwith": {
        "name": "disableCollisionWith",
        "description": "Disable collision between vehicles. This command doesn't disable collision between PhysX objects.\n> ",
        "syntaxArray": [
            {
                "Syntax": "object disableCollisionWith object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_veh1, _veh2] remoteExecCall [\"disableCollisionWith\", 0, _veh1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableCollisionWith",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setmarkercolorlocal": {
        "name": "setMarkerColorLocal",
        "description": "Sets marker color for the given marker locally. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: [CfgMarkerColors_Arma_3](https://community.bistudio.com/wiki/CfgMarkerColors_Arma_3)",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerColorLocal** color",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\ncolor: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerColorLocal \"ColorBlack\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerColorLocal",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "params": {
        "name": "params",
        "description": "Parses input argument into array of [private](https://community.bistudio.com/wiki/private) variables. When used without argument, as shown in main syntax, internal variable [_this](https://community.bistudio.com/wiki/Magic_Variables#this), which is usually available inside functions and event handlers, is used as argument.\n\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.54, onscreen errors are displayed for when the input is of the wrong type or size.\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "params [element1, element2,...elementN]",
                "Params": "[element1, element2,...elementN]: [Array](https://community.bistudio.com/wiki/Array) - format array\n\nelementN: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array)\n If [String](https://community.bistudio.com/wiki/String) then it is the name of a [private](https://community.bistudio.com/wiki/private) variable (must begin with underscore _, e.g. \"_myVar\")\n If [Array](https://community.bistudio.com/wiki/Array) then it should be one of the following constructs:\n\n* [variableName, defaultValue]\n\n* [variableName, defaultValue, expectedDataTypes]\n\n* [variableName, defaultValue, expectedDataTypes, expectedArrayCount]\n\n\n*variableName*: [String](https://community.bistudio.com/wiki/String) - name of a [private](https://community.bistudio.com/wiki/private) variable (must begin with underscore _, e.g. \"_myVar\")\n\n*defaultValue*: [Anything](https://community.bistudio.com/wiki/Anything) - default value to return if input element is undefined, of the wrong type or of the wrong size (if array).\n\n*expectedDataTypes* (Optional): [Array](https://community.bistudio.com/wiki/Array) of direct [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types) -  checks if passed value is one of listed Data Types. If not, default value is used instead. Empty array [] means every data type is accepted.\n\n*expectedArrayCount* (Optional): [Number](https://community.bistudio.com/wiki/Number) or [Array](https://community.bistudio.com/wiki/Array)  - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) if error occurred or default value has been used, otherwise [true](https://community.bistudio.com/wiki/true)"
            },
            {
                "Syntax": "argument params [element1, element2,...elementN]",
                "Params": "argument: [Anything](https://community.bistudio.com/wiki/Anything) - A usual array of params is expected. If a non-array argument is passed, it will be converted to 1 element array\n\n[element1, element2,...elementN]: [Array](https://community.bistudio.com/wiki/Array) - format array\n\nelementN: [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array):\n If [String](https://community.bistudio.com/wiki/String) then it is the name of a [private](https://community.bistudio.com/wiki/private) variable (must begin with underscore _, e.g. \"_myVar\")\n If [Array](https://community.bistudio.com/wiki/Array) then it should be one of the following constructs:\n\n* [variableName, defaultValue]\n\n* [variableName, defaultValue, expectedDataTypes]\n\n* [variableName, defaultValue, expectedDataTypes, expectedArrayCount]\n\n\n*variableName*: [String](https://community.bistudio.com/wiki/String) - name of a [private](https://community.bistudio.com/wiki/private) variable (must begin with underscore _, e.g. \"_myVar\")\n\n*defaultValue*: [Anything](https://community.bistudio.com/wiki/Anything) - default value to return if input element is undefined, of the wrong type or of the wrong size (if array).\n\n*expectedDataTypes* (Optional): [Array](https://community.bistudio.com/wiki/Array) of direct [ Data Types](https://community.bistudio.com/wiki/Category:Data_Types) -  checks if passed value is one of listed Data Types. If not, default value is used instead. Empty array [] means every data type is accepted.\n\n*expectedArrayCount* (Optional): [Number](https://community.bistudio.com/wiki/Number) or [Array](https://community.bistudio.com/wiki/Array)  - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false) if error occurred or default value has been used, otherwise [true](https://community.bistudio.com/wiki/true)"
            }
        ],
        "examples": [
            "\n```sqf\n[1, 2, 3] call {\n\tprivate [\"_one\", \"_two\", \"_three\"];\n\t_one = _this select 0;\n\t_two = _this select 1;\n\t_three = _this select 2;\n\t// ...\n};\n\n// Same as above, only using params\n[1, 2, 3] call {\n\tparams [\"_one\", \"_two\", \"_three\"];\n\t// ...\n};\n```\n",
            "\n```sqf\n[123] call {\n\tparams [\"_myvar\"];\n};\n\n// Below would produce the same result as above\n123 call {\n\tparams [\"_myvar\"];\n};\n```\n",
            "\n```sqf\nposition player params [\"\", \"\", \"_z\"];\nif (_z > 10) then {\n\thint \"YOU ARE FLYING!\";\n};\n```\n",
            "\n```sqf\n[1, nil, 2] params [\"_var1\", \"_var2\", \"_var3\"];\n// All 3 variables are made private but only _var1 and _var3 are defined\n\n[1, nil, 2] params [\"_var1\", [\"_var2\", 23], \"_var3\"];\n// All 3 variables are private and defined\n```\n",
            "\n```sqf\n[1, 2] call {\n\tif (!params [\"_var1\", \"_var2\", [\"_var3\", true, [true]]]) exitWith {\n\t\thint str [_var1, _var2, _var3];\n\t};\n};\n// The hint shows [1,2,true]\n// Script exits, default value was used due to missing value\n\n[1, 2, 3] call {\n\tif (!params [\"_var1\", \"_var2\", [\"_var3\", true, [true]]]) exitWith {\n\t\thint str [_var1, _var2, _var3];\n\t};\n};\n// The hint shows [1,2,true]\n// Script exits, default value was used due incorrect value type\n```\n",
            "\n```sqf\n[1, \"ok\", [1, 2, 3]] call {\n\tif (!params [\n\t\t[\"_var1\", 0, [0]],\n\t\t[\"_var2\", \"\", [\"\"]],\n\t\t[\"_var3\", [0,0,0], [[], objNull, 0], [2,3]]\n\t]) exitWith {};\n\thint \"ok\";\n};\n// Passes validation\n\n[1, 2, [3, 4, 5]] call {\n\tif (!params [\"_var1\", \"_var2\", [\"_var3\", [], [[], objNull, 0], 0]]) exitWith {};\n\thint \"ok\";\n};\n// Fails, because passed array is expected to be of 0 length, i.e. empty\n```\n",
            "\n```sqf\nposition player params [\"_x\", \"_y\"]; \nplayer setPos [_x, _y, 100];\n```\n",
            "\n```sqf\n[1, 2, 3, [4, 5, 6]] call {\n\tparams [\"_one\", \"_two\", \"_three\"];\n\t_this select 3 params [\"_four\", \"_five\", \"_six\"];\n};\n```\n",
            "\n```sqf\n{\n\t_x params [\"_group\", \"_index\"];\n\t// ...\n} forEach waypoints group player;\n\nfn_someFnc = {\n\tparams [\"_position\", [\"_direction\", 0], [\"_name\", \"\"]];\n\t// Extract the x, y, and z from \"_position\" array:\n\t_position params [\"_x\", \"_y\", \"_z\"];\n\t// ...\n};\n\n[position player, direction player, name player] call fn_someFnc;\n```\n",
            "\n```sqf\nplayer addEventHandler [\"HitPart\", {\n\t_this select 0 params [\"_target\", \"_shooter\", \"_projectile\"];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/params",
        "modifiers": []
    },
    "formationtask": {
        "name": "formationTask",
        "description": "Return the current task of the unit in the formation. > ",
        "syntaxArray": [
            {
                "Syntax": "formationTask unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String): \"EXCLUDED\", \"MOVE\", \"COVER\", \"LEADER\""
            }
        ],
        "examples": [
            "\n```sqf\n_currentTask = formationTask _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/formationTask",
        "modifiers": []
    },
    "loadgame": {
        "name": "loadGame",
        "description": "Loads game from the last autosave made with [saveGame](https://community.bistudio.com/wiki/saveGame). If no autosave exists, restarts the mission. When used in campaign it will also deduct 1 life, defined in:\n[campaignConfigFile](https://community.bistudio.com/wiki/campaignConfigFile) / \"Campaign\" / <battle> / <mission> / \"lives\"\n> ",
        "syntaxArray": [
            {
                "Syntax": "**loadGame**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nloadGame;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadGame",
        "modifiers": []
    },
    "setunitcombatmode": {
        "name": "setUnitCombatMode",
        "description": "Sets **unit's** combat mode (engagement rules). For AI group combat mode see [setCombatMode](https://community.bistudio.com/wiki/setCombatMode). Mode may be one of the following: \n\n* \"BLUE\" : Never fire, keep formation\n\n* \"GREEN\" : Hold fire, keep formation\n\n* \"WHITE\" : Hold fire, engage at will/loose formation\n\n* \"YELLOW\" : Fire at will, keep formation\n\n* \"RED\" : Fire at will, engage at will/loose formation\nSee [Combat Modes](https://community.bistudio.com/wiki/Combat_Modes) for more information on combat modes.",
        "syntaxArray": [
            {
                "Syntax": "unit setUnitCombatMode mode",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmode: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_unit setUnitCombatMode \"YELLOW\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitCombatMode",
        "modifiers": []
    },
    "setvariable": {
        "name": "setVariable",
        "description": "Set variable to given value in the variable space of given element.\n\n* To remove a variable, set it to [nil](https://community.bistudio.com/wiki/nil) (e.g. \n```sqf\nplayer setVariable [\"varname\", nil];\n```\n).\n\n* When variable is set on [Task](https://community.bistudio.com/wiki/Task), it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM setVariable will not work.\n\n* When variable is set on [Location](https://community.bistudio.com/wiki/Location), it works only with locations created with [createLocation](https://community.bistudio.com/wiki/createLocation).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "varspace setVariable [name, value]",
                "Params": "varspace: [Namespace](https://community.bistudio.com/wiki/Namespace), [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group), [Team Member](https://community.bistudio.com/wiki/Team_Member), [Task](https://community.bistudio.com/wiki/Task), [Location](https://community.bistudio.com/wiki/Location), [Control](https://community.bistudio.com/wiki/Control), [Display](https://community.bistudio.com/wiki/Display) - Variable space in which variable can be set\n> \n\nname: [String](https://community.bistudio.com/wiki/String) - Variable name\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - Variable value\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "varspace setVariable [name, value, public]",
                "Params": "varspace: [missionNamespace](https://community.bistudio.com/wiki/missionNamespace), [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group) - Variable space in which variable can be set\n\nname: [String](https://community.bistudio.com/wiki/String) - Variable name\n\nvalue: [Anything](https://community.bistudio.com/wiki/Anything) - Variable value (if public is [true](https://community.bistudio.com/wiki/true), check [publicVariable](https://community.bistudio.com/wiki/publicVariable) for what types are supported for broadcast)\n\npublic: [Boolean](https://community.bistudio.com/wiki/Boolean), [Number](https://community.bistudio.com/wiki/Number) or [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n* [Boolean](https://community.bistudio.com/wiki/Boolean) - When [true](https://community.bistudio.com/wiki/true), the variable broadcast is global and persistent [GEGlobal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)\n\n\n* [Number](https://community.bistudio.com/wiki/Number) - The variable is set only on the client of given [owner](https://community.bistudio.com/wiki/owner) ([clientOwner](https://community.bistudio.com/wiki/clientOwner)) id, or if id is negative, the variable is set on every client except the given one\n\n\n* [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) - Array of [owner](https://community.bistudio.com/wiki/owner) ([clientOwner](https://community.bistudio.com/wiki/clientOwner)) ids\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myTruck setVariable [\"myPublicVariable\", 123, true];\n```\n",
            "\n```sqf\n_myTruck setVariable [\"myLocalVariable\", [\"321\", _var], false];\n```\n",
            "\n```sqf\nmissionNamespace setVariable [\"myName\", \"KK\"];\nhint myName; // KK\n```\n",
            "Get current value of a variable and if it is undefined, define it and get the defined value:\n```sqf\nprivate _var = missionNamespace getVariable \"varName\";\nif (isNil \"_var\") then\n{\n\tmissionNamespace setVariable [\"varName\", 123]; \n\t_var = 123;\n};\n// _var here will contain current value of the variable varName\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVariable",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "ctrlsetfonth3": {
        "name": "ctrlSetFontH3",
        "description": "Sets H3 font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH3** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontH3 \"TahomaB\""
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH3",
        "modifiers": []
    },
    "mapanimadd": {
        "name": "mapAnimAdd",
        "description": "Add next frame to map animation.",
        "syntaxArray": [
            {
                "Syntax": "mapAnimAdd [time, zoom, position]",
                "Params": "[time, zoom, position]: [Array](https://community.bistudio.com/wiki/Array)\n\ntime: [Number](https://community.bistudio.com/wiki/Number) - animation duration in seconds\n\nzoom: [Number](https://community.bistudio.com/wiki/Number) - range from 0.01 (max. zoom) to 1 (zoomed out)\n\nposition: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmapAnimAdd [1, 0.1, markerPos \"anim1\"];\nmapAnimCommit;\n```\n",
            "\n```sqf\nmapAnimAdd [3, 0.01, player];\nmapAnimCommit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/mapAnimAdd",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "commandwatch": {
        "name": "commandWatch",
        "description": "Orders the unit(s) to watch the given position or target (via the radio). Use [objNull](https://community.bistudio.com/wiki/objNull) as the target to order a unit to stop watching a position/target.",
        "syntaxArray": [
            {
                "Syntax": "units commandWatch position",
                "Params": "units: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "units commandWatch target",
                "Params": "units: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne commandWatch markerPos \"MarkerMoveOne\";\n```\n",
            "\n```sqf\n[s1, s2] commandWatch player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/commandWatch",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "skill": {
        "name": "skill",
        "description": "Returns current skill of a unit, in range between 0 to 1, 1 being the highest level of skill.",
        "syntaxArray": [
            {
                "Syntax": "**skill** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "unitName skill skillName *Since Armed Assault v1.00*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nskillName: [String](https://community.bistudio.com/wiki/String) - Possible values are:\n\n* \"aimingAccuracy\"\n\n* \"aimingShake\"\n\n* \"aimingSpeed\"\n\n* \"endurance\"\n\n* \"spotDistance\"\n\n* \"spotTime\"\n\n* \"courage\"\n\n* \"reloadSpeed\"\n\n* \"commanding\"\n\n* \"general\"\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_skill = skill unit1;\n```\n",
            "\n```sqf\n_myCourage = player skill \"courage\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/skill",
        "modifiers": []
    },
    "ctrlsetpixelprecision": {
        "name": "ctrlSetPixelPrecision",
        "description": "Switches mode of pixel precision (rounding) in a given control interface.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetPixelPrecision mode",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nmode: [Number](https://community.bistudio.com/wiki/Number) or [String](https://community.bistudio.com/wiki/String) - can be one of the following:\n\n* 0 / \"AUTO\" - control position (x, y, w, h) is always rounded to whole pixels (game default)\n\n* 1 / \"ON\" - control position (x, y, w, h) is rounded to whole pixels only when not animating\n\n* 2 / \"OFF\" - control position (x, y, w, h) is always precise, no pixel rounding applies here\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetPixelPrecision 2; // Enables pixel precision of the given control\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetPixelPrecision",
        "modifiers": []
    },
    "boundingbox": {
        "name": "boundingBox",
        "description": " Returns a bounding box of given object in model coordinate space, adjusted according to destruction/animation of an object. This command is rather generous on the size estimation, for more precise coordinates use [boundingBoxReal](https://community.bistudio.com/wiki/boundingBoxReal).\n> ",
        "syntaxArray": [
            {
                "Syntax": "boundingBox object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - An array with the extreme points of the model in format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative), as well as bounding box sphere diameter.Format [[xmin, ymin, zmin], [xmax, ymax, zmax], boundingSphereDiameter]."
            },
            {
                "Syntax": "clippingType boundingBox object *Since Arma 3 v1.92*",
                "Params": "clippingType: [Number](https://community.bistudio.com/wiki/Number) - Clipping type could be:\n\n* 0 - ClipVisual (could significantly reduce the size of bounding boxes on buildings)\n\n* 1 - ClipShadow\n\n* 2 - ClipGeometry\n\n* 3 - ClipGeneral (Default, the same type that is used in main syntax)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - An array with the extreme points of the model bounding box in format [PositionRelative](https://community.bistudio.com/wiki/PositionRelative), as well as bounding box sphere diameter.Format [[xmin, ymin, zmin], [xmax, ymax, zmax], boundingSphereDiameter]."
            }
        ],
        "examples": [
            "\n```sqf\nprivate _box = boundingBox _abrams;\n```\n",
            "\n```sqf\nhint str (0 boundingBox cursorObject);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/boundingBox",
        "modifiers": []
    },
    "setdrawicon": {
        "name": "setDrawIcon",
        "description": "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **setDrawIcon** [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/setDrawIcon",
        "modifiers": []
    },
    "setfatigue": {
        "name": "setFatigue",
        "description": "Sets the person's fatigue, from 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "unit **setFatigue** value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n player setFatigue 1;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFatigue",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "terminate": {
        "name": "terminate",
        "description": "Terminates (aborts) [spawned](https://community.bistudio.com/wiki/spawn) or [execVMed](https://community.bistudio.com/wiki/execVM) script.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**terminate** scriptHandle",
                "Params": "scriptHandle: [Script](https://community.bistudio.com/wiki/Script)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_script = [] execVM \"script.sqf\";\nsleep 5;\nterminate _script;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/terminate",
        "modifiers": []
    },
    "isflashlighton": {
        "name": "isFlashlightOn",
        "description": "Returns true if there is a linked and enabled flashlight on a given weapon.",
        "syntaxArray": [
            {
                "Syntax": "unit **isFlashlightOn** weapon",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nweapon: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer isFlashlightOn (currentWeapon player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isFlashlightOn",
        "modifiers": []
    },
    "cameraeffect": {
        "name": "cameraEffect",
        "description": "Sets the given effect on the given camera. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use [switchCamera](https://community.bistudio.com/wiki/switchCamera) instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need [camCommit](https://community.bistudio.com/wiki/camCommit).\n\nSince Arma 3 v1.74, it is possible to terminate individual r2t source. For example: \n```sqf\ncam cameraEffect [\"terminate\", \"back\", \"rtt1\"]; // would terminate \"rtt1\" r2t source\ncam cameraEffect [\"terminate\", \"back\"]; // would terminate all r2t sources\n```\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **cameraEffect** [effectName, effectPosition, r2tName]",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) - object of type \"camera\"\n\n[effectName, effectPosition, r2tName]: [Array](https://community.bistudio.com/wiki/Array)\n\neffectName: [String](https://community.bistudio.com/wiki/String) - the effect type (defined in main config or [CfgCameraEffects](https://community.bistudio.com/wiki/Description.ext#CfgCameraEffects) >> Array). Defaults are: \"Internal\", \"External\", \"Fixed\", \"FixedWithZoom\", \"Terminate\"\n\neffectPosition: [String](https://community.bistudio.com/wiki/String) - position of the effect. One of: \"TOP\", \"LEFT\", \"RIGHT\", \"FRONT\", \"BACK\", \"LEFT FRONT\", \"RIGHT FRONT\", \"LEFT BACK\", \"RIGHT BACK\", \"LEFT TOP\", \"RIGHT TOP\", \"FRONT TOP\", \"BACK TOP\", \"BOTTOM\". These are usually used with \"Fixed\" and \"FixedWithZoom\" effect types. If not sure which position to use, set it to \"BACK\";\n\nr2tName (Optional): [String](https://community.bistudio.com/wiki/String) - [Render To Texture](https://community.bistudio.com/wiki/Procedural_Textures#Render_To_Texture) surface reference\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_cam cameraEffect [\"internal\", \"BACK\"];\n```\n",
            "\n```sqf\n_cam cameraEffect [\"internal\", \"back\", \"rendersurface\"];\n```\n",
            "\n```sqf\ncam = \"seagull\" camCreate (player modelToWorld [0,0,100]);\ncam cameraEffect [\"FIXED\", \"LEFT TOP\"];\ncam camCommand \"MANUAL ON\";\n```\n",
            "\n```sqf\n_ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscPicture\", -1];\n_ctrl ctrlSetPosition [0.5, 0, 0.5, 0.5];\n_ctrl ctrlSetText \"#(argb,512,512,1)r2t(rtt1,1.0)\";\n_ctrl ctrlCommit 0;\n_cam1 = \"camera\" camCreate (ASLtoAGL eyePos player vectorAdd [0, -10, 0]);\n_cam1 cameraEffect [\"Internal\", \"Back\", \"rtt1\"];\n_cam2 = \"Land_HandyCam_F\" createVehicle [0,0,0];\n_cam2 enableSimulation false;\n_cam2 setPos (ASLtoAGL eyePos player vectorAdd [0, 10, 0]);\n_cam2 setDir (_cam2 getDir player);\nswitchCamera _cam2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cameraEffect",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "allowdammage": {
        "name": "allowDammage",
        "description": "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as [setDamage](https://community.bistudio.com/wiki/setDamage) or [setHit](https://community.bistudio.com/wiki/setHit).",
        "syntaxArray": [
            {
                "Syntax": "object allowDammage allow",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nallow: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer allowDammage false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allowDammage",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "removeallitemswithmagazines": {
        "name": "removeAllItemsWithMagazines",
        "description": "Removes all [itemsWithMagazines](https://community.bistudio.com/wiki/itemsWithMagazines) from the uniform, vest and backpack. Command essentially clears all unit's containers.",
        "syntaxArray": [
            {
                "Syntax": "**removeAllItemsWithMagazines** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllItemsWithMagazines player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllItemsWithMagazines",
        "modifiers": []
    },
    "deletewaypoint": {
        "name": "deleteWaypoint",
        "description": "Removes the specified waypoint.\n> ",
        "syntaxArray": [
            {
                "Syntax": "deleteWaypoint [group, index]",
                "Params": "[group, index]: [Array](https://community.bistudio.com/wiki/Array)\n\ngroup: [Group](https://community.bistudio.com/wiki/Group)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteWaypoint [_grp, 2];\n```\n",
            "Because waypoints get immediately re-indexed when one gets deleted, delete them from last to first:\n\n```sqf\nprivate _group = group _unit;\nfor \"_i\" from count waypoints _group - 1 to 0 step -1 do\n{\n\tdeleteWaypoint [_group, _i];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteWaypoint",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "settitleeffect": {
        "name": "setTitleEffect",
        "description": "Defines the title effect to show on activation via [Type, Effect, Text] where\n\n'Type' can be \n\n* \"NONE\"\n\n* \"OBJECT\"\n\n* 'Text' defines the shown object , a subclass of CfgTitles (see [cutObj](https://community.bistudio.com/wiki/cutObj))\n\n* 'Effect' defines [Title Effect Type](https://community.bistudio.com/wiki/Title_Effect_Type)\n\n* \"RES\"\n\n* 'Text' defines a resource class, a subclass of RscTitles (see [cutRsc](https://community.bistudio.com/wiki/cutRsc))\n\n* 'Effect' defines [Title Effect Type](https://community.bistudio.com/wiki/Title_Effect_Type)\n\n* \"TEXT\"\n\n* 'Text' defines text string to show (see [cutText](https://community.bistudio.com/wiki/cutText))\n\n* 'Effect' defines [Title Effect Type](https://community.bistudio.com/wiki/Title_Effect_Type)\n\nThe title effect does not disappear on deactivation, this should be done manually if required.",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTitleEffect** [type, effect, text]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n[type, effect, text]: [Array](https://community.bistudio.com/wiki/Array) of strings. See above\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "waypoint **setTitleEffect** [type, effect, text]",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n[type, effect, text]: [Array](https://community.bistudio.com/wiki/Array) of strings. See above\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setTitleEffect [\"TEXT\", \"PLAIN DOWN\", \"Hello world.\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTitleEffect",
        "modifiers": []
    },
    "radiochannelinfo": {
        "name": "radioChannelInfo",
        "description": "Obtains custom radio channel's details, set by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate).",
        "syntaxArray": [
            {
                "Syntax": "radioChannelInfo customChannelID",
                "Params": "customChannelID: [Number](https://community.bistudio.com/wiki/Number) - [custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) to format  [colour, label, callSign, units, sentenceType, exists] (see [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate))"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _channelID = radioChannelCreate [[1, 0, 0.5, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false];\nradioChannelInfo _channelID; // returns [[1,0,0.5,0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false, true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioChannelInfo",
        "modifiers": []
    },
    "magazinecargo": {
        "name": "magazineCargo",
        "description": "Get array with magazines from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "**magazineCargo** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Vehicle or ammo box\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Format: [\"MagType1\",\"MagType1\",\"MagType2\"...]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str magazineCargo uniformContainer cursorTarget;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazineCargo",
        "modifiers": []
    },
    "do3denaction": {
        "name": "do3DENAction",
        "description": "Performs given [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) action.\n\nSee the [list of all actions](https://community.bistudio.com/wiki/Eden_Editor:_Actions).",
        "syntaxArray": [
            {
                "Syntax": "**do3DENAction** action",
                "Params": "action: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndo3DENAction \"MissionSave\";// saves the scenario \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/do3DENAction",
        "modifiers": []
    },
    "synchronizewaypoint": {
        "name": "synchronizeWaypoint",
        "description": "Synchronizes the trigger or the waypoint with an array of waypoints.",
        "syntaxArray": [
            {
                "Syntax": "triggerOrWaypoint synchronizeWaypoint waypoints",
                "Params": "triggerOrWaypoint: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array). Can be:\n\n* [Object](https://community.bistudio.com/wiki/Object) - [trigger](https://community.bistudio.com/wiki/trigger)\n\n* [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nwaypoints: [Array](https://community.bistudio.com/wiki/Array) of [Waypoints](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myTrigger synchronizeWaypoint [[_group2, 3]];\n```\n",
            "\n```sqf\n[_group1, 2] synchronizeWaypoint [[_group2, 3]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizeWaypoint",
        "modifiers": []
    },
    "preloadsound": {
        "name": "preloadSound",
        "description": "Makes sure that a sound can start playing without any delay once it is needed. Command works in Arma 3, but might not be implemented in earlier Arma installments.",
        "syntaxArray": [
            {
                "Syntax": "**preloadSound** soundName",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n{\n\twaitUntil {preloadSound _x};\n} forEach getArray (missionConfigFile >> \"CfgSounds\" >> \"sounds\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/preloadSound",
        "modifiers": []
    },
    "tvsettext": {
        "name": "tvSetText",
        "description": "Sets string text to item on given path. IDC means id of parent Tree View.",
        "syntaxArray": [
            {
                "Syntax": "tvSetText [idc, path, text]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvSetText [path, text]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\ntext: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetText [101, [0], \"Test data\"];\n```\n",
            "\n```sqf\n_ctrl tvSetText [[0,0,0], \"Test data\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetText",
        "modifiers": []
    },
    "onbriefingteamswitch": {
        "name": "onBriefingTeamSwitch",
        "description": "Select a sound defined in the [CfgSounds](https://community.bistudio.com/wiki/Description.ext#CfgSounds) of the mission to be played the first time the TeamSwitch tab is selected in the [briefing](https://community.bistudio.com/wiki/Briefing.html).",
        "syntaxArray": [
            {
                "Syntax": "onBriefingTeamSwitch soundName",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonBriefingTeamSwitch \"TeamSwitchVoiceOver\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onBriefingTeamSwitch",
        "modifiers": []
    },
    "deleteat": {
        "name": "deleteAt",
        "description": "Removes array element at the given index and returns removed element (modifies the original array, just like [resize](https://community.bistudio.com/wiki/resize) or [set](https://community.bistudio.com/wiki/set)). Will not issue error when -1 index is passed making it ideal for using with [find](https://community.bistudio.com/wiki/find)(see Example 2) or [findIf](https://community.bistudio.com/wiki/findIf)(see Example 3) command",
        "syntaxArray": [
            {
                "Syntax": "array **deleteAt** index",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - returns the deleted element"
            },
            {
                "Syntax": "hashMap deleteAt key",
                "Params": "hashMap: [HashMap](https://community.bistudio.com/wiki/HashMap)\n\nkey : [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3];\n_rem = _arr deleteAt 1;\nhint str [_rem, _arr]; //[2,[1,3]]\n```\n",
            "\n```sqf\n_arr = [1,2,3];\n_arr deleteAt (_arr find 0); // non existent item\nhint str _arr; // [1,2,3]\n_arr deleteAt (_arr find 2); // existent item\nhint str _arr; // [1,3]\n```\n",
            "\n```sqf\n_arr = [1,2,3];\n_arr deleteAt (_arr findIf {(_x % 5) == 0}); // Remove first number that's divisible by 5\nhint str _arr; // [1,2,3]\n_arr deleteAt (_arr findIf {(_x % 2) == 0}); // Remove first number that's divisible by 2\nhint str _arr; // [1,3]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteAt",
        "modifiers": []
    },
    "playsound3d": {
        "name": "playSound3D",
        "description": "Plays positional sound with given *filename* on every computer on network.",
        "syntaxArray": [
            {
                "Syntax": "playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance, offset]",
                "Params": "filename: [String](https://community.bistudio.com/wiki/String) - See [Arma 3: Sound Files](https://community.bistudio.com/wiki/Arma_3:_Sound_Files) for available file names or [Example 3](https://community.bistudio.com/wiki/playSound3D#Examples) to use mission files\n\nsoundSource: [Object](https://community.bistudio.com/wiki/Object) - The object emitting the sound. If \"sound position\" is specified this parameter is ignored\n\nisInside: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) - [True](https://community.bistudio.com/wiki/true) to simulate a sound played inside a building or similar\n\nsoundPosition: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - (Optional, default [0,0,0]) Position for sound emitter. Will override \"soundSource\" position.\n\nvolume: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1) Sound volume. A value \n```sqf\n>5\n```\n get capped at 5\n\nsoundPitch: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1)\n\n* 1 → Normal\n\n* 0.5 → Darth Vader\n\n* 2 → Chipmunks\n\ndistance: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 0) How far the sound is audible. \n```sqf\n0\n```\n means no maximum distance\n\noffset: [Scalar](https://community.bistudio.com/wiki/Scalar) - (Optional, default 0) Offset in seconds. Same as with [playMusic](https://community.bistudio.com/wiki/playMusic) *Since Arma 3 v2.00*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplaySound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player]\n```\n",
            "\n```sqf\nplaySound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player, false, getPosASL player, 1, 1, 0]\n```\n",
            "\n```sqf\nplaySound3D [getMissionPath \"mySound.ogg\", player]; // to play a mission directory sound\n```\n",
            "Sound file extension must be specified even if a config entry has none:\n\n```sqf\nplaySound3D [\"A3\\Sounds_F\\sfx\\alarm_independent\", player]; // no sound\nplaySound3D [\"A3\\Sounds_F\\sfx\\alarm_independent.wss\", player]; // alarm\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playSound3D",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "sethidebehind": {
        "name": "setHideBehind",
        "description": "Sets the data for hiding. objectWhereHide can be taken using [findCover](https://community.bistudio.com/wiki/findCover). hidePosition can be taken using [getHideFrom](https://community.bistudio.com/wiki/getHideFrom). Command is not functional in Arma 2.\n> ",
        "syntaxArray": [
            {
                "Syntax": "object **setHideBehind** [objectWhereHide, hidePosition]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nobjectWhereHide: [Object](https://community.bistudio.com/wiki/Object)\n\nhidePosition: [Array](https://community.bistudio.com/wiki/Array) - format [getHideFrom](https://community.bistudio.com/wiki/getHideFrom)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/setHideBehind",
        "modifiers": []
    },
    "addweaponglobal": {
        "name": "addWeaponGlobal",
        "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot. This command can link items to respective slots as well, in which case the functionality is identical to [linkItem](https://community.bistudio.com/wiki/linkItem).\n\nTo make sure the added weapon is loaded and ready, add the magazine first.\n> ",
        "syntaxArray": [
            {
                "Syntax": "object **addWeaponGlobal** weapon",
                "Params": "object : [Object](https://community.bistudio.com/wiki/Object) - Unit or vehicle to add the weapon to\n\nweapon: [String](https://community.bistudio.com/wiki/String) - Weapon class name\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n{\n\t_x addMagazineGlobal \"Laserbatteries\";\n\t_x addWeaponGlobal \"Laserdesignator\";\n} forEach allUnits;\n```\n",
            "\n```sqf\n{\n\tif (typeOf _x == \"O_Heli_Attack_02_black_F\") then {\n\t\t_x addMagazineGlobal \"38Rnd_80mm_rockets\";\n\t\t_x addWeaponGlobal \"rockets_Skyfire\";\n\t};\n} forEach vehicles;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponGlobal",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "lnbgetcolumnsposition": {
        "name": "lnbGetColumnsPosition",
        "description": "Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use [lnbSetColumnsPos](https://community.bistudio.com/wiki/lnbSetColumnsPos) to set positions.",
        "syntaxArray": [
            {
                "Syntax": "lnbGetColumnsPosition _ctrl",
                "Params": "_ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbGetColumnsPosition _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbGetColumnsPosition",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "setwaypointhouseposition": {
        "name": "setWaypointHousePosition",
        "description": "For waypoints attached to a house, this defines the target [buildingPos](https://community.bistudio.com/wiki/buildingPos) index.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointHousePosition** pos",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\npos: [Number](https://community.bistudio.com/wiki/Number) - [buildingPos](https://community.bistudio.com/wiki/buildingPos) index\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointHousePosition 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointHousePosition",
        "modifiers": []
    },
    "worldsize": {
        "name": "worldSize",
        "description": "Returns the engine calculated size (terrain side length) of the current world ([BIS_fnc_mapSize](https://community.bistudio.com/wiki/BIS_fnc_mapSize) may return the same value, but is just a simple look up in [ config](https://community.bistudio.com/wiki/configFile)).",
        "syntaxArray": [
            {
                "Syntax": "worldSize",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _size = worldSize;\n```\n",
            "\n```sqf\n// A round marker that should cover the whole map, placed in the center of the map, should have the following radius (a, b)\nprivate _radius = sqrt 2 / 2 * worldSize;\n```\n",
            "\n```sqf\nprivate _axis = worldSize / 2;\nprivate _center = [_axis, _axis , 0];\nprivate _radius= sqrt 2 * _a;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/worldSize",
        "modifiers": []
    },
    "drawlocation": {
        "name": "drawLocation",
        "description": "Used to draw locations in [2D Editor](https://community.bistudio.com/wiki/2D_Editor).",
        "syntaxArray": [
            {
                "Syntax": "control drawLocation location",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nlocation: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/drawLocation",
        "modifiers": []
    },
    "setunitposweak": {
        "name": "setUnitPosWeak",
        "description": "Set unit position rules. This command is the lowest level of priority for setting unit position and to be used in scripted\t\nFSM's. Priorities are:\n\n* Unit pos commanded (from the commanding menu, higher priority).\n\n* Unit pos scripted (from [setUnitPos](https://community.bistudio.com/wiki/setUnitPos) scripting command, medium priority).\n\n* Unit pos FSM / **setUnitPosWeak** (used in the formation FSM, lowest priority).",
        "syntaxArray": [
            {
                "Syntax": "unit **setUnitPosWeak** mode",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmode: [String](https://community.bistudio.com/wiki/String) - Can be:\n\n* \"DOWN\" - Unit goes prone and stays prone.\n\n* \"UP\" - Unit stands and stays standing.\n\n* \"MIDDLE\" - Kneel Position. [](https://community.bistudio.com/wiki/Category:Armed_Assault)[1.04](https://community.bistudio.com/wiki/Category:Introduced_with_Armed_Assault_version_1.04) - Unit will not kneel if it is unarmed\n\n* \"AUTO\" - Unit chooses mode according to circumstances.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier disableAI \"FSM\";\n_soldier setUnitPosWeak \"DOWN\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitPosWeak",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "isburning": {
        "name": "isBurning",
        "description": "Returns whether the unit is burning.\nThis returns true only if unit is damaged by nearby fire, it does **not** check whether a fireplace is burning, use [inflamed](https://community.bistudio.com/wiki/inflamed) command for that.",
        "syntaxArray": [
            {
                "Syntax": "**isBurning** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isBurning player) then { player groupChat \"I'm burning!!\"; }\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isBurning",
        "modifiers": []
    },
    "setforcegeneratorrtd": {
        "name": "setForceGeneratorRTD",
        "description": "\n > ",
        "syntaxArray": [
            {
                "Syntax": "helicopter setForceGeneratorRTD ????",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n?????: [Number](https://community.bistudio.com/wiki/Number) - ????\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopter setForceGeneratorRTD ????;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setForceGeneratorRTD",
        "modifiers": []
    },
    "setusermfdvalue": {
        "name": "setUserMFDValue",
        "description": "When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry\n\nwhich could control color of the MFD. See Example 2-3-4 on how to set different colors of the Blackfoot MFD",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setUserMFDValue** [index, value]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - an vehicle with MFD\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - index of custom MFD user actions\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - value which should custom source return in MFD\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n BIS_Plane setUserMFDValue [0,1]; // user0 in MFD will return 1\n```\n",
            "Set MFD Red:\n```sqf\nBlackfoot setUserMFDValue [0, 1]; // \"user0\" - 1\nBlackfoot setUserMFDValue [1, 0]; // \"user1\" - 0\nBlackfoot setUserMFDValue [2, 0]; // \"user2\" - 0\nBlackfoot setUserMFDValue [3, 1]; // \"user3\" - 1\n```\n",
            "Set MFD pale Blue:\n```sqf\nBlackfoot setUserMFDValue [0, 0]; // \"user0\" - 0\nBlackfoot setUserMFDValue [1, 0]; // \"user1\" - 0\nBlackfoot setUserMFDValue [2, 1]; // \"user2\" - 1\nBlackfoot setUserMFDValue [3, 0.1]; // \"user3\" - 0.1\n```\n",
            "Hide MFD:\n```sqf\nBlackfoot setUserMFDValue [3, 0]; // \"user3\" - 0\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUserMFDValue",
        "modifiers": []
    },
    "safezonexabs": {
        "name": "safeZoneXAbs",
        "description": "Returns absolute [safeZoneX](https://community.bistudio.com/wiki/safeZoneX) including all monitors. \n[](https://community.bistudio.com/wiki/File:UI_12-3.jpg)",
        "syntaxArray": [
            {
                "Syntax": "safeZoneXAbs",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_szX = safeZoneXAbs;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/safeZoneXAbs",
        "modifiers": []
    },
    "removemusiceventhandler": {
        "name": "removeMusicEventHandler",
        "description": "Removes specified music track event handler.",
        "syntaxArray": [
            {
                "Syntax": "removeMusicEventHandler [type, id]",
                "Params": "[type, id]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - \"MusicStart\" or \"MusicStop\"\n\nid: [Number](https://community.bistudio.com/wiki/Number) - event handler id\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveMusicEventHandler [\"MusicStart\", 12];\n```\n",
            "\n```sqf\nremoveMusicEventHandler [\"MusicStop\", 12];\n```\n",
            "\n```sqf\nhnd_stop = addMusicEventHandler [\"MusicStop\",{}];\nremoveMusicEventHandler [\"MusicStop\",hnd_stop];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMusicEventHandler",
        "modifiers": []
    },
    "ropeattachedto": {
        "name": "ropeAttachedTo",
        "description": "Returns the ropes owner, the transport to which other entities are attached with [ropes](https://community.bistudio.com/wiki/ropes). This command is the opposite of [ropeAttachedObjects](https://community.bistudio.com/wiki/ropeAttachedObjects).\n[](https://community.bistudio.com/wiki/File:ropeAttachedTo.jpg)",
        "syntaxArray": [
            {
                "Syntax": "ropeAttachedTo cargo",
                "Params": "cargo: [Object](https://community.bistudio.com/wiki/Object) - entity attached to the end of a rope\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - a transport from which the ropes originate, the ropes owner"
            }
        ],
        "examples": [
            "\n```sqf\n_heli = ropeAttachedTo veh1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeAttachedTo",
        "modifiers": []
    },
    "enginesrpmrtd": {
        "name": "enginesRpmRTD",
        "description": "Returns all engines RPM.> ",
        "syntaxArray": [
            {
                "Syntax": "enginesRpmRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nenginesRpmRTD RTD_helicopter params [\"_RPMEngine1\",\"_RPMEngine2\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enginesRpmRTD",
        "modifiers": []
    },
    "ctrlmapanimdone": {
        "name": "ctrlMapAnimDone",
        "description": "Checks whether the map animation has finished.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **ctrlMapAnimDone** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isDone = ctrlMapAnimDone _ctrlMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapAnimDone",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getitemcargo": {
        "name": "getItemCargo",
        "description": "Returns all items names and count from ammo box (or any general weapon holder container).",
        "syntaxArray": [
            {
                "Syntax": "**getItemCargo** box",
                "Params": "box: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of Arrays - Format: [[\"5ItemsType1\",\"10ItemsType2\"],[5,10]]"
            }
        ],
        "examples": [
            "\n```sqf\nhint str getItemCargo cursorTarget;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getItemCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "enablefatigue": {
        "name": "enableFatigue",
        "description": "Enables/Disables the person's fatigue.",
        "syntaxArray": [
            {
                "Syntax": "unit **enableFatigue** enable",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer enableFatigue false;\n```\n",
            "\n```sqf\n{ _x enableFatigue false; } forEach (units group player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableFatigue",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "dialog": {
        "name": "dialog",
        "description": "Tests whether any user dialog is open.",
        "syntaxArray": [
            {
                "Syntax": "dialog",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if a dialog is open, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nif (!dialog) then { createDialog \"Dialog1\"; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dialog",
        "modifiers": []
    },
    "editobject": {
        "name": "editObject",
        "description": "Show the edit object dialog for the given object. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **editObject** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/editObject",
        "modifiers": []
    },
    "asltoagl": {
        "name": "ASLToAGL",
        "description": "Converts position from [PositionASL](https://community.bistudio.com/wiki/PositionASL) to [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)",
        "syntaxArray": [
            {
                "Syntax": "**ASLToAGL** posASL",
                "Params": "posASL: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - position to convert\n\n",
                "Return": "[PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerPosAGL = ASLToAGL getPosASL player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ASLToAGL",
        "modifiers": []
    },
    "airplanethrottle": {
        "name": "airplaneThrottle",
        "description": "Returns throttle position. Works only on player's vehicle.",
        "syntaxArray": [
            {
                "Syntax": "**airplaneThrottle** airplane",
                "Params": "airplane: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_trottle = airplaneThrottle myPlane \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/airplaneThrottle",
        "modifiers": []
    },
    "handgunmagazine": {
        "name": "handgunMagazine",
        "description": "Collects all loaded [magazines](https://community.bistudio.com/wiki/magazines) from all [handgunWeapon](https://community.bistudio.com/wiki/handgunWeapon) muzzles and returns them in [Array](https://community.bistudio.com/wiki/Array), otherwise it returns []. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "handgunMagazine unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str handgunMagazine player; // [\"16Rnd_9x21_Mag\"]\n```\n",
            "\n```sqf\n_array =handgunMagazine player;\nif (count _array > 0) then {\n\thint (\"Handgun is loaded with \" + (_array select 0) + \"!\");\n} else {\n\tif (handgunWeapon player != \"\") then {\n\t\thint \"Handgun is not loaded!\";\n\t} else {\n\t\thint \"Player doesn't have a handgun!\";\n\t};\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/handgunMagazine",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlsetmodel": {
        "name": "ctrlSetModel",
        "description": "Sets model for 3D-[Dialogs](https://community.bistudio.com/wiki/Arma:_GUI_Configuration).",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetModel** model",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\nmodel : [String](https://community.bistudio.com/wiki/String) - model path\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetModel",
        "modifiers": []
    },
    "getterrainheightasl": {
        "name": "getTerrainHeightASL",
        "description": "Returns the terrain height above the sea for the given position.",
        "syntaxArray": [
            {
                "Syntax": "getTerrainHeightASL position",
                "Params": "position: [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_height = getTerrainHeightASL (position player);\n```\n",
            "\n```sqf\n_height = getTerrainHeightASL [5213,3245];\n```\n",
            "\n```sqf\n_seadepth = abs (getTerrainHeightASL getPos player); // sea depth at players position;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getTerrainHeightASL",
        "modifiers": []
    },
    "getmarkertype": {
        "name": "getMarkerType",
        "description": "Gets type of marker. See [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers) for a list of standard markers.",
        "syntaxArray": [
            {
                "Syntax": "**getMarkerType** markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Marker class name. See [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers)."
            }
        ],
        "examples": [
            "\n```sqf\nif (getMarkerType \"Marker1\" == \"Empty\") then {hint \"Marker1 is not an icon!\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMarkerType",
        "modifiers": [
            "Global argument"
        ]
    },
    "shownwarrant": {
        "name": "shownWarrant",
        "description": "Check if player has ID card enabled. Obsolete command.",
        "syntaxArray": [
            {
                "Syntax": "shownWarrant",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"Your ID is %1\", [\"off\", \"on\"] select shownWarrant];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownWarrant",
        "modifiers": []
    },
    "ctcursel": {
        "name": "ctCurSel",
        "description": "Returns index of the selected row. Will take only rows, but not headers into account.",
        "syntaxArray": [
            {
                "Syntax": "**ctCurSel** ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_curSel = ctCurSel _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctCurSel",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "getunitloadout": {
        "name": "getUnitLoadout",
        "description": "Returns a **[Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)** with all assigned items, weapons, containers and their stored items. When [String](https://community.bistudio.com/wiki/String) for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If [Config](https://community.bistudio.com/wiki/Config) is given, it will search given config (including [ mission config](https://community.bistudio.com/wiki/missionConfigFile)) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "getUnitLoadout unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)"
            },
            {
                "Syntax": "getUnitLoadout [unit, fullMagazines]",
                "Params": "[unit, fullMagazines]: [Array](https://community.bistudio.com/wiki/Array)\n\nunit: [Object](https://community.bistudio.com/wiki/Object)\n\nfullMagazines: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to top up used magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)"
            },
            {
                "Syntax": "getUnitLoadout name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) - class name (see description)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)"
            },
            {
                "Syntax": "getUnitLoadout config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config) - config class (see description)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [Unit Loadout Array](https://community.bistudio.com/wiki/Unit_Loadout_Array)"
            }
        ],
        "examples": [
            "\n```sqf\ngetUnitLoadout player;\n```\n",
            "\n```sqf\ngetUnitLoadout [player, true];\n```\n",
            "\n```sqf\ngetUnitLoadout \"B_Soldier_F\";\n```\n",
            "\n```sqf\ngetUnitLoadout (configFile >> \"CfgVehicles\" >> \"B_Soldier_F\");\n```\n",
            "\n```sqf\ngetUnitLoadout (missionConfigFile >> \"MyLoadout\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getUnitLoadout",
        "modifiers": []
    },
    "ctrlanimatemodel": {
        "name": "ctrlAnimateModel",
        "description": "Process an animation of 3D [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration). Command uses name defined by source property and works similar like [animateSource](https://community.bistudio.com/wiki/animateSource) command.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlAnimateModel** [source, phase]",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\n[source, phase]: [Array](https://community.bistudio.com/wiki/Array)\n\nsource: [String](https://community.bistudio.com/wiki/String) - common source\n\nphase: [Number](https://community.bistudio.com/wiki/Number) - wanted animation phase\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control3D ctrlAnimateModel [\"Close\",1];\n```\n",
            "\n```sqf\n_ctrlLaptop ctrlAnimateModel [\"Lid\",1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAnimateModel",
        "modifiers": []
    },
    "tvsetpicturecolor": {
        "name": "tvSetPictureColor",
        "description": "Sets the colour of the picture (set via [tvSetPicture](https://community.bistudio.com/wiki/tvSetPicture)) under the specified tree view path.",
        "syntaxArray": [
            {
                "Syntax": "tvSetPictureColor [idc, path, color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - IDC of the tree view control.\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing path numbers.\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl tvSetPictureColor [path, color]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Array containing path numbers.\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetPictureColor [101, [0,2], [1,0,1,1]];\n```\n",
            "\n```sqf\n_tree tvSetPictureColor [[0,2], [1,0,1,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureColor",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "missiletarget": {
        "name": "missileTarget",
        "description": "Returns a guided missile's target.",
        "syntaxArray": [
            {
                "Syntax": "missileTarget munition",
                "Params": "munition: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nmissileTarget missile1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missileTarget",
        "modifiers": []
    },
    "str": {
        "name": "str",
        "description": "Converts any value into a string by placing \" and \" around the argument. When used on object, object debug name is returned.Since Arma 3 v1.64 this command will correctly escape all \" inside a string:\n\n\n```sqf\n// Before the fix:\nhint str \"string \"\" string\"; // \"string \" string\" <- invalid string\ncall compile str \"string \"\" string\"; // ERROR\n```\n\n\n\n```sqf\n// After the fix:\nhint str \"string \"\" string\"; // \"string \"\" string\" <- valid string\ncall compile str \"string \"\" string\"; // OK\n\n```\n",
        "syntaxArray": [
            {
                "Syntax": "**str** value",
                "Params": "value: [Anything](https://community.bistudio.com/wiki/Anything)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_s = str (2 + 3);// The value of _s is the string \"5\"\n```\n",
            "\n```sqf\na = [];\nac = 0;\nwhile {ac < 5} do\n{\n\tac = count a;\n\ta set [ac, format [\"Index %1\", ac]];\n};\nhintSilent str a;// Hints all of [\"Index 0\",\"Index 1\",\"Index 2\",\"Index 3\",\"Index 4\"] including brackets, quotes and commas\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/str",
        "modifiers": []
    },
    "endloadingscreen": {
        "name": "endLoadingScreen",
        "description": "Finishes loading screen started by [startLoadingScreen](https://community.bistudio.com/wiki/startLoadingScreen).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "endLoadingScreen",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nstartLoadingScreen [\"Loading My Mission\"];\n// code\nprogressLoadingScreen 0.5;\n// code\nendLoadingScreen;\n```\n",
            "\n```sqf\n// this structure prevents error-prone or lengthy code to miss endLoadingScreen.\nprivate _maxTime = diag_tickTime + 30; // max 30s of loading\n\nstartLoadingScreen [\"Loading\"];\nprivate _handle = [] spawn {\n\t// code that may crash or take too long\n};\n\nwaitUntil { sleep .01; scriptDone _handle || diag_tickTime > _maxTime };\nendLoadingScreen;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/endLoadingScreen",
        "modifiers": [
            "Local effect"
        ]
    },
    "librarydisclaimers": {
        "name": "libraryDisclaimers",
        "description": "Returns the library disclaimers.",
        "syntaxArray": [
            {
                "Syntax": "**libraryDisclaimers**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [array1] - *only has one element at the moment, but this number might grow*"
            }
        ],
        "examples": [
            "\n```sqf\nhint str libraryDisclaimers;  // In Arma 2: Operation Arrowhead 1.62.95208\n```\n\n\n[\"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"]"
        ],
        "Url": "https://community.bistudio.com/wiki/libraryDisclaimers",
        "modifiers": []
    },
    "evalobjectargument": {
        "name": "evalObjectArgument",
        "description": "Return argument in mission editor of a given object. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **evalObjectArgument** [object, argument]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n[object, argument]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\n// returns string \"[1009.0351, 1319.4928]\"\n(findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"]\n\n// returns array [1009.0351, 1319.4928]\n(findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/evalObjectArgument",
        "modifiers": []
    },
    "enablecollisionwith": {
        "name": "enableCollisionWith",
        "description": "Cancels the effects of [disableCollisionWith](https://community.bistudio.com/wiki/disableCollisionWith).",
        "syntaxArray": [
            {
                "Syntax": "vehicle **enableCollisionWith** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_veh1, _veh2] remoteExecCall [\"enableCollisionWith\", 0, _veh1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableCollisionWith",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "environmentenabled": {
        "name": "environmentEnabled",
        "description": "Returns status of [enableEnvironment](https://community.bistudio.com/wiki/enableEnvironment) command",
        "syntaxArray": [
            {
                "Syntax": "**environmentEnabled**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [ambientLife, ambientSound] where:\n\n* ambientLife: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n* ambientSound: [Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_enabled = environmentEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/environmentEnabled",
        "modifiers": []
    },
    "selectweaponturret": {
        "name": "selectWeaponTurret",
        "description": "Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63.136864 this command supports both weapon name and muzzle name.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **selectWeaponTurret** [weapon, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[weapon, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\nweapon: [String](https://community.bistudio.com/wiki/String) - weapon class name or muzzle class name\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nMBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/selectWeaponTurret",
        "modifiers": []
    },
    "deletecenter": {
        "name": "deleteCenter",
        "description": "In a nutshell, this command removes gaming [Side](https://community.bistudio.com/wiki/Side) (see [createCenter](https://community.bistudio.com/wiki/createCenter)). If a side has >0 [Groups](https://community.bistudio.com/wiki/Group) it cannot be deleted. Center can only be created for: [east](https://community.bistudio.com/wiki/east), [west](https://community.bistudio.com/wiki/west), [resistance](https://community.bistudio.com/wiki/resistance), [civilian](https://community.bistudio.com/wiki/civilian) and [sideLogic](https://community.bistudio.com/wiki/sideLogic), therefore only centers from the mentioned sides can be deleted.\n**Old description:** Destroys the AI center of the given side.",
        "syntaxArray": [
            {
                "Syntax": "**deleteCenter** side",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteCenter east\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteCenter",
        "modifiers": [
            "Global effect"
        ]
    },
    "setvehiclereceiveremotetargets": {
        "name": "setVehicleReceiveRemoteTargets",
        "description": "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the [Side](https://community.bistudio.com/wiki/Side) center.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **setVehicleReceiveRemoteTargets** bool",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(vehicle player) setVehicleReceiveRemoteTargets true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleReceiveRemoteTargets",
        "modifiers": []
    },
    "format": {
        "name": "format",
        "description": "Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use [parseNumber](https://community.bistudio.com/wiki/parseNumber).\n> ",
        "syntaxArray": [
            {
                "Syntax": "format [formatString, var1, var2, ...]",
                "Params": "formatString: [String](https://community.bistudio.com/wiki/String) - a string containing text and/or references to the variables listed below in the array. The references appear in the form of %1, %2 etc.\n\nvar1: [Anything](https://community.bistudio.com/wiki/Anything) - variable referenced by %1\n\nvar2: [Anything](https://community.bistudio.com/wiki/Anything) - variable referenced by %2\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - The full string (up to 8kb, see above) is returned."
            }
        ],
        "examples": [
            "\n```sqf\nformat [\"Player:%1, player's side:%2\", player, side player]; // returns \"Player:WEST 1-1-A:1 (Username), player's side:WEST\"\n```\n",
            "\n```sqf\nplayer addEventHandler [\"HandleDamage\", {\n\thint format [\"You just sustained %1%2 damage!\", ceil ((_this select 2) * 100), \"%\"];\n}]; // Shows \"You just sustained 20% damage!\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/format",
        "modifiers": []
    },
    "show3dicons": {
        "name": "show3DIcons",
        "description": "Toggle the drawing of 3D icons.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **show3DIcons** bool",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/show3DIcons",
        "modifiers": []
    },
    "in": {
        "name": "in",
        "description": "Checks whether value is in array, unit is in vehicle, position is inside location or ANSI string is part of other ANSI string. If Unicode support is desired, see [forceUnicode](https://community.bistudio.com/wiki/forceUnicode).\n> ",
        "syntaxArray": [
            {
                "Syntax": "value in array",
                "Params": "value: [Anything](https://community.bistudio.com/wiki/Anything) - Any value (cannot  match [Array](https://community.bistudio.com/wiki/Array) before Arma 3)\n\narray: [Array](https://community.bistudio.com/wiki/Array) - Array of values\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "unit in vehicle",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Entity person\n\nvehicle: [Object](https://community.bistudio.com/wiki/Object) - Entity vehicle\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "position in location *Since Arma 3*",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - Format [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\nlocation: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "needle in haystack *Since Arma 3 v1.96*",
                "Params": "needle: [String](https://community.bistudio.com/wiki/String) - String to search **for**\n\nhaystack: [String](https://community.bistudio.com/wiki/String) - String to search **in**\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "key in hashMap",
                "Params": "key: [HashMapKey](https://community.bistudio.com/wiki/HashMapKey)\n\nhashMap : [HashMap](https://community.bistudio.com/wiki/HashMap)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n1 in [0, 1, 2]; // true\n```\n",
            "\n```sqf\nprivate _myArray = [\"Aaa\", \"AAa\", \"AAA\"];\n\n\"aaa\" in _myArray; // false\n\"AAa\" in _myArray; // true\n\n// case-insensitive alternatives\n_myArray findIf { _x == \"aaa\"; } != -1;\t\t// true\n\n({\n\tif (_x == \"aaa\") exitWith { _forEachIndex };\n\t-1\n} forEach _myArray) != -1;\t\t\t\t\t// true, less performant but valid before findIf\n\n{ if (_x == \"aaa\") exitWith {1} } count _myArray > 0;\t// true\n\n{ _x == \"aaa\"; } count _myArray > 0;\t\t// true, worst performance\n\t\t\t\t\t\t\t\t\t\t\t// only option available in OFP\n```\n",
            "\n```sqf\n[1,2,3] in [[1,2,3], [4,5,6]]; // true - Arma 3 only\n```\n",
            "\n```sqf\n_isInCar = player in car;\n```\n",
            "\n```sqf\n_isInside = [1000,2000,0] in myLocation;\n```\n",
            "\n```sqf\n_isInString = \"foo\" in \"foobar\"; // true\n_isInString = \"Foo\" in \"foobar\"; // false\n```\n",
            "\n```sqf\nprivate _onFoot = _unit in _unit;\n// vehicle _unit == _unit works\n// isNull objectParent _unit is even faster\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/in",
        "modifiers": []
    },
    "playableunits": {
        "name": "playableUnits",
        "description": "Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides [east](https://community.bistudio.com/wiki/east)/[opfor](https://community.bistudio.com/wiki/opfor), [west](https://community.bistudio.com/wiki/west)/[blufor](https://community.bistudio.com/wiki/blufor), [resistance](https://community.bistudio.com/wiki/resistance)/[independent](https://community.bistudio.com/wiki/independent) and [civilian](https://community.bistudio.com/wiki/civilian) only. Does not contain units of [sideLogic](https://community.bistudio.com/wiki/sideLogic).\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "playableUnits",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n{ _x groupChat \"I'm a playable unit.\"; } forEach playableUnits;\n```\n",
            "\n```sqf\n_playableInGroup = units group player arrayIntersect playableUnits;\n```\n",
            "\n```sqf\n_nonPlayableInGroup = units group player - playableUnits;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playableUnits",
        "modifiers": []
    },
    "allplayers": {
        "name": "allPlayers",
        "description": "Returns a list of all units controlled by *connected clients* - human players including dead players, but also [Headless Clients](https://community.bistudio.com/wiki/Arma_3_Headless_Client).\nUse [BIS_fnc_listPlayers](https://community.bistudio.com/wiki/BIS_fnc_listPlayers) or see **[Example 1](https://community.bistudio.com/wiki/allPlayers#Examples)** to get human players only.",
        "syntaxArray": [
            {
                "Syntax": "allPlayers",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "Get only human players:\n\n```sqf\nprivate _headlessClients = entities \"HeadlessClient_F\";\nprivate _humanPlayers = allPlayers - _headlessClients;\n```\n",
            "\n```sqf\n{\n\tsystemChat format [\n\t\t\"Player %1 is %2\", \n\t\tname _x, \n\t\t[\"dead\", \"alive\"] select alive _x\n\t];\n} forEach allPlayers;\n```\n",
            "\n```sqf\nprivate _bluNums = west countSide allPlayers;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allPlayers",
        "modifiers": []
    },
    "lnbpictureright": {
        "name": "lnbPictureRight",
        "description": "Returns the right picture of given row. The *column* parameter does not matter.",
        "syntaxArray": [
            {
                "Syntax": "lnbPictureRight [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Path of image"
            },
            {
                "Syntax": "ctrl lnbPictureRight [row, column]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Path of image"
            }
        ],
        "examples": [
            "\n```sqf\n_path = _control lnbPictureRight [0, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbPictureRight",
        "modifiers": []
    },
    "hideselection": {
        "name": "hideSelection",
        "description": "Hides or enables the given selection for the [ simple object](https://community.bistudio.com/wiki/createSimpleObject)",
        "syntaxArray": [
            {
                "Syntax": "object **hideSelection** [selection, hidden]",
                "Params": "selection: [Object](https://community.bistudio.com/wiki/Object) - simple object\n\n[selection, hidden]: [Array](https://community.bistudio.com/wiki/Array)\n\nselection: [String](https://community.bistudio.com/wiki/String) - selection name\n\nhidden: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to hide, [false](https://community.bistudio.com/wiki/false) to show\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_simpleObject hideSelection [\"some_selection\", true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hideSelection",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "currentmuzzle": {
        "name": "currentMuzzle",
        "description": "Returns current muzzle of unit's weapon.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**currentMuzzle** gunner",
                "Params": "gunner: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - current muzzle"
            }
        ],
        "examples": [
            "\n```sqf\n_muzzle = currentMuzzle player;\n```\n",
            "\n```sqf\n_muzzle = currentMuzzle (gunner (vehicle player));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentMuzzle",
        "modifiers": []
    },
    "runinitscript": {
        "name": "runInitScript",
        "description": "Fades in mission screen and re-executes init.sqf and init.sqs scripts. In [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) the code inside the \"Init\" mission attribute is executed.",
        "syntaxArray": [
            {
                "Syntax": "**runInitScript**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nrunInitScript;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/runInitScript",
        "modifiers": [
            "Local effect"
        ]
    },
    "campreparefovrange": {
        "name": "camPrepareFovRange",
        "description": "Prepares the camera field of view range for auto zooming.\n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareFovRange** fovRange",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nfovRange: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareFovRange [0.1, 0.5]   \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareFovRange",
        "modifiers": []
    },
    "formationmembers": {
        "name": "formationMembers",
        "description": "Return list of units (drivers) in the formation.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) = **formationMembers** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "_drivers=FormationMembers _person"
        ],
        "Url": "https://community.bistudio.com/wiki/formationMembers",
        "modifiers": []
    },
    "connectterminaltouav": {
        "name": "connectTerminalToUAV",
        "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot.\nIf UAV is already connected to another terminal, this new connection will fail.",
        "syntaxArray": [
            {
                "Syntax": "person **connectTerminalToUAV** uav",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nuav: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\nbool = player connectTerminalToUAV uav1;\n```\n",
            "\n```sqf\nplayer connectTerminalToUAV objNull; //disconnect\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/connectTerminalToUAV",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "joinassilent": {
        "name": "joinAsSilent",
        "description": "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.",
        "syntaxArray": [
            {
                "Syntax": "unit **joinAsSilent** [group, id]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[group, id]: [Array](https://community.bistudio.com/wiki/Array)\n\ngroup: [Group](https://community.bistudio.com/wiki/Group)\n\nid: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer joinAsSilent [_group, 4];\n```\n",
            "To get the position id: \n```sqf\ngetUnitPositionId = {\n\tprivate [\"_vvn\", \"_str\"];\n\t_vvn = vehicleVarName _this;\n\t_this setVehicleVarName \"\";\n\t_str = str _this;\n\t_this setVehicleVarName _vvn;\n\tparseNumber (_str select [(_str find \":\") + 1])\n};\nplayer joinAsSilent [createGroup west, 5];\n_id = player call getUnitPositionId;\nhint str _id; //5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/joinAsSilent",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "diag_fpsmin": {
        "name": "diag_fpsMin",
        "description": "Returns minimal framerate. Calculated from the longest frame over last 16 frames.",
        "syntaxArray": [
            {
                "Syntax": "**diag_fpsMin**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_minfps = diag_fpsMin;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_fpsMin",
        "modifiers": []
    },
    "getaimingcoef": {
        "name": "getAimingCoef",
        "description": "Get current aiming coefficient (higher ~ less precise, default is 1)",
        "syntaxArray": [
            {
                "Syntax": "getAimingCoef unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "_coef = getAimingCoef [player](https://community.bistudio.com/wiki/player)"
        ],
        "Url": "https://community.bistudio.com/wiki/getAimingCoef",
        "modifiers": []
    },
    "currentzeroing": {
        "name": "currentZeroing",
        "description": "Returns current zeroing.",
        "syntaxArray": [
            {
                "Syntax": "currentZeroing object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Unit or vehicle\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "object currentZeroing [weaponClass, muzzleClass] *since Arma 3 v2.03*",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Unit or vehicle\n\nweaponClass: [String](https://community.bistudio.com/wiki/String) - Class name of weapon\n\nmuzzleClass: [String](https://community.bistudio.com/wiki/String)  -  (Optional, default currently active muzzle or first that is found) - Class name of the muzzle\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format:\n\n* 0: [Number](https://community.bistudio.com/wiki/Number) - Distance\n\n* 1: [Number](https://community.bistudio.com/wiki/Number) - zeroingIndex\n\n* 0 ≙ 50 m\n\n* 1 ≙ 100 m\n\n* 2 ≙ 150 m\n\n* ..."
            }
        ],
        "examples": [
            "\n```sqf\nprivate _zeroing = currentZeroing player;\n```\n",
            "\n```sqf\n(player currentZeroing [\"arifle_MX_GL_F\", \"GL_3GL_F\"]) params [\"_distance\", \"_zeroingIndex\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentZeroing",
        "modifiers": []
    },
    "unassignitem": {
        "name": "unassignItem",
        "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.",
        "syntaxArray": [
            {
                "Syntax": "unit **unassignItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_bluforUnit unassignItem \"NVGoggles\";\n_bluforUnit removeItem \"NVGoggles\";\n_opforUnit unassignItem \"NVGoggles_OPFOR\";\n_opforUnit removeItem \"NVGoggles_OPFOR\";\n_independentUnit unassignItem \"NVGoggles_INDEP\";\n_independentUnit removeItem \"NVGoggles_INDEP\";\n```\n",
            "\n```sqf\n{\n   _x unassignItem hmd _x; // Unassign (not remove) NVGs from all units. The class name of the NVG is not needed\n} forEach allUnits;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unassignItem",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "say3d": {
        "name": "say3D",
        "description": "Unit or object will say given sound in 3D Space.\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\nCompare this with [say2D](https://community.bistudio.com/wiki/say2D) which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\nSound is defined in [\"CfgSounds\"](https://community.bistudio.com/wiki/Description.ext#CfgSounds) of the [Description.ext](https://community.bistudio.com/wiki/Description.ext) or main config.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "from say3D sound",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nsound: [String](https://community.bistudio.com/wiki/String) - classname of the sound to be played. Defined in [CfgSounds](https://community.bistudio.com/wiki/Description.ext#CfgSounds) including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the sound source (was [Nothing](https://community.bistudio.com/wiki/Nothing) before Arma 3 v2.00)"
            },
            {
                "Syntax": "from say3D [sound, maxDistance, pitch, isSpeech, offset]",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nsound: [String](https://community.bistudio.com/wiki/String) - classname of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\nmaxDistance: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 100) max distance in meter at which the sound can be heard.\n\npitch: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1) pitch of the sound.\n\nisSpeech: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true): play as speech, [fadeSpeech](https://community.bistudio.com/wiki/fadeSpeech) applies; [false](https://community.bistudio.com/wiki/false): play as sound, [fadeSound](https://community.bistudio.com/wiki/fadeSound) applies.\nIf [true](https://community.bistudio.com/wiki/true), filters are not applied to it (i.e. house or vehicle interior one). Available since 1.91.145286\n\noffset: [Scalar](https://community.bistudio.com/wiki/Scalar) - (Optional, default 0) Offset in seconds. Same with [playMusic](https://community.bistudio.com/wiki/playMusic). *Since Arma 3 v1.99.146480*\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the sound source (was [Nothing](https://community.bistudio.com/wiki/Nothing) before Arma 3 v2.00)"
            },
            {
                "Syntax": "[from, to] say3D sound",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nto: [Object](https://community.bistudio.com/wiki/Object) - target\n\nsound: [String](https://community.bistudio.com/wiki/String) - classname of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the sound source (was [Nothing](https://community.bistudio.com/wiki/Nothing) before Arma 3 v2.00)"
            },
            {
                "Syntax": "[from, to] say3D [sound, maxDistance, pitch, isSpeech, offset]",
                "Params": "from: [Object](https://community.bistudio.com/wiki/Object) - origin of the sound\n\nto: [Object](https://community.bistudio.com/wiki/Object) - target\n\nsound: [String](https://community.bistudio.com/wiki/String) - classname of the sound to be played. Defined in CfgSounds including [Description.ext](https://community.bistudio.com/wiki/Description.ext)\n\nmaxDistance: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 100) max distance in meter at which the sound can be heard.\n\npitch: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1) pitch of the sound.\n\nisSpeech: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) = play as speech ([fadeSpeech](https://community.bistudio.com/wiki/fadeSpeech) applies), [false](https://community.bistudio.com/wiki/false) = play as sound, [fadeSound](https://community.bistudio.com/wiki/fadeSound) applies.\nIf [true](https://community.bistudio.com/wiki/true), filters are not applied to it (i.e. house or vehicle interior one). *Since Arma 3 v1.99.145286*\n\noffset: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 0) Offset in seconds. Same with [playMusic](https://community.bistudio.com/wiki/playMusic). *Since Arma 3 v1.99.146480*\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the sound source (was [Nothing](https://community.bistudio.com/wiki/Nothing) before Arma 3 v2.00)"
            }
        ],
        "examples": [
            "\n```sqf\nhelicopter1 say3D \"Fortunateson\"\n```\n",
            "Workaround for dead bodies:\n\n```sqf\nprivate _dummy = \"#particlesource\" createVehicleLocal ASLToAGL getPosWorld _corpse;\n_dummy say3D \"whatever\";\n_dummy spawn {\n\tsleep 5; // at least the length of your sound\n\tdeleteVehicle _this;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/say3D",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "animate": {
        "name": "animate",
        "description": "Activates given object animation. Animation is defined in CfgModels [animations](https://community.bistudio.com/wiki/Model_Config#Animations) class. Class names listed in CfgVehicles [AnimationSources](https://community.bistudio.com/wiki/Model_Config#AnimationSources) bound to \"Proxy\" controller can also be animated with animate command (see [Arma 3: createVehicle/vehicles](https://community.bistudio.com/wiki/Arma_3:_createVehicle/vehicles)).\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "object animate [animationName, phase, speed]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nanimationName: [String](https://community.bistudio.com/wiki/String) - Name of the animation. This is the class-name of the animation defined in the config.\n\nphase: [Number](https://community.bistudio.com/wiki/Number) - Range 0 (start point of the animation) to 1 (end point of the animation). The speed, in which the animation is processed, is defined in the addon's config.cpp and cannot be changed during running missions.\n\nspeed: [Boolean](https://community.bistudio.com/wiki/Boolean) or [Number](https://community.bistudio.com/wiki/Number) - When [true](https://community.bistudio.com/wiki/true) animation is instant. Since Arma 3 v1.66 [Number](https://community.bistudio.com/wiki/Number) > 0 is treated as config speed value multiplier\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_building animate [\"maindoor\", 1];\n```\n",
            "\n```sqf\n_building animate [\"Door_1_rot\", 1, true];\n```\n",
            "Create Offroad and add flashing police light bar:\n```sqf\noffroad = \"C_Offroad_01_F\" createVehicle (player getRelPos [5, 0]);\noffroad animate [\"HidePolice\", 0];\noffroad animate [\"BeaconsStart\", 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animate",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "unitaimpositionvisual": {
        "name": "unitAimPositionVisual",
        "description": "Returns the position on the unit other units can aim at in render scope. See also [aimPos](https://community.bistudio.com/wiki/aimPos), [unitAimPosition](https://community.bistudio.com/wiki/unitAimPosition).",
        "syntaxArray": [
            {
                "Syntax": "**unitAimPositionVisual** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "\n```sqf\nunitAimPositionVisual player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unitAimPositionVisual",
        "modifiers": [
            "Global argument"
        ]
    },
    "infopanelcomponentenabled": {
        "name": "infoPanelComponentEnabled",
        "description": "Controls availability of component to given object info panel.",
        "syntaxArray": [
            {
                "Syntax": "unit infoPanelComponentEnabled [panelID, componentClassOrType]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\npanelID: [String](https://community.bistudio.com/wiki/String) - \"left\" or \"right\" can be used as panel names\n\ncomponentClassOrType: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if component was successfully enabled on the panel, [false](https://community.bistudio.com/wiki/false) otherwise (e.g. component is not available for the object)"
            },
            {
                "Syntax": "[unit, turretPath] infoPanelComponentEnabled [panelID, componentClassOrType]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the concerned vehicle\n\nturretPath: [Array](https://community.bistudio.com/wiki/Array) - turret index\n\npanelID: [String](https://community.bistudio.com/wiki/String) - \"left\" or \"right\" can be used as panel names\n\ncomponentClassOrType: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n// returns true if specific component \"SensorDisplay\" is enabled on player vehicle's left panel\n_state = [vehicle player, [-1]] infoPanelComponentEnabled [\"VehicleSystemsDisplayManagerComponentLeft\", \"SensorDisplay\"];\n```\n",
            "\n```sqf\n// returns true if all \"SensorsDisplayComponent\" components are enabled on player vehicle's left panel, otherwise returns false\n_state = [vehicle player, [-1]] infoPanelComponentEnabled [\"VehicleSystemsDisplayManagerComponentLeft\", \"SensorsDisplayComponent\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/infoPanelComponentEnabled",
        "modifiers": []
    },
    "iskeyactive": {
        "name": "isKeyActive",
        "description": "Checks whether the given key is active in the current user profile.\n\nSee keys, keysLimit and doneKeys in the [description.ext](https://community.bistudio.com/wiki/Description.ext#keys) file of the missions.",
        "syntaxArray": [
            {
                "Syntax": "**isKeyActive** keyName",
                "Params": "keyName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_active = isKeyActive \"Mission04Key\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isKeyActive",
        "modifiers": []
    },
    "preloadobject": {
        "name": "preloadObject",
        "description": "Preloads all textures, materials and proxies needed to render given object. Works with both class names and objects. Returns true once all data is loaded and ready.\n> ",
        "syntaxArray": [
            {
                "Syntax": "distance **preloadObject** object",
                "Params": "distance: [Number](https://community.bistudio.com/wiki/Number) -  distance at which preload the object\n\nobject: [Object](https://community.bistudio.com/wiki/Object) - existing object\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) when preload is finished"
            },
            {
                "Syntax": "distance **preloadObject** classname",
                "Params": "distance: [Number](https://community.bistudio.com/wiki/Number)  -  distance at which preload the object\n\nclassname: [String](https://community.bistudio.com/wiki/String) - classname of the object\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) when preload is finished"
            }
        ],
        "examples": [
            "\n```sqf\n[] spawn \n{\n\twaitUntil {10 preloadObject \"SoldierW\"};\n\thint \"Preload finished\";\n};\n```\n",
            "\n```sqf\n[] spawn \n{\n\twaitUntil {10 preloadObject leader player};\n\thint \"Preload finished\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/preloadObject",
        "modifiers": []
    },
    "gethidefrom": {
        "name": "getHideFrom",
        "description": "Returns the [Position](https://community.bistudio.com/wiki/Position) where object believes the enemy to be. If there is no direct line of sight between the object and the enemy, this position is extrapolated based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.",
        "syntaxArray": [
            {
                "Syntax": "object **getHideFrom** enemy",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nenemy: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [ASLToATL](https://community.bistudio.com/wiki/ASLToATL) representation of the believed [aimPos](https://community.bistudio.com/wiki/aimPos) of the enemy object"
            }
        ],
        "examples": [
            "\n```sqf\n_pos = player getHideFrom _enemy;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getHideFrom",
        "modifiers": []
    },
    "getmass": {
        "name": "getMass",
        "description": "Returns mass of a PhysX object.",
        "syntaxArray": [
            {
                "Syntax": "**getMass** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_mass = getMass _myCar\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMass",
        "modifiers": [
            "Global argument"
        ]
    },
    "addmpeventhandler": {
        "name": "addMPEventHandler",
        "description": "Adds a multiplayer event handler (EH) to the given object and returns EH handle. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "object addMPEventHandler [type, expression]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Object to monitor\n\ntype: [String](https://community.bistudio.com/wiki/String) - Event handler name\n\nexpression: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code) - Expression to execute.If EH has some data to return upon event (e.g. the \"MPKilled\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable.\n> \n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Eventhandler index"
            }
        ],
        "examples": [
            "\n```sqf\n_index = player addMPEventHandler [\"MPKilled\", { _this execVM \"playerKilled.sqf\"; }]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addMPEventHandler",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "nearobjectsready": {
        "name": "nearObjectsReady",
        "description": "Check whether all data are loaded to nearObjects will return in reasonable time.",
        "syntaxArray": [
            {
                "Syntax": "position **nearObjectsReady** radius",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\nradius: [Number](https://community.bistudio.com/wiki/Number) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_twnpos nearObjectsReady 500;//from ALICE\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearObjectsReady",
        "modifiers": []
    },
    "onhcgroupselectionchanged": {
        "name": "onHCGroupSelectionChanged",
        "description": "Defines an action performed when [high command](https://community.bistudio.com/wiki/High_Command) group selection has been changed.\n\nCommand receives 2 variables:\n\n* _group: [Group](https://community.bistudio.com/wiki/Group) - last selected/deselected group\n\n* _isSelected: [Boolean](https://community.bistudio.com/wiki/Boolean) - new selection state of the specific group\n\nThe code is executed on every [hc](https://community.bistudio.com/wiki/High_Command) group selection change until it is\n\n* removed via \n```sqf\nonHCGroupSelectionChanged \"\";\n```\n or \n```sqf\nonHCGroupSelectionChanged {};\n```\n\n\n* or replaced by \n```sqf\nonHCGroupSelectionChanged \"SomeOtherCommand(s)\";\n```\n or \n```sqf\nonHCGroupSelectionChanged {SomeOtherCommand(s)};\n```\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**onHCGroupSelectionChanged** command",
                "Params": "command: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonHCGroupSelectionChanged {\n  if (_isSelected) then {\n    hint format [\"Group %1 has been selected.\", _group];\n  } else {\n    hint format [\"Group %1 has been deselected.\", _group];\n  };\n};\n```\n",
            "\n```sqf\nonHCGroupSelectionChanged \"player globalChat 'HC group selection has been changed.';\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onHCGroupSelectionChanged",
        "modifiers": []
    },
    "limitspeed": {
        "name": "limitSpeed",
        "description": "Limit speed of given vehicle or person to given value (in km/h).",
        "syntaxArray": [
            {
                "Syntax": "objectName **limitSpeed** speed",
                "Params": "objectName: [Object](https://community.bistudio.com/wiki/Object)\n\nspeed: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n// Adjust \"speedLimit\" variable to change limited speed. (A3 1.24 we don't need loop for a continus effect, limitSpeed alone is enough.)\n_this setVariable [\"speedLimit\", 200];\n_nul = _this spawn {\n\twhile {canMove _this} do {\n\t\t_this limitSpeed (_this getVariable \"speedLimit\");\n\t\tsleep 0.1;\n\t};\n};\n```\n",
            "\n```sqf\n[\"SpeedObserver\",\"onEachFrame\",{hintSilent format [\"%1\",speed vehicle MyVehicle]},[]] call BIS_fnc_addStackedEventHandler;\nsleep 10;\nMyVehicle limitSpeed 5; // watch the effect of this command.\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/limitSpeed",
        "modifiers": []
    },
    "setmarkerbrushlocal": {
        "name": "setMarkerBrushLocal",
        "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\n*brush* can be:\n\n* \"Solid\"\n\n* \"SolidFull\" (A3 only)\n\n* \"Horizontal\"\n\n* \"Vertical\"\n\n* \"Grid\"\n\n* \"FDiagonal\"\n\n* \"BDiagonal\"\n\n* \"DiagGrid\"\n\n* \"Cross\"\n\n* \"Border\" (A2/A3 only)\n\n* \"SolidBorder\" (OA/A3 only)",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerBrushLocal** brush",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\nbrush: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerBrushLocal \"DiagGrid\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerBrushLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "dynamicsimulationsystemenabled": {
        "name": "dynamicSimulationSystemEnabled",
        "description": "A getter for [enableDynamicSimulationSystem](https://community.bistudio.com/wiki/enableDynamicSimulationSystem)",
        "syntaxArray": [
            {
                "Syntax": "**dynamicSimulationSystemEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str dynamicSimulationSystemEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dynamicSimulationSystemEnabled",
        "modifiers": []
    },
    "ctrltextsecondary": {
        "name": "ctrlTextSecondary",
        "description": "Returns the secondary text of a text control.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlTextSecondary** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - Text control\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Secondary text of given control"
            }
        ],
        "examples": [
            "\n```sqf\n_secondaryText = ctrlTextSecondary _ctrlText;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlTextSecondary",
        "modifiers": []
    },
    "groupfromnetid": {
        "name": "groupFromNetId",
        "description": "Get group with given unique ID. For objects use [objectFromNetId](https://community.bistudio.com/wiki/objectFromNetId). As this command is MP only, you can use [BIS_fnc_groupFromNetId](https://community.bistudio.com/wiki/BIS_fnc_groupFromNetId), which extends the use to SP as well.",
        "syntaxArray": [
            {
                "Syntax": "**groupFromNetId** id",
                "Params": "id: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Group](https://community.bistudio.com/wiki/Group)"
            }
        ],
        "examples": [
            "\n```sqf\n_group = groupFromNetId \"4:45\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/groupFromNetId",
        "modifiers": []
    },
    "set3denlayer": {
        "name": "set3DENLayer",
        "description": "Set layer for [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity).",
        "syntaxArray": [
            {
                "Syntax": "entity **set3DENLayer** layerID",
                "Params": "entity: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity)\n\nlayerID: [Number](https://community.bistudio.com/wiki/Number) - layer ID as returned by [add3DENLayer](https://community.bistudio.com/wiki/add3DENLayer) command\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the entity was moved succesfully"
            }
        ],
        "examples": [
            "\n```sqf\n_myLayer = -1 add3DENLayer \"CTRG\";\nplayer set3DENLayer _myLayer;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENLayer",
        "modifiers": []
    },
    "menusetpicture": {
        "name": "menuSetPicture",
        "description": "Sets new picture into menu entry on given path. The picture will be replaced by a tick if the entry was set to checkable with [menuSetCheck](https://community.bistudio.com/wiki/menuSetCheck).",
        "syntaxArray": [
            {
                "Syntax": "menuSetPicture [idc, path, picture]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\npicture: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetPicture [path, picture]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\npicture: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetPicture [[0, 1], \"\\a3\\modules_f\\data\\iconunlock_ca.paa\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetPicture",
        "modifiers": []
    },
    "setmarkertype": {
        "name": "setMarkerType",
        "description": "Sets marker type. Marker type is a class name from [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers).\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName setMarkerType type",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\ntype: [String](https://community.bistudio.com/wiki/String) - See [CfgMarkers](https://community.bistudio.com/wiki/CfgMarkers)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"MarkerOne\" setMarkerType \"Warning\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerType",
        "modifiers": [
            "Global effect"
        ]
    },
    "vest": {
        "name": "vest",
        "description": "Returns name of vest.",
        "syntaxArray": [
            {
                "Syntax": "**vest** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_myVest = vest player;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vest",
        "modifiers": [
            "Global argument"
        ]
    },
    "getassignedcuratorunit": {
        "name": "getAssignedCuratorUnit",
        "description": "Returns unit assigned to curator logic.",
        "syntaxArray": [
            {
                "Syntax": "**getAssignedCuratorUnit** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_curatorUnit = getAssignedCuratorUnit (allCurators select 0);\n_curatorUnit joinAs [createGroup civilian, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAssignedCuratorUnit",
        "modifiers": []
    },
    "checkaifeature": {
        "name": "checkAIFeature",
        "description": "Checks if the given AI feature is currently enabled. Feature may be one of:\n\n* \"AwareFormationSoft\"\n\n* \"CombatFormationSoft\"\n\n* [disableAI](https://community.bistudio.com/wiki/disableAI)/[enableAI](https://community.bistudio.com/wiki/enableAI) AI skill *Since Arma 3 v1.95.145843*",
        "syntaxArray": [
            {
                "Syntax": "**checkAIFeature** feature",
                "Params": "feature: [String](https://community.bistudio.com/wiki/String) (see description)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if is enabled"
            },
            {
                "Syntax": "unit **checkAIFeature** feature *Since Arma 3 v1.95.145843*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit to test AI feature for\n\nfeature: [String](https://community.bistudio.com/wiki/String) - [disableAI](https://community.bistudio.com/wiki/disableAI) / [enableAI](https://community.bistudio.com/wiki/enableAI) feature\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if is enabled"
            }
        ],
        "examples": [
            "\n```sqf\n_featureUsed = checkAIFeature \"AwareFormationSoft\";\n```\n",
            "\n```sqf\n_autotargetOn = bob checkAIFeature \"AUTOTARGET\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/checkAIFeature",
        "modifiers": []
    },
    "removeallmissioneventhandlers": {
        "name": "removeAllMissionEventHandlers",
        "description": "Removes all mission event handlers of the given type which were added by [addMissionEventHandler](https://community.bistudio.com/wiki/addMissionEventHandler).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "removeAllMissionEventHandlers type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllMissionEventHandlers \"Loaded\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllMissionEventHandlers",
        "modifiers": [
            "Local effect"
        ]
    },
    "scriptdone": {
        "name": "scriptDone",
        "description": "Check if a script is finished running using the [Script_(Handle)](https://community.bistudio.com/wiki/Script_(Handle)) returned by [execVM](https://community.bistudio.com/wiki/execVM) or [spawn](https://community.bistudio.com/wiki/spawn).",
        "syntaxArray": [
            {
                "Syntax": "**scriptDone** handle",
                "Params": "handle: [Script (Handle)](https://community.bistudio.com/wiki/Script_(Handle)) - handle returned by [spawn](https://community.bistudio.com/wiki/spawn) or [execVM](https://community.bistudio.com/wiki/execVM)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "SQS Syntax:\n```sqf\n@scriptDone _Handle\n```\n",
            "SQF Syntax:\n```sqf\nscript_handler = [parameters] execVM \"scriptname.sqf\";\nwaitUntil { scriptDone script_handler };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/scriptDone",
        "modifiers": []
    },
    "lbtextright": {
        "name": "lbTextRight",
        "description": "Returns the shown right text in the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog).",
        "syntaxArray": [
            {
                "Syntax": "**lbTextRight** [idc, index]",
                "Params": "[idc, index]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control **lbTextRight** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_text = lbTextRight [101, 0];\n```\n",
            "\n```sqf\n_text = _control lbTextRight 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbTextRight",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "requiredversion": {
        "name": "requiredVersion",
        "description": "Check if version of application is available. If the current version is older than the required one, a warning message is shown and [false](https://community.bistudio.com/wiki/false) is returned. \n\nVersion of format **Major.Minor**, e.g. **1.30**",
        "syntaxArray": [
            {
                "Syntax": "**requiredVersion** version",
                "Params": "version: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif !(requiredVersion \"1.09\") exitWith {};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/requiredVersion",
        "modifiers": []
    },
    "getbleedingremaining": {
        "name": "getBleedingRemaining",
        "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use [setBleedingRemaining](https://community.bistudio.com/wiki/setBleedingRemaining) to set different remaining time.",
        "syntaxArray": [
            {
                "Syntax": "**getBleedingRemaining** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_bleedingRemaining = getBleedingRemaining _unit;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getBleedingRemaining",
        "modifiers": []
    },
    "onbriefingnotes": {
        "name": "onBriefingNotes",
        "description": "Select a sound declared in the [Description.ext](https://community.bistudio.com/wiki/Description.ext#Sound) of the mission to be played the first time the [Notes tab](https://community.bistudio.com/wiki/Briefing.html#Notes) is selected in the [briefing](https://community.bistudio.com/wiki/Briefing.html).",
        "syntaxArray": [
            {
                "Syntax": "**onBriefingNotes** soundName",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonBriefingNotes \"NotesVoiceOver\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onBriefingNotes",
        "modifiers": []
    },
    "getartilleryeta": {
        "name": "getArtilleryETA",
        "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.",
        "syntaxArray": [
            {
                "Syntax": "unit **getArtilleryETA** [targetPosition, magazineType]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - artillery unit\n\ntargetPosition: [Position](https://community.bistudio.com/wiki/Position) - position of the target\n\nmagazineType: [String](https://community.bistudio.com/wiki/String) - type of magazine used\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];\n```\n",
            "\n```sqf\n_mortar getArtilleryETA [position _target, currentMagazine _mortar];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getArtilleryETA",
        "modifiers": [
            "Global argument"
        ]
    },
    "ctrlsetautoscrolldelay": {
        "name": "ctrlSetAutoScrollDelay",
        "description": "Sets number of second before auto-scroll starts/rewinds. Setter for [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay).\n\nAutorscroll is available for [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) and [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) types of controls only. Autoscroll will wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. [ctrlAutoScrollSpeed](https://community.bistudio.com/wiki/ctrlAutoScrollSpeed) defines the speed with which scrollbar is scrolled. If [ctrlAutoScrollRewind](https://community.bistudio.com/wiki/ctrlAutoScrollRewind) is [true](https://community.bistudio.com/wiki/true), the control will fade out, immediately rewind to the top, then fade in, wait [ctrlAutoScrollDelay](https://community.bistudio.com/wiki/ctrlAutoScrollDelay) seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetAutoScrollDelay** delay",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) or [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\ndelay: [Number](https://community.bistudio.com/wiki/Number) - seconds to wait before scroll and/or rewind\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlGroup ctrlSetAutoScrollDelay 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetAutoScrollDelay",
        "modifiers": []
    },
    "addtorque": {
        "name": "addTorque",
        "description": "Applies torque (rotation momentum) to the [ center of mass](https://community.bistudio.com/wiki/getCenterOfMass) of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by [vectorModelToWorld](https://community.bistudio.com/wiki/vectorModelToWorld) or [vectorModelToWorldVisual](https://community.bistudio.com/wiki/vectorModelToWorldVisual) command. The torque applied as impulse. Diagram below explain which way the object would rotate.  For more information see [NVIDIA docs](https://community.bistudio.comhttp://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/apireference/files/classPxRigidBody.html#acb04ffc816d45afff2d04e93d7446e79) \n[](https://community.bistudio.com/wiki/File:addTorque_correct.jpg)\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "object **addTorque** torque",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - PhysX object\n\ntorque: [Array](https://community.bistudio.com/wiki/Array) - world vector in format [x,y,z]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Apply torque [1000,0,0] to object not factoring object positioning:\n\n```sqf\n_wheel addTorque [1000,0,0];\n```\n",
            "Apply torque [1000,0,0] relative to object:\n\n```sqf\n_wheel addTorque (_wheel vectorModelToWorld [1000,0,0]);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addTorque",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "getpylonmagazines": {
        "name": "getPylonMagazines",
        "description": "Return array of magazines on pylons",
        "syntaxArray": [
            {
                "Syntax": "**getPylonMagazines** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) (magazine classnames)"
            }
        ],
        "examples": [
            "\n```sqf\ngetPylonMagazines (vehicle player) \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPylonMagazines",
        "modifiers": []
    },
    "sliderrange": {
        "name": "sliderRange",
        "description": "Returns limits of [CT_SLIDER](https://community.bistudio.com/wiki/CT_SLIDER) or [CT_XSLIDER](https://community.bistudio.com/wiki/CT_XSLIDER).",
        "syntaxArray": [
            {
                "Syntax": "**sliderRange** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Idc of the control\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format  [minValue, maxValue]"
            },
            {
                "Syntax": "**sliderRange** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format  [minValue, maxValue]"
            }
        ],
        "examples": [
            "\n```sqf\nsliderRange _ctrlSlider params [\"_minValue\", \"_maxValue\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sliderRange",
        "modifiers": []
    },
    "removediaryrecord": {
        "name": "removeDiaryRecord",
        "description": "Remove a log record.",
        "syntaxArray": [
            {
                "Syntax": "unit removeDiaryRecord [subject, diaryRecord]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nsubject: [String](https://community.bistudio.com/wiki/String)\n\ndiaryRecord: [Diary Record](https://community.bistudio.com/wiki/Diary_Record)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _diaryRecord = player createDiaryRecord [\"diary\", [\"Subject\", \"Text\"]];\n// ...\nplayer removeDiaryRecord [\"Diary\", _diaryRecord];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeDiaryRecord",
        "modifiers": [
            "Local effect"
        ]
    },
    "sunormoon": {
        "name": "sunOrMoon",
        "description": "\n```sqf\n12:00 - 1\n(...) - 1\n18:39 - 0.911201\n18:42 - 0.576303\n18:45 - 0.240862\n18:48 - 0\n(...) - 0\n06:00 - 0.0695308\n06:03 - 0.404731\n06:06 - 0.739519\n06:09 - 1\n(...) - 1\n```\n\nReturns the sun to moon transition state in range 0..1.\nThe return value is either 0 or 1 most of the time, the in-between values only returned during a few minutes in the morning and in the evening, depending on the [date](https://community.bistudio.com/wiki/date), and could be similar to shown here:\n\n",
        "syntaxArray": [
            {
                "Syntax": "sunOrMoon",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _transitionState = sunOrMoon;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sunOrMoon",
        "modifiers": []
    },
    "loadidentity": {
        "name": "loadIdentity",
        "description": "Loads person's identity from [Objects.sav](https://community.bistudio.com/wiki/Objects.sav) file in campaign directory (from entry name).",
        "syntaxArray": [
            {
                "Syntax": "unit **loadIdentity** name",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if successfull, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_ok = player loadIdentity \"playerIdentity\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadIdentity",
        "modifiers": []
    },
    "find": {
        "name": "find",
        "description": "Searches for an array element within array or a ANSI string within a ANSI string.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "array find element",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - Array to search in\n\nelement: [Anything](https://community.bistudio.com/wiki/Anything) - Array element to find\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Zero based position of the first array element that matches x, -1 if not found"
            },
            {
                "Syntax": "string find substring [](https://community.bistudio.com/wiki/Category:Arma_3)[1.28](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.28)",
                "Params": "string: [String](https://community.bistudio.com/wiki/String) - String to search in\n\nsubstring: [String](https://community.bistudio.com/wiki/String) - Substring to find\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Zero based position of the first sequence of characters that matches substring, -1 if not found"
            },
            {
                "Syntax": "string find [substring, indexStart] [](https://community.bistudio.com/wiki/Category:Arma_3)[2.02](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_2.02)",
                "Params": "string: [String](https://community.bistudio.com/wiki/String) - String to search in\n\nsubstring: [String](https://community.bistudio.com/wiki/String) - Substring to find\n\nindexStart: [Number](https://community.bistudio.com/wiki/Number) - Zero based index which defines where find starts from\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Zero based position of the first sequence of characters that matches substring, -1 if not found"
            }
        ],
        "examples": [
            "\n```sqf\n[\"Apples\", \"Oranges\", \"Pears\"] find \"Oranges\"; // returns 1\n```\n",
            "\n```sqf\n[1, [2], [[3]]] find [[3]]; // returns 2 - does not work in OFP\n```\n",
            "\n```sqf\nif (magazines player find \"Strela\" != -1) then { hint \"You've got Strela!\"; };\n```\n",
            "\n```sqf\nhint str (\"japa is the man!\" find \"the man!\"); // returns 8\n```\n",
            "\n```sqf\n\"abc\" find \"\"; // returns 0\n```\n",
            "\n```sqf\n\"abcdefghijklmnopqrstuvxyz\" find [\"z\", 20];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/find",
        "modifiers": []
    },
    "parsetext": {
        "name": "parseText",
        "description": "Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from [Stringtable.xml](https://community.bistudio.com/wiki/Stringtable.xml).\nA detailed explanation of all formatting possibilities can be found at [Structured Text](https://community.bistudio.com/wiki/Structured_Text).",
        "syntaxArray": [
            {
                "Syntax": "parseText text",
                "Params": "text: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _Stxt = parseText \"First line<img image='data\\isniper.paa'/><br/>Second line\";\n```\n",
            "\n```sqf\nhintSilent parseText format[\"<t size='1.25' font='Zeppelin33' color='#ff0000'>%1 lives remaining.</t>\", 12];\n```\n",
            "\n```sqf\nprivate _clickableLink = parseText \"<a href='http://arma3.com'>A3</a>\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/parseText",
        "modifiers": []
    },
    "ctrlmapworldtoscreen": {
        "name": "ctrlMapWorldToScreen",
        "description": "Converts world coordinates into map screen coordinates. This command is identical to [posWorldToScreen](https://community.bistudio.com/wiki/posWorldToScreen).",
        "syntaxArray": [
            {
                "Syntax": "control ctrlMapWorldToScreen position",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - map control\n\nposition : [Array](https://community.bistudio.com/wiki/Array) - world position in format [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - screen coordinates in format [x, y]"
            }
        ],
        "examples": [
            "\n```sqf\n_screenCoord = _control ctrlMapWorldToScreen _worldCoord;\n```\n",
            "\n```sqf\n_screenCoord = _control ctrlMapWorldToScreen position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapWorldToScreen",
        "modifiers": []
    },
    "setlightdaylight": {
        "name": "setLightDayLight",
        "description": "Sets if light can be used during the day.",
        "syntaxArray": [
            {
                "Syntax": "light setLightDayLight bool",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightDayLight true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightDayLight",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlsetfade": {
        "name": "ctrlSetFade",
        "description": "Sets wanted transparency for control animation. Requires [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) to commit changes. To hide or show a control instantly, use [ctrlShow](https://community.bistudio.com/wiki/ctrlShow).",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFade** fade",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfade: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFade 1;\n_control ctrlCommit 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFade",
        "modifiers": []
    },
    "ctrlremovealleventhandlers": {
        "name": "ctrlRemoveAllEventHandlers",
        "description": "Remove all event handlers from the given control.",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlRemoveAllEventHandlers** handlerName",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) -\n\nhandlerName: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlButton ctrlRemoveAllEventHandlers \"ButtonDown\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlRemoveAllEventHandlers",
        "modifiers": []
    },
    "forceatpositionrtd": {
        "name": "forceAtPositionRTD",
        "description": "Adds force generator to world.\n> ",
        "syntaxArray": [
            {
                "Syntax": "forceAtPositionRTD position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - Position where to force generator is created.\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Force index"
            }
        ],
        "examples": [
            "\n```sqf\nforceAtPositionRTD;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceAtPositionRTD",
        "modifiers": []
    },
    "isautotest": {
        "name": "isAutotest",
        "description": "Returns true if game was started with autotest parameter",
        "syntaxArray": [
            {
                "Syntax": "isAutotest",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n _bool = isAutotest \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAutotest",
        "modifiers": []
    },
    "remove3deneventhandler": {
        "name": "remove3DENEventHandler",
        "description": "Removes Eden Editor event handler of given type and ID.\n\nSee the list of all [Eden Editor Event Handlers](https://community.bistudio.com/wiki/Arma_3:_Event_Handlers:_Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**remove3DENEventHandler** [type,id]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - name of event handler\n\nid: [Number](https://community.bistudio.com/wiki/Number) - ID of event handler, returned by [add3DENEventHandler](https://community.bistudio.com/wiki/add3DENEventHandler)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\neh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}];\nremove3DENEventHandler [\"onUndo\",eh];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/remove3DENEventHandler",
        "modifiers": []
    },
    "fillweaponsfrompool": {
        "name": "fillWeaponsFromPool",
        "description": "Adds magazines from the campaign pool to the given unit, depending on his weapons. Available in campaigns only.",
        "syntaxArray": [
            {
                "Syntax": "**fillWeaponsFromPool** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nfillWeaponsFromPool _soldier;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fillWeaponsFromPool",
        "modifiers": []
    },
    "canunloadincombat": {
        "name": "canUnloadInCombat",
        "description": "Check if cargo of this vehicle want to get out when in combat.",
        "syntaxArray": [
            {
                "Syntax": "**canUnloadInCombat** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (canUnloadInCombat _vehicle) then {...};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canUnloadInCombat",
        "modifiers": []
    },
    "add3denlayer": {
        "name": "add3DENLayer",
        "description": "Add an editing layer in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "parentLayerID **add3DENLayer** name",
                "Params": "parentLayerID : [Number](https://community.bistudio.com/wiki/Number) - ID of the parent layer. Use -1 to create the layer to root. No layer will be created when the ID doesn't point to a layer.\n\nname: [String](https://community.bistudio.com/wiki/String) - layer display name\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - layer ID"
            }
        ],
        "examples": [
            "\n```sqf\n_myLayer = -1 add3DENLayer \"Enemy Base\";\n_myLayerFort = _myLayer add3DENLayer \"Fortifications\";\n_myLayerPatrol = _myLayer add3DENLayer \"Patrols\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/add3DENLayer",
        "modifiers": []
    },
    "forcemap": {
        "name": "forceMap",
        "description": "Opens non-interactive main map in background that overrides user screen. \n> \nTo force open interactive map use [openMap](https://community.bistudio.com/wiki/openMap) command.",
        "syntaxArray": [
            {
                "Syntax": "**forceMap** show",
                "Params": "show: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nforceMap true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceMap",
        "modifiers": [
            "Local effect"
        ]
    },
    "getenvsoundcontroller": {
        "name": "getEnvSoundController",
        "description": "Returns value of the specified controller.",
        "syntaxArray": [
            {
                "Syntax": "position **getEnvSoundController** controller",
                "Params": "position: [Position](https://community.bistudio.com/wiki/Position)\n\ncontroller: [String](https://community.bistudio.com/wiki/String) - name of environmental variable like \"trees\" or \"houses\"\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nposition player getEnvSoundController \"trees\"; //0.3333\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getEnvSoundController",
        "modifiers": []
    },
    "setvelocitytransformation": {
        "name": "setVelocityTransformation",
        "description": "Interpolates and applies [PositionASL](https://community.bistudio.com/wiki/PositionASL), [velocity](https://community.bistudio.com/wiki/velocity), [vectorDir](https://community.bistudio.com/wiki/vectorDir) and [vectorUp](https://community.bistudio.com/wiki/vectorUp) to the given object based on the interval value. \nWhen interval is 0 the \"fromXXX\" values are used for the beginning of the interpolation. When interval is 1, the \"toXXX\" values are used for the end of interpolation. When interval value is in between, interpolated values are used (see diagram below). The interpolation is linear and along straight line between \"from\" and \"to\" positions. If curve is needed, then it should be constructed from multiple straight sections or by dynamically changing value of position params during the interpolation cycle, similar to [Quadratic Curve animation](https://community.bistudio.comhttps://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_curves) (see Example 3).\nThe [velocity](https://community.bistudio.com/wiki/velocity) param doesn't do much in SP, but in MP, provided the velocity component is set correctly, it helps the engine to figure out what the next position of the moving object should be on other clients.\n\nThe actual approximate interpolation formula for this command is:\n\n```sqf\n_vecCurrent = _vecFrom vectorAdd (_vecTo vectorDiff _vecFrom vectorMultiply _interval);\n```\n\n[](https://community.bistudio.com/wiki/File:setVelocityTransformation.jpg)\n\n> \n>  ",
        "syntaxArray": [
            {
                "Syntax": "object **setVelocityTransformation** [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - object to be interpolated\n\n[fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval] : [Array](https://community.bistudio.com/wiki/Array)\n\nfromPosASL: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - starting [getPosASL](https://community.bistudio.com/wiki/getPosASL) of the object\n\ntoPosASL: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - ending [getPosASL](https://community.bistudio.com/wiki/getPosASL) of the object\n\nfromVelocity: [Array](https://community.bistudio.com/wiki/Array) - starting [velocity](https://community.bistudio.com/wiki/velocity) of the object\n\ntoVelocity: [Array](https://community.bistudio.com/wiki/Array) - ending [velocity](https://community.bistudio.com/wiki/velocity)  of the object\n\nfromVectorDir: [Array](https://community.bistudio.com/wiki/Array) - starting [vectorDir](https://community.bistudio.com/wiki/vectorDir)  of the object\n\ntoVectorDir: [Array](https://community.bistudio.com/wiki/Array) - ending [vectorDir](https://community.bistudio.com/wiki/vectorDir)  of the object\n\nfromVectorUp: [Array](https://community.bistudio.com/wiki/Array) - starting [vectorUp](https://community.bistudio.com/wiki/vectorUp)  of the object\n\ntoVectorUp: [Array](https://community.bistudio.com/wiki/Array) - ending [vectorUp](https://community.bistudio.com/wiki/vectorUp)  of the object\n\ninterval: [Number](https://community.bistudio.com/wiki/Number) - interpolation interval (variable value, normally between 0 and 1)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tracker setVelocityTransformation \n[\n\t_currentPos,\n\t_nextPos,\n\t_currentVelocity,\n\t_nextVelocity,\n\t_currentVectorDir,\n\t_nextVectorDir,\n\t_currentVectorUp,\n\t_nextVectorUp,\n\t_interval\n];\n```\n",
            "Bob on imaginary stairway to heaven:\n```sqf\nbob = createAgent [\"C_man_1\", player getRelPos [5, 0], [], 0, \"CAN_COLLIDE\"]; \nbob switchMove \"ladderciviluploop\";\npos1 = getPosASL bob;\npos2 = pos1 vectorAdd [0,0,0.75];\nbob addEventHandler [\"AnimDone\", \n{\n\tpos1 = pos2; \n\tpos2 = pos2 vectorAdd [0,0,0.75]\n}];\nonEachFrame\n{\n\tif (!alive bob) then \n\t{\n\t\tonEachFrame {}; \n\t\tbob switchMove \"\";\n\t\tbob removeAllEventHandlers \"AnimDone\";\n\t};\n\tbob setVelocityTransformation [\n\t\tpos1, \n\t\tpos2, \n\t\t[0,0,0], \n\t\t[0,0,0], \n\t\t[0,1,0], \n\t\t[0,1,0], \n\t\t[0,0,1], \n\t\t[0,0,1],\n\t\tmoveTime bob\n\t];\n};\n```\n",
            "Advanced trickery with curved movement. The curve is controlled with one control point (controlPointASL), just like quadratic Bézier curve:\n```sqf\ndisableSerialization;\nplayer setDir 0;\ninterval = 0;\n_disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n_ctrl = _disp ctrlCreate [\"RscSlider\", -1];\n_ctrl ctrlSetPosition [safeZoneX + 0.1, 1, safeZoneW - 0.2, 0.1];\n_ctrl ctrlSetActiveColor [1,0,0,1];\n_ctrl ctrlCommit 0;\n_ctrl sliderSetPosition 0;\n_ctrl sliderSetRange [0,1];\n_ctrl sliderSetSpeed [0.1,0.5];\n_ctrl ctrlAddEventHandler [\"SliderPosChanged\", {interval = _this select 1}];\nctrlSetFocus _ctrl;\nbox = \"Land_VR_Shape_01_cube_1m_F\" createVehicle [0,0,0];\ncontrolPointASL = AGLtoASL (player getRelPos [70, -30]) vectorAdd [0, 0, 30];\nfromPosASL = AGLtoASL (player getRelPos [10, -45]);\ntoPosASL = AGLtoASL (player getRelPos [10, 45]);\nfromControlPointOffset = controlPointASL vectorDiff fromPosASL;\ntoControlPointOffset = toPosASL vectorDiff controlPointASL;\nonEachFrame\n{\n\thintSilent format [\"Interval: %1\", interval];\n\tbox setVelocityTransformation\n\t[\n\t\tfromPosASL vectorAdd (fromControlPointOffset vectorMultiply interval),\n\t\tcontrolPointASL vectorAdd (toControlPointOffset vectorMultiply interval),\n\t\t[0,0,0],\n\t\t[0,0,0],\n\t\t[0,1,0],\n\t\t[1,0,0],\n\t\t[0,0,1],\n\t\t[0,1,0],\n\t\tinterval\n\t];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVelocityTransformation",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "newoverlay": {
        "name": "newOverlay",
        "description": "Creates the new overlay dialog for the specified type of overlay. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **newOverlay** config",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/newOverlay",
        "modifiers": []
    },
    "setdynamicsimulationdistance": {
        "name": "setDynamicSimulationDistance",
        "description": "Sets activation distance of [Arma 3: Dynamic Simulation](https://community.bistudio.com/wiki/Arma_3:_Dynamic_Simulation) for given category",
        "syntaxArray": [
            {
                "Syntax": "category **setDynamicSimulationDistance** distance",
                "Params": "category: [String](https://community.bistudio.com/wiki/String) - one of:\n\n* \"Group\" - Infantry units. Set to a reasonable distance, player should not see disabled infantry units. Default: 500m\n\n* \"Vehicle\" - Vehicles with crew. Set to a reasonable distance, player should not see disabled vehicles. Default: 350m\n\n* \"EmptyVehicle\" - All vehicles without crew. Separated from Props as Empty Vehicles have often more complex damage states and selective destruction. Their activation distance should by larger that the one used for Props. Default: 250m\n\n* \"Prop\" - Static objects. Anything from a small tin can to a building. Default: 50m\n\ndistance: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Group\" setDynamicSimulationDistance 1000;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDynamicSimulationDistance",
        "modifiers": []
    },
    "ctdata": {
        "name": "ctData",
        "description": "Returns metadata (string) associated with a particular row of RscControlsTable.",
        "syntaxArray": [
            {
                "Syntax": "ctrl **ctData** row",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control) - The respective control\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - The row index\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nctData _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctData",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlmapanimclear": {
        "name": "ctrlMapAnimClear",
        "description": "Clears the map animation.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlMapAnimClear** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlMapAnimClear _ctrlMap;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapAnimClear",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "surfaceiswater": {
        "name": "surfaceIsWater",
        "description": "Returns whether water is at given position.",
        "syntaxArray": [
            {
                "Syntax": "**surfaceIsWater** position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - format [Position2D](https://community.bistudio.com/wiki/Position2D)  or [Position3D](https://community.bistudio.com/wiki/Position3D) in which case Z will be ignored\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isWater= surfaceIsWater [1000, 3000];\n```\n",
            "\n```sqf\n_isWater = surfaceIsWater position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/surfaceIsWater",
        "modifiers": []
    },
    "queryitemspool": {
        "name": "queryItemsPool",
        "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).",
        "syntaxArray": [
            {
                "Syntax": "queryItemsPool name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _amountOfFAKgiven = queryItemsPool \"FirstAidKit\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/queryItemsPool",
        "modifiers": []
    },
    "forcewalk": {
        "name": "forceWalk",
        "description": "Forces unit to walk even if run or sprint is selected.",
        "syntaxArray": [
            {
                "Syntax": "unit **forceWalk** value",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the unit forced to walk\n\nvalue: [Boolean](https://community.bistudio.com/wiki/Boolean) - true/false\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer forceWalk true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceWalk",
        "modifiers": [
            "Local argument"
        ]
    },
    "isremoteexecutedjip": {
        "name": "isRemoteExecutedJIP",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the code context is being remote executed from the JIP queue by [remoteExec](https://community.bistudio.com/wiki/remoteExec) or [remoteExecCall](https://community.bistudio.com/wiki/remoteExecCall) (when JIP param was set). It is a subset of [isRemoteExecuted](https://community.bistudio.com/wiki/isRemoteExecuted):\n\n* Normal remote execution:\n\n* [isRemoteExecuted](https://community.bistudio.com/wiki/isRemoteExecuted) - [true](https://community.bistudio.com/wiki/true)\n\n* isRemoteExecutedJIP - [false](https://community.bistudio.com/wiki/false)\n\n* Remote execution from JIP queue:\n\n* [isRemoteExecuted](https://community.bistudio.com/wiki/isRemoteExecuted) - [true](https://community.bistudio.com/wiki/true)\n\n* isRemoteExecutedJIP - [true](https://community.bistudio.com/wiki/true)\nIn SP always returns [false](https://community.bistudio.com/wiki/false).",
        "syntaxArray": [
            {
                "Syntax": "**isRemoteExecutedJIP**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_remoteExecutedJIP = isRemoteExecutedJIP;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isRemoteExecutedJIP",
        "modifiers": []
    },
    "setdefaultcamera": {
        "name": "setDefaultCamera",
        "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)",
        "syntaxArray": [
            {
                "Syntax": "**setDefaultCamera** [position, direction]",
                "Params": "position: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - position of the camera\n\ndirection: [Array](https://community.bistudio.com/wiki/Array) - format [Vector3D](https://community.bistudio.com/wiki/Vector3D) - direction of the camera\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetDefaultCamera [[5000,5000,200],[1,1,-1]];\n```\n",
            "Lift camera 100m up above current player position and point downwards:\n\n```sqf\nsetDefaultCamera [ATLtoASL (player modelToWorld [0,0,100]),[0,0,-1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDefaultCamera",
        "modifiers": []
    },
    "get3denconnections": {
        "name": "get3DENConnections",
        "description": "Return all [connections](https://community.bistudio.com/wiki/Eden_Editor:_Connecting) currently present on an entity.",
        "syntaxArray": [
            {
                "Syntax": "**get3DENConnections** entity",
                "Params": "entity: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format:\n\n```sqf\n[[type1,to1], [type2, to2], ..., [typeN, toN]]\n```\n\n\n* type: [String](https://community.bistudio.com/wiki/String) - connection class from *Cfg3DEN >> Connections*\n\n* to: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) to which the connection leads to"
            }
        ],
        "examples": [
            "\n```sqf\nget3DENConnections _trigger; // Can return [[\"WaypointActivation\",[B Alpha 4-5,0]]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENConnections",
        "modifiers": []
    },
    "forceweatherchange": {
        "name": "forceWeatherChange",
        "description": "Will force-apply previously set settings. This might cause lag.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**forceWeatherChange**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n0 setOvercast 1;\n0 setRain 1;\nforceWeatherChange; Force immediate change overriding smooth transition\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forceWeatherChange",
        "modifiers": [
            "Server execution"
        ]
    },
    "setovercast": {
        "name": "setOvercast",
        "description": "Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher [wind](https://community.bistudio.com/wiki/wind) speeds.",
        "syntaxArray": [
            {
                "Syntax": "time **setOvercast** overcast",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - In seconds\n\novercast: [Number](https://community.bistudio.com/wiki/Number) - Range 0 to 1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "50 setOvercast 0.5"
        ],
        "Url": "https://community.bistudio.com/wiki/setOvercast",
        "modifiers": [
            "Local effect"
        ]
    },
    "sendudpmessage": {
        "name": "sendUDPMessage",
        "description": "Send message to given address using UDP protocol. Returns false if the message has not been delivered \n\nNote: Not implemented (see talk page for more info).",
        "syntaxArray": [
            {
                "Syntax": "**sendUDPMessage** [ip, port, message]",
                "Params": "ip: [String](https://community.bistudio.com/wiki/String)\n\nport: [Number](https://community.bistudio.com/wiki/Number)\n\nmessage: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = sendUDPMessage [\"192.168.0.1\", 2302, \"Here goes you message...\"]; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sendUDPMessage",
        "modifiers": []
    },
    "emptypositions": {
        "name": "emptyPositions",
        "description": "Returns the number of given positions in the vehicle.\n\nPositions can be *\"Commander\", \"Driver\", \"Gunner\"* or *\"Cargo\"*",
        "syntaxArray": [
            {
                "Syntax": "[Number](https://community.bistudio.com/wiki/Number) = vehicle **emptyPositions ** position",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_freeCargoPositions = vehicle player emptyPositions \"cargo\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/emptyPositions",
        "modifiers": []
    },
    "hcremovegroup": {
        "name": "hcRemoveGroup",
        "description": "Removes group from unit's [high command](https://community.bistudio.com/wiki/High_Command) bar.",
        "syntaxArray": [
            {
                "Syntax": "unit **hcRemoveGroup** group",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) -\n\ngroup: [Group](https://community.bistudio.com/wiki/Group) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer hcRemoveGroup BIS_group;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcRemoveGroup",
        "modifiers": []
    },
    "sendsimplecommand": {
        "name": "sendSimpleCommand",
        "description": "Sends a simple command to the vehicle's driver / gunner (air vehicles ignore it). See also [vehicleMoveInfo](https://community.bistudio.com/wiki/vehicleMoveInfo).\n> \n>  \n*Gunner commands*\n\n\n* \"FIRE\"\n\n* \"CEASE FIRE\"\n\n* \"MANUAL FIRE\"\n\n* \"CANCEL MANUAL FIRE\"\n\n* \"KEY FIRE\"\n*Driver move commands*\n\n\n* \"FORWARD\" - move forward\n\n* \"FAST\" - move forward, fast\n\n* \"SLOW\" - move forward, slow\n\n* \"STOP\" - stop moving forward or backward\n\n* \"BACK\" - move backward\n\n* \"KEY UP\"\n\n* \"KEY DOWN\"\n\n* \"KEY FAST\"\n\n* \"KEY SLOW\"\n*Driver turn commands*\n\n\n* \"LEFT\" - turn left, while moving or not\n\n* \"RIGHT\" - turn right, while moving or not\n\n* \"STOPTURNING\" - cancel turning  (special case, normally would be called by the engine when LEFT or RIGHT turn key is released by the player) *Since Arma 3 v1.77*",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **sendSimpleCommand** command",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\ncommand: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player sendSimpleCommand \"STOP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sendSimpleCommand",
        "modifiers": []
    },
    "image": {
        "name": "image",
        "description": "Creates a structured text containing the given image. Use [setAttributes](https://community.bistudio.com/wiki/setAttributes) to set additional [ attributes](https://community.bistudio.com/wiki/Structured_Text#Attributes) on the image.",
        "syntaxArray": [
            {
                "Syntax": "**image** filename",
                "Params": "filename: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Structured Text](https://community.bistudio.com/wiki/Structured_Text)"
            }
        ],
        "examples": [
            "\n```sqf\nhint composeText [\"Image: \", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"];\n```\n",
            "\n```sqf\nhint str (composeText [\"Image: \", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"] == parseText \"Image: <img image='\\a3\\Data_f\\Flags\\flag_Altis_co.paa'/>\"); // true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/image",
        "modifiers": []
    },
    "lbsetselectcolorright": {
        "name": "lbSetSelectColorRight",
        "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog) to color.\n\nColour is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "lbSetSelectColorRight  [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control lbSetSelectColorRight [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_control lbSetSelectColorRight [0, [0, 1, 0, 0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetSelectColorRight",
        "modifiers": []
    },
    "disableconversation": {
        "name": "disableConversation",
        "description": "Disable the ability to talk to other people.",
        "syntaxArray": [
            {
                "Syntax": "unitName **disableConversation** disable",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\ndisable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer disableConversation true\n```\n",
            "\n```sqf\nsoldier1 disableConversation true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableConversation",
        "modifiers": []
    },
    "savegame": {
        "name": "saveGame",
        "description": "Autosaves the game (used for Retry). The game can then be loaded from the last autosave with [loadGame](https://community.bistudio.com/wiki/loadGame). Will not save if the player is [ null](https://community.bistudio.com/wiki/objNull) or dead.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**saveGame**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsaveGame;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/saveGame",
        "modifiers": []
    },
    "setactualcollectivertd": {
        "name": "setActualCollectiveRTD",
        "description": "Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).\n\n* 0: collective fully down\n\n* ~0.7: approximate stable hover position\n\n* 1: collective fully up\n> ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD setActualCollectiveRTD value",
                "Params": "helicopterRTD : [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - collective position\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopterRTD setActualCollectiveRTD 0.7;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setActualCollectiveRTD",
        "modifiers": []
    },
    "clearweaponpool": {
        "name": "clearWeaponPool",
        "description": "Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.",
        "syntaxArray": [
            {
                "Syntax": "**clearWeaponPool**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearWeaponPool;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearWeaponPool",
        "modifiers": []
    },
    "unregistertask": {
        "name": "unregisterTask",
        "description": "Unregisters a task type from given agent. The task type is the name given in CfgTasks classes in name property. Also available from [registeredTasks](https://community.bistudio.com/wiki/registeredTasks) array.",
        "syntaxArray": [
            {
                "Syntax": "teamMember **unregisterTask** name",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member) - [teamMember](https://community.bistudio.com/wiki/teamMember) [agent](https://community.bistudio.com/wiki/agent)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of the task\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\nteamMember _agent unregisterTask (registeredTasks select 0);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/unregisterTask",
        "modifiers": []
    },
    "engineon": {
        "name": "engineOn",
        "description": "Activates and deactivates the engine of a vehicle.",
        "syntaxArray": [
            {
                "Syntax": "vehicle **engineOn** state",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to turn the engine on, [false](https://community.bistudio.com/wiki/false) to turn it off\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nif (!isEngineOn _jeep) then { _jeep engineOn true; };\n```\n",
            "\n```sqf\nwaitUntil { player == driver _jeep; };\nvehicle player engineOn true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/engineOn",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "getobjectproxy": {
        "name": "getObjectProxy",
        "description": "Return the proxy object associated with the given editor object.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **getObjectProxy** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n(findDisplay 128 displayCtrl 51) getObjectProxy \"_unit_1\"\n// returns the object 'B 1-1-A:1 (Sean Johnson)'\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectProxy",
        "modifiers": []
    },
    "setsimpletaskdestination": {
        "name": "setSimpleTaskDestination",
        "description": "Attach a destination to the simple task.Overrides [setSimpleTaskTarget](https://community.bistudio.com/wiki/setSimpleTaskTarget)",
        "syntaxArray": [
            {
                "Syntax": "task **setSimpleTaskDestination** pos",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\npos: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_tskGoHere setSimpleTaskDestination (getMarkerPos \"obj1\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setSimpleTaskDestination",
        "modifiers": []
    },
    "respawnvehicle": {
        "name": "respawnVehicle",
        "description": "Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction. If respawn type is set to base respawn (type 3) and vehicle respawn marker is provided (respawn_vehicle_XXXSIDEXXX), vehicle will spawn on the marker. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle **respawnVehicle** [delay, count]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[delay, count]: [Array](https://community.bistudio.com/wiki/Array)\n\ndelay: [Number](https://community.bistudio.com/wiki/Number) - Delay in seconds between respawns. (-1 to use *respawnDelay* from [description.ext](https://community.bistudio.com/wiki/description.ext))\n\ncount: [Number](https://community.bistudio.com/wiki/Number) (Optional) - How many times to respawn vehicle in total. (0 - unlimited respawns)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncar respawnVehicle [5, 3];\n```\n\n\n'car' will respawn at the predefined marker for the [side](https://community.bistudio.com/wiki/side) after 5 seconds. The unit will respawn 3 times.",
            "\n```sqf\ncar respawnVehicle [30];\n```\n\n\n'car' will respawn at the predefined marker for the [side](https://community.bistudio.com/wiki/side) after 30 seconds. The unit will respawn an unlimited number of times."
        ],
        "Url": "https://community.bistudio.com/wiki/respawnVehicle",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "deletecollection": {
        "name": "deleteCollection",
        "description": "Delete a collection. As example, used with a soldier, it'll hide the ingame model.\n\n*When targetting Arma 2 1.06 or newer, use [hideObject](https://community.bistudio.com/wiki/hideObject) instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before Arma 2 1.06, and its functionality may be changed or removed in the future.*",
        "syntaxArray": [
            {
                "Syntax": "**deleteCollection** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndeleteCollection unitName; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteCollection",
        "modifiers": []
    },
    "vehiclereportownposition": {
        "name": "vehicleReportOwnPosition",
        "description": "Gets whether the vehicle shares its own position via datalink with the [Side](https://community.bistudio.com/wiki/Side) center.",
        "syntaxArray": [
            {
                "Syntax": "**vehicleReportOwnPosition** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicleReportOwnPosition (vehicle player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleReportOwnPosition",
        "modifiers": []
    },
    "setcuratoreditingareatype": {
        "name": "setCuratorEditingAreaType",
        "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **setCuratorEditingAreaType** bool",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncuratorModule setCuratorEditingAreaType true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCuratorEditingAreaType",
        "modifiers": [
            "Server execution"
        ]
    },
    "addlivestats": {
        "name": "addLiveStats",
        "description": "Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE & VBS2)",
        "syntaxArray": [
            {
                "Syntax": "unit **addLiveStats** score",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nscore: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addLiveStats 10;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addLiveStats",
        "modifiers": []
    },
    "magazineturretammo": {
        "name": "magazineTurretAmmo",
        "description": "Returns ammo count of given type from given turret \n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle magazineTurretAmmo [magazineClass, turretPath]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n[magazineClass, turretPath]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player magazineTurretAmmo [\"cls\", [0]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazineTurretAmmo",
        "modifiers": []
    },
    "getloadedmodsinfo": {
        "name": "getLoadedModsInfo",
        "description": "Returns information about all loaded modifications.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "getLoadedModsInfo",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in format [modname, modDir, isDefault, isOfficial, origin, hash, hashShort, itemID (Either DLC appid, or steam workshop itemid)]"
            }
        ],
        "examples": [
            "\n```sqf\n_loadedMods = getLoadedModsInfo;\n/*\n\t[\n\t\t[\"dummy\",\"dummy\",false,false,\"NOT FOUND\",\"\",\"\",\"0\"],\n\t\t[\"CUP Units DEV Version r710 (r710-r710 UNITSSVN) (12|Jun|2020)\",\"@[DEV] CUP Units\",false,false,\"GAME DIR\",\"f3fb8a4c62443ac799c7c0e00f645b1f32cf1376\",\"c96577b4\",0],\n\t\t[\"CUP Weapons DEV Version r1486 (r1481-r1486 WEAPONSSVN) (12|Jun|2020)\",\"@[DEV] CUP Weapons\",false,false,\"GAME DIR\",\"6dbd7c052ce2ae68803e10f6a3653d0b046881d8\",\"bb1c4965\",0],\n\t\t[\"Community Base Addons v3.15.1\",\"@CBA_A3\",false,false,\"GAME DIR\",\"33eef5c0ed583d1222319460b184090513193287\",\"131bbb64\",0],\n\t\t[\"Arma 3 Contact (Platform)\",\"enoch\",true,true,\"GAME DIR\",\"4298e892077aec33be6b68730a974400a3c3a636\",\"43e900ae\",\"1021790\"],\n\t\t[\"Arma 3 Tanks\",\"tank\",true,true,\"GAME DIR\",\"c47d45d7ce1261e0a0d1c4ed9517611eae6ebf9f\",\"1aec74ec\",\"798390\"],\n\t\t[\"Arma 3 Tac-Ops\",\"tacops\",true,true,\"GAME DIR\",\"808cc67221feadc288c856395cac28b908966eee\",\"441362c6\",\"744950\"],\n\t\t[\"Arma 3 Laws of War\",\"orange\",true,true,\"GAME DIR\",\"aa86785568206ae1e7becaa09eb673ee645d971f\",\"4729aa84\",\"571710\"],\n\t\t[\"Arma 3 Malden\",\"argo\",true,true,\"GAME DIR\",\"db6d4d06a3ad28207da665e8c34bbd8adf191019\",\"61001811\",\"639600\"],\n\t\t[\"Arma 3 Jets\",\"jets\",true,true,\"GAME DIR\",\"8e8e1f9275e37cc90c0f2a8a6901dd2a3e81a29a\",\"fc8366ee\",\"601670\"],\n\t\t[\"Arma 3 Apex\",\"expansion\",true,true,\"GAME DIR\",\"48f32952612dbb6ca972790c17c9920797073233\",\"fc4aed7f\",\"395180\"],\n\t\t[\"Arma 3 Marksmen\",\"mark\",true,true,\"GAME DIR\",\"85c7f2284f8b0271bfafecd96c49230ce0515861\",\"534e5baa\",\"332350\"],\n\t\t[\"Arma 3 Helicopters\",\"heli\",true,true,\"GAME DIR\",\"dae29688657dbc9057f9eb83179a3ad21d3a689d\",\"e7165098\",\"304380\"],\n\t\t[\"Arma 3 Karts\",\"kart\",true,true,\"GAME DIR\",\"eae9e0b218e7a8e8e906477ee1a5e8e3d5298f18\",\"8240ae3f\",\"288520\"],\n\t\t[\"Arma 3 Zeus\",\"curator\",true,true,\"GAME DIR\",\"2310c5c95a558253c7286d93f5a2a810fbf9b620\",\"8af0db5d\",\"275700\"],\n\t\t[\"Arma 3\",\"A3\",true,true,\"NOT FOUND\",\"\",\"\",\"0\"]\n\t]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getLoadedModsInfo",
        "modifiers": []
    },
    "lbsettext": {
        "name": "lbSetText",
        "description": "Sets the text on the left side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "syntaxArray": [
            {
                "Syntax": "**lbSetText** [idc, index, name]",
                "Params": "[idc, index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbSetText** [index, name]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetText [101, 0, \"iskoda\"];\n```\n",
            "\n```sqf\n_control lbSetText [0, \"iskoda\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetText",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "missionconfigfile": {
        "name": "missionConfigFile",
        "description": "Return root of mission [Description.ext](https://community.bistudio.com/wiki/Description.ext) entries hierarchy.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "**missionConfigFile**",
                "Params": "",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\nfor \"_i\" from 0 to (count paramsArray - 1) do {\n\tmissionNamespace setVariable [configName ((missionConfigFile/\"Params\") select _i), paramsArray select _i];\n};\n```\n",
            "To define custom values in [description.ext](https://community.bistudio.com/wiki/description.ext):\n\nTo read defined custom values from a script:\n\n\n```sqf\n_myNumber = getNumber (missionConfigFile >> \"myMissionConfig\" >> \"mySetup\" >> \"myNumber\");_myArray = getArray (missionConfigFile >> \"myMissionConfig\" >> \"mySetup\" >> \"myArray\");_myText = getText (missionConfigFile >> \"myMissionConfig\" >> \"mySetup\" >> \"myText\");\n```\n",
            "To get file path with [description.ext](https://community.bistudio.com/wiki/description.ext) to play sound via [playSound3D](https://community.bistudio.com/wiki/playSound3D):\n\n```sqf\nMISSION_ROOT = str missionConfigFile select [0, count str missionConfigFile - 15];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/missionConfigFile",
        "modifiers": []
    },
    "lnbsetpicturecolorselected": {
        "name": "lnbSetPictureColorSelected",
        "description": "Sets the cell picture's colour on cell selection.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetPictureColorSelected [idc, [row, column], colour]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first row is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolour: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetPictureColorSelected [[row, column], colour]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first row is 0, second is 1, etc)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - 0-based index (first column is 0, second is 1, etc)\n\ncolour: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetPictureColorSelected [1492, [1,0], [0,0.75,0.3,0.5]];\n```\n",
            "\n```sqf\nctrl lnbSetPictureColorSelected [[0, 3], [1,0,0,1]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetPictureColorSelected",
        "modifiers": []
    },
    "taskdescription": {
        "name": "taskDescription",
        "description": "Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].",
        "syntaxArray": [
            {
                "Syntax": "**taskDescription** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_taskDescArray = taskDescription _task;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskDescription",
        "modifiers": []
    },
    "setacctime": {
        "name": "setAccTime",
        "description": "Set simulation acceleration coefficient. May also be used to slow time in cutscenes.",
        "syntaxArray": [
            {
                "Syntax": "setAccTime accFactor",
                "Params": "accFactor: [Number](https://community.bistudio.com/wiki/Number) - Factor. Value is clamped to 1/128 - 4\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetAccTime 0.1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAccTime",
        "modifiers": []
    },
    "ongroupiconoverenter": {
        "name": "onGroupIconOverEnter",
        "description": "Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**onGroupIconOverEnter** command",
                "Params": "command:  [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonGroupIconOverEnter\n{\n    // Passed values for _this are:\n    _is3D = _this select 0;\n    _group = _this select 1;\n    _wpID = _this select 2;\n    _posx = _this select 3;\n    _posy = _this select 4;\n    _shift = _this select 5;\n    _ctrl = _this select 6;\n    _alt = _this select 7;\n\n    _message = format [\"____ Info ____\"];\n    {_message = _message + format [\"\\n %1\",_x]} forEach _this;\n    hint _message;\n}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onGroupIconOverEnter",
        "modifiers": []
    },
    "removecuratoreditingarea": {
        "name": "removeCuratorEditingArea",
        "description": "Removes editing area for given curator.",
        "syntaxArray": [
            {
                "Syntax": "curatorObj **removeCuratorEditingArea** editAreaID",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\neditAreaID: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyCurator removeCuratorEditingArea 3;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeCuratorEditingArea",
        "modifiers": []
    },
    "roledescription": {
        "name": "roleDescription",
        "description": "Returns unit description set in the editor and visible on role selection screen in multiplayer.",
        "syntaxArray": [
            {
                "Syntax": "roleDescription unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_playerRole = roleDescription player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/roleDescription",
        "modifiers": []
    },
    "showneweditorobject": {
        "name": "showNewEditorObject",
        "description": "Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.  \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **showNewEditorObject** [type,class,side,position]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[type,class,side,position]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/showNewEditorObject",
        "modifiers": []
    },
    "tvcollapseall": {
        "name": "tvCollapseAll",
        "description": "Collapses all tree items for the given Tree View.",
        "syntaxArray": [
            {
                "Syntax": "**tvCollapseAll** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "**tvCollapseAll** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvCollapseAll 101;\n```\n",
            "\n```sqf\n tvCollapseAll _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvCollapseAll",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlenabled": {
        "name": "ctrlEnabled",
        "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused. Read [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs and controls.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlEnabled** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if the control is enabled, [false](https://community.bistudio.com/wiki/false) if not"
            },
            {
                "Syntax": "**ctrlEnabled** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) if the control is enabled, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nif !(ctrlEnabled 100) then\n{\n  ctrlEnable [100, true];\n};\n```\n",
            "\n```sqf\n_enabled = ctrlEnabled _control\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlEnabled",
        "modifiers": [
            "Local argument"
        ]
    },
    "setobjectmaterial": {
        "name": "setObjectMaterial",
        "description": "Sets material of object selection. The selection number is defined through the [ hiddenselection](https://community.bistudio.com/wiki/CfgVehicles_Config_Reference#hiddenSelections)[]={} array in the vehicle's config (starting with 0).",
        "syntaxArray": [
            {
                "Syntax": "obj **setObjectMaterial** [selectionNumber, material]",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n[selectionNumber, material]: [Array](https://community.bistudio.com/wiki/Array)\n\nselectionNumber: [Number](https://community.bistudio.com/wiki/Number)\n\nmaterial: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncar setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\ncar setObjectMaterial [1,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectMaterial",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "servertime": {
        "name": "serverTime",
        "description": "Returns the time since last server restart, synced to all clients in MP. The syncing is happening every 5 minutes, but you can force the next sync earlier by executing [estimatedTimeLeft](https://community.bistudio.com/wiki/estimatedTimeLeft) command. The time returned is also different to the time returned by [time](https://community.bistudio.com/wiki/time) and [diag_tickTime](https://community.bistudio.com/wiki/diag_tickTime) commands on server. Returns 0 in SP.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**serverTime**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"Synced server time : %1\", serverTime];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/serverTime",
        "modifiers": [
            "Global effect"
        ]
    },
    "synchronizeobjectsadd": {
        "name": "synchronizeObjectsAdd",
        "description": "Add given objects to the unit's list of synchronized objects.",
        "syntaxArray": [
            {
                "Syntax": "unit **synchronizeObjectsAdd** objects",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nobjects: [Array](https://community.bistudio.com/wiki/Array) - An array of objects\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n_acm = _groupLogic createUnit [\"AmbientCombatManager\", position player,[],0,\"NONE\"];\n_acm synchronizeObjectsAdd [player];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/synchronizeObjectsAdd",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "simulsethumidity": {
        "name": "simulSetHumidity",
        "description": "Sets simul cloud cover. This command does not affect overcast value. > ",
        "syntaxArray": [
            {
                "Syntax": "**simulSetHumidity** humidity",
                "Params": "humidity: [Number](https://community.bistudio.com/wiki/Number) - 0 (min): clear sky, 1 (max): heavy cloud cover\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsimulSetHumidity 1;\n```\n",
            "When combined with [setOvercast](https://community.bistudio.com/wiki/setOvercast) 1 this command will also start random strength rain.\n```sqf\nskipTime -24;\n86400 setOvercast 1;\nskipTime 24;\nsimulSetHumidity 1;\n\n```\nCreates rainy looking weather, followed by thunder in about 10 seconds and rain in about 20."
        ],
        "Url": "https://community.bistudio.com/wiki/simulSetHumidity",
        "modifiers": []
    },
    "removeitem": {
        "name": "removeItem",
        "description": "Removes item from the inventory.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbluforUnit unassignItem \"NVGoggles\";\nbluforUnit removeItem \"NVGoggles\";\nopforUnit unassignItem \"NVGoggles_OPFOR\";\nopforUnit removeItem \"NVGoggles_OPFOR\";\nindependentUnit unassignItem \"NVGoggles_INDEP\";\nindependentUnit removeItem \"NVGoggles_INDEP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeItem",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "getreldir": {
        "name": "getRelDir",
        "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of [BIS_fnc_relativeDirTo](https://community.bistudio.com/wiki/BIS_fnc_relativeDirTo). Taking the current [direction](https://community.bistudio.com/wiki/direction) of the object into account.",
        "syntaxArray": [
            {
                "Syntax": "object **getRelDir** position",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Object](https://community.bistudio.com/wiki/Object), [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_reldir = player getRelDir tank;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getRelDir",
        "modifiers": [
            "Global argument"
        ]
    },
    "getwppos": {
        "name": "getWPPos",
        "description": "Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.",
        "syntaxArray": [
            {
                "Syntax": "**getWPPos** [group, index]",
                "Params": "[group, index]: [Array](https://community.bistudio.com/wiki/Array)\n\ngroup: [Group](https://community.bistudio.com/wiki/Group) - the group/unit, of which you want to select a waypoint\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - 0 equals the starting position of the group.\nThe number used in this and other waypoint commands is *one more* than the one displayed in the waypoint window in the editor. (i.e. if the editor labeled a WP \"0:MOVE\" the you would have to use getWPPos [grp,1] to access this particular WP)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [Position3D](https://community.bistudio.com/wiki/Position3D). \nThe returned position equals [0,0,0], if the selected waypoint doesn't exist."
            }
        ],
        "examples": [
            "\n```sqf\n[_group1,1] setWPPos [200,600,0];_pos = getWPPos [_group1,1];\n```\n\n\nreturns [200,600,0]"
        ],
        "Url": "https://community.bistudio.com/wiki/getWPPos",
        "modifiers": [
            "Global argument"
        ]
    },
    "markerbrush": {
        "name": "markerBrush",
        "description": "Gets the marker brush. See [setMarkerBrush](https://community.bistudio.com/wiki/setMarkerBrush).",
        "syntaxArray": [
            {
                "Syntax": "**markerBrush** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nif (markerBrush \"Marker1\" == \"Solid\") then {hint \"Marker1 is solid!\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerBrush",
        "modifiers": []
    },
    "getconnecteduav": {
        "name": "getConnectedUAV",
        "description": "Returns UAV if unit has connection to some UAV.",
        "syntaxArray": [
            {
                "Syntax": "getConnectedUAV unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - the UAV. [objNull](https://community.bistudio.com/wiki/objNull) if no UAV is connected."
            }
        ],
        "examples": [
            "\n```sqf\ngetConnectedUAV player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getConnectedUAV",
        "modifiers": []
    },
    "drawicon": {
        "name": "drawIcon",
        "description": "Draws an icon on the map. This command needs to be called every frame, preferably using the [onDraw](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onDraw) UI Event Handler.",
        "syntaxArray": [
            {
                "Syntax": "map drawIcon [texture, color, position, width, height, angle, text, shadow, textSize, font, align]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\ntexture: [String](https://community.bistudio.com/wiki/String) - Icon texture\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Text and icon color in format [r,g,b,a]\n\nposition: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\nwidth: [Number](https://community.bistudio.com/wiki/Number) - Width of the icon (but not the text)\n\nheight: [Number](https://community.bistudio.com/wiki/Number) - Height of the icon (but not the text)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - Rotation angle of the icon (but not the text)\n\ntext (Optional): [String](https://community.bistudio.com/wiki/String)\n\nshadow (Optional): [Number](https://community.bistudio.com/wiki/Number) or [Boolean](https://community.bistudio.com/wiki/Boolean) - 0 ([false](https://community.bistudio.com/wiki/false)): no shadow, 1: shadow (for text), 2 ([true](https://community.bistudio.com/wiki/true)): outline (works for text and for icon only if icon angle is 0)\n\ntextSize (Optional): [Number](https://community.bistudio.com/wiki/Number) - Size of the text in UI units (since Arma 3 v0.72)\n\nfont (Optional): [String](https://community.bistudio.com/wiki/String) - (since Arma 3 v0.72)\n\nalign (Optional, default: \"right\"): [String](https://community.bistudio.com/wiki/String) - \"left\", \"right\" or \"center\" (since Arma 3 v0.72)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Red icon with text: \n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", {\n\t_this select 0 drawIcon [\n\t\t\"iconStaticMG\", // Custom images can also be used: getMissionPath \"\\myFolder\\myIcon.paa\"\n\t\t[1,0,0,1],\n\t\tgetPos player,\n\t\t24,\n\t\t24,\n\t\tgetDir player,\n\t\t\"Player Vehicle\",\n\t\t1,\n\t\t0.03,\n\t\t\"TahomaB\",\n\t\t\"right\"\n\t]\n}];\n```\n",
            "Green text only: \n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", {\n\t_this select 0 drawIcon [\n\t\t\"#(rgb,1,1,1)color(1,1,1,1)\",\n\t\t[0,1,0,1],\n\t\tplayer,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\tname player\n\t]\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawIcon",
        "modifiers": []
    },
    "joinstring": {
        "name": "joinString",
        "description": "Joins *array* into [String](https://community.bistudio.com/wiki/String) with provided *separator*. Array can be of mixed types, all elements will be converted to [String](https://community.bistudio.com/wiki/String) prior to joining, but the fastest operation is on the array of [Strings](https://community.bistudio.com/wiki/Strings).",
        "syntaxArray": [
            {
                "Syntax": "array **joinString** separator",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - array of [Anything](https://community.bistudio.com/wiki/Anything)\n\nseparator: [String](https://community.bistudio.com/wiki/String) - separator used to join array elements.\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"]\n_str joinString \" \"; // \"This is a sample string\"\n```\n",
            "\n```sqf\n[\"This\",\"is\",\"sparta\"] joinString \" ~ \"; // \"This ~ is ~ sparta\"\n```\n",
            "\n```sqf\n[\"1\",2,text \"3\"] joinString \"\"; // \"123\"\n```\n",
            "\n```sqf\n\"Japa is the best!\" splitString \"\" joinString \" \"; // \"J a p a   i s   t h e   b e s t !\"\n```\n",
            "Remove all \\r\\n from file:\n```sqf\nloadFile \"somefile.txt\" splitString toString [13,10] joinString \" \"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/joinString",
        "modifiers": []
    },
    "completedfsm": {
        "name": "completedFSM",
        "description": "Checks whether the given FSM is completed. The FSM handle is the number returned by the [execFSM](https://community.bistudio.com/wiki/execFSM) command.",
        "syntaxArray": [
            {
                "Syntax": "**completedFSM** fsmHandle",
                "Params": "fsmHandle: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_completed = completedFSM _fsmHandle;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/completedFSM",
        "modifiers": []
    },
    "setcustommissiondata": {
        "name": "setCustomMissionData",
        "description": "Defines custom mission text that is sent to [Arma 3 Analytics](https://community.bistudio.com/wiki/Arma_3_Analytics).",
        "syntaxArray": [
            {
                "Syntax": "setCustomMissionData data",
                "Params": "data: [Array](https://community.bistudio.com/wiki/Array) - Array of strings. A maximum of five strings is allowed, each string with a maximum length of 16 characters\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetCustomMissionData [\"someData\", \"someMoreData\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCustomMissionData",
        "modifiers": []
    },
    "isinstructorfigureenabled": {
        "name": "isInstructorFigureEnabled",
        "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).",
        "syntaxArray": [
            {
                "Syntax": "**isInstructorFigureEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str isInstructorFigureEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isInstructorFigureEnabled",
        "modifiers": []
    },
    "setobjectscale": {
        "name": "setObjectScale",
        "description": "Scales an [attached object](https://community.bistudio.com/wiki/attachTo) or a [Simple Object](https://community.bistudio.com/wiki/Arma_3_Simple_Objects)'s model.",
        "syntaxArray": [
            {
                "Syntax": "object setObjectScale scale",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Must be either an [attached object](https://community.bistudio.com/wiki/attachTo) or [Simple Object](https://community.bistudio.com/wiki/Arma_3_Simple_Objects)\n\nscale: [Number](https://community.bistudio.com/wiki/Number) - Limited to 0.0001 to 65504, relative to the object model's normal scale\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_mrap attachTo [player,[0,0,0]];\n_mrap setObjectScale 0.1;\n```\n",
            "\n```sqf\n// Select an object in Eden Editor and execute the following code in the Arma 3: Debug Console. When moving the object, the effect is reset!\n(get3DENSelected \"Object\" # 0) setObjectScale 0.1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectScale",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "settriggerinterval": {
        "name": "setTriggerInterval",
        "description": "Sets the interval in seconds for trigger condition check.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "trigger setTriggerInterval interval",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - Trigger object\n\ninterval: [Number](https://community.bistudio.com/wiki/Number) - Interval in seconds with which trigger condition is checked\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setTriggerInterval 5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerInterval",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "morale": {
        "name": "morale",
        "description": "Checks a current morale level of the unit (-1..+1).",
        "syntaxArray": [
            {
                "Syntax": "**morale** unit",
                "Params": "unit:  [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nmorale (leader player);//result is 0.5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/morale",
        "modifiers": []
    },
    "setrotorbrakertd": {
        "name": "setRotorBrakeRTD",
        "description": "Toggles a helicopter's rotor brake. > ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD **setRotorBrakeRTD** enable",
                "Params": "helicopterRTD : [Object](https://community.bistudio.com/wiki/Object) - Helicopter\n\nenable : [Number](https://community.bistudio.com/wiki/Number) - Can be:\n\n* 0: off\n\n* 1: on\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopterRTD setRotorBrakeRTD 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRotorBrakeRTD",
        "modifiers": []
    },
    "nil": {
        "name": "nil",
        "description": "Nil value. This value can be used to undefine existing [variables](https://community.bistudio.com/wiki/Variables).",
        "syntaxArray": [
            {
                "Syntax": "nil",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvariableToDestroy = nil;\n```\n",
            "\n```sqf\nprivate _variable = 50;\n_variable = nil;\nhint format [\"Variable = %1\", _variable]; // will display \"Variable = any\" (Arma 3)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nil",
        "modifiers": []
    },
    "disableremotesensors": {
        "name": "disableRemoteSensors",
        "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain *any* local entities. Units, that are not in a group with at least one local member, will not check visibility of other units. This will cause, that remote units will not have updated knowsAbout and it will save some CPU time. If a group contains a single local entity then calculations will still be performed for the entire group.\n\nThese raycasts are used to determine what other entities an entity can see, and they take a lot of CPU time. This is of course a bit of a trick, because rather than a true optimization, it disables part of the simulation. However, there are certainly types of scenarios where these raycasts are not needed. An example is a fully Player-versus-Player scenario, where the visibility between every combination of player entity is not needed. So why not disable this by default? There are cases where you do require these raycasts, for example in stealth scenarios. Without them, commands like [knowsAbout](https://community.bistudio.com/wiki/knowsAbout), [nearTargets](https://community.bistudio.com/wiki/nearTargets) and [targetKnowledge](https://community.bistudio.com/wiki/targetKnowledge) will only function for local units! The commands themselves are local, can be used on servers and clients, and the state is reset when the scenario ends. So, carefully consider whether your scenario can benefit from this method.",
        "syntaxArray": [
            {
                "Syntax": "disableRemoteSensors state",
                "Params": "state: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndisableRemoteSensors true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableRemoteSensors",
        "modifiers": [
            "Local effect"
        ]
    },
    "sideunknown": {
        "name": "sideUnknown",
        "description": "The unknown [side](https://community.bistudio.com/wiki/Side).\nUsed when the side of a unit is unknown, e.g. for spotted targets with insufficient information.",
        "syntaxArray": [
            {
                "Syntax": "**sideUnknown**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\n//soldier1 and soldier2 of different sides and out of sight\nsoldier1 reveal soldier2;\nhint str (soldier1 nearTargets 1000);\n//returns: [[[1557.96,5047.4,1.32402],\"SoldierWB\",UNKNOWN,0.0155183,soldier2,5]]\nsoldier1 reveal [soldier2,1.5];\n//returns: [[[1556.52,5050.08,1.32402],\"SoldierWB\",WEST,0.0211193,soldier2,5]]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideUnknown",
        "modifiers": []
    },
    "setfog": {
        "name": "setFog",
        "description": "Smoothly change the fog over given time (in seconds). See also [fogParams](https://community.bistudio.com/wiki/fogParams).\n> ",
        "syntaxArray": [
            {
                "Syntax": "time setFog fog",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - transition time to the new value\n\nfog: [Number](https://community.bistudio.com/wiki/Number) - fog density. Range 0..1\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "time setFog [fogValue, fogDecay, fogBase] *Since Arma 3*",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - transition time to the new value\n\nfogValue: [Number](https://community.bistudio.com/wiki/Number) - normal [fog](https://community.bistudio.com/wiki/fog) value that represents fog density at *fogBase* level. Range 0..1\n\nfogDecay: [Number](https://community.bistudio.com/wiki/Number) - decay of fog density with altitude. Range -1..1\n\nfogBase: [Number](https://community.bistudio.com/wiki/Number) - base altitude ([ASL](https://community.bistudio.com/wiki/Position#PositionASL)) of fog (in meters). Range -5000..5000\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n15 setFog 0.5;\n```\n",
            "Force no fog: \n```sqf\n0 setFog 0;\n// forceWeatherChange; // change is immediate\n999999 setFog 0;\n```\n",
            "\n```sqf\n0 setFog [1, 0.01, 0];\n```\n",
            "Mountain fog, starts from 70m ASL and thickens more the higher you climb: \n```sqf\n0 setFog [1, -1, 70];\n```\n",
            "Valley fog, starts from 60m ASL and thickens more the lower you descend: \n```sqf\n0 setFog [1, 1, 60];\n```\n",
            "Fooooog on the waaaater: \n```sqf\n0 setFog [1, 1, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFog",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "getposasl": {
        "name": "getPosASL",
        "description": "Returns the object position height above sea level.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) = **getPosASL** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\n_AslPos = getPosASL player;\n```\n",
            "\n```sqf\nhint format [\"position above sea level: %1\", (getPosASL player) select 2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPosASL",
        "modifiers": [
            "Global argument"
        ]
    },
    "getvariable": {
        "name": "getVariable",
        "description": "Returns the value of variable in the variable space assigned to various data types.\nAll available data types combinations:\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "varspace getVariable name",
                "Params": "varspace: [Namespace](https://community.bistudio.com/wiki/Namespace), [Object](https://community.bistudio.com/wiki/Object), [Display](https://community.bistudio.com/wiki/Display), [Control](https://community.bistudio.com/wiki/Control), [Group](https://community.bistudio.com/wiki/Group), [Location](https://community.bistudio.com/wiki/Location), [Task](https://community.bistudio.com/wiki/Task), [Team Member](https://community.bistudio.com/wiki/Team_Member), [Display](https://community.bistudio.com/wiki/Display), [Control](https://community.bistudio.com/wiki/Control)\n\nname: [String](https://community.bistudio.com/wiki/String) - Variable name in given namespace\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) or [Nothing](https://community.bistudio.com/wiki/Nothing) if the variable doesn't exist"
            },
            {
                "Syntax": "varspace getVariable [name, defaultValue]",
                "Params": "varspace: [Namespace](https://community.bistudio.com/wiki/Namespace), [Object](https://community.bistudio.com/wiki/Object), [Display](https://community.bistudio.com/wiki/Display), [Control](https://community.bistudio.com/wiki/Control), [Group](https://community.bistudio.com/wiki/Group), [Location](https://community.bistudio.com/wiki/Location), [Task](https://community.bistudio.com/wiki/Task), [Team Member](https://community.bistudio.com/wiki/Team_Member), [Display](https://community.bistudio.com/wiki/Display), [Control](https://community.bistudio.com/wiki/Control)\n\nname: [String](https://community.bistudio.com/wiki/String) - Variable name in given namespace\n\ndefaultValue: [Anything](https://community.bistudio.com/wiki/Anything) - Value to return if variable doesn't exist > \n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything) - Current value of the variable or *defaultValue* if the variable doesn't exist."
            }
        ],
        "examples": [
            "\n```sqf\nprivate _variable = myTruck getVariable \"myVariable\"; // returns nil if \"myVariable\" is not set\n```\n",
            "\n```sqf\nprivate _variable = myTruck getVariable [\"myVariable\", 50]; // returns 50 if \"myVariable\" is not set\n```\n",
            "\n```sqf\nfor \"_i\" from 0 to 5 do {\n\t_car = missionNamespace getVariable (\"car\" + str _i);\n\t_car setDamage 0;\n};// Set damage of car0..car5 to 0\n```\n",
            "\n```sqf\nmyMissionVar = 2015;\nmissionNamespace getVariable \"myMissionVar\"; // Returns 2015\n```\n",
            "Get current value of a variable and if it is undefined, define it and get the defined value:\n```sqf\nprivate _var = missionNamespace getVariable \"varName\";\nif (isNil \"_var\") then\n{\n\tmissionNamespace setVariable [\"varName\", 123]; \n\t_var = 123;\n};\n// _var here will contain current value of the variable varName\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getVariable",
        "modifiers": [
            "Global argument"
        ]
    },
    "enablevehiclesensor": {
        "name": "enableVehicleSensor",
        "description": "Enable/disable given sensor",
        "syntaxArray": [
            {
                "Syntax": "vehicle **enableVehicleSensor** [componentName, state]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\ncomponentName : [String](https://community.bistudio.com/wiki/String) - The component's name (can either be it is \"real name\" or it is className)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean) - component state [on/off]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n vehicle player enableVehicleSensor   [\"PassiveRadarSensorComponent\",false]; // disables passive radar \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableVehicleSensor",
        "modifiers": []
    },
    "displayaddeventhandler": {
        "name": "displayAddEventHandler",
        "description": "Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.\n\nReturning [true](https://community.bistudio.com/wiki/true) in EH code will override default engine handling for keyboard events.\n\nSee [User Interface Event Handlers](https://community.bistudio.com/wiki/User_Interface_Event_Handlers) for the full list of event names.\n\nIf applicable, see [DIK_KeyCodes](https://community.bistudio.com/wiki/DIK_KeyCodes) for a list of key code constants, which are relevant to key related user interface events like: [KeyDown](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onKeyDown) & [KeyUp](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onKeyUp).\n> \n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "display **displayAddEventHandler** [eventName, code]",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\n[eventName, code]: [Array](https://community.bistudio.com/wiki/Array)\n\neventName: [String](https://community.bistudio.com/wiki/String)\n\ncode: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nmoduleName_keyDownEHId = findDisplay 46 displayAddEventHandler [\"KeyDown\", \"hint str _this;\"];\n```\n",
            "\n```sqf\nmoduleName_keyDownEHId = findDisplay 46 displayAddEventHandler [\"KeyDown\", {hint str _this}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/displayAddEventHandler",
        "modifiers": []
    },
    "setwaypointscript": {
        "name": "setWaypointScript",
        "description": "Attaches a script to a scripted waypoint. In early versions of Arma, command consisted of a script name and additional script arguments and the script had to use [SQS](https://community.bistudio.com/wiki/SQS_Syntax)-Syntax. The script receives the following arguments in [_this](https://community.bistudio.com/wiki/Magic_Variables#this) variable: [group, position, target] + [the optional passed arguments]. The optional arguments are [appended](https://community.bistudio.com/wiki/append) to the end of the arguments array.\n> ",
        "syntaxArray": [
            {
                "Syntax": "waypoint setWaypointScript command",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\ncommand: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointScript \"find.sqs player\";\n```\n",
            "\n```sqf\n[_grp, 2] setWaypointScript \"somescript.sqf [1,2,3,4,5,6,7,8]\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointScript",
        "modifiers": []
    },
    "screentoworld": {
        "name": "screenToWorld",
        "description": "Returns the position on landscape ([PositionAGL](https://community.bistudio.com/wiki/PositionAGL)) corresponding to the given point on screen (in UI coordinates).",
        "syntaxArray": [
            {
                "Syntax": "**screenToWorld** screen",
                "Params": "screen: [Array](https://community.bistudio.com/wiki/Array) - Screen position [x,y] (see [SafeZone](https://community.bistudio.com/wiki/SafeZone) for more info)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [PositionAGL](https://community.bistudio.com/wiki/PositionAGL), world position on surface [x,y,0]"
            }
        ],
        "examples": [
            "\n```sqf\n_wPos = screenToWorld [0.5,0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/screenToWorld",
        "modifiers": []
    },
    "canmove": {
        "name": "canMove",
        "description": "Returns if the given vehicle is still able to move.\n> ",
        "syntaxArray": [
            {
                "Syntax": "canMove unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the vehicle is able to move, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nif (not canMove _tank) then\n{\n\tplayer sideChat \"He's nailed on the ground! Now hurry!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canMove",
        "modifiers": [
            "Global argument"
        ]
    },
    "taskname": {
        "name": "taskName",
        "description": "Returns the name of the given task.",
        "syntaxArray": [
            {
                "Syntax": "taskName task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - task name"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _taskName = taskName _mytask;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskName",
        "modifiers": []
    },
    "ctrlsetfontsecondary": {
        "name": "ctrlSetFontSecondary",
        "description": "Sets the font size of the secondary text of given control.",
        "syntaxArray": [
            {
                "Syntax": "ctrl ctrlSetFontSecondary fontClass",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nfontClass: [String](https://community.bistudio.com/wiki/String) - Font class\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontSecondary \"TahomaB\";"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontSecondary",
        "modifiers": []
    },
    "faction": {
        "name": "faction",
        "description": "Gets unit faction. Factions were introduced in Arma 2 and are defined under *CfgFactionClasses*.\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "faction unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _playerFaction = faction player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/faction",
        "modifiers": [
            "Global argument"
        ]
    },
    "sendaumessage": {
        "name": "sendAUMessage",
        "description": "Send the command to the list of clients.",
        "syntaxArray": [
            {
                "Syntax": "**sendAUMessage** [clientList, command]",
                "Params": "[clientList, command]: [Array](https://community.bistudio.com/wiki/Array)\n\nclientList: [Array](https://community.bistudio.com/wiki/Array)\n\ncommand: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsendAUMessage [[dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sendAUMessage",
        "modifiers": []
    },
    "movetocompleted": {
        "name": "moveToCompleted",
        "description": "Check if latest low level moveTo command is finished.",
        "syntaxArray": [
            {
                "Syntax": "**moveToCompleted** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isCompleted = moveToCompleted _unit;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moveToCompleted",
        "modifiers": []
    },
    "waves": {
        "name": "waves",
        "description": "Return waves value.",
        "syntaxArray": [
            {
                "Syntax": "**waves**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nwaveIntensity = waves;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waves",
        "modifiers": []
    },
    "setformation": {
        "name": "setFormation",
        "description": "Set group formation.\nFormation is one of: \n\n* **\"COLUMN\"**\n\n* **\"STAG COLUMN\"**\n\n* **\"WEDGE\"**\n\n* **\"ECH LEFT\"**\n\n* **\"ECH RIGHT\"**\n\n* **\"VEE\"**\n\n* **\"LINE\"**\n\n* **\"FILE\"** (ArmA)\n\n* **\"DIAMOND\"** (ArmA)",
        "syntaxArray": [
            {
                "Syntax": "group **setFormation** formation",
                "Params": "group: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nformation: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_groupOne setFormation \"LINE\""
        ],
        "Url": "https://community.bistudio.com/wiki/setFormation",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "setcombatbehaviour": {
        "name": "setCombatBehaviour",
        "description": "Sets unit behaviour (main syntax) or group behaviour (alternative syntax). To retrieve unit or group behaviour see [combatBehaviour](https://community.bistudio.com/wiki/combatBehaviour). The behaviour is one of: \n\n* \"CARELESS\"\n\n* \"SAFE\"\n\n* \"AWARE\"\n\n* \"COMBAT\"\n\n* \"STEALTH\"\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit setCombatBehaviour behaviour",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - AI unit\n\nbehaviour: [String](https://community.bistudio.com/wiki/String) - see description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "group setCombatBehaviour behaviour",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) - AI group\n\nbehaviour: [String](https://community.bistudio.com/wiki/String) - see description\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit1 setCombatBehaviour \"SAFE\";\n```\n",
            "\n```sqf\ngroup1 setCombatBehaviour \"CARELESS\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCombatBehaviour",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "getallhitpointsdamage": {
        "name": "getAllHitPointsDamage",
        "description": "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in [setHitIndex](https://community.bistudio.com/wiki/setHitIndex) and [getHitIndex](https://community.bistudio.com/wiki/getHitIndex). Levels of damage are:\n\n* 0: no damage\n\n* 1: full damage",
        "syntaxArray": [
            {
                "Syntax": "**getAllHitPointsDamage** entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object) - object to be queried\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [] if entity is null or has no shape, otherwise [hitpointsNamesArray, selectionsNamesArray, damageValuesArray]"
            }
        ],
        "examples": [
            "\n```sqf\ngetAllHitPointsDamage player;\n//[\n//[\"hitface\",\"hitneck\",\"hithead\",\"hitpelvis\",\"hitabdomen\",\"hitdiaphragm\",\"hitchest\",\"hitbody\",\"hitarms\",\"hithands\",\"hitlegs\",\"incapacitated\"],\n//[\"face_hub\",\"neck\",\"head\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\",\"body\",\"arms\",\"hands\",\"legs\",\"body\"],\n//[0,0,0,0,0,0,0,0,0,0,0,0]\n//]\n\n```\n",
            "\n```sqf\ngetAllHitPointsDamage (vehicle player);\n//[\n  //[\"hithull\",\"hitengine\",\"hitengine2\",\"hitavionics\",\"hitfuel\",\"hitfuel2\",\"hitglass1\",\"hitlaileron\",\"hitraileron\",\"hitlcrudder\",\"hitrrudder\",\"hitlcelevator\",\"hitrelevator\",\"#gear_f_lights\"],\n  //[\"hithull\",\"hitengine\",\"hitengine2\",\"hitavionics\",\"hitfuel\",\"hitfuel2\",\"hitglass1\",\"hitlaileron\",\"hitraileron\",\"hitlcrudder\",\"hitrrudder\",\"hitlcelevator\",\"hitrelevator\",\" \"],\n  //[0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n//]\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAllHitPointsDamage",
        "modifiers": [
            "Global argument"
        ]
    },
    "getrelpos": {
        "name": "getRelPos",
        "description": "Returns position that is given distance and relative direction away from original object.",
        "syntaxArray": [
            {
                "Syntax": "object **getRelPos** [distance, direction]",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Object\n\ndistance: [Number](https://community.bistudio.com/wiki/Number) - Distance from object\n\ndirection: [Number](https://community.bistudio.com/wiki/Number) - Direction relative to object's current direction\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)"
            }
        ],
        "examples": [
            "Find position 100 metres away at player's 3 o'clock:\n```sqf\n_relpos = player getRelPos [100, 90];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getRelPos",
        "modifiers": [
            "Global argument"
        ]
    },
    "markerpos": {
        "name": "markerPos",
        "description": "Returns marker position. See also [setMarkerPos](https://community.bistudio.com/wiki/setMarkerPos).",
        "syntaxArray": [
            {
                "Syntax": "markerPos markerName",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [x, y, **0**]"
            },
            {
                "Syntax": "markerPos [markerName, preserveElevation] *Since Arma 3 v1.93*",
                "Params": "[markerName, preserveElevation]: [Array](https://community.bistudio.com/wiki/Array)\n\nmarkerName: [String](https://community.bistudio.com/wiki/String)\n\npreserveElevation: [Boolean](https://community.bistudio.com/wiki/Boolean) (Optional, default [false](https://community.bistudio.com/wiki/false))\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) if *preserveElevation* is [true](https://community.bistudio.com/wiki/true) or [x, y, **0**] if *preserveElevation* is [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_mPos1 = markerPos \"markerOne\";\n```\n",
            "\n```sqf\n_mPos2 = markerPos [\"markerTwo\", true];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerPos",
        "modifiers": []
    },
    "setobjectproxy": {
        "name": "setObjectProxy",
        "description": "Set the proxy object associated with the given editor object.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **setObjectProxy** [object,proxy object]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[object,proxy object]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_map setObjectProxy [\"_group_0\", vehicle (leader _group)];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setObjectProxy",
        "modifiers": []
    },
    "vehiclechat": {
        "name": "vehicleChat",
        "description": "Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally, see [remoteExec](https://community.bistudio.com/wiki/remoteExec).\n\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicleName **vehicleChat** chatText",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object) - Vehicle unit is in\n\nchatText: [String](https://community.bistudio.com/wiki/String) - Message to transmit\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player vehicleChat \"Show this text\";\n```\n",
            "\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [sideChat](https://community.bistudio.com/wiki/sideChat) \"sideChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [globalChat](https://community.bistudio.com/wiki/globalChat) \"globalChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [groupChat](https://community.bistudio.com/wiki/groupChat) \"groupChat\";\n[vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) vehicleChat \"vehicleChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [commandChat](https://community.bistudio.com/wiki/commandChat) \"commandChat\";\n[driver](https://community.bistudio.com/wiki/driver) [vehicle](https://community.bistudio.com/wiki/vehicle) [player](https://community.bistudio.com/wiki/player) [customChat](https://community.bistudio.com/wiki/customChat) [1, \"customChat\"];\n[systemChat](https://community.bistudio.com/wiki/systemChat) \"systemChat\";\n\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleChat",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "behaviour": {
        "name": "behaviour",
        "description": "Returns the behaviour of the individual unit, this is why it only accepts [Object](https://community.bistudio.com/wiki/Object) as the argument. For Arma 3 behaviour explanation see [Arma_3_AI_Behavior](https://community.bistudio.com/wiki/Arma_3_AI_Behavior)",
        "syntaxArray": [
            {
                "Syntax": "**behaviour** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) -  \nOne of:\n\n* \"CARELESS\"\n\n* \"SAFE\"\n\n* \"AWARE\"\n\n* \"COMBAT\"\n\n* \"STEALTH\"\n\n* \"ERROR\" (Since [](https://community.bistudio.com/wiki/Category:Arma_3)[1.78](https://community.bistudio.com/wiki/Category:Introduced_with_Arma_3_version_1.78) when used on empty vehicles and such)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier setBehaviour \"CARELESS\";\n_b = behaviour _soldier; //returns \"CARELESS\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/behaviour",
        "modifiers": [
            "Global argument"
        ]
    },
    "ropeattachedobjects": {
        "name": "ropeAttachedObjects",
        "description": "Returns an array of all entities that are attached to the transport with [ropes](https://community.bistudio.com/wiki/ropes). This command is the opposite of [ropeAttachedTo](https://community.bistudio.com/wiki/ropeAttachedTo).\n[](https://community.bistudio.com/wiki/File:ropeAttachedObjects.jpg)",
        "syntaxArray": [
            {
                "Syntax": "ropeAttachedObjects ropesOwner",
                "Params": "ropesOwner: [Object](https://community.bistudio.com/wiki/Object) - transport from which a single or multiple ropes are originating\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of attached entities on ropes"
            }
        ],
        "examples": [
            "\n```sqf\n_cargoArray = ropeAttachedObjects heli1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeAttachedObjects",
        "modifiers": []
    },
    "gusts": {
        "name": "gusts",
        "description": "Return the current gusts value. Scale is 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "**gusts**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_gustsval = gusts;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/gusts",
        "modifiers": []
    },
    "isstressdamageenabled": {
        "name": "isStressDamageEnabled",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if stress damage is enabled in the game settings. A getter for [enableStressDamage](https://community.bistudio.com/wiki/enableStressDamage).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**isStressDamageEnabled**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) Returns true if enabled, otherwise false"
            }
        ],
        "examples": [
            "\n```sqf\n_settingEnabled = isStressDamageEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isStressDamageEnabled",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "members": {
        "name": "members",
        "description": "Return a list of members in given team.",
        "syntaxArray": [
            {
                "Syntax": "**members** team",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_members = members _team\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/members",
        "modifiers": []
    },
    "tvsetcursel": {
        "name": "tvSetCurSel",
        "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (*available since Arma 3 v1.56*)",
        "syntaxArray": [
            {
                "Syntax": "tvSetCurSel [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control tvSetCurSel path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetCurSel [101, [0]];\n```\n",
            "\n```sqf\n_ctrl tvSetCurSel [0,0,0];\n```\n",
            "\n```sqf\n[] spawn\n{\n\tdisableSerialization;\n\t_CT_TREE = findDisplay 46 ctrlCreate [\"RscTree\", -1];\n\t_CT_TREE ctrlSetPosition [0,0,0.3,1];\n\t_CT_TREE ctrlCommit 0;\n\t_CT_TREE tvAdd [[],\"Parent_A\"];\n\t_CT_TREE tvAdd [[0],\"Child_A\"];\n\t_CT_TREE tvAdd [[0,0],\"Grandchild_A\"];\n\t_CT_TREE tvAdd [[],\"Parent_B\"];\n\t_CT_TREE tvAdd [[1],\"Child_B\"];\n\tsleep 1;\n\thint \"SELECT [0,0,0]\";\n\t_CT_TREE tvSetCurSel [0,0,0];\n\tsleep 2;\n\thint \"DESELECT ALL\";\n\t_CT_TREE tvSetCurSel [-1];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetCurSel",
        "modifiers": []
    },
    "camsetbank": {
        "name": "camSetBank",
        "description": "Sets camera bank angle. Does not commit changes.\n> ",
        "syntaxArray": [
            {
                "Syntax": "camera **camSetBank** bank",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nbank: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_camera camSetBank -0.1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camSetBank",
        "modifiers": []
    },
    "ctrlsetmouseposition": {
        "name": "ctrlSetMousePosition",
        "description": "Similar to [setMousePosition](https://community.bistudio.com/wiki/setMousePosition) but relative to the given control.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetMousePosition [x, y]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nx: [Number](https://community.bistudio.com/wiki/Number) - Position in x\n\ny: [Number](https://community.bistudio.com/wiki/Number) - Position in y\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetMousePosition [0.5, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetMousePosition",
        "modifiers": []
    },
    "setunitpos": {
        "name": "setUnitPos",
        "description": "Set unit position rules. This command will not change the stance of the human player, even though it will change the output of [unitPos](https://community.bistudio.com/wiki/unitPos) command. To change player stance use [playAction](https://community.bistudio.com/wiki/playAction) or [playActionNow](https://community.bistudio.com/wiki/playActionNow):\n\n```sqf\nplayer playAction \"PlayerProne\"; // DOWN\nplayer playAction \"PlayerStand\"; // UP\nplayer playAction \"PlayerCrouch\"; // MIDDLE\n```\n",
        "syntaxArray": [
            {
                "Syntax": "unit **setUnitPos** mode",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmode: [String](https://community.bistudio.com/wiki/String) - Can be:\n\n* \"DOWN\" - Unit goes prone and stays prone.\n\n* \"UP\" - Unit stands and stays standing.\n\n* \"MIDDLE\" - Kneel Position. [](https://community.bistudio.com/wiki/Category:Armed_Assault)[1.04](https://community.bistudio.com/wiki/Category:Introduced_with_Armed_Assault_version_1.04) - Unit will not kneel if it is unarmed\n\n* \"AUTO\" - Unit chooses mode according to circumstances.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier setUnitPos \"UP\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setUnitPos",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "set3dengrid": {
        "name": "set3DENGrid",
        "description": "Sets the grid increment for the given transformation type.",
        "syntaxArray": [
            {
                "Syntax": "**set3DENGrid** [type, value]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - Name of transformation. Can be:\n\n* \"r\" - Rotation\n\n* \"t\" - Translation\n\n* \"s\" - Scale\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - Transformation increment\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENGrid [\"t\",100]; // 100m movement increment\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENGrid",
        "modifiers": []
    },
    "buttonsetaction": {
        "name": "buttonSetAction",
        "description": "Set the action of a control of the currently active user dialog. The script statement is executed on button release and _this is available, but contains \"\"; See [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs. Works with:\n\n* [CT_BUTTON](https://community.bistudio.com/wiki/CT_BUTTON)\n\n* [CT_XBUTTON](https://community.bistudio.com/wiki/CT_XBUTTON)\n\n* [CT_ACTIVETEXT](https://community.bistudio.com/wiki/CT_ACTIVETEXT)\n\n* [CT_SHORTCUTBUTTON](https://community.bistudio.com/wiki/CT_SHORTCUTBUTTON)",
        "syntaxArray": [
            {
                "Syntax": "**buttonSetAction** [idc, action]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Button IDC\n\naction: [String](https://community.bistudio.com/wiki/String) - **[SQS](https://community.bistudio.com/wiki/SQS_Syntax)** code body that should be executed when the button/active text is clicked\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **buttonSetAction** action",
                "Params": "control:  [Control](https://community.bistudio.com/wiki/Control) - Button control\n\naction:  [String](https://community.bistudio.com/wiki/String) - **[SQS](https://community.bistudio.com/wiki/SQS_Syntax)** code body that should be executed when the button/active text is clicked\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nbuttonSetAction [100, \"player exec \"\"reply.sqs\"\"\"];\n```\n",
            "\n```sqf\n_ctrl buttonSetAction \"if (alive bob) then {hint 'alive'} else {hint 'dead'}\"; // SQF but SQS compatible, see SQS\n```\n",
            "Script is SQS\n```sqf\n_control buttonSetAction \"hint format ['Is SQS: %1', !isNil '_time']\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/buttonSetAction",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "addonfiles": {
        "name": "addonFiles",
        "description": "Returns a list of files present in the addon.\n> ",
        "syntaxArray": [
            {
                "Syntax": "addonFiles [pboPrefix, fileExtension]",
                "Params": "[pboPrefix, fileExtension] - [Array](https://community.bistudio.com/wiki/Array)\n\npboPrefix: [String](https://community.bistudio.com/wiki/String) - addon prefix available from [allAddonsInfo](https://community.bistudio.com/wiki/allAddonsInfo)\n\nfileExtension (Optional): [String](https://community.bistudio.com/wiki/String) - file extension to filter results, for example \".paa\"\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\naddonFiles [\"a3\\3den\\\", \".paa\"];\n/*\n\t[\n\t\t\"a3\\3den\\data\\attributes\\formation\\ech_left_ca.paa\",\n\t\t\"a3\\3den\\data\\attributes\\formation\\stag_column_ca.paa\",\n\t\t\"a3\\3den\\data\\attributes\\stance\\down_ca.paa\",\n\t\t\"a3\\3den\\data\\cfg3den\\layer\\icondisabled_ca.paa\",\n\t\t\"a3\\3den\\data\\controlsgroups\\diagmousecontrol\\mouse_ca.paa\",\n\t\t...\n\t]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addonFiles",
        "modifiers": []
    },
    "viewdistance": {
        "name": "viewDistance",
        "description": "Returns the rendering distance.",
        "syntaxArray": [
            {
                "Syntax": "**viewDistance**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nhint (\"my view distance is \" + str viewDistance + \" meters\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/viewDistance",
        "modifiers": []
    },
    "precision": {
        "name": "precision",
        "description": "Return the precision of the given entity, how is the entity able to be precise when moving to given target.",
        "syntaxArray": [
            {
                "Syntax": "**precision** entity",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nif (position _this distance _dangerPos <= precision _this) then {...};\n//used in formationCDanger.fsm\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/precision",
        "modifiers": []
    },
    "setmarkerbrush": {
        "name": "setMarkerBrush",
        "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\n*brush* can be:\n\n* \"Solid\"\n\n* \"SolidFull\" (A3 only)\n\n* \"Horizontal\"\n\n* \"Vertical\"\n\n* \"Grid\"\n\n* \"FDiagonal\"\n\n* \"BDiagonal\"\n\n* \"DiagGrid\"\n\n* \"Cross\"\n\n* \"Border\"\n\n* \"SolidBorder\"\n> ",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerBrush** brush",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\nbrush: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerBrush \"DIAGGRID\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerBrush",
        "modifiers": [
            "Global effect"
        ]
    },
    "ctrlsetpositionx": {
        "name": "ctrlSetPositionX",
        "description": "Sets horizontal position (x) of the 2D control. [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) is required to complete the operation.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetPositionX x",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - 2D control\n\nx: [Number](https://community.bistudio.com/wiki/Number) - Horizontal position of the control\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl ctrlSetPositionX 0.5;\n_ctrl ctrlCommit 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetPositionX",
        "modifiers": []
    },
    "waypointformation": {
        "name": "waypointFormation",
        "description": "Gets the waypoint formation.\n\nPossible values are: \n\n* \"NO CHANGE\"\n\n* \"COLUMN\"\n\n* \"STAG COLUMN\"\n\n* \"WEDGE\"\n\n* \"ECH LEFT\"\n\n* \"ECH RIGHT\"\n\n* \"VEE\"\n\n* \"LINE\"\n\n* \"FILE\"\n\n* \"DIAMOND\"",
        "syntaxArray": [
            {
                "Syntax": "**waypointFormation** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointFormation [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointFormation",
        "modifiers": []
    },
    "setwinddir": {
        "name": "setWindDir",
        "description": "Changes the wind direction smoothly.",
        "syntaxArray": [
            {
                "Syntax": "time **setWindDir** value",
                "Params": "time: [Number](https://community.bistudio.com/wiki/Number) - Transition time in seconds. \n```sqf\n0\n```\n will cause the change to be immediate\n\nvalue: [Number](https://community.bistudio.com/wiki/Number) - Azimuth\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "**setWindDir** direction",
                "Params": "direction: [Array](https://community.bistudio.com/wiki/Array) - Flat wind direction and strength in format [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n60 setWindDir 180;\n```\n",
            "\n```sqf\nsetWindDir [1, -15];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWindDir",
        "modifiers": [
            "Global effect",
            "Server execution"
        ]
    },
    "fileexists": {
        "name": "fileExists",
        "description": "Checks if file on given path exists. Uses same path resolve code as [loadFile](https://community.bistudio.com/wiki/loadFile).",
        "syntaxArray": [
            {
                "Syntax": "fileExists path",
                "Params": "path: [String](https://community.bistudio.com/wiki/String) - Path to file\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if it exists, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\nfileExists \"\\a3\\mySuperPath\\bestFileEver.paa\"; // Returns false\n```\n",
            "\n```sqf\nprivate _path = \"a3\\functions_f_mp_mark\\revive\\_addaction_revive.inc\";\n\nif (fileExists _path) then {loadFile _path} else {diag_log format [\"File (%1) does not exist!\",_path]};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fileExists",
        "modifiers": []
    },
    "owner": {
        "name": "owner",
        "description": "On server machine, returns the [ machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID) of the client to which the object is [local](https://community.bistudio.com/wiki/local). Otherwise returns 0. For use on clients [clientOwner](https://community.bistudio.com/wiki/clientOwner) command is available. To find out the owner of a [Group](https://community.bistudio.com/wiki/Group), use [groupOwner](https://community.bistudio.com/wiki/groupOwner).",
        "syntaxArray": [
            {
                "Syntax": "**owner** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_clientID = owner _someobject;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/owner",
        "modifiers": [
            "Global argument",
            "Server execution"
        ]
    },
    "getgroupicon": {
        "name": "getGroupIcon",
        "description": "Get group icon properties.",
        "syntaxArray": [
            {
                "Syntax": "group **getGroupIcon** id",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\nid: [Number](https://community.bistudio.com/wiki/Number) - Icon id\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_grpIconId = _group getVariable \"BIS_MARTA_ICON_TYPE\";\n_grpIcon = _group getGroupIcon _grpIconId;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getGroupIcon",
        "modifiers": [
            "Global argument"
        ]
    },
    "clear3deninventory": {
        "name": "clear3DENInventory",
        "description": "Deletes inventory from mission.sqm of given units. Effect is not immediately visible, only when previewing the inventory resets to default.",
        "syntaxArray": [
            {
                "Syntax": "**clear3DENInventory** entities",
                "Params": "entities: [Array](https://community.bistudio.com/wiki/Array) of types [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclear3DENInventory get3DENSelected \"Object\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clear3DENInventory",
        "modifiers": []
    },
    "tvsortbyvalueall": {
        "name": "tvSortByValueAll",
        "description": "Sorts all children, including trees deriving from given path.  Value of [Tree View](https://community.bistudio.com/wiki/CT_TREE) entries is used for sorting.",
        "syntaxArray": [
            {
                "Syntax": "control tvSortByValueAll [path, reversed]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - Path to start sorting from\n\nreversed: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to reverse sort it.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncontrol tvSortByValueAll [[], false]; // Sorts the complete Tree View\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSortByValueAll",
        "modifiers": []
    },
    "getrepaircargo": {
        "name": "getRepairCargo",
        "description": "Returns the amount (1 is full) of repair resources in the cargo space of a repair vehicle. \n> ",
        "syntaxArray": [
            {
                "Syntax": "**getRepairCargo** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - repair cargo value, -1 if repair cargo is not supported, 0 if the vehicle is ![alive](https://community.bistudio.com/wiki/alive) or [isNull](https://community.bistudio.com/wiki/isNull)"
            }
        ],
        "examples": [
            "\n```sqf\nvalue = getRepairCargo vehicleName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getRepairCargo",
        "modifiers": [
            "Global argument"
        ]
    },
    "removeitemfrombackpack": {
        "name": "removeItemFromBackpack",
        "description": "Removes item from soldier's backpack.",
        "syntaxArray": [
            {
                "Syntax": "unit removeItemFromBackpack item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeItemFromBackpack \"itemGPS\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeItemFromBackpack",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "nearestlocations": {
        "name": "nearestLocations",
        "description": "Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest.\n> ",
        "syntaxArray": [
            {
                "Syntax": "nearestLocations [position, [locationType1, locationType2, ...], radius, sortPosition]",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\nlocationTypeX: [String](https://community.bistudio.com/wiki/String) - [location type](https://community.bistudio.com/wiki/Location#Location_Types) name, e.g \"NameCity\"\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - maximum distance from the given position that returned locations may be, in meters.\n\nsortPosition: [Array](https://community.bistudio.com/wiki/Array) - (Optional) [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object) - results will be sorted from the distance to given *sortPosition* (nearest to farthest still)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [locations](https://community.bistudio.com/wiki/Location)"
            }
        ],
        "examples": [
            "\n```sqf\n_nearbyLocations = nearestLocations [position player, [\"RockArea\", \"VegetationFir\"], 100];\n```\n",
            "Find any of nearest locations:\n```sqf\nprivate _allLocationTypes = [];\n\"_allLocationTypes pushBack configName _x\" configClasses (configFile >> \"CfgLocationTypes\");\n{\n\tsystemChat format [\n\t\t\"%1 (%2) - %3m\", \n\t\t_x, \n\t\ttext _x, \n\t\tposition player distance _x\n\t];\n} forEach nearestLocations [player, _allLocationTypes, 500];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestLocations",
        "modifiers": []
    },
    "setname": {
        "name": "setName",
        "description": "Sets the name of a location or a person. In Arma 3 this can be used to set [name](https://community.bistudio.com/wiki/name) of a person but only in single player.",
        "syntaxArray": [
            {
                "Syntax": "object **setName** name",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit **setName** [name, firstName, lastName]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[name, firstName, lastName]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\nfirstName: [String](https://community.bistudio.com/wiki/String)\n\nlastName: [String](https://community.bistudio.com/wiki/String)\n\nlocation: [Location](https://community.bistudio.com/wiki/Location)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "location **setName** name",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setName \"My Location Name\";\n```\n",
            "\n```sqf\nplayer setName \"New Name\";\n```\n",
            "\n```sqf\nplayer setName [\"Ben Kerry\",\"Ben\",\"Kerry\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setName",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "ctheadercount": {
        "name": "ctHeaderCount",
        "description": "Returns number of headers (rows not included) in the RscControlsTable.",
        "syntaxArray": [
            {
                "Syntax": "**ctHeaderCount** ctrl",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nctHeaderCount _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctHeaderCount",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "canstand": {
        "name": "canStand",
        "description": "Returns if the given soldier is able to stand up.",
        "syntaxArray": [
            {
                "Syntax": "[Boolean](https://community.bistudio.com/wiki/Boolean) = **canStand** unitName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) -  \n[true](https://community.bistudio.com/wiki/true) if he's still able to stand up, [false](https://community.bistudio.com/wiki/false) if not. Automatically return [false](https://community.bistudio.com/wiki/false) if unit is vehicle."
            }
        ],
        "examples": [
            "[SQS](https://community.bistudio.com/wiki/SQS_Syntax): \n```sqf\n?!(canStand player) : player groupChat \"My legs! They hit my legs!\"\n```\n",
            "\n```sqf\nif (!canStand player) then \n{\n     player groupChat \"My legs! They hit my legs!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canStand",
        "modifiers": [
            "Global argument"
        ]
    },
    "remoteexecutedowner": {
        "name": "remoteExecutedOwner",
        "description": "Returns the [ machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID) of the client that initiated [Remote Execution](https://community.bistudio.com/wiki/Remote_Execution). If used in SP or outside of remote executed context, the command returns 0.\n> ",
        "syntaxArray": [
            {
                "Syntax": "remoteExecutedOwner",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_callerRE = remoteExecutedOwner;\n```\n",
            "Send request to the server and get immediate response:\n\n```sqf\n{\n\t// in this scope, the remoteExecutedOwner equals clientOwner of the sender\n\t// so using it as target in remoteExec will send response right back at him\n\t[\n\t\ttime, // mission time value on the server\n\t\t{\n\t\t\thint format\n\t\t\t[\n\t\t\t\t\"Request recieved!\\nMission time value on the server is: %1\",\n\t\t\t\t_this\n\t\t\t];\n\t\t}\n\t]\n\tremoteExec [\"call\", remoteExecutedOwner]; // server response to the sender\n} \nremoteExec [\"call\", 2]; // send request to server\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/remoteExecutedOwner",
        "modifiers": []
    },
    "showncuratorcompass": {
        "name": "shownCuratorCompass",
        "description": "Returns true if compass is shown.",
        "syntaxArray": [
            {
                "Syntax": "shownCuratorCompass",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isShown = shownCuratorCompass;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownCuratorCompass",
        "modifiers": []
    },
    "radiochannelremove": {
        "name": "radioChannelRemove",
        "description": "Remove the units from the custom radio channel.",
        "syntaxArray": [
            {
                "Syntax": "customChannelID radioChannelRemove units",
                "Params": "customChannelID: [Number](https://community.bistudio.com/wiki/Number) - [custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command\n\nunits: [Array](https://community.bistudio.com/wiki/Array) - list of units\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n3 radioChannelRemove [blufor_unit_1, blufor_unit_2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioChannelRemove",
        "modifiers": []
    },
    "setrectangular": {
        "name": "setRectangular",
        "description": "Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.",
        "syntaxArray": [
            {
                "Syntax": "location **setRectangular** set",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\nset: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) set rectangular, [false](https://community.bistudio.com/wiki/false) set elliptical\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLocation setRectangular true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRectangular",
        "modifiers": []
    },
    "lineintersects": {
        "name": "lineIntersects",
        "description": "Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.\n\n**NOTE:** Doesn't work under water. Max harcoded distance is 1000m.",
        "syntaxArray": [
            {
                "Syntax": "**lineIntersects** [begPos, endPos, objIgnore1, objIgnore2]",
                "Params": "[begPos, endPos, objIgnore1, objIgnore2]: [Array](https://community.bistudio.com/wiki/Array)\n\nbegPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\nendPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\nobjIgnore1: (optional) [Object](https://community.bistudio.com/wiki/Object) - object to ignore. When testing intersection from an object/unit/vehicle, pass that object here to prevent intersection inside of the object.\n\nobjIgnore2: (optional) [Object](https://community.bistudio.com/wiki/Object) - another object to ignore. When testing intersection of a line between two objects, pass the second object here to prevent intersection inside of it being reported\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - true if intersection"
            }
        ],
        "examples": [
            "\n```sqf\nlineIntersects [eyePos player, aimPos chopper, player, chopper]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lineIntersects",
        "modifiers": [
            "Global argument"
        ]
    },
    "weightrtd": {
        "name": "weightRTD",
        "description": "> Returns weight of RTD helicopter.",
        "syntaxArray": [
            {
                "Syntax": "weightRTD helicopter",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  [fuselage weight, crew weight, fuel weight, [custom weight](https://community.bistudio.com/wiki/setCustomWeightRTD), weapons weight] (kilograms)"
            }
        ],
        "examples": [
            "\n```sqf\n_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weightRTD",
        "modifiers": []
    },
    "waypointforcebehaviour": {
        "name": "waypointForceBehaviour",
        "description": "Returns true if the waypoint behavior is forced.",
        "syntaxArray": [
            {
                "Syntax": "waypointForceBehaviour waypoint;",
                "Params": "waypoint: [Waypoint](https://community.bistudio.com/wiki/Waypoint) - format [[Group](https://community.bistudio.com/wiki/Group), *index*]\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - is forced"
            }
        ],
        "examples": [
            "\n```sqf\n_isForced = waypointForceBehaviour [groupOne, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointForceBehaviour",
        "modifiers": []
    },
    "enablesimulation": {
        "name": "enableSimulation",
        "description": "Enables / disables simulation for the given entity. This command will affect entity simulation only [locally](https://community.bistudio.com/wiki/local). For a global and JIP enabled alternative see [enableSimulationGlobal](https://community.bistudio.com/wiki/enableSimulationGlobal)",
        "syntaxArray": [
            {
                "Syntax": "entity **enableSimulation** state",
                "Params": "entity: [Object](https://community.bistudio.com/wiki/Object)\n\nstate: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer enableSimulation false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableSimulation",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "toloweransi": {
        "name": "toLowerANSI",
        "description": "Converts the supplied string to all lower case characters fast (could be 3x faster than [toLower](https://community.bistudio.com/wiki/toLower)). [ANSI](https://community.bistudio.comhttps://stackoverflow.com/questions/701882/what-is-ansi-format/701920) in this case refers to [ISO-8859-1](https://community.bistudio.comhttps://en.wikipedia.org/wiki/ISO/IEC_8859-1) code page. The command is primary designed to convert characters with [ codes](https://community.bistudio.com/wiki/toArray) 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage. For Unicode alternative see [toLower](https://community.bistudio.com/wiki/toLower).",
        "syntaxArray": [
            {
                "Syntax": "toLowerANSI string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String) - string to convert\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - all lower case string"
            }
        ],
        "examples": [
            "\n```sqf\nhint toLowerANSI \"AaBb1\"; // returns \"aabb1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toLowerANSI",
        "modifiers": []
    },
    "lbsetselectcolor": {
        "name": "lbSetSelectColor",
        "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user [dialog](https://community.bistudio.com/wiki/dialog) to color.\n\nColour is in format [Color (RGBA)](https://community.bistudio.com/wiki/Color).",
        "syntaxArray": [
            {
                "Syntax": "lbSetSelectColor  [idc, index, color]",
                "Params": "[idc, index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number) of control\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control lbSetSelectColor [index, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, color]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\ncolor: [Color (RGBA)](https://community.bistudio.com/wiki/Color)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbSetSelectColor [101, 0, [0, 1, 0, 0.5]];\n```\n",
            "\n```sqf\n_control lbSetSelectColor [0, [0, 1, 0, 0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetSelectColor",
        "modifiers": []
    },
    "getoxygenremaining": {
        "name": "getOxygenRemaining",
        "description": "Returns amount of remaining oxygen.",
        "syntaxArray": [
            {
                "Syntax": "**getOxygenRemaining** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_oxygen = getOxygenRemaining player;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getOxygenRemaining",
        "modifiers": []
    },
    "menushortcuttext": {
        "name": "menuShortcutText",
        "description": "Returns a string containing shortcut text for menu item on the given path. > ",
        "syntaxArray": [
            {
                "Syntax": "menuShortcutText [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control menuShortcutText path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuShortcutText [1, 8]; // Returns \"#\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuShortcutText",
        "modifiers": []
    },
    "set3deniconsvisible": {
        "name": "set3DENIconsVisible",
        "description": "Toggle visibility of [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) icons.",
        "syntaxArray": [
            {
                "Syntax": "**set3DENIconsVisible** [showMap, showScene]",
                "Params": "showScene: [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the scene\n\nshowMap : [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the map\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nset3DENIconsVisible [false, false ];\n```\n\nHide all icons"
        ],
        "Url": "https://community.bistudio.com/wiki/set3DENIconsVisible",
        "modifiers": []
    },
    "enabledynamicsimulation": {
        "name": "enableDynamicSimulation",
        "description": "Enables or disables [Arma 3: Dynamic Simulation](https://community.bistudio.com/wiki/Arma_3:_Dynamic_Simulation) for given non AI object",
        "syntaxArray": [
            {
                "Syntax": "object **enableDynamicSimulation** enable",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) or [Group](https://community.bistudio.com/wiki/Group)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_myObject enableDynamicSimulation true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableDynamicSimulation",
        "modifiers": []
    },
    "setmimic": {
        "name": "setMimic",
        "description": "Sets person's facial expression. To set it back to default, use \"\".\n> ",
        "syntaxArray": [
            {
                "Syntax": "person setMimic mimic",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\nmimic: [String](https://community.bistudio.com/wiki/String) - can be one of:\n\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 setMimic \"hurt\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMimic",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setlightbrightness": {
        "name": "setLightBrightness",
        "description": "Set brightness of light.",
        "syntaxArray": [
            {
                "Syntax": "light setLightBrightness brightness",
                "Params": "light: [Object](https://community.bistudio.com/wiki/Object)\n\nbrightness: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyLight setLightBrightness 2;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setLightBrightness",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "vectormagnitude": {
        "name": "vectorMagnitude",
        "description": "Magnitude of a 3D vector.",
        "syntaxArray": [
            {
                "Syntax": "vectorMagnitude vector",
                "Params": "vector: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_size = vectorMagnitude [0,3,4]; // returns 5\n```\n",
            "\n```sqf\n_speed = vectorMagnitude velocity player;\t\t\t\t// return velocity of player in m/s\n_speed = (vectorMagnitude velocity player) * 3.6;\t\t// return velocity of player in km/h\n_speed = (vectorMagnitude velocity player) * 2.23694;\t// return velocity of player in mph\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorMagnitude",
        "modifiers": []
    },
    "current3denoperation": {
        "name": "current3DENOperation",
        "description": "Returns the currently performed editing operation in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "**current3DENOperation**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String) - operation name. Can be one of following:\n\n* \"\" (no operation)\n\n* \"Move\"\n\n* \"Rotate\"\n\n* \"GroupTo\"\n\n* \"Connect\"\n\n* \"Create\""
            }
        ],
        "examples": [
            "\n```sqf\nif (current3DENOperation == \"Move\") then {hint \"Moving\";};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/current3DENOperation",
        "modifiers": []
    },
    "lnbsize": {
        "name": "lnbSize",
        "description": "Returns size of 2D listbox or combobox.",
        "syntaxArray": [
            {
                "Syntax": "lnbSize controlOrIDC",
                "Params": "controlOrIDC: [Control](https://community.bistudio.com/wiki/Control) or [Number](https://community.bistudio.com/wiki/Number) - Control or control's IDC\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [rows, columns]"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSize _control;\n```\n",
            "\n```sqf\nlnbSize _someIDC;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSize",
        "modifiers": []
    },
    "ropeunwind": {
        "name": "ropeUnwind",
        "description": "Increases or decreases the rope length by the given amount. Use relative parameter for changing rope length +/- from current length.",
        "syntaxArray": [
            {
                "Syntax": "ropeUnwind [rope, speed, length, relative]",
                "Params": "rope: [Object](https://community.bistudio.com/wiki/Object) - rope object\n\nspeed: [Number](https://community.bistudio.com/wiki/Number) - animation speed in m/s with which to lengthen or shorten the rope. Range: 0.01...20.\n\nlength: [Number](https://community.bistudio.com/wiki/Number) - the amount of length change in meters. Range: 0.1...100.\n\nrelative (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) will add or subtract given length from current rope length, [false](https://community.bistudio.com/wiki/false) will resize the rope to the given length\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nropeUnwind [ropes heli1 select 0, 3, 10]; // set rope length to 10m at 3m/s\n```\n",
            "\n```sqf\nropeUnwind [ropes heli1 select 0, 3, -5, true]; // decrease rope length by 5m at 3m/s\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeUnwind",
        "modifiers": []
    },
    "lnbsetpicture": {
        "name": "lnbSetPicture",
        "description": "Sets the picture in the item with the given position of the 2D listbox.The picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).",
        "syntaxArray": [
            {
                "Syntax": "lnbSetPicture [idc, [row, column], picturePathOrName]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\npicturePathOrName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetPicture [[row, column], picturePathOrName]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nRow: [Number](https://community.bistudio.com/wiki/Number)\n\nColumn: [Number](https://community.bistudio.com/wiki/Number)\n\npicturePathOrName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSetPicture [1, [0, 0], \"Picture\"];\n```\n",
            "\n```sqf\n_ctrl lnbSetPicture [[0, 0], \"\\A3\\Ui_f\\data\\GUI\\Cfg\\Ranks\\lieutenant_gs.paa\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetPicture",
        "modifiers": []
    },
    "setparticleparams": {
        "name": "setParticleParams",
        "description": "Set parameters to particle source. Array is in format [ParticleArray](https://community.bistudio.com/wiki/ParticleArray). \n\nSince Arma 3 version 1.11.114706 you can use this command to overwrite many values set by [setParticleClass](https://community.bistudio.com/wiki/setParticleClass), particularity those defined in [ParticleArray](https://community.bistudio.com/wiki/ParticleArray). Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleParams\n[\n\t/* String or Array - If string then the name of the particleShape. And following default values are used:\n\t\tparticleFSNtieth = 1\n\t\tparticleFSIndex = 0\n\t\tparticleFSFrameCount = 1\n\t\tparticleFSLoop = 1\n\t*/\n\t[\n\t\tparticleShape, /*String*/\n\t\tparticleFSNtieth, /*Number*/\n\t\tparticleFSIndex, /*Number*/\n\t\tparticleFSFrameCount, /*Number*/\n\t\tparticleFSLoop /*Optional - Number. Default: 1*/\n\t],\n\tanimationName, /*String*/\n\tparticleType, /*String - Enum: Billboard, SpaceObject*/\n\ttimerPeriod, /*Number*/\n\tlifeTime, /*Number*/\n\tposition, /*3D Array of numbers as relative position to particleSource or (if object at index 18 is set) object. \n\t\t\tOr (if object at index 18 is set) String as memoryPoint of object.*/\n\tmoveVelocity, /*3D Array of numbers.*/\n\trotationVelocity, /*Number*/\n\tweight, /*Number*/\n\tvolume, /*Number*/\n\trubbing, /*Number*/\n\tsize, /*Array of Number*/\n\tcolor, /*Array of Array of RGBA Numbers*/\n\tanimationSpeed, /*Array of Number*/\n\trandomDirectionPeriod, /*Number*/\n\trandomDirectionIntensity, /*Number*/\n\tonTimerScript, /*String*/\n\tbeforeDestroyScript, /*String*/\n\tthis, /*Object*/\n\tangle, /*Optional Number - Default: 0*/\n\tonSurface, /*Optional Boolean*/\n\tbounceOnSurface, /*Optional Number*/\n\temissiveColor, /*Optional Array of Array of RGBA Numbers*/\n\tvectorDir /*Optional 3D Array Vector dir. Since Arma 3 v1.92 it is possible to set the initial direction of the SpaceObject */\n];\n```\n",
        "syntaxArray": [
            {
                "Syntax": "particleSource **setParticleParams** array",
                "Params": "particleSource: [Object](https://community.bistudio.com/wiki/Object)\n\narray: [Array](https://community.bistudio.com/wiki/Array) - format [ParticleArray](https://community.bistudio.com/wiki/ParticleArray)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "see [ParticleArray](https://community.bistudio.com/wiki/ParticleArray)"
        ],
        "Url": "https://community.bistudio.com/wiki/setParticleParams",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "weaponlowered": {
        "name": "weaponLowered",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if given soldier's weapon is lowered. \n> ",
        "syntaxArray": [
            {
                "Syntax": "weaponLowered unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nisWeaponLowered = weaponLowered player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponLowered",
        "modifiers": []
    },
    "lbdata": {
        "name": "lbData",
        "description": "Returns the data set in given index of the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO).",
        "syntaxArray": [
            {
                "Syntax": "**lbData** [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control **lbData** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_data = lbData [101, 0];\n```\n",
            "\n```sqf\n_data = _control lbData 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbData",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "ctrlidc": {
        "name": "ctrlIDC",
        "description": "Returns control IDC.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlIDC** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlIDC _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlIDC",
        "modifiers": []
    },
    "selecteditorobject": {
        "name": "selectEditorObject",
        "description": "Select an editor object. Does not un-select previously selected objects. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **selectEditorObject** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/selectEditorObject",
        "modifiers": []
    },
    "loadoverlay": {
        "name": "loadOverlay",
        "description": "Creates the load overlay dialog for the specified type of overlay.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **loadOverlay** config",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\nconfig: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/loadOverlay",
        "modifiers": []
    },
    "ctrlsetpositiony": {
        "name": "ctrlSetPositionY",
        "description": "Sets vertical position (y) of a 2D control. [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) is required to complete the operation.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetPositionY y",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - 2D control\n\ny: [Number](https://community.bistudio.com/wiki/Number) - Vertical position of the control\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl ctrlSetPositionY 0.5;\n_ctrl ctrlCommit 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetPositionY",
        "modifiers": []
    },
    "ropeattachto": {
        "name": "ropeAttachTo",
        "description": "Attaches entity to the rope end with optional offset. For detach operation use [ropeDetach](https://community.bistudio.com/wiki/ropeDetach).",
        "syntaxArray": [
            {
                "Syntax": "[entity, toPoint, ropeEndDownVector] ropeAttachTo rope",
                "Params": "[entity, toPoint, ropeEndDownVector]: [Array](https://community.bistudio.com/wiki/Array)\n\nentity: [Object](https://community.bistudio.com/wiki/Object) - entity to be attached to the end of rope\n\ntoPoint (Optional):  [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array) - position for the rope end, either a memory point [String](https://community.bistudio.com/wiki/String) or relative offset [Array](https://community.bistudio.com/wiki/Array)\n\nropeEndDownVector (Optional): [String](https://community.bistudio.com/wiki/String) or [Array](https://community.bistudio.com/wiki/Array), either a memory point [String](https://community.bistudio.com/wiki/String) or relative vector [Array](https://community.bistudio.com/wiki/Array). If [String](https://community.bistudio.com/wiki/String) is given, then ropeEndDownVector is calculated from toPoint towards ropeEndDownVector memory point. Default: [0,0,-1]\n\nrope: [Object](https://community.bistudio.com/wiki/Object) - the rope to which entity will be attached to\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[veh1, [0,0,0], [0,0,-1]] ropeAttachTo (ropes heli1 select 0);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ropeAttachTo",
        "modifiers": []
    },
    "lnbsortbyvalue": {
        "name": "lnbSortByValue",
        "description": "Sorts given multicolumn listbox by [lnbValue](https://community.bistudio.com/wiki/lnbValue) in given column in ascending or descending order.",
        "syntaxArray": [
            {
                "Syntax": "**lnbSortByValue** [idc, column, reversed]",
                "Params": "[idc, column, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\nidc: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false): descending / [true](https://community.bistudio.com/wiki/true): ascending. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lnbSortByValue** [column, reversed]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[column, reversed]: [Array](https://community.bistudio.com/wiki/Array)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\nreversed (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [false](https://community.bistudio.com/wiki/false): descending / [true](https://community.bistudio.com/wiki/true): ascending. Default: [false](https://community.bistudio.com/wiki/false)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlnbSortByValue [1800, 1, false];\n```\n",
            "\n```sqf\n_ctl lnbSortByValue [1, true]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSortByValue",
        "modifiers": []
    },
    "toupper": {
        "name": "toUpper",
        "description": "Converts the supplied Unicode string to all uppercase characters. If the string doesn't have characters with [ codes > 255](https://community.bistudio.com/wiki/toArray), you could benefit from faster conversion using [toUpperANSI](https://community.bistudio.com/wiki/toUpperANSI)",
        "syntaxArray": [
            {
                "Syntax": "**toUpper** string",
                "Params": "string: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint toUpper \"AaBb1\"; // returns \"AABB1\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/toUpper",
        "modifiers": []
    },
    "setmarkerdirlocal": {
        "name": "setMarkerDirLocal",
        "description": "Sets the orientation of the marker.",
        "syntaxArray": [
            {
                "Syntax": "markerName **setMarkerDirLocal** angle",
                "Params": "markerName: [String](https://community.bistudio.com/wiki/String)\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - Angle of the marker in degree\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"Marker1\" setMarkerDirLocal 90;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerDirLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "vectorcrossproduct": {
        "name": "vectorCrossProduct",
        "description": "Cross product of two 3D vectors. \nIn layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain [surfaceNormal](https://community.bistudio.com/wiki/surfaceNormal)). To invert direction of the normal, swap arguments around.",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorCrossProduct vector2",
                "Params": "vector1:  [Array](https://community.bistudio.com/wiki/Array) - in form [x, y, z] or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2:  [Array](https://community.bistudio.com/wiki/Array) - in form [x, y, z] or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  vector [x, y, z] \n\n[](https://community.bistudio.com/wiki/File:crossProduct.jpg)"
            }
        ],
        "examples": [
            "\n```sqf\n_vector = [1,1,1] vectorCrossProduct [2,2,2];\n```\n",
            "\n```sqf\n_vectorUp = [0,1,0] vectorCrossProduct [-1,0,0]; //[0,-0,1]\n```\n",
            "\n```sqf\n_vectorSide = (vectorDir player) vectorCrossProduct (vectorUp player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorCrossProduct",
        "modifiers": []
    },
    "magazinesallturrets": {
        "name": "magazinesAllTurrets",
        "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts.",
        "syntaxArray": [
            {
                "Syntax": "**magazinesAllTurrets** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle with turrets\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in the following format: [[className, turretPath, ammoCount, id, creator],...]  where:\n\n* className: [String](https://community.bistudio.com/wiki/String) - magazine class name\n\n* turretPath: [Array](https://community.bistudio.com/wiki/Array) - turret path\n\n* ammoCount: [Number](https://community.bistudio.com/wiki/Number) - how many rounds left in the magazine\n\n* id: [Number](https://community.bistudio.com/wiki/Number) - id of the magazine object. The number starts at 10,000,000. This gives it about 7,600,000 possible ids before the number starts losing precision and cannot be used in scripts.\n\n* creator: [Number](https://community.bistudio.com/wiki/Number) - [owner](https://community.bistudio.com/wiki/owner) / [clientOwner](https://community.bistudio.com/wiki/clientOwner) of the PC that created the object"
            }
        ],
        "examples": [
            "\n```sqf\n_mags = magazinesAllTurrets vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesAllTurrets",
        "modifiers": [
            "Global argument"
        ]
    },
    "triggeractivated": {
        "name": "triggerActivated",
        "description": "Returns true if the trigger has been activated. > ",
        "syntaxArray": [
            {
                "Syntax": "triggerActivated trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (triggerActivated trg1) then {\n\t// code\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerActivated",
        "modifiers": [
            "Global argument"
        ]
    },
    "teamswitchenabled": {
        "name": "teamSwitchEnabled",
        "description": "Check if [Team Switch](https://community.bistudio.com/wiki/Team_Switch) is currently enabled.\n\nTeam Switch is enabled by default.",
        "syntaxArray": [
            {
                "Syntax": "teamSwitchEnabled",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isTeamSwitchEnabled = teamSwitchEnabled;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teamSwitchEnabled",
        "modifiers": []
    },
    "ctsetvalue": {
        "name": "ctSetValue",
        "description": "Associates metadata (number) with the row determined by the index. Returns Nothing.",
        "syntaxArray": [
            {
                "Syntax": "control **ctSetValue** [index, value]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctSetValue [0, 23];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctSetValue",
        "modifiers": []
    },
    "scopename": {
        "name": "scopeName",
        "description": "Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like [breakOut](https://community.bistudio.com/wiki/breakOut) and [breakTo](https://community.bistudio.com/wiki/breakTo). Scope name should be defined only once per scope. Trying to set a different name on the scope that has already defined scope name will result in error.",
        "syntaxArray": [
            {
                "Syntax": "**scopeName** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nscopeName \"main\";\nwhile {true} do {\n\tscopeName \"loop1\";\n\twhile {true} do {\n\t\tscopeName \"loop2\";\n\t\t...\n\t};\n};\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/scopeName",
        "modifiers": []
    },
    "publicvariableserver": {
        "name": "publicVariableServer",
        "description": "Send the variable value to the server - same limitations regarding variable type as [publicVariable](https://community.bistudio.com/wiki/publicVariable#Description). \n> ",
        "syntaxArray": [
            {
                "Syntax": "**publicVariableServer** varName",
                "Params": "varName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\npublicVariableServer \"CTFscoreOne\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/publicVariableServer",
        "modifiers": []
    },
    "deletestatus": {
        "name": "deleteStatus",
        "description": "Deletes a status created with [saveStatus](https://community.bistudio.com/wiki/saveStatus) from the campaign's progress file.",
        "syntaxArray": [
            {
                "Syntax": "**deleteStatus** statusName",
                "Params": "statusName: [String](https://community.bistudio.com/wiki/String) - Name of the saved status\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_deleted = deleteStatus \"playerStatus\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteStatus",
        "modifiers": [
            "Global effect"
        ]
    },
    "deg": {
        "name": "deg",
        "description": "Converts given value in radians to degrees. 1 degree equals 0.01745 radians or [pi](https://community.bistudio.com/wiki/pi) / 180.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**deg**",
                "Params": "value: [Number](https://community.bistudio.com/wiki/Number) - Radians\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_degrees = deg 1; // Returns 57.2958\n```\n",
            "\n```sqf\ndeg (2 * pi / 360); // Returns 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deg",
        "modifiers": []
    },
    "deleteidentity": {
        "name": "deleteIdentity",
        "description": "Deletes an identity created with [saveIdentity](https://community.bistudio.com/wiki/saveIdentity) from the campaign's progress file.",
        "syntaxArray": [
            {
                "Syntax": "**deleteIdentity** identityName",
                "Params": "identityName: [String](https://community.bistudio.com/wiki/String) - Name of the saved identity\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_deleted = deleteIdentity \"playerIdentity\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteIdentity",
        "modifiers": [
            "Local effect"
        ]
    },
    "unassignteam": {
        "name": "unassignTeam",
        "description": "Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit [assignTeam](https://community.bistudio.com/wiki/assignTeam) \"MAIN\".",
        "syntaxArray": [
            {
                "Syntax": "**unassignTeam** vehicleName",
                "Params": "vehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "unassignTeam _soldier2"
        ],
        "Url": "https://community.bistudio.com/wiki/unassignTeam",
        "modifiers": [
            "Local argument"
        ]
    },
    "lognetworkterminate": {
        "name": "logNetworkTerminate",
        "description": "Terminates a network log file started with [logNetwork](https://community.bistudio.com/wiki/logNetwork) with the given handle",
        "syntaxArray": [
            {
                "Syntax": "**logNetworkTerminate** handle",
                "Params": "handle:  [Number](https://community.bistudio.com/wiki/Number) - handle to terminate (created with [logNetwork](https://community.bistudio.com/wiki/logNetwork))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlogNetworkTerminate _someHandle;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/logNetworkTerminate",
        "modifiers": []
    },
    "lnbsetpicturecolorselectedright": {
        "name": "lnbSetPictureColorSelectedRight",
        "description": "Sets the color of the right picture when it is selected.",
        "syntaxArray": [
            {
                "Syntax": "lnbSetPictureColorSelectedRight [idc, [row, column], color]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl lnbSetPictureColorSelectedRight [[row, column], color]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number) - Index of the row\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number) - Index of the column\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - Color RGBA\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control lnbSetPictureColorSelectedRight [[0, 0], [1,1,1,0.5]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbSetPictureColorSelectedRight",
        "modifiers": []
    },
    "ctrlenable": {
        "name": "ctrlEnable",
        "description": "Enables or disables a control of the currently active user dialog. Disabled controls cannot be clicked onto. Read [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs and controls.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlEnable** [idc, enable]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to enable the control, [false](https://community.bistudio.com/wiki/false) to disable it\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "controlName **ctrlEnable** enable",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlEnable [100, false]\n```\n",
            "\n```sqf\n_ctrl ctrlEnable false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlEnable",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "rain": {
        "name": "rain",
        "description": "Returns the current value of rain density in range 0..1",
        "syntaxArray": [
            {
                "Syntax": "rain",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_rainLevel = rain;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rain",
        "modifiers": []
    },
    "name": {
        "name": "name",
        "description": "When argument is [Object](https://community.bistudio.com/wiki/Object), the command returns the name given to a unit using the [setIdentity](https://community.bistudio.com/wiki/setIdentity) instruction or selected randomly by the game engine if [setIdentity](https://community.bistudio.com/wiki/setIdentity) has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.\nWhen argument is [Location](https://community.bistudio.com/wiki/Location), the location's name is returned. To return the textual value of a location use [text](https://community.bistudio.com/wiki/text) command instead.\n> ",
        "syntaxArray": [
            {
                "Syntax": "name object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "name location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = name player;\n```\n",
            "\n```sqf\n_locationName = name myLocation;\n```\n",
            "\n```sqf\nname nearestLocation [position player, \"Hill\"]; // \"\"\ntext nearestLocation [position player, \"Hill\"]; // \"Lesnoy Khrebet\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/name",
        "modifiers": []
    },
    "addprimaryweaponitem": {
        "name": "addPrimaryWeaponItem",
        "description": "Adds weapon item, including magazine, directly to the [primaryWeapon](https://community.bistudio.com/wiki/primaryWeapon). This is used for infantry weapons.",
        "syntaxArray": [
            {
                "Syntax": "unit **addPrimaryWeaponItem** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing) or [Boolean](https://community.bistudio.com/wiki/Boolean) - **false** is returned if **item** can not be added"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addPrimaryWeaponItem \"muzzle_snds_H\";\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addPrimaryWeaponItem",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "diag_activesqsscripts": {
        "name": "diag_activeSQSScripts",
        "description": "Returns array with active SQSs. To see number of all scripts currently in the scheduler use [diag_activeScripts](https://community.bistudio.com/wiki/diag_activeScripts).",
        "syntaxArray": [
            {
                "Syntax": "diag_activeSQSScripts",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [[name, fileName, isRunning, currentLine],...]:\n\n* name: [String](https://community.bistudio.com/wiki/String) - function- or filename\n\n* fileName: [String](https://community.bistudio.com/wiki/String) -\n\n* isRunning: [Boolean](https://community.bistudio.com/wiki/Boolean) -\n\n* currentLine: [Number](https://community.bistudio.com/wiki/Number) - line currently executing"
            }
        ],
        "examples": [
            "\n```sqf\n{systemChat str _x} forEach diag_activeSQSScripts;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_activeSQSScripts",
        "modifiers": []
    },
    "disabledebriefingstats": {
        "name": "disableDebriefingStats",
        "description": "Disable debriefing score table.\n> ",
        "syntaxArray": [
            {
                "Syntax": "disableDebriefingStats",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ndisableDebriefingStats;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/disableDebriefingStats",
        "modifiers": []
    },
    "fuel": {
        "name": "fuel",
        "description": "Checks how much fuel is left in the gas tank of a vehicle.",
        "syntaxArray": [
            {
                "Syntax": "**fuel** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) -  \nThe returned number is in range 0 (empty tank) to 1 (full tank)."
            }
        ],
        "examples": [
            "\n```sqf\nif (fuel vehicle player == 0) then {hint \"The vehicle is out of fuel!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fuel",
        "modifiers": [
            "Global argument"
        ]
    },
    "shownchat": {
        "name": "shownChat",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if chat window is enabled. Chat window can be disabled with [showChat](https://community.bistudio.com/wiki/showChat) command.",
        "syntaxArray": [
            {
                "Syntax": "**shownChat**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = shownChat;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownChat",
        "modifiers": []
    },
    "primaryweaponitems": {
        "name": "primaryWeaponItems",
        "description": "Returns array with all items assigned to the [primaryWeapon](https://community.bistudio.com/wiki/primaryWeapon) except magazines. Use [primaryWeaponMagazine](https://community.bistudio.com/wiki/primaryWeaponMagazine) command for the latter. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**primaryWeaponItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  [silencer, laserpointer/flashlight, optics, bipod]"
            }
        ],
        "examples": [
            "\n```sqf\nprimaryWeaponItems player; \n/*\n[\n\t\"muzzle_snds_H\",\t//silencer\n\t\"acc_pointer_IR\",\t//laser\n\t\"optic_Aco\",\t\t//optics\n\t\"bipod_01_F_blk\"\t//bipod\n]\n*/\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/primaryWeaponItems",
        "modifiers": []
    },
    "false": {
        "name": "false",
        "description": "Always false.",
        "syntaxArray": [
            {
                "Syntax": "**false**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_var = false;\nsystemChat str _var;  //false\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/false",
        "modifiers": []
    },
    "ctrlangle": {
        "name": "ctrlAngle",
        "description": "Gets rotation info of an ST_PICTURE control.",
        "syntaxArray": [
            {
                "Syntax": "ctrlAngle control",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control)  - picture control\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [angle, centerX, centerY]"
            }
        ],
        "examples": [
            "\n```sqf\nctrlAngle _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAngle",
        "modifiers": []
    },
    "flatten": {
        "name": "flatten",
        "description": "Flattens an array.",
        "syntaxArray": [
            {
                "Syntax": "flatten array",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Flattened array"
            }
        ],
        "examples": [
            "\n```sqf\nflatten [ 1, [2], [[3]], [[[4]]] ]; // Returns [1, 2, 3, 4]\n```\n",
            "\n```sqf\nflatten getUnitLoadout player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flatten",
        "modifiers": []
    },
    "allvariables": {
        "name": "allVariables",
        "description": "Returns a list of all variables from desired namespace. Namespaces supported:\n\n* [Control](https://community.bistudio.com/wiki/Control) - *Since Arma 3 v2.01*\n\n* [Display](https://community.bistudio.com/wiki/Display) - *Since Arma 3 v2.01*\n\n* [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n* [Namespace](https://community.bistudio.com/wiki/Namespace)\n\n* [Object](https://community.bistudio.com/wiki/Object)\n\n* [Group](https://community.bistudio.com/wiki/Group)\n\n* [Task](https://community.bistudio.com/wiki/Task)\n\n* [Location](https://community.bistudio.com/wiki/Location)",
        "syntaxArray": [
            {
                "Syntax": "**allVariables** namespace",
                "Params": "namespace: [Control](https://community.bistudio.com/wiki/Control) (*Since Arma 3 v2.01*), [Display](https://community.bistudio.com/wiki/Display) (*Since Arma 3 v2.01*)  [Team Member](https://community.bistudio.com/wiki/Team_Member), [Namespace](https://community.bistudio.com/wiki/Namespace), [Object](https://community.bistudio.com/wiki/Object), [Group](https://community.bistudio.com/wiki/Group), [Task](https://community.bistudio.com/wiki/Task), [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - array of variable names. All names are in lower case (see [toLower](https://community.bistudio.com/wiki/toLower))"
            }
        ],
        "examples": [
            "\n```sqf\n_allVarsUINamespace = allVariables uiNamespace;\n```\n",
            "\n```sqf\n_allVarsTrigger = allVariables trigger1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allVariables",
        "modifiers": []
    },
    "waypointattachedvehicle": {
        "name": "waypointAttachedVehicle",
        "description": "Gets the vehicle attached to the waypoint.\nA vehicle can be attached to a waypoint by\n\n* creating the waypoint on top of the vehicle in the [2D Editor](https://community.bistudio.com/wiki/2D_Editor)\n\n* using [waypointAttachVehicle](https://community.bistudio.com/wiki/waypointAttachVehicle)",
        "syntaxArray": [
            {
                "Syntax": "**waypointAttachedVehicle** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - Format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointAttachedVehicle [groupOne, 1];\n```\n",
            "\n```sqf\nwaypointAttachedVehicle [group player, currentWaypoint group player;]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointAttachedVehicle",
        "modifiers": []
    },
    "face": {
        "name": "face",
        "description": "Returns the face of a person.",
        "syntaxArray": [
            {
                "Syntax": "**face** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nface player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/face",
        "modifiers": []
    },
    "removegroupicon": {
        "name": "removeGroupIcon",
        "description": "Remove icon with given ID from group.",
        "syntaxArray": [
            {
                "Syntax": "group **removeGroupIcon** iconID",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) -\n\niconID: [Number](https://community.bistudio.com/wiki/Number) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n_target removeGroupIcon (_target getvariable \"hc_attackicon\");\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeGroupIcon",
        "modifiers": []
    },
    "radiochannelsetcallsign": {
        "name": "radioChannelSetCallSign",
        "description": "Set the custom radio channel's call sign. \n\nAvailable special parameters:\n\n* $KEY (reference to a localized text)\n\n* %CHANNEL_LABEL\n\n* %UNIT_SIDE\n\n* %UNIT_NAME\n\n* %UNIT_RANK\n\n* %UNIT_ID\n\n* %UNIT_REF\n\n* %UNIT_GRP_NAME\n\n* %UNIT_GRP_LEADER\n\n* %UNIT_VEH_NAME\n\n* %UNIT_VEH_POSITION",
        "syntaxArray": [
            {
                "Syntax": "customChannelID radioChannelSetCallSign callSign",
                "Params": "customChannelID: [Number](https://community.bistudio.com/wiki/Number) - [custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command\n\ncallSign: [String](https://community.bistudio.com/wiki/String) - custom call sign\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n4 radioChannelSetCallSign \"%UNIT_NAME\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioChannelSetCallSign",
        "modifiers": []
    },
    "creatediarylink": {
        "name": "createDiaryLink",
        "description": "Creates a link to the section of diary given by subject. Record is selected based on given object, diary record or task.",
        "syntaxArray": [],
        "examples": [
            "Creates a link to the section of diary given by subject. Record is selected based on given object, diary record or task."
        ],
        "Url": "https://community.bistudio.com/wiki/createDiaryLink",
        "modifiers": []
    },
    "switchgesture": {
        "name": "switchGesture",
        "description": "When used on a person,the given move is started immediately (without transition).",
        "syntaxArray": [
            {
                "Syntax": "soldier switchGesture moveName",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\nmoveName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne switchGesture \"Wave\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/switchGesture",
        "modifiers": []
    },
    "ctrlsetfontheighth5": {
        "name": "ctrlSetFontHeightH5",
        "description": "Sets H5 font size of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontHeightH5** height",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightH5 0.05"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightH5",
        "modifiers": []
    },
    "ctrlclassname": {
        "name": "ctrlClassName",
        "description": "Returns the class name of a [Control](https://community.bistudio.com/wiki/Control) as it is defined in config. If you need config class of a game created [Display](https://community.bistudio.com/wiki/Display), it is stored on display itself:\n\n```sqf\n_className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"\n```\n",
        "syntaxArray": [
            {
                "Syntax": "**ctrlClassName** control",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - class name"
            }
        ],
        "examples": [
            "List class names of all controls present on display 46:\n```sqf\n_return = [] ;\n{\n\t_return pushBack format [\"IDC: %1, className: %2\", ctrlIDC _x, ctrlClassName _x];\n} forEach (allControls (findDisplay 46));\ncopyToClipboard (_return joinString endl);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlClassName",
        "modifiers": []
    },
    "inserteditorobject": {
        "name": "insertEditorObject",
        "description": "Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.\n> ",
        "syntaxArray": [
            {
                "Syntax": "map **insertEditorObject** [type,value,[name1,value1,...],subtype class]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n[type,value,[name1,value1,...],subtype class]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/insertEditorObject",
        "modifiers": []
    },
    "removeitemfromvest": {
        "name": "removeItemFromVest",
        "description": "Removes item from soldier's vest.",
        "syntaxArray": [
            {
                "Syntax": "unit **removeItemFromVest** item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer removeItemFromVest \"itemWatch\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeItemFromVest",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "ctrlmapscreentoworld": {
        "name": "ctrlMapScreenToWorld",
        "description": "Converts map screen coordinates into world coordinates. Unlike [posScreenToWorld](https://community.bistudio.com/wiki/posScreenToWorld), this command returns world position is format [x, y], otherwise it is identical to [posScreenToWorld](https://community.bistudio.com/wiki/posScreenToWorld).",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlMapScreenToWorld** [x, y]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - map control\n\n[x, y]: [Array](https://community.bistudio.com/wiki/Array)\n\nx: [Number](https://community.bistudio.com/wiki/Number) - screen X\n\ny: [Number](https://community.bistudio.com/wiki/Number) - screen Y\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - world coordinates in format [Position2D](https://community.bistudio.com/wiki/Position2D)"
            }
        ],
        "examples": [
            "\n```sqf\n_worldCoord = _control ctrlMapScreenToWorld _ScreenCoord;\n```\n",
            "\n```sqf\n_worldCoord = _control ctrlMapScreenToWorld [_x, _y];\n```\n",
            "\n```sqf\n_worldCoord = findDisplay 12 displayCtrl 51 ctrlMapScreenToWorld [0.5, 0.5];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapScreenToWorld",
        "modifiers": []
    },
    "weaponaccessoriescargo": {
        "name": "weaponAccessoriesCargo",
        "description": "Returns array with all items assigned to the given weapon in given cargo container.\n> ",
        "syntaxArray": [
            {
                "Syntax": "container **weaponAccessoriesCargo** [weaponId, creatorId]",
                "Params": "container: [Object](https://community.bistudio.com/wiki/Object) - cargo container\n\n[weaponId, creatorId]: [Array](https://community.bistudio.com/wiki/Array)\n\nweaponId: [Number](https://community.bistudio.com/wiki/Number)\n\ncreatorId: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) -  [silencer, laserpointer/flashlight, optics, bipod]"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/weaponAccessoriesCargo",
        "modifiers": []
    },
    "animationphase": {
        "name": "animationPhase",
        "description": "Returns the phase of the given animation on the given object. Animation can be scripted ([animate](https://community.bistudio.com/wiki/animate), [animateSource](https://community.bistudio.com/wiki/animateSource), [animateDoor](https://community.bistudio.com/wiki/animateDoor)) or engine driven. Animation names for an object could be found out with [animationNames](https://community.bistudio.com/wiki/animationNames) command. When animation is rotation, like with \"MainTurret\" for example, the output is in radians, to convert to degrees use [deg](https://community.bistudio.com/wiki/deg) command.",
        "syntaxArray": [
            {
                "Syntax": "object **animationPhase** animationName",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\nanimationName: [String](https://community.bistudio.com/wiki/String) - Name of the animation. This is the class-name of the animation defined in the addon's config.cpp\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Range 0 (start point of the animation) to 1 (end point of the animation)"
            }
        ],
        "examples": [
            "\n```sqf\n_building animate [\"maindoor\",1];\nsleep 1;\n_p = _building animationPhase \"maindoor\";// Returns 1, if the animation speed is two seconds\n```\n",
            "\n```sqf\n_flagPole animationPhase \"flag\";\n```\n",
            "\n```sqf\n_tank animationPhase \"MainTurret\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/animationPhase",
        "modifiers": [
            "Global argument"
        ]
    },
    "captivenum": {
        "name": "captiveNum",
        "description": "Checks whether the unit is a [captive](https://community.bistudio.com/wiki/captive). If the unit is a vehicle, its commander is checked instead.\nIf a unit's captivity level was set as a [Boolean](https://community.bistudio.com/wiki/Boolean), then the returned number is either 0 (for [false](https://community.bistudio.com/wiki/false)) or 1 (for [true](https://community.bistudio.com/wiki/true)).",
        "syntaxArray": [
            {
                "Syntax": "captiveNum unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - anything from 0 to value set by [setCaptive](https://community.bistudio.com/wiki/setCaptive) alt syntax. A non zero value means [captive](https://community.bistudio.com/wiki/captive)."
            }
        ],
        "examples": [
            "\n```sqf\n_captivity = captiveNum _unit;\n```\n",
            "\n```sqf\n_unit setCaptive 1024;\nhint str captive _unit; // true\nhint str captiveNum _unit; // 1024\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/captiveNum",
        "modifiers": [
            "Global argument"
        ]
    },
    "getrotorbrakertd": {
        "name": "getRotorBrakeRTD",
        "description": "Returns if rotor break is on.\n> ",
        "syntaxArray": [
            {
                "Syntax": "getRotorBrakeRTD helicopter",
                "Params": "helicopter : [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if on, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_isOn = getRotorBrakeRTD _heli;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getRotorBrakeRTD",
        "modifiers": []
    },
    "shownmap": {
        "name": "shownMap",
        "description": "Checks if client has Map enabled in [description.ext](https://community.bistudio.com/wiki/description.ext) (*showMap* param) or force enabled with [showMap](https://community.bistudio.com/wiki/showMap) command.",
        "syntaxArray": [
            {
                "Syntax": "**shownMap**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (shownMap) then {hint \"You have Map enabled\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/shownMap",
        "modifiers": []
    },
    "get3denentity": {
        "name": "get3DENEntity",
        "description": "Returns [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) based on its [Eden ID](https://community.bistudio.com/wiki/Eden_ID). If the ID points to a layer or a comment, the ID will be returned instead.",
        "syntaxArray": [
            {
                "Syntax": "**get3DENEntity** id",
                "Params": "id: [Number](https://community.bistudio.com/wiki/Number) - [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\n",
                "Return": "[Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) (when the target is [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity)) or [Number](https://community.bistudio.com/wiki/Number) (when the target is a layer or a comment)"
            }
        ],
        "examples": [
            "\n```sqf\nmyEntity = get3DENEntity 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENEntity",
        "modifiers": []
    },
    "setcamshakedefparams": {
        "name": "setCamShakeDefParams",
        "description": "Sets camera shake default parameters.",
        "syntaxArray": [
            {
                "Syntax": "**setCamShakeDefParams** [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef]",
                "Params": "power: [Number](https://community.bistudio.com/wiki/Number)\n\nduration: [Number](https://community.bistudio.com/wiki/Number)\n\nfrequency: [Number](https://community.bistudio.com/wiki/Number)\n\nminSpeed: [Number](https://community.bistudio.com/wiki/Number)\n\nminMass: [Number](https://community.bistudio.com/wiki/Number)\n\ncaliberCoefHit: [Number](https://community.bistudio.com/wiki/Number)\n\nvehicleCoef: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetCamShakeDefParams [1, 2, 3, 4, 5, .5, .5];\n```\n",
            "\n```sqf\nsetCamShakeDefParams [100, 10, 10, 4, 5, 1, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCamShakeDefParams",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlsetfonth3b": {
        "name": "ctrlSetFontH3B",
        "description": "Sets H3 bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH3B** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH3B \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH3B",
        "modifiers": []
    },
    "addownedmine": {
        "name": "addOwnedMine",
        "description": "Sets ownership over a remotely detonatable mine to the unit.",
        "syntaxArray": [
            {
                "Syntax": "unit addOwnedMine mine",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nmine: [Object](https://community.bistudio.com/wiki/Object) - the mine object\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer addOwnedMine _superMine;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addOwnedMine",
        "modifiers": []
    },
    "radiochanneladd": {
        "name": "radioChannelAdd",
        "description": "Add the units to the custom channel.",
        "syntaxArray": [
            {
                "Syntax": "customChannelID radioChannelAdd units",
                "Params": "customChannelID: [Number](https://community.bistudio.com/wiki/Number) - [custom channel ID](https://community.bistudio.com/wiki/Channel_IDs) returned by [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate) command\n\nunits: [Array](https://community.bistudio.com/wiki/Array) - list of units\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n2 radioChannelAdd [player, unit1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/radioChannelAdd",
        "modifiers": [
            "Global effect"
        ]
    },
    "lbsize": {
        "name": "lbSize",
        "description": "Returns the number of items in a [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX) or [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO) control.",
        "syntaxArray": [
            {
                "Syntax": "**lbSize** idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "**lbSize** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_size = lbSize 101;\n```\n",
            "\n```sqf\n_size = lbSize _control;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSize",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "clearallitemsfrombackpack": {
        "name": "clearAllItemsFromBackpack",
        "description": "Removes all items from backpack of a unit.",
        "syntaxArray": [
            {
                "Syntax": "clearAllItemsFromBackpack unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nclearAllItemsFromBackpack player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/clearAllItemsFromBackpack",
        "modifiers": []
    },
    "settriggerarea": {
        "name": "setTriggerArea",
        "description": " Defines the area monitored by the given trigger. The area could be either rectangular or elliptical.\n> ",
        "syntaxArray": [
            {
                "Syntax": "trigger **setTriggerArea** [a, b, angle, isRectangle, c]",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - object of the type \"EmptyDetector\"\n\n[a, b, angle, isRectangle, c]: [Array](https://community.bistudio.com/wiki/Array)\n\na: [Number](https://community.bistudio.com/wiki/Number) - trigger area X size / 2, in meters\n\nb: [Number](https://community.bistudio.com/wiki/Number) - trigger area Y size / 2, in meters\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - trigger area rotation in degrees\n\nisRectangle: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if rectangle\n\nc: [Number](https://community.bistudio.com/wiki/Number) - (Optional) trigger area Z size / 2, in meters. -1 for infinite height *Since Arma 3 v1.59.135137*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_trigger setTriggerArea [100, 50, 45, false];\n```\n",
            "\n```sqf\n_trigger setTriggerArea [100, 50, 45, false, 100];\n```\n",
            "\n```sqf\n_trg = createTrigger [\"EmptyDetector\", getPos player, false];\n_trg setTriggerArea [5, 5, 0, false];\n_trg setTriggerActivation [\"CIV\", \"PRESENT\", true];\n_trg setTriggerStatements [\"this\", \"hint 'Civilian near player'\", \"hint 'no civilian near'\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTriggerArea",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "createtrigger": {
        "name": "createTrigger",
        "description": "Creates a sensor ([trigger](https://community.bistudio.com/wiki/trigger)) of the given type and at the given position. The type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation = detector. An array containing all units that have activated the trigger is available via [list](https://community.bistudio.com/wiki/list) *triggerobj*. Created triggers can be deleted using [deleteVehicle](https://community.bistudio.com/wiki/deleteVehicle).\n\n> \n> \nTriggers are created with default params, which are:\n\n\n* a: 50.0\n\n* b: 50.0\n\n* c: -1\n\n* angle: 0\n\n* rectangular: false\n\n* activationBy: None\n\n* activationType: Present\n\n* repeating: false\n\n* timeoutMin: 0\n\n* timeoutMid: 0\n\n* timeoutMax: 0\n\n* interruptable: true\n\n* type: None\n\n* text: \"\"\n\n* name: \"\"\n\n* expCond: \"this\"\n\n* expActiv: \"\"\n\n* expDesactiv: \"\"\n\n* interval: 0.5 (Cannot be accessed via editor, [ scripted only](https://community.bistudio.com/wiki/setTriggerInterval) since Arma 3 v1.98)",
        "syntaxArray": [
            {
                "Syntax": "**createTrigger** [type, position, makeGlobal]",
                "Params": "[type, position, makeGlobal]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - usually \"EmptyDetector\"\n\nposition: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\nmakeGlobal (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - locality flag  *(available since Arma 3 v1.44)*\n\n* [true](https://community.bistudio.com/wiki/true) (Default) - trigger is global [GEGlobal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)\n\n* [false](https://community.bistudio.com/wiki/false) - trigger is local [LELocal](https://community.bistudio.com/wiki/Multiplayer_Scripting#Locality)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object) - created trigger"
            }
        ],
        "examples": [
            "\n```sqf\n_trg = createTrigger [\"EmptyDetector\", getPos player];\n_trg setTriggerArea [5, 5, 0, false];\n_trg setTriggerActivation [\"CIV\", \"PRESENT\", true];\n_trg setTriggerStatements [\"this\", \"hint 'Civilian near player'\", \"hint 'no civilian near'\"];\n```\n",
            "Open/close Bar Gate automatically: \n```sqf\n//--- init of the Bar Gate\nif (isServer) then\n{\t\n\t_gateTrigger = createTrigger [\"EmptyDetector\", getPosWorld this, false];\n\t_gateTrigger setVariable [\"BarGateObj\", this];\n\t_gateTrigger setTriggerActivation [\"ANYPLAYER\", \"PRESENT\", true];\n\t_gateTrigger setTriggerArea [5, 25, getDir this, true];\n\t_gateTrigger setTriggerStatements \n\t[\n\t\t\"this\", \n\t\t\"thisTrigger getVariable \"\"BarGateObj\"\"; animateSource [\"\"Door_1_sound_source\"\", 1]\", \n\t\t\"thisTrigger getVariable \"\"BarGateObj\"\"; animateSource [\"\"Door_1_sound_source\"\", 0]\"\n\t];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createTrigger",
        "modifiers": []
    },
    "rainbow": {
        "name": "rainbow",
        "description": "Returns the current rainbow intensity.",
        "syntaxArray": [
            {
                "Syntax": "**rainbow**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_intensity = rainbow;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rainbow",
        "modifiers": []
    },
    "setmarkeralpha": {
        "name": "setMarkerAlpha",
        "description": "Sets the marker alpha. The marker is modified on all computers in a network session.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions.\n> ",
        "syntaxArray": [
            {
                "Syntax": "marker **setMarkerAlpha** alpha",
                "Params": "marker: [String](https://community.bistudio.com/wiki/String) -\n\nalpha: [Number](https://community.bistudio.com/wiki/Number) -\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\n\"my_marker\" setMarkerAlpha 0.5;\n```\n",
            "\n```sqf\n\"enemy_convoy_marker\" setMarkerAlpha 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerAlpha",
        "modifiers": [
            "Global effect"
        ]
    },
    "setposasl2": {
        "name": "setPosASL2",
        "description": "Sets the object position. The pos array uses the [PositionASL](https://community.bistudio.com/wiki/PositionASL) format. The version of the command does not offset based on object center. \n> ",
        "syntaxArray": [
            {
                "Syntax": "obj setPosASL2 pos",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\npos: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _aslPos = getPosASL player;\n_aslPos set [1, _aslPos select 1 + 10];\nplayer setPosASL2 _aslPos;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setPosASL2",
        "modifiers": []
    },
    "setdiaryrecordtext": {
        "name": "setDiaryRecordText",
        "description": "Set text of a log record.",
        "syntaxArray": [
            {
                "Syntax": "unit setDiaryRecordText [[subject, diaryRecord], [title, text]]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[[subject, diaryRecord], [title, text]]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "Nothing"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setDiaryRecordText [[\"diary\", _diaryRec], [\"Kill all enemies.\"]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setDiaryRecordText",
        "modifiers": []
    },
    "getpersonuseddlcs": {
        "name": "getPersonUsedDLCs",
        "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.",
        "syntaxArray": [
            {
                "Syntax": "getPersonUsedDLCs unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_objects = getPersonUsedDLCs player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPersonUsedDLCs",
        "modifiers": [
            "Global argument"
        ]
    },
    "leaderboardrequestrowsglobal": {
        "name": "leaderboardRequestRowsGlobal",
        "description": "Requests given leaderboard to download values from global table.",
        "syntaxArray": [
            {
                "Syntax": "leaderboardRequestRowsGlobal [leaderboard, offset, rows]",
                "Params": "leaderboard: [String](https://community.bistudio.com/wiki/String) - Name of the leaderboard\n\noffset: [Number](https://community.bistudio.com/wiki/Number) - Defines how many rows are skipped\n\nrows: [Number](https://community.bistudio.com/wiki/Number) - Defines how many rows are requested\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if request has been started"
            }
        ],
        "examples": [
            "\n```sqf\n_isGettingValues = leaderboardRequestRowsGlobal [\"TT01\", 0, 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardRequestRowsGlobal",
        "modifiers": []
    },
    "visiblepositionasl": {
        "name": "visiblePositionASL",
        "description": "Returns an object's rendered [3D position ASL](https://community.bistudio.com/wiki/PositionASL) (z value above sea level) in render time scope.",
        "syntaxArray": [
            {
                "Syntax": "**visiblePositionASL** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object): - name of the object\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [PositionASL](https://community.bistudio.com/wiki/PositionASL)"
            }
        ],
        "examples": [
            "\n```sqf\nplayerRenderedPosASL = visiblePositionASL player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visiblePositionASL",
        "modifiers": []
    },
    "settrafficdistance": {
        "name": "setTrafficDistance",
        "description": "Set maximum ambient traffic draw distance (in 2D). > ",
        "syntaxArray": [
            {
                "Syntax": "setTrafficDistance distance",
                "Params": "distance: [Number](https://community.bistudio.com/wiki/Number) - draw distance (in meter)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetTrafficDistance 1000;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setTrafficDistance",
        "modifiers": []
    },
    "allactivetitleeffects": {
        "name": "allActiveTitleEffects",
        "description": "Returns a list of all layers that have currently active title effect. Numbers equal to or greater than 0 represent cut layers, where as -1 represents title layer (see [Title Effect Type](https://community.bistudio.com/wiki/Title_Effect_Type)). Named layers are represented by their respective index.\n> ",
        "syntaxArray": [
            {
                "Syntax": "allActiveTitleEffects",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number), where each number represents index of currently active effect layer."
            }
        ],
        "examples": [
            "\n```sqf\ncutText [\"Hello World!\" ,\"PLAIN\", 2];\nhint str allActiveTitleEffects; // [0]\n```\n",
            "\n```sqf\n21 cutText [\"Hello World!\", \"PLAIN\", 2];\nhint str allActiveTitleEffects; // [21]\n```\n",
            "\n```sqf\ncutText [\"Hello World!\", \"PLAIN\", 2];\ntitleText [\"Hello World!\", \"PLAIN\", 2];\nhint str allActiveTitleEffects; // [-1, 0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/allActiveTitleEffects",
        "modifiers": []
    },
    "gethitindex": {
        "name": "getHitIndex",
        "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with [getAllHitPointsDamage](https://community.bistudio.com/wiki/getAllHitPointsDamage) command.\n\n* 0: no damage\n\n* 1: full damage",
        "syntaxArray": [
            {
                "Syntax": "vehicle **getHitIndex** hitPartIndex",
                "Params": "vehicle : [Object](https://community.bistudio.com/wiki/Object) - vehicle to be queried\n\nhitPartIndex: [Number](https://community.bistudio.com/wiki/Number) - hit part index of the Hit Point\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) (or, prior to Arma 3 v1.94, [Nothing](https://community.bistudio.com/wiki/Nothing) when invalid input is given)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player getHitIndex 3;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getHitIndex",
        "modifiers": [
            "Global argument"
        ]
    },
    "setbehaviour": {
        "name": "setBehaviour",
        "description": "Sets individual unit behaviour **on every unit in a group**.\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "groupOrUnit setBehaviour behaviour",
                "Params": "groupOrUnit : [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object) - Unit or a [group](https://community.bistudio.com/wiki/group)\n\nbehaviour: [String](https://community.bistudio.com/wiki/String) - Can be one of:\n\n* \"CARELESS\"\n\n* \"SAFE\"\n\n* \"AWARE\"\n\n* \"COMBAT\"\n\n* \"STEALTH\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_group1 setBehaviour \"SAFE\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setBehaviour",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "createvehiclelocal": {
        "name": "createVehicleLocal",
        "description": "Creates an object of the given type. Created object is not transferred through network in MP games. [netId](https://community.bistudio.com/wiki/netId) of such vehicle in multiplayer will be \"0:0\". To disable local vehicle creation, use [CfgDisabledCommands](https://community.bistudio.com/wiki/CfgDisabledCommands) to blacklist this command. Alternatively, you can use [createSimpleObject](https://community.bistudio.com/wiki/createSimpleObject) with local option enabled where applicable.",
        "syntaxArray": [
            {
                "Syntax": "type **createVehicleLocal** position",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\nposition: [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_lightsource = \"#lightpoint\" createVehicleLocal _pos;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createVehicleLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "loaduniform": {
        "name": "loadUniform",
        "description": "Returns current percentage of mass from items stored in a uniform relative to the maximum capacity of the uniform. \nIt is equivalent to this formula:\n\n```sqf\n_loadUniform = massOfAllItemsInUniform / getContainerMaxLoad uniform player; \n```\n",
        "syntaxArray": [
            {
                "Syntax": "**loadUniform** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_weight = loadUniform player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadUniform",
        "modifiers": []
    },
    "surfacetype": {
        "name": "surfaceType",
        "description": "Returns what surface type is at the given position. For surface texture see [surfaceTexture](https://community.bistudio.com/wiki/surfaceTexture) command.\n\n> \n[Show surface types (ArmA)](https://community.bistudio.com/wiki/surfaceType#)\n\n\n[Show surface types (Arma 2)](https://community.bistudio.com/wiki/surfaceType#)\n\n\n[Show surface types (Arma 3)](https://community.bistudio.com/wiki/surfaceType#)\n\n\n",
        "syntaxArray": [
            {
                "Syntax": "surfaceType position",
                "Params": "position: [Array](https://community.bistudio.com/wiki/Array) - format [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D) in which case Z will be ignored\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _surface = surfaceType [4500, 4500];\n```\n",
            "\n```sqf\nhint surfaceType position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/surfaceType",
        "modifiers": []
    },
    "removeteammember": {
        "name": "removeTeamMember",
        "description": "Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.",
        "syntaxArray": [
            {
                "Syntax": "team **removeTeamMember** member",
                "Params": "team: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\nmember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_team removeTeamMember _teamMember;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeTeamMember",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "setrandomlip": {
        "name": "setRandomLip",
        "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it is talking.",
        "syntaxArray": [
            {
                "Syntax": "unit **setRandomLip** bool",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nbool: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setRandomLip true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setRandomLip",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "setmarkerpolylinelocal": {
        "name": "setMarkerPolylineLocal",
        "description": "Sets a polyline marker's path. Works only on the computer that executes this command.",
        "syntaxArray": [
            {
                "Syntax": "marker setMarkerPolylineLocal path",
                "Params": "marker: [String](https://community.bistudio.com/wiki/String)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - [x1, y1, x2, y2, ... xn, yn]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Changes \"marker_1\" into a polyline and draws a sine curve on your position\n```sqf\n\"marker_1\" setMarkerShape \"polyline\";\nprivate _return = [] ;\n\nfor \"_i\" from 0 to 100 step 0.1 do {\n\t_return pushBack (_i + getPos player#0);\n\t_return pushBack ((sin (_i*10))*10 + getPos player#1);\n} ;\n\n\"marker_1\" setMarkerPolylineLocal _return;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMarkerPolylineLocal",
        "modifiers": [
            "Local effect"
        ]
    },
    "sideambientlife": {
        "name": "sideAmbientLife",
        "description": "Returns side of ambient life, for example ambient life placed in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).",
        "syntaxArray": [
            {
                "Syntax": "sideAmbientLife",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\n_sideAmbientLife = sideAmbientLife;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideAmbientLife",
        "modifiers": []
    },
    "triggertimeoutcurrent": {
        "name": "triggerTimeoutCurrent",
        "description": "Returns current timeout of the given trigger or -1 if countdown is not in progress. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "triggerTimeoutCurrent trigger",
                "Params": "trigger: [Object](https://community.bistudio.com/wiki/Object) - trigger object\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - time remaining before trigger activation."
            }
        ],
        "examples": [
            "\n```sqf\nprivate _remaining = triggerTimeoutCurrent _trigger;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/triggerTimeoutCurrent",
        "modifiers": [
            "Global argument"
        ]
    },
    "preloadtitleobj": {
        "name": "preloadTitleObj",
        "description": "Preloads data for the given resource object.",
        "syntaxArray": [
            {
                "Syntax": "**preloadTitleObj** [name, type, speed, showInMap]",
                "Params": "[name, type, speed, showInMap]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) - defined in [configFile](https://community.bistudio.com/wiki/configFile) >> \"CfgTitles\" >> name\n\ntype: [String](https://community.bistudio.com/wiki/String) - \"PLAIN\" e.g.\n\nspeed (Optional): [Number](https://community.bistudio.com/wiki/Number) - Default: -1\n\nshowInMap (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - Default: [true](https://community.bistudio.com/wiki/true)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_ok = preloadTitleObj [\"BISLogo\", \"PLAIN\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/preloadTitleObj",
        "modifiers": []
    },
    "curatorpoints": {
        "name": "curatorPoints",
        "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.",
        "syntaxArray": [
            {
                "Syntax": "**curatorPoints** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_points = curatorPoints myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorPoints",
        "modifiers": []
    },
    "getsubtitleoptions": {
        "name": "getSubtitleOptions",
        "description": "Returns subtitles settings.",
        "syntaxArray": [
            {
                "Syntax": "getSubtitleOptions",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Options in format [subtitles enabled, radio subtitles enabled]"
            }
        ],
        "examples": [
            "\n```sqf\n_subtitleSettings = getSubtitleOptions;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getSubtitleOptions",
        "modifiers": []
    },
    "objstatus": {
        "name": "objStatus",
        "description": "Sets the status of an objective that was defined in [briefing.html](https://community.bistudio.com/wiki/Briefing.html).\n\nStatus may be one of:\n\n* \"ACTIVE\"\n\n* \"FAILED\"\n\n* \"DONE\"\n\n* \"HIDDEN\"\n\nTo refer to an objective that is named \"OBJ_1\", for example, use only the index number in this command (i.e. \"1\" objStatus \"HIDDEN\").",
        "syntaxArray": [
            {
                "Syntax": "objectivenumber **objStatus** status",
                "Params": "objectivenumber: [String](https://community.bistudio.com/wiki/String)\n\nstatus: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n\"1\" objStatus \"DONE\"\n```\n \nMarks the objective named \"OBJ_1\" as completed."
        ],
        "Url": "https://community.bistudio.com/wiki/objStatus",
        "modifiers": []
    },
    "magazinesdetailvest": {
        "name": "magazinesDetailVest",
        "description": "Returns an array with the type names of all the unit's vest magazines.",
        "syntaxArray": [
            {
                "Syntax": "**magazinesDetailVest** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "magazinesDetailVest [unit, includeEmpty] *Since Arma 3 v1.99.146475*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nmagazinesDetailVest player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesDetailVest",
        "modifiers": []
    },
    "settaskresult": {
        "name": "setTaskResult",
        "description": "Set a result of the task.",
        "syntaxArray": [
            {
                "Syntax": "task **setTaskResult** [state,result]",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n[state,result]: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "*[Example needed](https://community.bistudio.com/wiki/Category:Example_needed)*"
        ],
        "Url": "https://community.bistudio.com/wiki/setTaskResult",
        "modifiers": []
    },
    "isbleeding": {
        "name": "isBleeding",
        "description": "Returns whether the unit is bleeding.",
        "syntaxArray": [
            {
                "Syntax": "**isBleeding** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (isBleeding player) then { player groupChat \"I'm bleeding!!\"; }\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isBleeding",
        "modifiers": []
    },
    "hasweapon": {
        "name": "hasWeapon",
        "description": "Checks if a unit has the given weapon in hands or on back/in holster. Weapons inside unit containers such as vest and backpack are not counted.",
        "syntaxArray": [
            {
                "Syntax": "unitName **hasWeapon** weaponName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nweaponName: [String](https://community.bistudio.com/wiki/String) - the name of the weapon to check for.\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) -  \nReturns true if the unit has the weapon, false if not."
            }
        ],
        "examples": [
            "\n```sqf\nif !(player hasWeapon \"arifle_MX_ACO_pointer_F\") then { player addWeapon \"arifle_MX_ACO_pointer_F\" };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hasWeapon",
        "modifiers": [
            "Global argument"
        ]
    },
    "setgroupowner": {
        "name": "setGroupOwner",
        "description": "Changes the ownership of a group (and all its units) to a given client. The group leader must not be a player. This command only works when called from the server. Returns true if locality was changed. For [agents](https://community.bistudio.com/wiki/agents) use [setOwner](https://community.bistudio.com/wiki/setOwner) command.",
        "syntaxArray": [
            {
                "Syntax": "group setGroupOwner clientID",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) -\n\nclientID: [Number](https://community.bistudio.com/wiki/Number) - the [ machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID) of the new [owner](https://community.bistudio.com/wiki/owner).\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_localityChanged = _someGroup setGroupOwner (owner _playerObject);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setGroupOwner",
        "modifiers": [
            "Server execution"
        ]
    },
    "isabletobreathe": {
        "name": "isAbleToBreathe",
        "description": "If unit is diving and doesn't have a re-breather, it returns [false](https://community.bistudio.com/wiki/false). Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns [true](https://community.bistudio.com/wiki/true).",
        "syntaxArray": [
            {
                "Syntax": "**isAbleToBreathe** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_canBreath = isAbleToBreathe player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAbleToBreathe",
        "modifiers": []
    },
    "canadditemtouniform": {
        "name": "canAddItemToUniform",
        "description": "Checks if given object can be stored into soldier's uniform.",
        "syntaxArray": [
            {
                "Syntax": "unit canAddItemToUniform item",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            },
            {
                "Syntax": "unit canAddItemToUniform [item, count] *Since Arma 3 v1.55.133607*",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n[item, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nitem: [String](https://community.bistudio.com/wiki/String)\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_item = \"HandGrenade\";\n_fits = player canAddItemToUniform _item;\nif (_fits) then {\n\tplayer addItemToUniform _item;\n} else {\n\thint \"no room!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canAddItemToUniform",
        "modifiers": []
    },
    "ctrlsetpositionh": {
        "name": "ctrlSetPositionH",
        "description": "Sets the height of a 2D control. [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) is required to complete the operation.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetPositionH h",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - 2D control\n\nh: [Number](https://community.bistudio.com/wiki/Number) - Height of the control\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl ctrlSetPositionH 0.5;\n_ctrl ctrlCommit 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetPositionH",
        "modifiers": []
    },
    "getroadinfo": {
        "name": "getRoadInfo",
        "description": "Returns road info in format [mapType, width, isPedestrian, texture, textureEnd, material, begPos, endPos, isBridge]\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "getRoadInfo road",
                "Params": "road: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [mapType, width, isPedestrian, texture, textureEnd, material, begPos, endPos, isBridge], where:\n\n* mapType: [String](https://community.bistudio.com/wiki/String) - road segment type, could be \"ROAD\", \"MAIN ROAD\", \"TRACK\", \"TRAIL\" (see [nearestTerrainObjects](https://community.bistudio.com/wiki/nearestTerrainObjects))\n\n* width: [Number](https://community.bistudio.com/wiki/Number) - road segment width\n\n* isPedestrian: [Boolean](https://community.bistudio.com/wiki/Boolean) - when [true](https://community.bistudio.com/wiki/true) road is for pedestrian use only\n\n* texture: [String](https://community.bistudio.com/wiki/String) - road segment surface texture\n\n* textureEnd: [String](https://community.bistudio.com/wiki/String) - road segment surface texture\n\n* material: [String](https://community.bistudio.com/wiki/String) - road segment surface material\n\n* begPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - start of the road segment\n\n* endPos: [PositionASL](https://community.bistudio.com/wiki/PositionASL) - finish of the road segment\n\n* isBridge: [Boolean](https://community.bistudio.com/wiki/Boolean) - when [true](https://community.bistudio.com/wiki/true) road segment is a bridge"
            }
        ],
        "examples": [
            "\n```sqf\ngetRoadInfo _road\n```\n",
            "Get direction of the road segment:\n```sqf\nprivate _info = getRoadInfo _road;\nprivate _dir = (_info select 6) getDir (_info select 7);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getRoadInfo",
        "modifiers": []
    },
    "backpack": {
        "name": "backpack",
        "description": "Returns a class of a backpack.",
        "syntaxArray": [
            {
                "Syntax": "backpack unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_classname = backpack player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/backpack",
        "modifiers": []
    },
    "tvsetvalue": {
        "name": "tvSetValue",
        "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer",
        "syntaxArray": [
            {
                "Syntax": "tvSetValue [idc, path, val]",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "ctrl tvSetValue [path, val]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number)\n\nval: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ntvSetValue [101, [0], 555];\n```\n",
            "\n```sqf\n_ctrl tvSetValue [[0,0,0], 14];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetValue",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "is3den": {
        "name": "is3DEN",
        "description": "Returns true if the [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) is currently being used. [true](https://community.bistudio.com/wiki/true) when inside editor environment, [false](https://community.bistudio.com/wiki/false) when outside of editor environment. (see also [is3DENMultiplayer](https://community.bistudio.com/wiki/is3DENMultiplayer), [is3DENPreview](https://community.bistudio.com/wiki/is3DENPreview))",
        "syntaxArray": [
            {
                "Syntax": "**is3DEN**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif is3DEN then {systemChat \"Welcome to Eden Editor!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/is3DEN",
        "modifiers": []
    },
    "terrainintersectasl": {
        "name": "terrainIntersectASL",
        "description": "Checks for intersection of terrain between two ASL positions. Returns [true](https://community.bistudio.com/wiki/true) if intersects with terrain.\nFor AGL variant, see [terrainIntersect](https://community.bistudio.com/wiki/terrainIntersect).",
        "syntaxArray": [
            {
                "Syntax": "terrainIntersectASL [pos1, pos2]",
                "Params": "[pos1, pos2]: [Array](https://community.bistudio.com/wiki/Array)\n\npos1: [Array](https://community.bistudio.com/wiki/Array) - start position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\npos2: [Array](https://community.bistudio.com/wiki/Array) - end position in format [PositionASL](https://community.bistudio.com/wiki/PositionASL)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_intersects = terrainIntersectASL [getPosASL player, getPosASL chopper];\n```\n",
            "\n```sqf\n_intersects = terrainIntersectASL [eyePos player, eyePos enemy1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/terrainIntersectASL",
        "modifiers": []
    },
    "addaction": {
        "name": "addAction",
        "description": "Adds an entry to the action menu of an object. The action can only be activated when in proximity to the object **and** looking at it. Adding an action to the player makes that action available to the player at all times. For event handling of user interaction see [inGameUISetEventHandler](https://community.bistudio.com/wiki/inGameUISetEventHandler).",
        "syntaxArray": [
            {
                "Syntax": "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection, memoryPoint]",
                "Params": "**object**: [Object](https://community.bistudio.com/wiki/Object) -  Unit, vehicle or static object. **No [agents](https://community.bistudio.com/wiki/createAgent) and [simple objects](https://community.bistudio.com/wiki/Arma_3_Simple_Objects)!**\n\n**title**: [String](https://community.bistudio.com/wiki/String) - The action name which is displayed in the action menu, may contain [Structured Text](https://community.bistudio.com/wiki/Structured_Text). Because of that **<** and **>** symbols will be interpreted as opening and closing XML tags. To avoid this use &lt; for **<** and &gt; for **>**. The title text appearance can be changed with [setUserActionText](https://community.bistudio.com/wiki/setUserActionText)\n\n**script**: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code) - Either path to the script file, relative to the mission folder or string with code or the actual script code. If the string is a path to script file, the script file **must** have extension .[SQS](https://community.bistudio.com/wiki/SQS_Syntax) or .[SQF](https://community.bistudio.com/wiki/SQF_Syntax). The script, whether it is a file or a code, will run in [scheduled environment](https://community.bistudio.com/wiki/Scheduler#Scheduled_Environment), i.e. it is ok to use [sleep](https://community.bistudio.com/wiki/sleep). Parameters array passed to the script upon activation in *[_this](https://community.bistudio.com/wiki/Magic_Variables#this)* variable is:\n\n\n* **target**: [Object](https://community.bistudio.com/wiki/Object) - the object which the action is assigned to\n\n* **caller**: [Object](https://community.bistudio.com/wiki/Object) - the unit that activated the action\n\n* **actionID**: [Number](https://community.bistudio.com/wiki/Number) - activated action's ID (same as addAction's return value)\n\n* **arguments**: [Anything](https://community.bistudio.com/wiki/Anything) - arguments given to the script if you are using the extended syntax\n\n**arguments**: [Anything](https://community.bistudio.com/wiki/Anything) - (Optional, default [nil](https://community.bistudio.com/wiki/nil)) arguments to pass to the script. Accessible with \n```sqf\n_this select 3\n```\n inside the script. If [Array](https://community.bistudio.com/wiki/Array) is used as an argument for example, its first element reference would be \n```sqf\n_this select 3 select 0\n```\n\n\n**priority**: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 1.5) Priority value of the action. Actions will be arranged in descending order according to this value. Every game action has a preset priority value. Value can be negative or decimal fraction. Actions with same values will be arranged in order which they were made, newest at the bottom. The bigger the number the higher the action will be positioned on the menu. Typical range is 0 to 6\n\n**showWindow**: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) If set to [true](https://community.bistudio.com/wiki/true), players see \"Titletext\" at mid-lower screen, as they approach the object. Only the title text for the action with highest priority and *showWindow* set to [true](https://community.bistudio.com/wiki/true) will be shown.\n\n**hideOnUse**: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [true](https://community.bistudio.com/wiki/true)) If set to [true](https://community.bistudio.com/wiki/true), it will hide the action menu after selecting it. If set to [false](https://community.bistudio.com/wiki/false), it will leave the action menu open and visible after selecting the action, leaving the same action highlighted, for the purpose of allowing you to re-select that same action quickly, or to select another action\n\n**shortcut**: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"\") One of the [key names](https://community.bistudio.com/wiki/Category:Key_Actions) defined in bin.pbo (e.g. \"moveForward\"). Adding available shortcut will bind corresponding keyboard key to this action. Shortcut availability can be tested with [inputAction](https://community.bistudio.com/wiki/inputAction) command\n\n**condition**: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"true\") Expression that must return [true](https://community.bistudio.com/wiki/true) for the action to be shown. **Special variables** passed to the script code are:\n\n* *_target*: [Object](https://community.bistudio.com/wiki/Object) - The object to which action is attached or, if the object is a unit inside of vehicle, the vehicle\n\n* *_this*: [Object](https://community.bistudio.com/wiki/Object) - Caller person to whom the action is shown (or not shown if *condition* returns [false](https://community.bistudio.com/wiki/false))\n\n* *_originalTarget*: [Object](https://community.bistudio.com/wiki/Object) - The original object to which the action is attached, regardless if the object/unit is in a vehicle or not\n> \n\n**radius**: [Number](https://community.bistudio.com/wiki/Number) - (Optional, default 50) Maximum 3D [distance](https://community.bistudio.com/wiki/distance) in meters between the activating unit's [eyePos](https://community.bistudio.com/wiki/eyePos) and the *object's* *memoryPoint*, *selection* or [position](https://community.bistudio.com/wiki/position). -1 disables the radius *Since Arma 3 v1.64*\n\n**unconscious**: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) If [true](https://community.bistudio.com/wiki/true) will be shown to incapacitated player. See also [setUnconscious](https://community.bistudio.com/wiki/setUnconscious) and [lifeState](https://community.bistudio.com/wiki/lifeState)*Since Arma 3 v1.64*\n\n**selection**: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"\") *object's* geometry LOD's named selection *Since Arma 3 v1.70*\n\n**memoryPoint**: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"\") *object's* memory point. If *selection* is supplied, *memoryPoint* is not used *Since Arma 3 v1.82*\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - The added action's ID. Action can be removed with [removeAction](https://community.bistudio.com/wiki/removeAction) (see also [removeAllActions](https://community.bistudio.com/wiki/removeAllActions)). IDs are incrementing, the first given action to each unit has the ID 0, the second the ID 1, etc. IDs are also passed to the called script (see [*script* parameter](https://community.bistudio.com/wiki/addAction#Syntax))"
            }
        ],
        "examples": [
            "\n```sqf\n// short and sweet\nplayer addAction [\"a useless action that does nothing\", {}];\nplayer addAction [\"<t color='#FF0000'>This Useless Action Is RED</t>\", {hint \"RED\"}];\nplayer addAction [\"Hint Hello!\", { hint format [\"Hello %1!\", name player] }];\nplayer addAction [\"String Exec\", \"hint 'this is also compiled'\"];\n```\n",
            "\n```sqf\n_actionID = player addAction [\"Exec the file\", \"scriptFile.sqf\"]\n```\n\n**scriptFile.sqf:**\n\n```sqf\nhint str _this;\n```\n",
            "\n```sqf\n// create object on the server and add action to the object on every client\nif (isServer) then\n{\n\tprivate _object = \"some_obj_class\" createVehicle [1234, 1234, 0];\n\t[_object, [\"Greetings!\", { hint \"Hello!\"; }]] remoteExec [\"addAction\"]; // Note: does not return action id\n};\n```\n",
            "Default parameters:\n```sqf\nthis addAction\n[\n\t\"title\",\n\t{\n\t\tparams [\"_target\", \"_caller\", \"_actionId\", \"_arguments\"];\n\t},\n\tnil,\n\t1.5,\n\ttrue,\n\ttrue,\n\t\"\",\n\t\"true\", // _target, _this, _originalTarget\n\t50,\n\tfalse,\n\t\"\",\n\t\"\"\n];\n```\n",
            "Default parameters with comments:\n```sqf\nthis addAction\n[\n\t\"title\",\t// title\n\t{\n\t\tparams [\"_target\", \"_caller\", \"_actionId\", \"_arguments\"]; // script\n\t},\n\tnil,\t\t// arguments\n\t1.5,\t\t// priority\n\ttrue,\t\t// showWindow\n\ttrue,\t\t// hideOnUse\n\t\"\",\t\t\t// shortcut\n\t\"true\", \t// condition\n\t50,\t\t\t// radius\n\tfalse,\t\t// unconscious\n\t\"\",\t\t\t// selection\n\t\"\"\t\t\t// memoryPoint\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addAction",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "deleterange": {
        "name": "deleteRange",
        "description": "Removes a range of array elements from the given array (modifies the original array, just like [resize](https://community.bistudio.com/wiki/resize) or [set](https://community.bistudio.com/wiki/set)).",
        "syntaxArray": [
            {
                "Syntax": "array **deleteRange** [from, count]",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array)\n\n[from, count]: [Array](https://community.bistudio.com/wiki/Array)\n\nfrom: [Number](https://community.bistudio.com/wiki/Number) - Array index to start selection from.\n\ncount: [Number](https://community.bistudio.com/wiki/Number) - Number of array elements to remove. If the selected range exceeds source array boundaries, selection will be made up to the end of the array.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3,4,5,6];\n_arr deleteRange [1,4];\nhint str _arr; //[1,6]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteRange",
        "modifiers": []
    },
    "targets": {
        "name": "targets",
        "description": "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.",
        "syntaxArray": [
            {
                "Syntax": "unit **targets** [enemyOnly, maxDistance, sides, maxAge, alternateCenter]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit which target knowledge is retrieved\n\n[enemyOnly, maxDistance, sides, maxAge, alternateCenter]: [Array](https://community.bistudio.com/wiki/Array)\n\nenemyOnly (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) to include only enemy targets, [false](https://community.bistudio.com/wiki/false) to include all targets\n\nmaxDistance (Optional): [Number](https://community.bistudio.com/wiki/Number) - max. distance based on target's expected position *(distance is measured in 2D)*; use 0 to ignore the maxDistance filter\n\nsides (Optional): [Array](https://community.bistudio.com/wiki/Array) - array of accepted sides; use [] to ignore the side filter\n\nmaxAge (Optional): [Number](https://community.bistudio.com/wiki/Number) - max. target age, targets that are known to unit for longer then maxAge are ignored; use 0 to ignore the maxAge filter\n\nalternateCenter (Optional): [Array](https://community.bistudio.com/wiki/Array) - alternate (2D or 3D) position used for distance check *(distance is measured in 2D)*; if not specified unit position is being used\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - unit's targets matching the criteria"
            }
        ],
        "examples": [
            "\n```sqf\n_targets = _unit targets [false, 300, [east,sideEnemy]]; //all targets of east or renegade side in 300m\n```\n",
            "\n```sqf\n_targets = _unit targets [true, 300]; //enemy targets in 300m\n```\n",
            "\n```sqf\n_targets = _unit targets []; //all targets\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/targets",
        "modifiers": [
            "Global argument"
        ]
    },
    "binocularitems": {
        "name": "binocularItems",
        "description": "Returns array with all items assigned to the [binocular](https://community.bistudio.com/wiki/binocular) weapon except magazines. Use [binocularMagazine](https://community.bistudio.com/wiki/binocularMagazine) command for the latter. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**binocularItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [silencer, laserpointer/flashlight, optics, bipod]"
            }
        ],
        "examples": [
            "\n```sqf\nbinocularItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/binocularItems",
        "modifiers": [
            "Global argument"
        ]
    },
    "moonphase": {
        "name": "moonPhase",
        "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on [setDate](https://community.bistudio.com/wiki/setDate) [4804,7,13,0,0]; Use [Moon Phase Utility](https://community.bistudio.com/wiki/Arma_3_Utilities#Moon_Phases) to find out date for a mission with desired moon.",
        "syntaxArray": [
            {
                "Syntax": "**moonPhase** date",
                "Params": "date: [Array](https://community.bistudio.com/wiki/Array) - required date in [date](https://community.bistudio.com/wiki/date) format\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_currentMoonPhase = moonPhase date;\n```\n",
            "\n```sqf\n// Returns array of dates for given year when moon is at its fullest\nfnc_fullMoonDates = \n{\n\tprivate _year = param [0, 2035];\n\tprivate [\"_date\", \"_phase\", \"_fullMoonDate\"];\n\tprivate _fullMoonPhase = 1;\n\tprivate _waxing = false;\n\tprivate _fullMoonDates = [];\n\tfor \"_i\" from dateToNumber [_year, 1, 1, 0, 0] to dateToNumber [_year, 12, 31, 23, 59] step 1 / 365 do\n\t{\n\t\t_date = numberToDate [_year, _i];\n\t\t_phase = moonPhase _date;\n\t\tcall\n\t\t{\n\t\t\tif (_phase > _fullMoonPhase) exitWith\n\t\t\t{\n\t\t\t\t_waxing = true;\n\t\t\t\t_fullMoonDate = _date;\n\t\t\t};\n\t\t\tif (_waxing) exitWith \n\t\t\t{\n\t\t\t\t_waxing = false;\n\t\t\t\t_fullMoonDates pushBack _fullMoonDate;\n\t\t\t};\n\t\t};\n\t\t_fullMoonPhase = _phase;\n\t};\n\t_fullMoonDates\n};\n\n//set random full moon date in year 1970\nsetDate selectRandom (1970 call fnc_fullMoonDates);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/moonPhase",
        "modifiers": []
    },
    "markershape": {
        "name": "markerShape",
        "description": "Returns the shape of given marker.",
        "syntaxArray": [
            {
                "Syntax": "**markerShape** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String) - Name of the marker\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Shape of given marker. Can be return:\n\n* \"ICON\"\n\n* \"RECTANGLE\"\n\n* \"ELLIPSE\"\n\n* \"POLYLINE\" (Hand drawn markers, *since Arma 3*)\n\n* \"ERROR\""
            }
        ],
        "examples": [
            "\n```sqf\nif (markerShape \"Marker1\" == \"RECTANGLE\") then {hint \"Marker1 is a rectangle!\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerShape",
        "modifiers": [
            "Global argument"
        ]
    },
    "setowner": {
        "name": "setOwner",
        "description": "From server machine, change the ownership of an object to a given client. Using command in an unintended way will log a message to .rpt file. To transfer ownership of all AI units in a group properly, use [setGroupOwner](https://community.bistudio.com/wiki/setGroupOwner) instead.",
        "syntaxArray": [
            {
                "Syntax": "object **setOwner** clientID",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - Object to transfer\n\nclientID: [Number](https://community.bistudio.com/wiki/Number) - The [ machine network ID](https://community.bistudio.com/wiki/Multiplayer_Scripting#Machine_network_ID) of the new [owner](https://community.bistudio.com/wiki/owner).\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - Returns [true](https://community.bistudio.com/wiki/true) if ownership was successfully transferred, otherwise [false](https://community.bistudio.com/wiki/false)"
            }
        ],
        "examples": [
            "\n```sqf\n_someObject setOwner 12;\n```\n",
            "\n```sqf\n_someObject setOwner (owner _playerObject);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setOwner",
        "modifiers": [
            "Global argument",
            "Server execution"
        ]
    },
    "servername": {
        "name": "serverName",
        "description": "Returns name of the hosting server in MP, \"\" in SP.",
        "syntaxArray": [
            {
                "Syntax": "serverName",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\nhint format [\"Welcome to the %1 server!\", serverName];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/serverName",
        "modifiers": []
    },
    "uniformitems": {
        "name": "uniformItems",
        "description": "Get array with all items (of any kind, even weapons) from uniform.",
        "syntaxArray": [
            {
                "Syntax": "**uniformItems** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nuniformItems player;\n```\n\n\n\n```sqf\n[\n\t\"FirstAidKit\",\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"30Rnd_65x39_caseless_mag\"\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/uniformItems",
        "modifiers": []
    },
    "position": {
        "name": "position",
        "description": "Returns position of an object (alias of [getPos](https://community.bistudio.com/wiki/getPos)) or location (alias of [locationPosition](https://community.bistudio.com/wiki/locationPosition)).",
        "syntaxArray": [
            {
                "Syntax": "position object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "position location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [x,y,z], where z is -1 * [getTerrainHeightASL](https://community.bistudio.com/wiki/getTerrainHeightASL) at the location"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _pos = position player;\n```\n",
            "\n```sqf\n_myLocationHomePos = position myLocation;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/position",
        "modifiers": []
    },
    "safezoneh": {
        "name": "safeZoneH",
        "description": "Returns the height of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the Y axis, the value will be positive but resulting Y will end up beyond the bottom border. Therefore in order to calculate Y of the bottom screen border, the length of [safeZoneY](https://community.bistudio.com/wiki/safeZoneY) must be subtracted from safeZoneH, but because it is negative, it must be added instead. _screenBottomBorderY = safeZoneH + [safeZoneY](https://community.bistudio.com/wiki/safeZoneY). The measurement units depend on the current screen resolution [getResolution](https://community.bistudio.com/wiki/getResolution). See also [SafeZone](https://community.bistudio.com/wiki/SafeZone)\n[](https://community.bistudio.com/wiki/File:safezone.jpg)",
        "syntaxArray": [
            {
                "Syntax": "safeZoneH",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Height of the screen in screen measurement units"
            }
        ],
        "examples": [
            "\n```sqf\n_screenHeight = safeZoneH;\n```\n",
            "\n```sqf\n_screenTopBorderY = safeZoneY;\n_screenBottomBorderY = safeZoneH + safeZoneY;\n```\n",
            "Create control 50% wide, 30% tall, centered on screen:\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth; \n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/safeZoneH",
        "modifiers": []
    },
    "get3deniconsvisible": {
        "name": "get3DENIconsVisible",
        "description": "Get visibility state of [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) icons.",
        "syntaxArray": [
            {
                "Syntax": "**get3DENIconsVisible**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [showMap, showScene]\n\n* showScene: [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the scene\n\n* showMap : [Boolean](https://community.bistudio.com/wiki/Boolean) - visibility in the map"
            }
        ],
        "examples": [
            "\n```sqf\nif (get3DENIconsVisible select 0) then {hint \"Icons are visible in the map.\";};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENIconsVisible",
        "modifiers": []
    },
    "nearsupplies": {
        "name": "nearSupplies",
        "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.",
        "syntaxArray": [
            {
                "Syntax": "origin **nearSupplies** radius",
                "Params": "origin: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\nradius: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of [Objects](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_list = player nearSupplies 50;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearSupplies",
        "modifiers": []
    },
    "preprocessfilelinenumbers": {
        "name": "preprocessFileLineNumbers",
        "description": "Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using /* */ and [PreProcessor Commands](https://community.bistudio.com/wiki/PreProcessor_Commands). The preprocessor also adds a default debug entrypoint for compiler at the begining of script: #line 1 \"aFilename\"\n\nThe **#line** keyword can be used in any script that are not preprocess, or with preprocess script with extra macro to protect reserverd sharp character. The format is:\n**#line** <number> \"<name>\"\nfollowed by new line. <number> could be only positive integer and <name> could be any name. This will be used only if an error occurs in the script. The error will contain the line:\nFile <filename>, line <linenumber>\nwhere <filename> will be the <name> you set and <linenumber> will be <number> + how many lines it is from the **#line** line. If the error happened on the line right under **#line** it will add 0 to <number>, if on second line, it will add 1 etc.\nIt is possible to use more than one **#line** keywords, but it seems having just one at the top for little script is enough to pinpoint position of the error easily. \n\n> ",
        "syntaxArray": [
            {
                "Syntax": "**preprocessFileLineNumbers** fileName",
                "Params": "fileName: [String](https://community.bistudio.com/wiki/String) - path to the file\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - file content containing #line 1 \"aFilename\""
            }
        ],
        "examples": [
            "\n```sqf\n_string = preprocessFileLineNumbers \"A3\\ui_f\\scripts\\IGUI\\RscUnitInfo.sqf\"\n```\n \n\nResult is: \n #line 1 \"A3\\ui_f\\scripts\\IGUI\\RscUnitInfo.sqf\"\n disableserialization;\n ........"
        ],
        "Url": "https://community.bistudio.com/wiki/preprocessFileLineNumbers",
        "modifiers": []
    },
    "switchcamera": {
        "name": "switchCamera",
        "description": "Switch camera to given vehicle / camera. Mode is one of:\n\n* **\"INTERNAL\"**: 1st person\n\n* **\"GUNNER\"**: optics / sights\n\n* **\"EXTERNAL\"**: 3rd person\n\n* **\"GROUP\"**: group\n\n* **\"CARGO\"**: same as \"INTERNAL\"\n\nIf you switch to a unit in a vehicle, this command uses the correct turret.\n> ",
        "syntaxArray": [
            {
                "Syntax": "target switchCamera mode",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object)\n\nmode: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "switchCamera target *Since Arma 3 v1.65.13884*",
                "Params": "target: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer switchCamera \"Gunner\";\n```\n",
            "\n```sqf\nvehicle player switchCamera \"External\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/switchCamera",
        "modifiers": []
    },
    "ctrlautoscrolldelay": {
        "name": "ctrlAutoScrollDelay",
        "description": "Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present. \n\nAutorscroll is available for [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) and [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP) types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. [ctrlAutoScrollSpeed](https://community.bistudio.com/wiki/ctrlAutoScrollSpeed) defines the speed with which scrollbar is scrolled. If [ctrlAutoScrollRewind](https://community.bistudio.com/wiki/ctrlAutoScrollRewind) is [true](https://community.bistudio.com/wiki/true), the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlAutoScrollDelay** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - [CT_LISTBOX](https://community.bistudio.com/wiki/DialogControls-ListBoxes) or [CT_CONTROLS_GROUP](https://community.bistudio.com/wiki/CT_CONTROLS_GROUP)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlDelay = ctrlAutoScrollDelay _ctrlGroup;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlAutoScrollDelay",
        "modifiers": []
    },
    "dowatch": {
        "name": "doWatch",
        "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use [objNull](https://community.bistudio.com/wiki/objNull) as the target to order a unit to stop watching a position/target.",
        "syntaxArray": [
            {
                "Syntax": "unit(s) **doWatch** position",
                "Params": "unit(s): [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format [Position](https://community.bistudio.com/wiki/Position)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "unit(s) **doWatch** target",
                "Params": "unit(s): [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array)\n\ntarget: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne doWatch markerPos \"MarkerMoveOne\"\n```\n\n\nThe unit named \"soldierOne\" will watch the position where the marker \"MarkerMoveOne\" is placed.",
            "\n```sqf\n_soldierOne doWatch _eastSoldier\n```\n\n\nThe unit named \"soldierOne\" will watch the unit named \"eastSoldier\"."
        ],
        "Url": "https://community.bistudio.com/wiki/doWatch",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "ctrlidd": {
        "name": "ctrlIDD",
        "description": "Returns display IDD.",
        "syntaxArray": [
            {
                "Syntax": "**ctrlIDD** display",
                "Params": "display: [Display](https://community.bistudio.com/wiki/Display)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlIDD findDisplay 46; //46\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlIDD",
        "modifiers": []
    },
    "assigntoairport": {
        "name": "assignToAirport",
        "description": "Assigns a plane to an airport ID or object.",
        "syntaxArray": [
            {
                "Syntax": "plane assignToAirport id",
                "Params": "plane: [Object](https://community.bistudio.com/wiki/Object) - Plane\n\nid: [Number](https://community.bistudio.com/wiki/Number) - Airport id\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "plane assignToAirport target *Since Arma 3 v1.68*",
                "Params": "plane: [Object](https://community.bistudio.com/wiki/Object) - Plane\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) - Airport object. For example an aircraft carrier, see [Arma 3: Dynamic Airport Configuration](https://community.bistudio.com/wiki/Arma_3:_Dynamic_Airport_Configuration)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplane1 assignToAirport 0\n```\n",
            "\n```sqf\nplane1 assignToAirport carrier1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/assignToAirport",
        "modifiers": []
    },
    "menuhover": {
        "name": "menuHover",
        "description": "Returns path to menu entry mouse is currently hovering over.",
        "syntaxArray": [
            {
                "Syntax": "menuHover idc",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            },
            {
                "Syntax": "menuHover control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_path =  menuHover (findDisplay 313 displayCtrl 120);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuHover",
        "modifiers": []
    },
    "menusize": {
        "name": "menuSize",
        "description": "Returns how many sub entries is in item on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuSize [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "control menuSize path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 313 displayCtrl 120 menuSize [];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSize",
        "modifiers": []
    },
    "setshadowdistance": {
        "name": "setShadowDistance",
        "description": "Sets the shadows rendering distance.",
        "syntaxArray": [
            {
                "Syntax": "**setShadowDistance** value",
                "Params": "value: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsetShadowDistance 1000\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setShadowDistance",
        "modifiers": [
            "Local effect"
        ]
    },
    "cameraon": {
        "name": "cameraOn",
        "description": "Returns the vehicle to which the camera is attached.",
        "syntaxArray": [
            {
                "Syntax": "cameraOn",
                "Params": "",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_object = cameraOn;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/cameraOn",
        "modifiers": []
    },
    "to": {
        "name": "to",
        "description": "Continue sequence of [for](https://community.bistudio.com/wiki/for) construct. It sets the end value of the index variable",
        "syntaxArray": [
            {
                "Syntax": "forType to b",
                "Params": "forType: [For Type](https://community.bistudio.com/wiki/For_Type)\n\nb: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[For Type](https://community.bistudio.com/wiki/For_Type)"
            }
        ],
        "examples": [
            "\n```sqf\nfor \"_x\" from 10 to 20 do {/* Do something*/}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/to",
        "modifiers": []
    },
    "playerside": {
        "name": "playerSide",
        "description": "Returns the player's [side](https://community.bistudio.com/wiki/Side). This is valid even when the player controlled person is dead (a difference from [side](https://community.bistudio.com/wiki/side) [player](https://community.bistudio.com/wiki/player)).\n> ",
        "syntaxArray": [
            {
                "Syntax": "**playerSide**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side man1 == playerSide) then {\n    hint \"man1 is on your side!\";\n};\n```\n",
            "\n```sqf\nswitch (playerSide) do {\n    case west: {\n        hint \"You are BLUFOR\";\n    };\n    case east: {\n        hint \"You are OPFOR\";\n    };\n};\n```\n",
            "the following code will change the side of the player including playerSide:\n\n```sqf\nprivate _player = player; \n[player] join createGroup east; \nselectNoPlayer; \nselectPlayer _player;\nhint str playerSide; // EAST\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playerSide",
        "modifiers": []
    },
    "ctrlsetmodelscale": {
        "name": "ctrlSetModelScale",
        "description": "Sets 3D control model scale",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlSetModelScale** scale",
                "Params": "control : [Control](https://community.bistudio.com/wiki/Control) - 3D control\n\nscale : [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl3D ctrlSetModelScale 1.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetModelScale",
        "modifiers": []
    },
    "vehiclereceiveremotetargets": {
        "name": "vehicleReceiveRemoteTargets",
        "description": "Gets whether the vehicle can acquire targets via datalink from the [Side](https://community.bistudio.com/wiki/Side) center.",
        "syntaxArray": [
            {
                "Syntax": "**vehicleReceiveRemoteTargets** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicleReceiveRemoteTargets (vehicle player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleReceiveRemoteTargets",
        "modifiers": []
    },
    "canslingload": {
        "name": "canSlingLoad",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if [setSlingLoad](https://community.bistudio.com/wiki/setSlingLoad) is possible.",
        "syntaxArray": [
            {
                "Syntax": "heli canSlingLoad cargo",
                "Params": "heli: [Object](https://community.bistudio.com/wiki/Object) - a helicopter\n\ncargo: [Object](https://community.bistudio.com/wiki/Object) - an entity\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if [setSlingLoad](https://community.bistudio.com/wiki/setSlingLoad) is possible"
            }
        ],
        "examples": [
            "\n```sqf\n_canSling = veh1 canSlingLoad veh2;\n```\n",
            "\n```sqf\nhint str ((vehicle player) canSlingLoad veh1);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canSlingLoad",
        "modifiers": []
    },
    "magazinesammo": {
        "name": "magazinesAmmo",
        "description": "Returns all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use [magazinesAmmoFull](https://community.bistudio.com/wiki/magazinesAmmoFull) to return all magazines.",
        "syntaxArray": [
            {
                "Syntax": "magazinesAmmo vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle or container. When transport is supplied, the command returns vehicle's magazines not the cargo. When container is supplied, the command behaves identically to [magazinesAmmoCargo](https://community.bistudio.com/wiki/magazinesAmmoCargo)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in format:\n\n* [String](https://community.bistudio.com/wiki/String): magazine class name\n\n* [Number](https://community.bistudio.com/wiki/Number): magazine ammo count"
            },
            {
                "Syntax": "magazinesAmmo [vehicle, includeEmpty] *Since Arma 3 v1.99.146475*",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle.\n\nincludeEmpty: [Boolean](https://community.bistudio.com/wiki/Boolean) - (Optional, default [false](https://community.bistudio.com/wiki/false)) [true](https://community.bistudio.com/wiki/true) to include empty magazines\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Arrays](https://community.bistudio.com/wiki/Array) in format:\n\n* [String](https://community.bistudio.com/wiki/String): magazine class name\n\n* [Number](https://community.bistudio.com/wiki/Number): magazine ammo count"
            }
        ],
        "examples": [
            "\n```sqf\n_magazinesAmmo = magazinesAmmo player;\n/*\n[\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"16Rnd_9x21_Mag\",16],\n\t[\"SmokeShellGreen\",1],\n\t[\"Chemlight_green\",1],\n\t[\"HandGrenade\",1]\n]\n*/\n```\n",
            "\n```sqf\n_magazinesAmmo = magazinesAmmo Mi_48;\n/*\n[\n\t[\"250Rnd_30mm_APDS_shells\",250],\n\t[\"250Rnd_30mm_HE_shells\",250],\n\t[\"8Rnd_LG_scalpel\",8],\n\t[\"38Rnd_80mm_rockets\",38]\n]\n*/\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/magazinesAmmo",
        "modifiers": []
    },
    "removeallbinocularitems": {
        "name": "removeAllBinocularItems",
        "description": "Removes all items from [binocular](https://community.bistudio.com/wiki/binocular) weapon, except magazine.",
        "syntaxArray": [
            {
                "Syntax": "removeAllBinocularItems unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nremoveAllBinocularItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeAllBinocularItems",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "importance": {
        "name": "importance",
        "description": "Returns a location's importance value.",
        "syntaxArray": [
            {
                "Syntax": "**importance** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_locationImportance = importance myLocation\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/importance",
        "modifiers": []
    },
    "suppressfor": {
        "name": "suppressFor",
        "description": "Force [suppressive fire](https://community.bistudio.com/wiki/Suppressive_Fire) from the unit.",
        "syntaxArray": [
            {
                "Syntax": "unit **suppressFor** duration",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nduration: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _soldier1 suppressFor 10 \n```\n\nWill force soldier1 to do suppressive fire to known enemies during 10 seconds"
        ],
        "Url": "https://community.bistudio.com/wiki/suppressFor",
        "modifiers": []
    },
    "slingloadassistantshown": {
        "name": "slingLoadAssistantShown",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if Sling Load Assistant is open.",
        "syntaxArray": [
            {
                "Syntax": "slingLoadAssistantShown",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if sling load assistant is shown, [false](https://community.bistudio.com/wiki/false) otherwise"
            }
        ],
        "examples": [
            "\n```sqf\nwaitUntil { slingLoadAssistantShown };\nhint \"You lack rudimentary motor skills and basic eye-hand coordination.\"; // scold user for unethical practices\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/slingLoadAssistantShown",
        "modifiers": []
    },
    "expecteddestination": {
        "name": "expectedDestination",
        "description": "Return expected destination of unit as an array.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) = **expectedDestination** person",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in form:\n\n* 0: [Position](https://community.bistudio.com/wiki/Position)\n\n* 1: planningMode\n\n* 2: forceReplan"
            }
        ],
        "examples": [
            "\n```sqf\n_data = expectedDestination player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/expectedDestination",
        "modifiers": [
            "Local argument"
        ]
    },
    "vehiclereportremotetargets": {
        "name": "vehicleReportRemoteTargets",
        "description": "Gets whether the vehicle shares acquired targets via datalink with the [Side](https://community.bistudio.com/wiki/Side) center.",
        "syntaxArray": [
            {
                "Syntax": "**vehicleReportRemoteTargets** vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicleReportRemoteTargets (vehicle player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleReportRemoteTargets",
        "modifiers": []
    },
    "ctrlmapanimadd": {
        "name": "ctrlMapAnimAdd",
        "description": "Adds the next frame to the map animation.",
        "syntaxArray": [
            {
                "Syntax": "map **ctrlMapAnimAdd** [time, zoom, position]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n[time, zoom, position]: [Array](https://community.bistudio.com/wiki/Array)\n\ntime: [Number](https://community.bistudio.com/wiki/Number)\n\nzoom: [Number](https://community.bistudio.com/wiki/Number)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - formats: [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D), [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_map ctrlMapAnimAdd [1, 0.1, getMarkerPos \"anim1\"];\nctrlMapAnimCommit _map;\n```\n",
            "Center map on player: \n```sqf\n_ctrl ctrlMapAnimAdd [0, 0.05, player];\nctrlMapAnimCommit _ctrl;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlMapAnimAdd",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "setmusiceventhandler": {
        "name": "setMusicEventHandler",
        "description": "Sets given music track event handler. Will overwrite other music event handlers. Use [addMusicEventHandler](https://community.bistudio.com/wiki/addMusicEventHandler) if you want to stack them.",
        "syntaxArray": [
            {
                "Syntax": "**setMusicEventHandler** [type, function]",
                "Params": "[type, function]: [Array](https://community.bistudio.com/wiki/Array)\n\ntype: [String](https://community.bistudio.com/wiki/String) - \"MusicStart\" or \"MusicStop\"\n\nfunction: [String](https://community.bistudio.com/wiki/String) - script to be executed. Passes params array 0: class name of the sound in [CfgMusic](https://community.bistudio.com/wiki/Description.ext#Music), 1: event handler id\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - id of the event handler"
            }
        ],
        "examples": [
            "\n```sqf\n_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];\n```\n",
            "\n```sqf\n_ehID = setMusicEventHandler [\"MusicStop\", \"hint str _this\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setMusicEventHandler",
        "modifiers": []
    },
    "getmissionconfig": {
        "name": "getMissionConfig",
        "description": "Returns [Config](https://community.bistudio.com/wiki/Config) entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:\n\n* External *[Description.ext](https://community.bistudio.com/wiki/Description.ext)* file\n\n* [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor:_Scenario_Atttributes) scenario attribute\nSo if attribute exists in both places, attribute from [description.ext](https://community.bistudio.com/wiki/description.ext) is used. Previously, scenario attributes were extracted from *Description.ext* using [missionConfigFile](https://community.bistudio.com/wiki/missionConfigFile). That still works, but it ignores attributes set directly in the editor and it should not be used anymore.",
        "syntaxArray": [
            {
                "Syntax": "**getMissionConfig** attribute",
                "Params": "attribute: [String](https://community.bistudio.com/wiki/String) - attribute name\n\n",
                "Return": "[Config](https://community.bistudio.com/wiki/Config)"
            }
        ],
        "examples": [
            "\n```sqf\n_header = getMissionConfig \"Header\"\n```\n\nReturns scenario header config. Replaces the previous approach which would scan only the external *Description.ext* file, but ignore the value set in the Eden Editor:\n\n```sqf\n_header = missionConfigFile >> \"Header\"; // Old approach\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getMissionConfig",
        "modifiers": []
    },
    "setammo": {
        "name": "setAmmo",
        "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon or muzzle.",
        "syntaxArray": [
            {
                "Syntax": "unit **setAmmo** [weaponOrMuzzle, count]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Gunner or vehicle.\n\nweaponOrMuzzle: [String](https://community.bistudio.com/wiki/String) - Weapon name. Muzzle name in case the weapon has more than one muzzle, e.g. weapon with grenade launcher. See [CfgWeapons](https://community.bistudio.com/wiki/Category:Weapons) for muzzle names\n\ncount: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Set player's handgun magazine ammo count to 10 rounds:\n\n```sqf\nplayer setAmmo [handgunWeapon player, 10];\n```\n",
            "Set player's current weapon magazine ammo count to 1 round:\n\n```sqf\nplayer setAmmo [currentWeapon player, 1];\n```\n",
            "If player is a gunner in a vehicle, set current weapon magazine ammo count to 5 rounds:\n\n```sqf\nif (local vehicle player) then {\n\tvehicle player setAmmo [currentWeapon vehicle player, 5];\n} else {\n\thint \"Vehicle must be local to this machine for 'setAmmo' to work\";\n};\n```\n",
            "If you try to set more ammo than the magazine can hold, it will be clipped at default magazine capacity:\n\n```sqf\nplayer setAmmo [primaryWeapon player, 1000000]; // full mag with default ammo count\n```\n",
            "Some weapons has more than one muzzles:\n\n```sqf\n_marshall setAmmo [\"autocannon_40mm_CTWS\", 0];// won't work\n_marshall setAmmo [\"HE\", 0];// works\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setAmmo",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "teams": {
        "name": "teams",
        "description": "Return a list of teams in the current mission.",
        "syntaxArray": [
            {
                "Syntax": "**teams**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_teams = teams;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/teams",
        "modifiers": []
    },
    "isforcedwalk": {
        "name": "isForcedWalk",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if player is forced to walk with [forceWalk](https://community.bistudio.com/wiki/forceWalk).",
        "syntaxArray": [
            {
                "Syntax": "**isForcedWalk** unitName",
                "Params": "unitName : [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_bool = isForcedWalk player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isForcedWalk",
        "modifiers": []
    },
    "enableautostartuprtd": {
        "name": "enableAutoStartUpRTD",
        "description": "Toggle availability of the automated helicopter start-up and shutdown sequences.\n> ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD **enableAutoStartUpRTD** enable",
                "Params": "helicopterRTD: [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean) - enable or disable\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nmyHelicopterRTD enableAutoStartUpRTD true;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableAutoStartUpRTD",
        "modifiers": []
    },
    "sideradio": {
        "name": "sideRadio",
        "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the [description.ext](https://community.bistudio.com/wiki/description.ext) file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see [remoteExec](https://community.bistudio.com/wiki/remoteExec)).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
        "syntaxArray": [
            {
                "Syntax": "unit **sideRadio** radioName",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - unit to transmit\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "[side, identity] **sideRadio** radioName",
                "Params": "[side, identity]: [Array](https://community.bistudio.com/wiki/Array)\n\nside: [Side](https://community.bistudio.com/wiki/Side) - side to which the transmission will be played\n\nidentity: [String](https://community.bistudio.com/wiki/String) - class name of one of the identities in CfgHQIdentities. Possible identities in Arma 3 are:\n\n* \"Base\"\n\n* \"HQ\"\n\n* \"PAPA_BEAR\"\n\n* \"AirBase\"\n\n* \"BLU\"\n\n* \"OPF\"\n\n* \"IND\"\n\n* \"IND_G\"\n\nradioName: [String](https://community.bistudio.com/wiki/String) - class name from CfgRadio\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldierOne sideRadio \"messageOne\";\n```\n",
            "\n```sqf\nplayer sideRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n",
            "\n```sqf\n[west, \"Base\"] sideRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideRadio",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "foreachmemberagent": {
        "name": "forEachMemberAgent",
        "description": "Executes the given command recursively for each agent that is a member of the given team. For just teams use [forEachMemberTeam](https://community.bistudio.com/wiki/forEachMemberTeam). For both teams and agents use [forEachMember](https://community.bistudio.com/wiki/forEachMember).",
        "syntaxArray": [
            {
                "Syntax": "command **forEachMemberAgent** team",
                "Params": "command: [Code](https://community.bistudio.com/wiki/Code)\n\nteam: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forEachMemberAgent",
        "modifiers": []
    },
    "creatediarysubject": {
        "name": "createDiarySubject",
        "description": "Creates a new subject in the [Diary](https://community.bistudio.com/wiki/Diary).",
        "syntaxArray": [
            {
                "Syntax": "player **createDiarySubject** [subject, displayName, picture]",
                "Params": "player: [Object](https://community.bistudio.com/wiki/Object)\n\nsubject: [String](https://community.bistudio.com/wiki/String)\n\ndisplayName: [String](https://community.bistudio.com/wiki/String) - The visible name\n\npicture: [String](https://community.bistudio.com/wiki/String) - (Optional, default \n```sqf\n\"\"\n```\n) Icon to display next to the subject. Can be set later with [setDiarySubjectPicture](https://community.bistudio.com/wiki/setDiarySubjectPicture). Similar to [lbSetPictureRight](https://community.bistudio.com/wiki/lbSetPictureRight).\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Index of the entry that was added"
            }
        ],
        "examples": [
            "\n```sqf\n_index = player createDiarySubject [\"myPage\",\"My page\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/createDiarySubject",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "assignascommander": {
        "name": "assignAsCommander",
        "description": "Assign a unit as commander of a vehicle. Used together with [orderGetIn](https://community.bistudio.com/wiki/orderGetIn) to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the commander place of the vehicle.",
        "syntaxArray": [
            {
                "Syntax": "unitName **assignAsCommander** vehicleName",
                "Params": "unitName: [Object](https://community.bistudio.com/wiki/Object)\n\nvehicleName: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_soldier1 assignAsCommander _tank\n[_soldier1] orderGetIn true"
        ],
        "Url": "https://community.bistudio.com/wiki/assignAsCommander",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "menupicture": {
        "name": "menuPicture",
        "description": "Returns picture set into item on given path.",
        "syntaxArray": [
            {
                "Syntax": "menuPicture [idc, path]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "control  menuPicture path",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_picturePath = (findDisplay 313 displayCtrl 120) menuPicture [0, 1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuPicture",
        "modifiers": []
    },
    "tasknull": {
        "name": "taskNull",
        "description": "A non-existing [Task](https://community.bistudio.com/wiki/Task). To compare non-existent tasks use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* taskNull == taskNull; // false\n\n* [isNull](https://community.bistudio.com/wiki/isNull) taskNull; // true\n\n* taskNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) taskNull; // true",
        "syntaxArray": [
            {
                "Syntax": "**taskNull**",
                "Params": "",
                "Return": "[Task](https://community.bistudio.com/wiki/Task)"
            }
        ],
        "examples": [
            "\n```sqf\n!isNull taskNull; // false\n```\n",
            "\n```sqf\nstr taskNull; // No task\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskNull",
        "modifiers": []
    },
    "ctrlcommit": {
        "name": "ctrlCommit",
        "description": "Commits control animation to last specified duration.\n> ",
        "syntaxArray": [
            {
                "Syntax": "control **ctrlCommit** time",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - control to animate\n\ntime: [Number](https://community.bistudio.com/wiki/Number) - animation duration\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlCommit 2; // make animation last approx. 2 seconds\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlCommit",
        "modifiers": []
    },
    "getgroupiconparams": {
        "name": "getGroupIconParams",
        "description": "Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.",
        "syntaxArray": [
            {
                "Syntax": "**getGroupIconParams** group",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) in format [color, text, scale, visibility, WPvisibility WPcolor], where:\n\n* color: [Array](https://community.bistudio.com/wiki/Array) - icon color in format [r,g,b,a]\n\n* text: [String](https://community.bistudio.com/wiki/String) - icon text\n\n* scale: [Number](https://community.bistudio.com/wiki/Number) - icon scale\n\n* visibility: [Boolean](https://community.bistudio.com/wiki/Boolean) - icon visibility\n\n* WPvisibility: [Boolean](https://community.bistudio.com/wiki/Boolean) - waypoint visibility\n\n* WPcolor: [Array](https://community.bistudio.com/wiki/Array) - waypoint color in format [r,g,b,a]"
            }
        ],
        "examples": [
            "\n```sqf\n_iconParams = getGroupIconParams group player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getGroupIconParams",
        "modifiers": []
    },
    "setfromeditor": {
        "name": "setFromEditor",
        "description": "Set if given team member was inserted directly from editor.",
        "syntaxArray": [
            {
                "Syntax": "teamMember **setFromEditor** fromEditor",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\nfromEditor: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_teamMember setFromEditor true\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFromEditor",
        "modifiers": []
    },
    "getobjectmaterials": {
        "name": "getObjectMaterials",
        "description": "Gets all custom materials associated with the object.",
        "syntaxArray": [
            {
                "Syntax": "**getObjectMaterials** obj",
                "Params": "obj: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) - array of materials"
            }
        ],
        "examples": [
            "\n```sqf\n_materials = getObjectMaterials car;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getObjectMaterials",
        "modifiers": [
            "Global argument"
        ]
    },
    "direction": {
        "name": "direction",
        "description": "Returns the direction an object or a location is facing (differs from [getDir](https://community.bistudio.com/wiki/getDir) in that this also works with locations).",
        "syntaxArray": [
            {
                "Syntax": "**direction** object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) or [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) -  \nDirection in degrees, range 0 to 360"
            }
        ],
        "examples": [
            "\n```sqf\nplayer setDir 90;\n_d = direction player;//returns 90\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/direction",
        "modifiers": [
            "Global argument"
        ]
    },
    "vectorcos": {
        "name": "vectorCos",
        "description": "Cosine of angle between two 3D vectors.",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorCos vector2",
                "Params": "vector1: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_cos = getPos player vectorCos [0,0,2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorCos",
        "modifiers": []
    },
    "landresult": {
        "name": "landResult",
        "description": "Return the result of helicopter landing position searching (performed, after land command).",
        "syntaxArray": [
            {
                "Syntax": "**landResult** helicopter",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Result, can be:\n\n* \"Found\" (Position found)\n\n* \"NotFound\" (Position not found)\n\n* \"NotReady\" (Position searching is still in progess\n\n* \" \" (Empty string when wrong was argument)"
            }
        ],
        "examples": [
            "\n```sqf\n_result = landResult BIS_heli;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/landResult",
        "modifiers": []
    },
    "get3denattribute": {
        "name": "get3DENAttribute",
        "description": "Returns the value of the given entity's [attribute](https://community.bistudio.com/wiki/Eden_Editor:_Entity_Attributes) in [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor).\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see [Setting Attributes](https://community.bistudio.com/wiki/Eden_Editor:_Setting_Attributes#Attributes).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "entity **get3DENAttribute** attribute",
                "Params": "entity: [Eden Entity](https://community.bistudio.com/wiki/Eden_Entity) or [Eden ID](https://community.bistudio.com/wiki/Eden_ID)\n\nattribute: [String](https://community.bistudio.com/wiki/String) - attribute property\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) with [Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "\n```sqf\nsystemChat str ((get3DENMouseOver select 1) get3DENAttribute \"name\");\n// returns variable name of object under cursor\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENAttribute",
        "modifiers": []
    },
    "profilenamesteam": {
        "name": "profileNameSteam",
        "description": "Returns name of the current Steam profile. For currently chosen user profile name see [profileName](https://community.bistudio.com/wiki/profileName)",
        "syntaxArray": [
            {
                "Syntax": "**profileNameSteam**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_mySteamProfileName = profileNameSteam;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/profileNameSteam",
        "modifiers": []
    },
    "querymagazinepool": {
        "name": "queryMagazinePool",
        "description": "Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).",
        "syntaxArray": [
            {
                "Syntax": "**queryMagazinePool** name",
                "Params": "name: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_num = queryMagazinePool \"M16\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/queryMagazinePool",
        "modifiers": []
    },
    "ctrltextcolor": {
        "name": "ctrlTextColor",
        "description": "Returns control's text color in [Color (RGBA)](https://community.bistudio.com/wiki/Color) format (see [ctrlSetTextColor](https://community.bistudio.com/wiki/ctrlSetTextColor)).",
        "syntaxArray": [
            {
                "Syntax": "**ctrlTextColor** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - text color"
            }
        ],
        "examples": [
            "\n```sqf\nctrlTextColor _control\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlTextColor",
        "modifiers": []
    },
    "true": {
        "name": "true",
        "description": "Always true",
        "syntaxArray": [
            {
                "Syntax": "**true**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_var = true;\nsystemChat str _var;  //true\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/true",
        "modifiers": []
    },
    "visiblemap": {
        "name": "visibleMap",
        "description": "Return true if the main map is shown (active).",
        "syntaxArray": [
            {
                "Syntax": "**visibleMap**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (visibleMap) then {hint \"You're showing the map !\"}\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/visibleMap",
        "modifiers": []
    },
    "ctrlsetfontheighth6": {
        "name": "ctrlSetFontHeightH6",
        "description": "Sets H6 font size of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontHeightH6** height",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightH6 0.05"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightH6",
        "modifiers": []
    },
    "getwingsorientationrtd": {
        "name": "getWingsOrientationRTD",
        "description": "Returns orientation of horizontal stabilizers.> ",
        "syntaxArray": [
            {
                "Syntax": "getWingsOrientationRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_orientation = getWingsOrientationRTD myHelicopter;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getWingsOrientationRTD",
        "modifiers": []
    },
    "addweaponwithattachmentscargo": {
        "name": "addWeaponWithAttachmentsCargo",
        "description": "Adds a weapon into cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.\n> ",
        "syntaxArray": [
            {
                "Syntax": "container addWeaponWithAttachmentsCargo [[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod], weaponsCount]",
                "Params": "container: [Object](https://community.bistudio.com/wiki/Object) - Container to add the weapon to, might be backpack, ammobox or vehicle\n\n[[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod], weaponsCount]: [Array](https://community.bistudio.com/wiki/Array)\n\n[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod]: [Array](https://community.bistudio.com/wiki/Array) in format [weaponsItems](https://community.bistudio.com/wiki/weaponsItems)\n\nweapon: [String](https://community.bistudio.com/wiki/String) - Weapon class name. See the topic [Category:Weapons](https://community.bistudio.com/wiki/Category:Weapons) for reference about possible values\n\nmuzzle: [String](https://community.bistudio.com/wiki/String) - Muzzle attachment class name or \"\" if not needed\n\nflashlight: [String](https://community.bistudio.com/wiki/String) - Side rail attachment class name or \"\" if not needed\n\noptics: [String](https://community.bistudio.com/wiki/String) - Top rail attachment class name or \"\" if not needed\n\n[primaryMuzzleMagazine, ammoCount]: [Array](https://community.bistudio.com/wiki/Array) - Primary muzzle magazine info or [] if not needed\n\nprimaryMuzzleMagazine: [String](https://community.bistudio.com/wiki/String) - Magazine class name\n\nammoCount: [Number](https://community.bistudio.com/wiki/Number) - Ammo count in magazine (will be clipped in 0 and max mag capacity range)\n\n[secondaryMuzzleMagazine, ammoCount]: [Array](https://community.bistudio.com/wiki/Array) - Secondary muzzle magazine info or [] if not needed\n\nsecondaryMuzzleMagazine: [String](https://community.bistudio.com/wiki/String) - Magazine class name\n\nammoCount: [Number](https://community.bistudio.com/wiki/Number) - Ammo count in magazine (will be clipped in 0 and max mag capacity range)\n\nbipod: [String](https://community.bistudio.com/wiki/String) - Underbarrel rail attachment class name or \"\" if not needed\n\nweaponsCount: [Number](https://community.bistudio.com/wiki/Number) - Number of weapons to add\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\ncursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2];\n\n```\n",
            "Add five MX GL rifles with flashlight side attachment and a full 30 rounds magazine loaded into the gun, and full 3Rnd HE grenade magazine loaded into the grenade launcher:\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_GL_F\", \"\", \"acc_flashlight\", \"\", [\"30Rnd_65x39_caseless_mag\", 30], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 5]\n```\n",
            "Add one MX rifle without any attachments or magazines event though the class has linked items:\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_Holo_pointer_F\", \"\", \"\", \"\", [], [], \"\"], 1];\n```\n",
            "Add all weapons on player with attachments:\n\n```sqf\n{ cursorObject addWeaponWithAttachmentsCargo [_x, 1] } forEach weaponsItems player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addWeaponWithAttachmentsCargo",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "nearestbuilding": {
        "name": "nearestBuilding",
        "description": "Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD.",
        "syntaxArray": [
            {
                "Syntax": "**nearestBuilding** position",
                "Params": "position: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D)\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_nBuilding = nearestBuilding player;\n```\n",
            "\n```sqf\n_nBuilding = nearestBuilding position player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearestBuilding",
        "modifiers": []
    },
    "camtarget": {
        "name": "camTarget",
        "description": "Returns camera's target.",
        "syntaxArray": [
            {
                "Syntax": "**camTarget** camera",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object) -\n\n",
                "Return": "[Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\n_someObject = camTarget _camera;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camTarget",
        "modifiers": []
    },
    "enableuavwaypoints": {
        "name": "enableUAVWaypoints",
        "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.",
        "syntaxArray": [
            {
                "Syntax": "uav enableUAVWaypoints enable",
                "Params": "uav: [Object](https://community.bistudio.com/wiki/Object)\n\nenable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_uav enableUAVWaypoints false;\nhint str waypointsEnabledUAV _uav; // returns false\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableUAVWaypoints",
        "modifiers": []
    },
    "binocularmagazine": {
        "name": "binocularMagazine",
        "description": "Collects all loaded [magazines](https://community.bistudio.com/wiki/magazines) from all [binocular](https://community.bistudio.com/wiki/binocular) muzzles and returns them in [Array](https://community.bistudio.com/wiki/Array), otherwise it returns []. This command is used for infantry weapons only.",
        "syntaxArray": [
            {
                "Syntax": "**binocularMagazine** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str binocularMagazine player; // [\"Laserbatteries\"]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/binocularMagazine",
        "modifiers": [
            "Global argument"
        ]
    },
    "isweapondeployed": {
        "name": "isWeaponDeployed",
        "description": "Returns true if weapon is currently deployed.",
        "syntaxArray": [
            {
                "Syntax": "isWeaponDeployed unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_dep = isWeaponDeployed player; \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isWeaponDeployed",
        "modifiers": [
            "Global argument"
        ]
    },
    "getplayeruid": {
        "name": "getPlayerUID",
        "description": "Return a UniqueID of the given unit (player).\n\n> \n> ",
        "syntaxArray": [
            {
                "Syntax": "getPlayerUID unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String) - Can be \"_SP_AI_\" or \"_SP_PLAYER_\" in SP, \"\" or UID in MP\n\n* The unique ID may be up to 100 characters long and may contain numbers, uppercase letters and underscores\n\n* The value can be used to construct a valid variable name by appending to another valid variable name. \n```sqf\nmissionNamespace setVariable [\"TAG_player\" + _uid, _unit];\n```\n"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _uid = getPlayerUID player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getPlayerUID",
        "modifiers": [
            "Global argument"
        ]
    },
    "getlighting": {
        "name": "getLighting",
        "description": "Gets general environment's light settings.",
        "syntaxArray": [
            {
                "Syntax": "getLighting",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) to format [ambientLightColor, ambientLightBrightness, lightDirection, starsVisibility]:\n\n* ambientLightColor: [Color (RGB)](https://community.bistudio.com/wiki/Color)\n\n* ambientLightBrightness: [Number](https://community.bistudio.com/wiki/Number)\n\n* lightDirection: [Vector3D](https://community.bistudio.com/wiki/Vector3D)\n\n* starsVisibility: [Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ngetLighting; // Returns [[0.646753,0.781818,1],28526.2,[-0.0167152,0.211598,-0.977214],0]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getLighting",
        "modifiers": []
    },
    "vectordotproduct": {
        "name": "vectorDotProduct",
        "description": "Dot product of two 3D vectors.",
        "syntaxArray": [
            {
                "Syntax": "vector1 vectorDotProduct vector2",
                "Params": "vector1: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nvector2: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_dot = [1,0,1] vectorDotProduct [0,0,2];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorDotProduct",
        "modifiers": []
    },
    "playsound": {
        "name": "playSound",
        "description": "Plays a sound from CfgSounds. Sound can be defined in [missionConfigFile](https://community.bistudio.com/wiki/missionConfigFile), [configFile](https://community.bistudio.com/wiki/configFile) or [campaignConfigFile](https://community.bistudio.com/wiki/campaignConfigFile).",
        "syntaxArray": [
            {
                "Syntax": "**playSound** soundName",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing), *since Arma 3 v2.00* [Object](https://community.bistudio.com/wiki/Object)"
            },
            {
                "Syntax": "**playSound** [soundName, isSpeech, offset]",
                "Params": "soundName: [String](https://community.bistudio.com/wiki/String)\n\nisSpeech: [Boolean](https://community.bistudio.com/wiki/Boolean) - [True](https://community.bistudio.com/wiki/true) to play it as speech, [fadeSpeech](https://community.bistudio.com/wiki/fadeSpeech) applies. [False](https://community.bistudio.com/wiki/false) to play it as sound, [fadeSound](https://community.bistudio.com/wiki/fadeSound) applies\n\noffset: [Scalar](https://community.bistudio.com/wiki/Scalar) - (Optional, default 0) Offset in seconds. Same as [playMusic](https://community.bistudio.com/wiki/playMusic) *Since Arma 3 v2.00*\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing), *since Arma 3 v2.00* [Object](https://community.bistudio.com/wiki/Object)"
            }
        ],
        "examples": [
            "\n```sqf\nplaySound \"soundname\"\n```\n",
            "Start a sound and then stop it after 1.2 second:\n```sqf\nplaySound \"AlarmCar\";\n[] spawn \n{\n\t_sound = ASLToAGL [0,0,0] nearestObject \"#soundonvehicle\";\n\tsleep 1.2; \n\tdeleteVehicle _sound;\n};\n\n// since Arma 3 v1.99.146480\n_source = playSound \"AlarmCar\";\n_source spawn \n{\n\tsleep 1.2; \n\tdeleteVehicle _this;\n};\n\n```\n",
            "Start a sound and wait until it is finished:\n```sqf\nplaySound \"Alarm\";\nhint \"Started!\";\n[] spawn\n{\n\t_sound = ASLToAGL [0,0,0] nearestObject \"#soundonvehicle\";\n\twaitUntil {isNull _sound};\n\thint \"Finished!\";\n};\n\n// since Arma 3 v1.99.146480\n_source = playSound \"Alarm\";\n_source spawn \n{\n\twaitUntil {isNull _this};\n\thint \"Finished!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playSound",
        "modifiers": [
            "Local effect"
        ]
    },
    "hcshownbar": {
        "name": "hcShownBar",
        "description": "Return true if the [high command](https://community.bistudio.com/wiki/High_Command) bar is shown/active.",
        "syntaxArray": [
            {
                "Syntax": "**hcShownBar**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif (hcShownBar) then {hint \"HC bar is active\";};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcShownBar",
        "modifiers": []
    },
    "ppeffectcreate": {
        "name": "ppEffectCreate",
        "description": "Creates [Post process effects](https://community.bistudio.com/wiki/Post_process_effects) specified by effect name and priority. Supported effects are:\n\n\n* [\"RadialBlur\"](https://community.bistudio.com/wiki/Post_process_effects#RadialBlur)\n\n* [\"ChromAberration\"](https://community.bistudio.com/wiki/Post_process_effects#ChromAberration)\n\n* [\"WetDistortion\"](https://community.bistudio.com/wiki/Post_process_effects#WetDistortion)\n\n* [\"ColorCorrections\"](https://community.bistudio.com/wiki/Post_process_effects#ColorCorrections)\n\n* [\"DynamicBlur\"](https://community.bistudio.com/wiki/Post_process_effects#DynamicBlur)\n\n* [\"FilmGrain\"](https://community.bistudio.com/wiki/Post_process_effects#FilmGrain)\n\n* [\"ColorInversion\"](https://community.bistudio.com/wiki/Post_process_effects#ColorInversion)",
        "syntaxArray": [
            {
                "Syntax": "**ppEffectCreate** [name, priority]",
                "Params": "[name, priority]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of effect type.\n\npriority: [Number](https://community.bistudio.com/wiki/Number) - unique priority, defines order of applying effect to the scene. If there is another effect using the same priority, creation will fail.\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - handle or -1 if failed"
            },
            {
                "Syntax": "**ppEffectCreate** [[name1, priority1],...]",
                "Params": "[name1, priority1]: [Array](https://community.bistudio.com/wiki/Array)\n\nname: [String](https://community.bistudio.com/wiki/String) - name of effect type.\n\npriority: [Number](https://community.bistudio.com/wiki/Number) - unique priority, defines order of applying effect to the scene. If there is another effect using the same priority, creation will fail.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Numbers](https://community.bistudio.com/wiki/Number) [handle1, ...] or [Nothing](https://community.bistudio.com/wiki/Nothing) if failed"
            }
        ],
        "examples": [
            "\n```sqf\n_ppGrain = ppEffectCreate [\"filmGrain\", 2005];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ppEffectCreate",
        "modifiers": []
    },
    "date": {
        "name": "date",
        "description": "Return the actual in-mission date and time.",
        "syntaxArray": [
            {
                "Syntax": "date",
                "Params": "",
                "Return": "[Date](https://community.bistudio.com/wiki/Date) - In format [date](https://community.bistudio.com/wiki/Date)"
            }
        ],
        "examples": [
            "\n```sqf\n_now = date; // [2014,10,30,2,30] (Oct. 30th, 2:30am)'\n_hour = _now select 3;\n_min  = _now select 4;\n```\n",
            "\n```sqf\nif (date select 3 >= 19) then { // 7pm\n\thintSilent \"ah, Arma sunset\"; {{|...cue bad guys}}\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/date",
        "modifiers": [
            "Local effect"
        ]
    },
    "briefingname": {
        "name": "briefingName",
        "description": "Returns the name of the current briefing/scenario name.",
        "syntaxArray": [
            {
                "Syntax": "**briefingName**",
                "Params": "",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_name = briefingName;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/briefingName",
        "modifiers": []
    },
    "supportinfo": {
        "name": "supportInfo",
        "description": "Creates a list of supported operators and type. Each field of array has the format: \"x:name\" Where x can be:\n\n* 't' - type\n\n* 'n' - [nullar](https://community.bistudio.com/wiki/SQF_Syntax#Nular_Operators) operator\n\n* 'u' - [unary](https://community.bistudio.com/wiki/SQF_Syntax#Unary_Operators) operator\n\n* 'b' - [binary](https://community.bistudio.com/wiki/SQF_Syntax#Binary_Operators) operator.\n\n'name' is the operator or type name (in case operator, type of input operands is included). \n*mask* parameter can be an empty string, or one of field. In this case, function returns empty array, if operator is not included in the list. Limited wildcard support is available. Type *x* may be replaced with ***, meaning all types. For the *mask* partial match may be used, like *abc**, meaning any operators starting with 'abc' are reported, for example: \n\n* \"\" - list all types and commands\n\n* \"t:*\" - list all types\n\n* \"*:<command>*\" - list all entries for script *<command>*\n\n* \"i:<command>\" - extended information about script *<command>*, [Array](https://community.bistudio.com/wiki/Array) of [Array](https://community.bistudio.com/wiki/Array) of [Strings](https://community.bistudio.com/wiki/String) in format:*Since Arma 3 v1.99146528*[type, lowerCaseName, camelCaseName, description, example, result, resultType, leftArgType, rightArgType, syntax (*since Arma 3 v2.01.146751*)]\n> ",
        "syntaxArray": [
            {
                "Syntax": "**supportInfo** mask",
                "Params": "mask: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array with requested info or empty array []"
            }
        ],
        "examples": [
            "\n```sqf\nsupportInfo \"b:select*\"; // returns [\"b:ARRAY select SCALAR\",\"b:ARRAY select BOOL\",\"b:CONFIG select SCALAR\"]\n```\n",
            "Return all available commands: \n```sqf\n_commands = supportInfo \"\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/supportInfo",
        "modifiers": []
    },
    "getallenvsoundcontrollers": {
        "name": "getAllEnvSoundControllers",
        "description": "Returns an array containing the names and values of environmental variables that can be used in simple expressions when configuring sounds.",
        "syntaxArray": [
            {
                "Syntax": "**getAllEnvSoundControllers** position",
                "Params": "position: [Position](https://community.bistudio.com/wiki/Position).\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [[\"controllerA\", valueA], [\"controllerB\", valueB], ...]"
            }
        ],
        "examples": [
            "\n```sqf\ngetAllEnvSoundControllers position player;\n```\n\nResult:\n[[\"rain\",0],[\"night\",0],[\"wind\",0.161588],...]\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getAllEnvSoundControllers",
        "modifiers": []
    },
    "ctrlsetfonth2b": {
        "name": "ctrlSetFontH2B",
        "description": "Sets H2 bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH2B** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH2B \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH2B",
        "modifiers": []
    },
    "getarray": {
        "name": "getArray",
        "description": "Extract array from config entry.",
        "syntaxArray": [
            {
                "Syntax": "[Array](https://community.bistudio.com/wiki/Array) = **getArray** config",
                "Params": "config: [Config](https://community.bistudio.com/wiki/Config)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "_array = getArray (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"threat\")"
        ],
        "Url": "https://community.bistudio.com/wiki/getArray",
        "modifiers": []
    },
    "geteditormode": {
        "name": "getEditorMode",
        "description": "Returns the current mode of the editor.\n> ",
        "syntaxArray": [
            {
                "Syntax": "**getEditorMode** map",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/getEditorMode",
        "modifiers": []
    },
    "campreparefocus": {
        "name": "camPrepareFocus",
        "description": "focusRange is in format [distance,blur]. Prepares the camera focus blur.\n\n**[-1,1]** will reset default values (auto focusing), **[-1,-1]** will disable postprocessing (all is focused). Needs the call of [camCommitPrepared](https://community.bistudio.com/wiki/camCommitPrepared) to be conducted.",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareFocus** focusRange",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nfocusRange: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareFocus [50, 1] \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareFocus",
        "modifiers": []
    },
    "enableenddialog": {
        "name": "enableEndDialog",
        "description": "Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs.",
        "syntaxArray": [
            {
                "Syntax": "**enableEndDialog**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableEndDialog;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableEndDialog",
        "modifiers": [
            "Local effect"
        ]
    },
    "getvehiclecargo": {
        "name": "getVehicleCargo",
        "description": "Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.",
        "syntaxArray": [
            {
                "Syntax": "getVehicleCargo storingVehicle",
                "Params": "storingVehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - vehicles loaded in storingVehicle, in order of their loading"
            }
        ],
        "examples": [
            "\n```sqf\n_vehicleCargo = getVehicleCargo blackfish; // returns [] if empty\n```\n",
            "\n```sqf\n_vehicleCargo = getVehicleCargo blackfish; // returns [quad_3, quad_1, quad_2] as they were loaded in this order\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getVehicleCargo",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "lbsettextright": {
        "name": "lbSetTextRight",
        "description": "Sets the text on the right side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "syntaxArray": [
            {
                "Syntax": "control **lbSetTextRight** [index, name]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[index, name]: [Array](https://community.bistudio.com/wiki/Array)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\nname: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control lbSetTextRight [0, \"iskoda\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbSetTextRight",
        "modifiers": []
    },
    "setvehiclecargo": {
        "name": "setVehicleCargo",
        "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded.  Can also be used to unload a specific loaded vehicle or all loaded vehicles.",
        "syntaxArray": [
            {
                "Syntax": "vehicle setVehicleCargo cargo",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - vehicle carrying cargo\n\ncargo: [Object](https://community.bistudio.com/wiki/Object) - cargo to put in vehicle\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - whether the vehicle was able to be loaded"
            }
        ],
        "examples": [
            "Blackfish with no vehicle cargo loaded\n\n```sqf\n_success = blackfish setVehicleCargo offroad; //true\n\n```\n",
            "Blackfish with full cargo already loaded\n\n```sqf\n_success = blackfish setVehicleCargo offroad; //false\n\n```\n",
            "Unload specific loaded vehicle\n\n```sqf\n_success = objNull setVehicleCargo offroad; \n\n```\n",
            "Unload all vehicles\n\n```sqf\n_success = blackfish setVehicleCargo objNull;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleCargo",
        "modifiers": []
    },
    "menuseturl": {
        "name": "menuSetURL",
        "description": "Sets weblink (URL) of given menu strip entry.",
        "syntaxArray": [
            {
                "Syntax": "menuSetURL [idc, path, link]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nlink: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control menuSetURL [path, link]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npath: [Array](https://community.bistudio.com/wiki/Array)\n\nlink: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlMenuStrip menuSetURL [[0,0,1], \"https://arma3.com/\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/menuSetURL",
        "modifiers": []
    },
    "loadvest": {
        "name": "loadVest",
        "description": "Returns current percentage of mass from items stored in a vest relative to the maximum capacity of the vest. \nIt is equivalent to this formula:\n\n```sqf\n_loadVest = massOfAllItemsInVest / getContainerMaxLoad vest player; \n```\n",
        "syntaxArray": [
            {
                "Syntax": "**loadVest** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_weight = loadVest player\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/loadVest",
        "modifiers": []
    },
    "registertask": {
        "name": "registerTask",
        "description": "Registers a new task type. Parameters are defined in the given config class (subclass of CfgTasks)",
        "syntaxArray": [
            {
                "Syntax": "teamMember **registerTask** entryName",
                "Params": "teamMember: [Team Member](https://community.bistudio.com/wiki/Team_Member) - [teamMember](https://community.bistudio.com/wiki/teamMember) [agent](https://community.bistudio.com/wiki/agent)\n\nentryName: [String](https://community.bistudio.com/wiki/String) - classname in CfgTasks\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\nteamMember _agent registerTask \"MyTask\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/registerTask",
        "modifiers": []
    },
    "playscriptedmission": {
        "name": "playScriptedMission",
        "description": "Load the given world, launch an empty mission, and execute the given expression.\nConfig (optional) can reference to the config entry, replacing [Description.ext](https://community.bistudio.com/wiki/Description.ext) for this mission.",
        "syntaxArray": [
            {
                "Syntax": "**playScriptedMission** [world, expression, config, ignoreChildWindow]",
                "Params": "world: [String](https://community.bistudio.com/wiki/String)\n\nexpression: [Code](https://community.bistudio.com/wiki/Code)\n\nconfig (Optional): [Config](https://community.bistudio.com/wiki/Config)\n\nignoreChildWindow (Optional): [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nplayScriptedMission\n[\n\t\"desert_e\",\n\t{\n\t\texecVM \"\\ca\\missions_e\\data\\scenes\\credits1\\init.sqf\";\n\t},\n\tconfigFile / \"CfgMissions\" / \"Cutscenes\" / \"Credits\"\n];\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playScriptedMission",
        "modifiers": []
    },
    "ctrlseteventhandler": {
        "name": "ctrlSetEventHandler",
        "description": "Sets given event handler of given control.\n\nThe provided function should return true/false indicating that the event has handled this event fully or not and whether the engine should execute it is default code or not afterwards. \n\nSee [User Interface Event Handlers](https://community.bistudio.com/wiki/User_Interface_Event_Handlers) for the full list of handler names.\n\nIf applicable, see [DIK_KeyCodes](https://community.bistudio.com/wiki/DIK_KeyCodes) for a list of key code constants, which are relevant to key related user interface events like: [KeyDown](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onKeyDown) & [KeyUp](https://community.bistudio.com/wiki/User_Interface_Event_Handlers#onKeyUp). \n> ",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetEventHandler** [handlerName, function]",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n[handlerName, function]: [Array](https://community.bistudio.com/wiki/Array)\n\nhandlerName: [String](https://community.bistudio.com/wiki/String)\n\nfunction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetEventHandler [\"KeyDown\", \"\"]\n```\n",
            "\n```sqf\n(_display displayCtrl 108) ctrlSetEventHandler [\"LBSelChanged\",\"['ListChange',_this] call FireEvents\"];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetEventHandler",
        "modifiers": []
    },
    "foreachmemberteam": {
        "name": "forEachMemberTeam",
        "description": "Executes the given command recursively for each team that is a member of the given team. For just agents use [forEachMemberAgent](https://community.bistudio.com/wiki/forEachMemberAgent). For both teams and agents use [forEachMember](https://community.bistudio.com/wiki/forEachMember).",
        "syntaxArray": [
            {
                "Syntax": "command **forEachMemberTeam** team",
                "Params": "command: [Code](https://community.bistudio.com/wiki/Code)\n\nteam: [Team Member](https://community.bistudio.com/wiki/Team_Member)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n(example)\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forEachMemberTeam",
        "modifiers": []
    },
    "rectangular": {
        "name": "rectangular",
        "description": "Checks if a location is rectangular (returns true) or elliptical (returns false).",
        "syntaxArray": [
            {
                "Syntax": "**rectangular** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isRect = rectangular myLocation;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/rectangular",
        "modifiers": []
    },
    "setfaceanimation": {
        "name": "setFaceAnimation",
        "description": "Sets facial animation phase (eye blinking), blink is in the range from 0 to 1.\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **setFaceAnimation** blink",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\nblink: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_soldier1 setFaceAnimation 0.5;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setFaceAnimation",
        "modifiers": []
    },
    "get3dengrid": {
        "name": "get3DENGrid",
        "description": "Returns the grid increment for the given transformation type.\nTransformation types:\n\n* Rotation - \"r\"\n\n* Translation - \"t\"\n\n* Scale - \"s\"",
        "syntaxArray": [
            {
                "Syntax": "**get3DENGrid** type",
                "Params": "type: [String](https://community.bistudio.com/wiki/String) - name of transformation\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\ncurrentMovementIncrement = get3DENGrid \"t\";// returns 1\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/get3DENGrid",
        "modifiers": []
    },
    "debugfsm": {
        "name": "debugFSM",
        "description": "Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.\n> ",
        "syntaxArray": [
            {
                "Syntax": "FSMhandle **debugFSM** true",
                "Params": "FSMhandle: [Number](https://community.bistudio.com/wiki/Number)\n\ntrue: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/debugFSM",
        "modifiers": []
    },
    "addscoreside": {
        "name": "addScoreSide",
        "description": "Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only.",
        "syntaxArray": [
            {
                "Syntax": "side **addScoreSide** value",
                "Params": "side: [Side](https://community.bistudio.com/wiki/Side)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nwest addScoreSide 10;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/addScoreSide",
        "modifiers": [
            "Global argument",
            "Global effect",
            "Server execution"
        ]
    },
    "dynamicsimulationdistance": {
        "name": "dynamicSimulationDistance",
        "description": "A getter for [setDynamicSimulationDistance](https://community.bistudio.com/wiki/setDynamicSimulationDistance)",
        "syntaxArray": [
            {
                "Syntax": "**dynamicSimulationDistance** category",
                "Params": "category: [String](https://community.bistudio.com/wiki/String) - see [setDynamicSimulationDistance](https://community.bistudio.com/wiki/setDynamicSimulationDistance) (\"Group\", \"Vehicle\", \"EmptyVehicle\", \"Prop\")\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - activation distance"
            }
        ],
        "examples": [
            "\n```sqf\nhint str dynamicSimulationDistance \"Prop\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/dynamicSimulationDistance",
        "modifiers": []
    },
    "taskalwaysvisible": {
        "name": "taskAlwaysVisible",
        "description": "Returns true if the task is flagged to be always visible or false if not.",
        "syntaxArray": [
            {
                "Syntax": "**taskAlwaysVisible** task",
                "Params": "task: [Task](https://community.bistudio.com/wiki/Task)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_isAlwaysVisible = taskAlwaysVisible (currentTask player);\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/taskAlwaysVisible",
        "modifiers": []
    },
    "tvsetpicturerightcolordisabled": {
        "name": "tvSetPictureRightColorDisabled",
        "description": "Sets the color of the right picture of a tree item defined by path when item is disabled",
        "syntaxArray": [
            {
                "Syntax": "control tvSetPictureRightColorDisabled [path, color]",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\n[path, color]: [Array](https://community.bistudio.com/wiki/Array)\n\npath: [Array](https://community.bistudio.com/wiki/Array) - path to tree view item\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - color in format [r,g,b,a]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/tvSetPictureRightColorDisabled",
        "modifiers": []
    },
    "targetsquery": {
        "name": "targetsQuery",
        "description": "Returns sorted array of targets, **known** to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.",
        "syntaxArray": [
            {
                "Syntax": "enquirer **targetsQuery** [targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]",
                "Params": "enquirer: [Object](https://community.bistudio.com/wiki/Object) - For whom the query will be made\n\n[targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]: [Array](https://community.bistudio.com/wiki/Array) - Query\n\ntargetIgnore: [Object](https://community.bistudio.com/wiki/Object) - Target object to exclude from results. [objNull](https://community.bistudio.com/wiki/objNull) - return every target\n\ntargetSide: [Side](https://community.bistudio.com/wiki/Side) - Desired side of the target. [sideUnknown](https://community.bistudio.com/wiki/sideUnknown) - any side\n\ntargetType: [String](https://community.bistudio.com/wiki/String) - Desired target [typeOf](https://community.bistudio.com/wiki/typeOf). \"\" - any type\n\ntargetPosition: [Array](https://community.bistudio.com/wiki/Array) - Desired target position in format of [Position2D](https://community.bistudio.com/wiki/Position2D) or [Position3D](https://community.bistudio.com/wiki/Position3D) (only [x,y] is considered). Position tolerance is 200m from the actual position of the target. [] - any position\n\ntargetMaxAge: [Number](https://community.bistudio.com/wiki/Number) - Desired max age of the target. This will limit returned results to the targets younger than specified age. 0 - any age\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - **sorted** array of returned targets in the following format: \n[[accuracy, target, targetSide, targetType, targetPosition, targetAge],...] where:\n\n* accuracy: [Number](https://community.bistudio.com/wiki/Number) - a coefficient, which reflects how close the returned result to the query filter. Range: 0 - 1 (1 - best match)\n\n* target: [Object](https://community.bistudio.com/wiki/Object) - the actual target object\n\n* targetSide: [Side](https://community.bistudio.com/wiki/Side) - side of the target\n\n* targetType: [String](https://community.bistudio.com/wiki/String) - target [typeOf](https://community.bistudio.com/wiki/typeOf)\n\n* targetPosition: [Array](https://community.bistudio.com/wiki/Array) - [x,y] of the target\n\n* targetAge: [Number](https://community.bistudio.com/wiki/Number) - the actual target age in seconds (can be negative)"
            }
        ],
        "examples": [
            "Return all known targets for player:\n```sqf\n_targets = player targetsQuery [objNull, sideUnknown, \"\", [], 0];\n```\n",
            "Prioritise all known OPFOR targets and return targets less than 10 seconds old:\n```sqf\n_targets = player targetsQuery [objNull, east, \"\", [], 10];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/targetsQuery",
        "modifiers": []
    },
    "cantriggerdynamicsimulation": {
        "name": "canTriggerDynamicSimulation",
        "description": "A getter for [triggerDynamicSimulation](https://community.bistudio.com/wiki/triggerDynamicSimulation)",
        "syntaxArray": [
            {
                "Syntax": "**canTriggerDynamicSimulation** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nhint str canTriggerDynamicSimulation player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/canTriggerDynamicSimulation",
        "modifiers": []
    },
    "modparams": {
        "name": "modParams",
        "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options are:\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "modParams [modClass, options]",
                "Params": "[modClass, options]: [Array](https://community.bistudio.com/wiki/Array)\n\nmodClass: [String](https://community.bistudio.com/wiki/String) - class name of the mod\n\noptions: [Array](https://community.bistudio.com/wiki/Array) - see description\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - retrieved requested data on success or empty array []"
            }
        ],
        "examples": [
            "\n```sqf\n_data = modParams [\"Kart\", [\"name\", \"logo\", \"picture\"]];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/modParams",
        "modifiers": []
    },
    "deleteeditorobject": {
        "name": "deleteEditorObject",
        "description": "Delete the editor object. Requires all editor object links to be removed prior. \n> ",
        "syntaxArray": [
            {
                "Syntax": "map **deleteEditorObject** object",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control) -\n\nobject: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Anything](https://community.bistudio.com/wiki/Anything)"
            }
        ],
        "examples": [
            "-"
        ],
        "Url": "https://community.bistudio.com/wiki/deleteEditorObject",
        "modifiers": []
    },
    "ctsetcursel": {
        "name": "ctSetCurSel",
        "description": "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.",
        "syntaxArray": [
            {
                "Syntax": "[Control](https://community.bistudio.com/wiki/Control) **ctSetCurSel** [Number](https://community.bistudio.com/wiki/Number)",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctSetCurSel 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctSetCurSel",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "captive": {
        "name": "captive",
        "description": "Returns the captive state of the given unit (set with [setCaptive](https://community.bistudio.com/wiki/setCaptive)). A captive unit will not be attacked by its enemies.\n> ",
        "syntaxArray": [
            {
                "Syntax": "captive object",
                "Params": "object: [Object](https://community.bistudio.com/wiki/Object) - unit or vehicle\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the unit is captive, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\nif (captive _general) then { removeAllWeapons _general; };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/captive",
        "modifiers": [
            "Global argument"
        ]
    },
    "drawellipse": {
        "name": "drawEllipse",
        "description": "Draws an ellipse on the map. Just like with marker or trigger area, negative a and b will result in hexagon.",
        "syntaxArray": [
            {
                "Syntax": "map **drawEllipse** [c, a, b, angle, color, fill]",
                "Params": "map: [Control](https://community.bistudio.com/wiki/Control)\n\n[c, a, b, angle, color, fill]: [Array](https://community.bistudio.com/wiki/Array)\n\nc: [Array](https://community.bistudio.com/wiki/Array) or [Object](https://community.bistudio.com/wiki/Object) - center of ellipse in format [Position2D](https://community.bistudio.com/wiki/Position2D), [Position3D](https://community.bistudio.com/wiki/Position3D) or [Object](https://community.bistudio.com/wiki/Object)\n\na: [Number](https://community.bistudio.com/wiki/Number) - horizontal(x) radius\n\nb: [Number](https://community.bistudio.com/wiki/Number) - vertical(y) radius\n\nangle: [Number](https://community.bistudio.com/wiki/Number) - angle of rotation in degrees\n\ncolor: [Array](https://community.bistudio.com/wiki/Array) - line color in format [r,g,b,a]\n\nfill: [String](https://community.bistudio.com/wiki/String) - fill texture file or [Procedural_Textures](https://community.bistudio.com/wiki/Procedural_Textures). Note that the file texture will not rotate with rectangle, use [drawIcon](https://community.bistudio.com/wiki/drawIcon) for that. If fill texture is not empty, set line color to white [1,1,1,1]\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)\n[](https://community.bistudio.com/wiki/File:drawEllipse.jpg)"
            }
        ],
        "examples": [
            "\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\t_this select 0 drawEllipse [\n\t\tplayer, 10, 10, 0, [1, 0, 0, 1], \"\"\n\t];\n\t_this select 0 drawEllipse [\n\t\tplayer, -10, -10, 0, [1, 1, 1, 1], \"#(rgb,8,8,3)color(1,0.6,0,1)\"\n\t];\n\t_this select 0 drawEllipse [\n\t\tplayer, -10, -10, 90, [0, 0, 1, 1], \"\"\n\t];\n}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/drawEllipse",
        "modifiers": []
    },
    "ctrlsetpositionw": {
        "name": "ctrlSetPositionW",
        "description": "Sets the width of a 2D control. [ctrlCommit](https://community.bistudio.com/wiki/ctrlCommit) is required to complete the operation.",
        "syntaxArray": [
            {
                "Syntax": "control ctrlSetPositionW w",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - 2D control\n\nw: [Number](https://community.bistudio.com/wiki/Number) - Width of the control\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl ctrlSetPositionW 0.5;\n_ctrl ctrlCommit 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetPositionW",
        "modifiers": []
    },
    "setvehicletipars": {
        "name": "setVehicleTIPars",
        "description": "Sets the \"heat\" state of different vehicle parts for Thermal Imaging detection. This allows simulation of heated up parts of a vehicle without it actually having to utilize them - on a range from 0 to 1, 0 being cold, 1 being hot.\n> ",
        "syntaxArray": [
            {
                "Syntax": "vehicle setVehicleTIPars [engine, wheels, weapon]",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object) - Vehicle whose components are manipulated\n\n[engine, wheels, weapon]: [Array](https://community.bistudio.com/wiki/Array)\n\nengine: [Number](https://community.bistudio.com/wiki/Number) - engine and body's heat\n\nwheels: [Number](https://community.bistudio.com/wiki/Number) - tracks/wheels' heat\n\nweapon: [Number](https://community.bistudio.com/wiki/Number) - main weapon's heat\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setVehicleTIPars [1, 1, 1];\t\t\t// set all parts hot\nvehicle player setVehicleTIPars [0, 0, 0];\t\t\t// set all parts cold\nvehicle player setVehicleTIPars [0.5, 0.5, 0.5];\t// set all parts warm\n\n```\n",
            "\n```sqf\nvehicle player setVehicleTIPars [1, 0, 0]; // set the engine warm, perfect for winter\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setVehicleTIPars",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "playgesture": {
        "name": "playGesture",
        "description": "When used on a person,a smooth transition to the given move will be initiated. **Command doesn't seem to be functional**",
        "syntaxArray": [
            {
                "Syntax": "soldier **playGesture** moveName",
                "Params": "soldier: [Object](https://community.bistudio.com/wiki/Object)\n\nmoveName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldierOne playGesture \"Wave\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/playGesture",
        "modifiers": []
    },
    "showscoretable": {
        "name": "showScoretable",
        "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be  closed manually, when it is force closed, it cannot be opened manually.",
        "syntaxArray": [
            {
                "Syntax": "showScoretable force",
                "Params": "force: [Number](https://community.bistudio.com/wiki/Number) - 1 to force visible, 0 to force invisible, -1 default\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nshowScoretable 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/showScoretable",
        "modifiers": []
    },
    "ctrlsetfontheightsecondary": {
        "name": "ctrlSetFontHeightSecondary",
        "description": "Sets the font size of the secondary text of given control.",
        "syntaxArray": [
            {
                "Syntax": "ctrl ctrlSetFontHeightSecondary value",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nvalue: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightSecondary 0.05;"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightSecondary",
        "modifiers": []
    },
    "isaimprecisionenabled": {
        "name": "isAimPrecisionEnabled",
        "description": "Returns true if procedural aiming precision affects weapon sway.",
        "syntaxArray": [
            {
                "Syntax": "**isAimPrecisionEnabled** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - Unit which should be checked\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - True if affected, false if not"
            }
        ],
        "examples": [
            "\n```sqf\n_isAffected = isAimPrecisionEnabled player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/isAimPrecisionEnabled",
        "modifiers": []
    },
    "findif": {
        "name": "findIf",
        "description": "Searches for an element within array for which the code evaluates to true.\nReturns the zero-based index on success or -1 if not found.\nCode on the right side of the command is evaluated for each element of the array, processed element can be referenced in code as [_x](https://community.bistudio.com/wiki/Magic_Variables#x).\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "array findIf code",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - array to search in\n\ncode: [Code](https://community.bistudio.com/wiki/Code) - code defining an element to find, processed element can be referenced within the code as [_x](https://community.bistudio.com/wiki/Magic_Variables#x)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - Zero-based position of the first array element for which the code evaluate to true, -1 if not found"
            }
        ],
        "examples": [
            "\n```sqf\n[unit1, unit2, unit3] findIf {not alive _x}; // return index of the first dead unit)\n```\n",
            "\n```sqf\n// two ways how to 'wait for all units to be dead':\nwaitUntil { [unit1, unit2, unit3] findIf {alive _x} == -1 }; // fast, terminates as soon as it finds a living unit\nwaitUntil { {alive _x} count [unit1, unit2, unit3] == 0 }; // slow, always goes through all array elements\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/findIf",
        "modifiers": []
    },
    "ctrlsetfonth4b": {
        "name": "ctrlSetFontH4B",
        "description": "Sets H4 bold font of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontH4B** fontName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nfontName: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_control ctrlSetFontH4B \"TahomaB\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontH4B",
        "modifiers": []
    },
    "kbwassaid": {
        "name": "kbWasSaid",
        "description": "Check if given item was said by person to someone. See [Conversations](https://community.bistudio.com/wiki/Conversations) for more details.",
        "syntaxArray": [
            {
                "Syntax": "person kbWasSaid [receiver, topic, sentenceID, maxAge]",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object) - who said the item\n\n[receiver, topic, sentenceID, maxAge]: [Array](https://community.bistudio.com/wiki/Array)\n\nreceiver: [Object](https://community.bistudio.com/wiki/Object) - receiver of the sentence\n\ntopic: [String](https://community.bistudio.com/wiki/String) - name of the topic used in [kbAddTopic](https://community.bistudio.com/wiki/kbAddTopic)\n\nsentenceID: [String](https://community.bistudio.com/wiki/String) - id of sentence that we want to check\n\nmaxAge: [Number](https://community.bistudio.com/wiki/Number) - time in seconds. kbWasSaid will check whether the sentence was said in last **max. age** seconds\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nplayer kbWasSaid [otherUnit, \"myTopic\", \"mySentenceID\", 3];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/kbWasSaid",
        "modifiers": [
            "Global argument"
        ]
    },
    "removemissioneventhandler": {
        "name": "removeMissionEventHandler",
        "description": "Removes mission event handler added by [addMissionEventHandler](https://community.bistudio.com/wiki/addMissionEventHandler).",
        "syntaxArray": [
            {
                "Syntax": "removeMissionEventHandler [type, index]",
                "Params": "type: [String](https://community.bistudio.com/wiki/String)\n\nindex: [Number](https://community.bistudio.com/wiki/Number) - Index is returned by addMissionEventHandler.\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _eventHandlerId = addMissionEventHandler [\"Ended\", { diag_log \"mission complete\"; }];\n// ...\nremoveMissionEventHandler [\"Ended\", _eventHandlerId];\n```\n",
            "\n```sqf\nfor \"_i\" from 0 to 4 do {\n\tmissionNamespace setVariable [format [\"handler%1\",_i], addMissionEventHandler [\"Loaded\",\"hint \"\"_i\"\";\"]];\n};\nremoveMissionEventHandler [\"Loaded\", handler2]; // Remove the third index under type \"Loaded\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeMissionEventHandler",
        "modifiers": [
            "Local effect"
        ]
    },
    "ctrlshow": {
        "name": "ctrlShow",
        "description": "Shows or hides a control. Read [Arma: GUI Configuration](https://community.bistudio.com/wiki/Arma:_GUI_Configuration) for more information about user dialogs and controls.",
        "syntaxArray": [
            {
                "Syntax": "ctrlShow [idc, show]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nshow: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if the control should be shown, [false](https://community.bistudio.com/wiki/false) if not\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "controlName ctrlShow show",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nshow: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlShow [100, false];\n```\n",
            "\n```sqf\n_control ctrlShow false;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlShow",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "simulweathersync": {
        "name": "simulWeatherSync",
        "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.",
        "syntaxArray": [
            {
                "Syntax": "**simulWeatherSync**",
                "Params": "",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsimulWeatherSync;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/simulWeatherSync",
        "modifiers": []
    },
    "grpnull": {
        "name": "grpNull",
        "description": "A non-existing [Group](https://community.bistudio.com/wiki/Group). To compare non-existent groups use [isNull](https://community.bistudio.com/wiki/isNull) or [isEqualTo](https://community.bistudio.com/wiki/isEqualTo):\n\n* grpNull == grpNull; // false\n\n* [isNull](https://community.bistudio.com/wiki/isNull) grpNull; // true\n\n* grpNull [isEqualTo](https://community.bistudio.com/wiki/isEqualTo) grpNull; // true",
        "syntaxArray": [
            {
                "Syntax": "**grpNull**",
                "Params": "",
                "Return": "[Group](https://community.bistudio.com/wiki/Group)"
            }
        ],
        "examples": [
            "\n```sqf\n!isNull grpNull; // false\n```\n",
            "\n```sqf\nstr grpNull; // <NULL-group>\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/grpNull",
        "modifiers": []
    },
    "waypointhouseposition": {
        "name": "waypointHousePosition",
        "description": "Returns [buildingPos](https://community.bistudio.com/wiki/buildingPos) index assigned to the waypoint.",
        "syntaxArray": [
            {
                "Syntax": "**waypointHousePosition** waypoint",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - [buildingPos](https://community.bistudio.com/wiki/buildingPos) index"
            }
        ],
        "examples": [
            "\n```sqf\nwaypointHousePosition [groupOne,1]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/waypointHousePosition",
        "modifiers": []
    },
    "sin": {
        "name": "sin",
        "description": "Sine of x.",
        "syntaxArray": [
            {
                "Syntax": "**sin** x",
                "Params": "x: [Number](https://community.bistudio.com/wiki/Number) - Value in degree\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_sine = sin 30; // //result is 0.5\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sin",
        "modifiers": []
    },
    "getshotparents": {
        "name": "getShotParents",
        "description": "Returns shot information for the given projectile. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.",
        "syntaxArray": [
            {
                "Syntax": "getShotParents projectile",
                "Params": "projectile: [Object](https://community.bistudio.com/wiki/Object) - The actual projectile shot\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - [vehicle, instigator] - Where vehicle is the vehicle the shot was fired from, and the instigator is the person who pulled the trigger"
            }
        ],
        "examples": [
            "\n```sqf\n_shotParents = getShotParents myProjectile;\n```\n",
            "\n```sqf\nbatmobile addEventHandler [\"Fired\", {systemChat str getShotParents (_this select 6)}];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getShotParents",
        "modifiers": []
    },
    "leaderboardstate": {
        "name": "leaderboardState",
        "description": "returns state of the board with given name. 0: Busy (async. operation in progress); 1: Async. operation ended with success; 2: Async. operation ended with error; 3: Invalid board (bad board name, not initialized etc.).",
        "syntaxArray": [
            {
                "Syntax": "**leaderboardState** boardname",
                "Params": "boardname: [String](https://community.bistudio.com/wiki/String) -\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nleaderboardState [\"TT01\", 1234, [5,6,7,8]]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/leaderboardState",
        "modifiers": []
    },
    "actionkeysnames": {
        "name": "actionKeysNames",
        "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or [user action names](https://community.bistudio.com/wiki/Category:Key_Actions).",
        "syntaxArray": [
            {
                "Syntax": "**actionKeysNames** userAction",
                "Params": "userAction: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            },
            {
                "Syntax": "**actionKeysNames** [userAction, maxKeys, inputDevicePriority]",
                "Params": "userAction: [String](https://community.bistudio.com/wiki/String)\n\nmaxKeys: [Number](https://community.bistudio.com/wiki/Number) - maximum number of keys to return\n\ninputDevicePriority: [String](https://community.bistudio.com/wiki/String) - result sorted by inputDevicePriority with values: *Since Arma 3 v1.35.127928*\n\n* \"Mouse\"\n\n* \"Keyboard\"\n\n* \"Stick\"\n\n* \"Gamepad\"\n\n* \"Tracker\"\n\n* \"Combo\" (mouse and keyboard combinations)\n\n* \"Controler\"[sic](https://community.bistudio.com/wiki/Template:sic) (any controller other than mouse or keyboard)\nOther values are considered as: \n\n* \"Unsorted\"\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "\n```sqf\n_list = actionKeysNames \"ReloadMagazine\"; // \"R\"\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/actionKeysNames",
        "modifiers": []
    },
    "vehiclecargoenabled": {
        "name": "vehicleCargoEnabled",
        "description": "Check if the vehicle has enabled transporting other vehicles or not.",
        "syntaxArray": [
            {
                "Syntax": "vehicleCargoEnabled vehicle",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - returns true if the vehicle has enabled transporting other vehicles, and false if the vehicle has not enabled transporting other vehicles"
            }
        ],
        "examples": [
            "Blackfish (Vehicle Transport) with given variable name blackfish\n\n```sqf\n_canTransportVehicles = vehicleCargoEnabled blackfish; //returns true\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vehicleCargoEnabled",
        "modifiers": []
    },
    "gearslotdata": {
        "name": "gearSlotData",
        "description": "Returns gear slot item name.",
        "syntaxArray": [
            {
                "Syntax": "**gearSlotData** control",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control) - CT_ITEMSLOT 103\n\n",
                "Return": "[String](https://community.bistudio.com/wiki/String)"
            }
        ],
        "examples": [
            "Open any ammobox and click by any gear slotsprivate \"_dspl\";\ndisableSerialization;\n\nwaitUntil {\n    _dspl = findDisplay 106;\n    ! isNull _dspl;\n};\n\nuiNamespace setVariable [\"/VDMJ/RscDisplayGear/SlotDataEH\", {\n    _self = _this select 0;\n    _weaponName = gearSlotData _self;\n    _conf = configFile >> _confSection >> _weaponName;\n    _name = getText(_conf >> \"displayName\");\n    _desc = getText(_conf >> \"Library\" >> \"libTextDesc\");\n    _image = getText(_conf >> \"picture\");\n    hint parseText format[\n        '<t size=\"1.3\" align=\"center\" shadow=\"true\" shadowColor=\"#000000\">%1</t><br><img image=\"%2\" size=\"6\" align=\"center\" /><br>%3<br>%4',\n        _name, _image, _desc\n    ];\n}];\n\n\nfor \"_i\" from 107 to 145 do {\n    _dspl displayCtrl _i ctrlAddEventHandler [\"ButtonClick\",\n        format [\n            '_confSection = \"%1\"; _this call (uiNamespace getVariable \"/VDMJ/RscDisplayGear/SlotDataEH\");',\n            if( _i >= 109 && _i <= 129 ) then { \"CfgMagazines\" } else { \"CfgWeapons\" }\n        ]\n    ];\n};\n"
        ],
        "Url": "https://community.bistudio.com/wiki/gearSlotData",
        "modifiers": []
    },
    "seteffectivecommander": {
        "name": "setEffectiveCommander",
        "description": "Sets [effectiveCommander](https://community.bistudio.com/wiki/effectiveCommander) of the given vehicle. Effective commander is the person who commands the vehicle, i.e. gives commands to the driver. Every time a person gets in or out of a vehicle, effective commander eligibility is recalculated by the engine based on the current [crew](https://community.bistudio.com/wiki/crew). Use this command to force desired effective commander. In multiplayer, execute globally.",
        "syntaxArray": [
            {
                "Syntax": "vehicle setEffectiveCommander person",
                "Params": "vehicle: [Object](https://community.bistudio.com/wiki/Object)\n\nperson: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setEffectiveCommander player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setEffectiveCommander",
        "modifiers": [
            "Global argument",
            "Local effect"
        ]
    },
    "locationposition": {
        "name": "locationPosition",
        "description": "Returns the [position](https://community.bistudio.com/wiki/Position) of a location. If the location is attached to an object, that object's position is returned.",
        "syntaxArray": [
            {
                "Syntax": "**locationPosition** location",
                "Params": "location: [Location](https://community.bistudio.com/wiki/Location)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [x,y,z], where z is -1 * [getTerrainHeightASL](https://community.bistudio.com/wiki/getTerrainHeightASL) at the location"
            }
        ],
        "examples": [
            "\n```sqf\n_locationPos = locationPosition myLocation;\n```\n",
            "\n```sqf\n_location = nearestLocation [getPos player, \"nameCity\"];\n_locationPos = locationPosition _location;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/locationPosition",
        "modifiers": []
    },
    "currentwaypoint": {
        "name": "currentWaypoint",
        "description": "Returns the **index** of the current waypoint contrary to misleading name.\n\nTo determine the validity of the index, compare it to the waypoints count.\n\nIf all waypoints are completed, then the index is 1 greater than the last valid index.\n\nIf there are no waypoints, then the index is 0.\n\nBy default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.",
        "syntaxArray": [
            {
                "Syntax": "**currentWaypoint** groupName",
                "Params": "groupName: [Group](https://community.bistudio.com/wiki/Group)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number) - The index of current waypoint"
            }
        ],
        "examples": [
            "\n```sqf\n_index = currentWaypoint group player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/currentWaypoint",
        "modifiers": []
    },
    "campreparerelpos": {
        "name": "camPrepareRelPos",
        "description": "Prepares the camera position relative to the current position of the currect target (see [camPrepareTarget](https://community.bistudio.com/wiki/camPrepareTarget)). Needs the call of [camCommitPrepared](https://community.bistudio.com/wiki/camCommitPrepared) to be conducted.",
        "syntaxArray": [
            {
                "Syntax": "camera **camPrepareRelPos** position",
                "Params": "camera: [Object](https://community.bistudio.com/wiki/Object)\n\nposition: [Array](https://community.bistudio.com/wiki/Array) - format ([PositionRelative](https://community.bistudio.com/wiki/PositionRelative))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n _camera camPrepareRelPos [10,5,-2]   \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/camPrepareRelPos",
        "modifiers": []
    },
    "append": {
        "name": "append",
        "description": "Appends array2 to the back of array1 modifying array1. \n> ",
        "syntaxArray": [
            {
                "Syntax": "array1 **append** array2",
                "Params": "array1: [Array](https://community.bistudio.com/wiki/Array)\n\narray2: [Array](https://community.bistudio.com/wiki/Array)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [1,2,3];\n_arr append [4,5,6];\nhint str _arr; // [1,2,3,4,5,6]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/append",
        "modifiers": []
    },
    "vectornormalized": {
        "name": "vectorNormalized",
        "description": "Returns normalized vector (unit vector, [vectorMagnitude](https://community.bistudio.com/wiki/vectorMagnitude) == 1) of given vector. If given vector is 0 result is a 0 vector as well.",
        "syntaxArray": [
            {
                "Syntax": "vectorNormalized vector",
                "Params": "vector: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nvectorNormalized [12345,7890,38383]; // [0.300481,0.192045,0.934254]\nvectorMagnitude [0.300481,0.192045,0.934254]; // \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorNormalized",
        "modifiers": []
    },
    "targetsaggregate": {
        "name": "targetsAggregate",
        "description": "Aggregate candidates.",
        "syntaxArray": [
            {
                "Syntax": "[speaker, side, unit, place, time] **targetsAggregate** candidates",
                "Params": "[speaker, side, unit, place, time]: [Array](https://community.bistudio.com/wiki/Array)\n\ncandidates: [Array](https://community.bistudio.com/wiki/Array) -  array of targets in the following format:\n[[accuracy, target, targetSide, targetType, targetPosition, targetAge],...] where:\n\n* accuracy: [Number](https://community.bistudio.com/wiki/Number) - a coefficient, which reflects how close the returned result to the query filter. Range: 0 - 1 (1 - best match)\n\n* target: [Object](https://community.bistudio.com/wiki/Object) - the actual target object\n\n* targetSide: [Side](https://community.bistudio.com/wiki/Side) - side of the target\n\n* targetType: [String](https://community.bistudio.com/wiki/String) - target [typeOf](https://community.bistudio.com/wiki/typeOf)\n\n* targetPosition: [Array](https://community.bistudio.com/wiki/Array) - [x,y] of the target\n\n* targetAge: [Number](https://community.bistudio.com/wiki/Number) - the actual target age in seconds (can be negative)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "_aggregation = [player, sideEnemy, \"\", [], 0] targetsAggregate (player targetsQuery [objNull, sideUnknown, \"\", [], 0])could return something like this: \n[[[\"COUNT0\",1],[\"SIDE0\",WEST],[\"UNIT0\",\"B_Soldier_F\"],[\"PLACE0\",[[<null>,<null>],0,<null>]],[\"TIME0\",[-0.9,-0.9]],[\"UCOUNT0\",1],[\"UTYPE0\",\"..."
        ],
        "Url": "https://community.bistudio.com/wiki/targetsAggregate",
        "modifiers": []
    },
    "enablesaving": {
        "name": "enableSaving",
        "description": "Enable / disable saving of the game with an optional autosave.",
        "syntaxArray": [
            {
                "Syntax": "enableSaving enable",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "enableSaving [enable, save]",
                "Params": "enable: [Boolean](https://community.bistudio.com/wiki/Boolean) - allow manual saving\n\nsave: [Boolean](https://community.bistudio.com/wiki/Boolean) - create an autosave on command execution\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nenableSaving false;\t\t// saving disabled, does autosave - same as [false, true]\nenableSaving true;\t\t// saving enabled, doesn't autosave - same as [true, false]\n\nenableSaving [false, false];\t// saving disabled, doesn't autosave\nenableSaving [false, true];\t\t// saving disabled, does autosave\nenableSaving [true, false];\t\t// saving enabled, doesn't autosave\nenableSaving [true, true];\t\t// saving enabled, does autosave\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enableSaving",
        "modifiers": []
    },
    "diag_frameno": {
        "name": "diag_frameNo",
        "description": "Returns number of frame currently displayed.",
        "syntaxArray": [
            {
                "Syntax": "**diag_frameNo**",
                "Params": "",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_currFrameNo = diag_frameNo;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_frameNo",
        "modifiers": []
    },
    "curatoreditableobjects": {
        "name": "curatorEditableObjects",
        "description": "Returns all editable objects which belong to a curator.",
        "syntaxArray": [
            {
                "Syntax": "**curatorEditableObjects** curatorObj",
                "Params": "curatorObj: [Object](https://community.bistudio.com/wiki/Object) - Curator module.\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_objects = curatorEditableObjects myCurator;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/curatorEditableObjects",
        "modifiers": [
            "Global argument"
        ]
    },
    "ordergetin": {
        "name": "orderGetIn",
        "description": "Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.\n\nNotes:\n\n* The command has no affect on AI lead by a player Group Leader (GL)\n\n* A vehicle needs be assigned via [addVehicle](https://community.bistudio.com/wiki/addVehicle) or assignAsXXX or moveInXXX first for the command to have any effect. orderGetIn [true](https://community.bistudio.com/wiki/true) makes the AI to board the vehicle. Or the AI GL orders them due to other means (ie getIn, guard waypoints).\n\n* However one can initially set orderGetIn [false](https://community.bistudio.com/wiki/false), add one or more vehicles and only once/when the AI is to enter, you set orderGetIn [true](https://community.bistudio.com/wiki/true)  for AI to start moving to the vehicle(s) or getting in the vehicle(s).\n\n* orderGetIn [false](https://community.bistudio.com/wiki/false) makes AI also leave a vehicle when inside already. However it does not affect [assignedVehicleRole](https://community.bistudio.com/wiki/assignedVehicleRole) nor [assignedVehicle](https://community.bistudio.com/wiki/assignedVehicle). Only [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle) will remove both\n\n* orderGetIn [false](https://community.bistudio.com/wiki/false) even makes AI eject while the vehicle positions are locked (([lockDriver](https://community.bistudio.com/wiki/lockDriver), [lockTurret](https://community.bistudio.com/wiki/lockTurret), [lockCargo](https://community.bistudio.com/wiki/lockCargo) - however orderGetIn [true](https://community.bistudio.com/wiki/true) will not override the position lock to make them enter\n\n* AI units on the way to enter the vehicle won't stop on the way if orderGetIn [false](https://community.bistudio.com/wiki/false) set but continue to the vehicle and just stop short without entering - [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) false instead will make the AI stop instantly (same as [unassignVehicle](https://community.bistudio.com/wiki/unassignVehicle) when combined with orderGetIn [false](https://community.bistudio.com/wiki/false))\n\n* One can combine orderGetIn [false](https://community.bistudio.com/wiki/false) and [allowGetIn](https://community.bistudio.com/wiki/allowGetIn) [false](https://community.bistudio.com/wiki/false) to manage when exactly AI is to enter vehicles\n\n* orderGetIn is persistent/a general group behavior setting - don't forget previous changes with future vehicle use!\n\n* If you want to make a vehicle no longer used by a group, you need to remove the vehicle from the group's vehicle pool via [leaveVehicle](https://community.bistudio.com/wiki/leaveVehicle).",
        "syntaxArray": [
            {
                "Syntax": "unitArray **orderGetIn** order",
                "Params": "unitArray: [Array](https://community.bistudio.com/wiki/Array)\n\norder: [Boolean](https://community.bistudio.com/wiki/Boolean)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_unitOne, _unitTwo] orderGetIn true \n```\n",
            "\n```sqf\n[_unitOne, _unitTwo] orderGetIn false \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/orderGetIn",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "hcsetgroup": {
        "name": "hcSetGroup",
        "description": "Add group to unit's [high command](https://community.bistudio.com/wiki/High_Command) bar.\n\n> ",
        "syntaxArray": [
            {
                "Syntax": "unit **hcSetGroup** [group, groupName, team]",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object) - the leader\n\ngroup: [Group](https://community.bistudio.com/wiki/Group)\n\ngroupName: [String](https://community.bistudio.com/wiki/String) - (Optional)\n\nteam: [String](https://community.bistudio.com/wiki/String) - (Optional, default \"teamMain\") can be one of:\n\n* \"teamMain\"\n\n* \"teamRed\"\n\n* \"teamGreen\"\n\n* \"teamBlue\"\n\n* \"teamYellow\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nunit hcSetGroup [group, \"HQ\", \"teamred\"];\n```\n",
            "\n```sqf\nplayer hcSetGroup [group];\n```\n",
            "\n```sqf\nif (player != hcLeader _group) then\n{\n\thcLeader _group hcRemoveGroup _group;\n\tplayer hcSetGroup [_group];\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/hcSetGroup",
        "modifiers": []
    },
    "enginespowerrtd": {
        "name": "enginesPowerRTD",
        "description": "Returns power produced by engines in Watts.\n> ",
        "syntaxArray": [
            {
                "Syntax": "enginesPowerRTD RTD_helicopter",
                "Params": "RTD_helicopter: [Object](https://community.bistudio.com/wiki/Object) - Helicopter with advanced flight model enabled\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Watts produced by the engines, to format [engine1, engine2]. Returns an empty array if [Advanced Flight Model](https://community.bistudio.com/wiki/Advanced_Helicopter_Flight_Model_in_Arma3) is disabled."
            }
        ],
        "examples": [
            "\n```sqf\n_array = enginesPowerRTD vehicle player;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/enginesPowerRTD",
        "modifiers": []
    },
    "setwantedrpmrtd": {
        "name": "setWantedRPMRTD",
        "description": "Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!\n\n* engine index 0: engine #1\n\n* engine index 1: engine #2\n\n* engine index 2: engine #3\n\n* engine index -1: all engines\n> ",
        "syntaxArray": [
            {
                "Syntax": "helicopterRTD **setWantedRPMRTD** [value, time, engineIndex]",
                "Params": "helicopterRTD : [ObjectRTD](https://community.bistudio.com/wiki/ObjectRTD) - helicopter\n\nvalue : [Number](https://community.bistudio.com/wiki/Number) - engine RPMs\n\ntime : [Number](https://community.bistudio.com/wiki/Number) - time to reach desired RPMs (seconds)\n\nengineIndex : [Number](https://community.bistudio.com/wiki/Number) - engine index\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nvehicle player setWantedRPMRTD [2500, 30, 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWantedRPMRTD",
        "modifiers": []
    },
    "onplayerconnected": {
        "name": "onPlayerConnected",
        "description": "This command will execute attached code whenever a player is connected to a MP session. The code will receive a number of special variables:\n\n* **_id**: [Number](https://community.bistudio.com/wiki/Number) - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.\n\n* **_uid**: [String](https://community.bistudio.com/wiki/String) - is [getPlayerUID](https://community.bistudio.com/wiki/getPlayerUID) of the joining player. In Arma 3 it is also the same as Steam ID.\n\n* **_name**: [String](https://community.bistudio.com/wiki/String) - is [profileName](https://community.bistudio.com/wiki/profileName) of the joining player.\n\n* **_jip**: (*since Arma 3 v1.49*) [Boolean](https://community.bistudio.com/wiki/Boolean) - is a flag that indicates whether or not the player joined after the mission has started (**J**oined **I**n **P**rogress). [true](https://community.bistudio.com/wiki/true) when the player is [JIP](https://community.bistudio.com/wiki/Multiplayer_Scripting#Join_In_Progress), otherwise [false](https://community.bistudio.com/wiki/false).\n\n* **_owner**: (*since Arma 3 v1.49*) [Number](https://community.bistudio.com/wiki/Number) - is [owner](https://community.bistudio.com/wiki/owner) id of the joining player. Can be used for kick or ban purposes or just for [publicVariableClient](https://community.bistudio.com/wiki/publicVariableClient).\n\n* **_idstr**: (*since Arma 3 v1.95*) [String](https://community.bistudio.com/wiki/String) - same as _id but in string format, so could be exactly compared to [ user marker](https://community.bistudio.com/wiki/allMapMarkers) ids.\n> ",
        "syntaxArray": [
            {
                "Syntax": "onPlayerConnected code",
                "Params": "code: [String](https://community.bistudio.com/wiki/String) or [Code](https://community.bistudio.com/wiki/Code)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nonPlayerConnected \"[_id, _name] execVM \"\"PlayerConnected.sqf\"\"\";\n```\n",
            "\n```sqf\nonPlayerConnected { diag_log [_id, _uid, _name] };\n```\n",
            "From **Arma 3** v1.49:\n\n```sqf\nonPlayerConnected {\n\tsomevar = random 123;\n\t_owner publicVariableClient \"somevar\";\n\t// this will set somevar\n\t// joining player PC to a random value\n};\n```\n",
            "From **Arma 3** v1.49:\n\n```sqf\nonPlayerConnected { isJip = _jip; _owner publicVariableClient \"isJip\" };\n// Each player will now have variable isJip containing individual JIP info\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/onPlayerConnected",
        "modifiers": [
            "Server execution"
        ]
    },
    "lbdelete": {
        "name": "lbDelete",
        "description": "Removes the item with the given index from the [CT_LISTBOX](https://community.bistudio.com/wiki/CT_LISTBOX), [CT_COMBO](https://community.bistudio.com/wiki/CT_COMBO) or [CT_TOOLBOX](https://community.bistudio.com/wiki/CT_TOOLBOX).",
        "syntaxArray": [
            {
                "Syntax": "**lbDelete** [idc, index]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Control IDC\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **lbDelete** index",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\nindex: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nlbDelete [101, 0];\n```\n",
            "\n```sqf\n_control lbDelete 0;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lbDelete",
        "modifiers": [
            "Local argument",
            "Local effect"
        ]
    },
    "lnbvalue": {
        "name": "lnbValue",
        "description": "Returns the additional integer value in the item with the given position of the 2D listbox.",
        "syntaxArray": [
            {
                "Syntax": "lnbValue [idc, [row, column]]",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            },
            {
                "Syntax": "ctrl lnbValue [row, column]",
                "Params": "ctrl: [Control](https://community.bistudio.com/wiki/Control)\n\nrow: [Number](https://community.bistudio.com/wiki/Number)\n\ncolumn: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrl lnbValue [0,0]; // 1, default is 0 if value is String set by lnbSetValue \n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/lnbValue",
        "modifiers": []
    },
    "sort": {
        "name": "sort",
        "description": "Attempts to sort given array either in ascending ([true](https://community.bistudio.com/wiki/true)) or descending ([false](https://community.bistudio.com/wiki/false)) order. > ",
        "syntaxArray": [
            {
                "Syntax": "array **sort** order",
                "Params": "array: [Array](https://community.bistudio.com/wiki/Array) - Array to be sorted, can also be a nested array.\nAll array elements should be one of the following types:\n\n* [String](https://community.bistudio.com/wiki/String) - Array of strings \n```sqf\n[\"a\",\"b\",\"c\"...]\n```\n\n\n* [Number](https://community.bistudio.com/wiki/Number) - Array of numbers \n```sqf\n[1,2,3...]\n```\n\n\n* [Array](https://community.bistudio.com/wiki/Array) - Array of subarrays \n```sqf\n[[\"a\",1,2],[\"b\",3,4],[\"c\",5,6]...]\n```\n. Subarrays should be of the same structure. Subarray elements other than [String](https://community.bistudio.com/wiki/String) or [Number](https://community.bistudio.com/wiki/Number) will be ignored during sorting.\nMixed arrays \n```sqf\n[\"a\",1,[true], ...]\n```\n are not supported and results are undefined.\n\norder: [Boolean](https://community.bistudio.com/wiki/Boolean) - Sorting order. \n\n* [true](https://community.bistudio.com/wiki/true): ascending\n\n* [false](https://community.bistudio.com/wiki/false): descending\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_arr = [5.21725,1.30859,4,5.03028,1];\n_arr sort true;\nhint str _arr; //[1,1.30859,4,5.03028,5.21725]\n```\n",
            "\n```sqf\n_dev = [\"ja\",\"pa\",\"pa\",\"tram\",\"tara\"];\n_dev sort false;\nhint str _dev; //[\"tram\",\"tara\",\"pa\",\"pa\",\"ja\"]\n```\n",
            "\n```sqf\n#define ASC true\n#define DESC false\n_scores = [[123,\"bob\",15],[123,\"bill\",20],[200,\"dave\",21],[200,\"steve\",11]];\n_scores sort DESC;\nhint str _scores; //[[200,\"steve\",11],[200,\"dave\",21],[123,\"bob\",15],[123,\"bill\",20]]\n```\n",
            "Sort buildings by distance and return position of the most distant building:\n```sqf\n_buildings = player nearObjects [\"Land_Cargo_Patrol_V1_F\", 500];\n_buildings = _buildings apply { [_x distance player, _x] };\n_buildings sort false;\nhint format [\n\t\"Most distant building is at %1, distance %2 m\", \n\tgetPos (_buildings select 0 select 1),\n\tround (_buildings select 0 select 0)\n];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sort",
        "modifiers": []
    },
    "numbertodate": {
        "name": "numberToDate",
        "description": "Convert float number to a date.",
        "syntaxArray": [
            {
                "Syntax": "**numberToDate** [year,time]",
                "Params": "[year,time]: [Array](https://community.bistudio.com/wiki/Array) -\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_date = numberToDate [2008,0.5324]; //[2008,7,13,7,49]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/numberToDate",
        "modifiers": []
    },
    "getenginetargetrpmrtd": {
        "name": "getEngineTargetRPMRTD",
        "description": "Returns RPM of all engines. > ",
        "syntaxArray": [
            {
                "Syntax": "getEngineTargetRPMRTD helicopter",
                "Params": "helicopter: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - Array of [numbers](https://community.bistudio.com/wiki/Number) with the RPM of each engine"
            }
        ],
        "examples": [
            "\n```sqf\nprivate _rpm = getEngineTargetRPMRTD _helicopter;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/getEngineTargetRPMRTD",
        "modifiers": []
    },
    "intersect": {
        "name": "intersect",
        "description": "Finds named selections in object which are in specified LOD, intersected by given section of a line. Return value is in the form of [selection, distance]. Multiple returned arrays are nested within a single array. No intersection returns []. *lodName* could be one of the following: \n\n* \"FIRE\"\n\n* \"VIEW\"\n\n* \"GEOM\"\n\n* \"IFIRE\" - (\"I\" stands for Indirect, almost the same as FIRE)\n\n* \"PHYSX\" - PhysX geometry LOD (since Arma 3 v2.01.146666)",
        "syntaxArray": [
            {
                "Syntax": "[object, lodName] **intersect** [begPos, endPos]",
                "Params": "[object, lodName]: [Array](https://community.bistudio.com/wiki/Array)\n\nobject: [Object](https://community.bistudio.com/wiki/Object)\n\nlodName: [String](https://community.bistudio.com/wiki/String)\n\n[begPos, endPos] : [Array](https://community.bistudio.com/wiki/Array)\n\nbegPos: [Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\nendPos: [Array](https://community.bistudio.com/wiki/Array) - format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - array of intersections in format: [[selection, distance],...], where\n\n* selection - name of intersected selection\n\n* distance - distance from begPos\nThe results are also sorted, closest selection first"
            }
        ],
        "examples": [
            "\n```sqf\n[_tank, \"VIEW\"] intersect [[1500, 1500, 2], [1550, 1500, 2]];\n```\n",
            "\n```sqf\nsphere = \"Sign_Sphere10cm_F\" createVehicle [0,0,0];\nonEachFrame {\n\t_begPos = positionCameraToWorld [0,0,0];\n\t_begPosASL = AGLToASL _begPos;\n\t_endPos = positionCameraToWorld [0,0,1000];\n\t_endPosASL = AGLToASL _endPos;\n\t_ins = lineIntersectsSurfaces [_begPosASL, _endPosASL, player, objNull, true, 1, \"FIRE\", \"NONE\"];\n\tif (_ins isEqualTo []) exitWith {sphere setPosASL [0,0,0]};\n\t_ins select 0 params [\"_pos\", \"_norm\", \"_obj\", \"_parent\"];\n\tif !(getModelInfo _parent select 2) exitWith {sphere setPosASL [0,0,0]};\n\t_ins2 = [_parent, \"FIRE\"] intersect [_begPos, _endPos];\n\tif (_ins2 isEqualTo []) exitWith {sphere setPosASL [0,0,0]};\n\t_ins2 select 0 params [\"_name\", \"_dist\"];\n\t_posASL = _begPosASL vectorAdd ((_begPosASL vectorFromTo _endPosASL) vectorMultiply _dist);\n\tdrawIcon3D [\"\", [1,1,1,1], ASLToAGL _posASL, 0, 0, 0, _name, 1, 0.03, \"PuristaMedium\"];\n\tsphere setPosASL _posASL;\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/intersect",
        "modifiers": [
            "Global argument"
        ]
    },
    "forgettarget": {
        "name": "forgetTarget",
        "description": "Resets the info a group has about a target, forcing [knowsAbout](https://community.bistudio.com/wiki/knowsAbout) value to 0.",
        "syntaxArray": [
            {
                "Syntax": "group **forgetTarget** target",
                "Params": "group: [Group](https://community.bistudio.com/wiki/Group) or [Object](https://community.bistudio.com/wiki/Object) - group itself or unit in a group\n\ntarget: [Object](https://community.bistudio.com/wiki/Object) - group target\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nsoldier1 forgetTarget soldier2;\n```\n",
            "Give enemyBob some amnesia:\n```sqf\nonEachFrame { enemyBob forgetTarget player };\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forgetTarget",
        "modifiers": []
    },
    "independent": {
        "name": "independent",
        "description": "Pre-defined variable for the independent [side](https://community.bistudio.com/wiki/Side).",
        "syntaxArray": [
            {
                "Syntax": "**independent**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side _unit == independent) then\n{\n    hint \"This is a independent unit!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/independent",
        "modifiers": []
    },
    "forcedmap": {
        "name": "forcedMap",
        "description": "Returns if map was forced by using [forceMap](https://community.bistudio.com/wiki/forceMap) command or [openMap](https://community.bistudio.com/wiki/openMap) command with force option",
        "syntaxArray": [
            {
                "Syntax": "**forcedMap**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - in format [forceMapForced, openMapForced] where:\n\n* forceMapForced: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if map was forced with [forceMap](https://community.bistudio.com/wiki/forceMap) command\n\n* openMapForced: [Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if map was forced with [openMap](https://community.bistudio.com/wiki/openMap) command."
            }
        ],
        "examples": [
            "\n```sqf\n_forceMapForced = forcedMap select 0;\n_openMapForced = forcedMap select 1;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/forcedMap",
        "modifiers": []
    },
    "fireattarget": {
        "name": "fireAtTarget",
        "description": "Remotely forces a unit to fire the given weapon. See also: [BIS_fnc_fire](https://community.bistudio.com/wiki/BIS_fnc_fire)",
        "syntaxArray": [
            {
                "Syntax": "sourceVehicle **fireAtTarget** [targetVehicle, weaponMuzzleName]",
                "Params": "sourceVehicle: [Object](https://community.bistudio.com/wiki/Object) - source vehicle to fire from\n\n[targetVehicle, weaponMuzzleName]: [Array](https://community.bistudio.com/wiki/Array)\n\ntargetVehicle: [Object](https://community.bistudio.com/wiki/Object) - target vehicle to fire at\n\nweaponMuzzleName (Optional): [String](https://community.bistudio.com/wiki/String) - weapon muzzle classname, optional parameter\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) if fired, [false](https://community.bistudio.com/wiki/false) if not"
            }
        ],
        "examples": [
            "\n```sqf\n_handle = this fireAtTarget [groundtarget1,\"HellfireLauncher\"];\n```\n",
            "\n```sqf\n_handle = Igla_AA_pod_TK_EP1 fireAtTarget [_helicopter,currentWeapon Igla_AA_pod_TK_EP1];\n```\n",
            "\n```sqf\n_handle = Igla_AA_pod_TK_EP1 fireAtTarget [helicopter];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/fireAtTarget",
        "modifiers": []
    },
    "setwaypointcombatmode": {
        "name": "setWaypointCombatMode",
        "description": "Changes a group's combat mode when the waypoint becomes active.",
        "syntaxArray": [
            {
                "Syntax": "waypoint **setWaypointCombatMode** mode",
                "Params": "waypoint: [Array](https://community.bistudio.com/wiki/Array) - format [Waypoint](https://community.bistudio.com/wiki/Waypoint)\n\nmode: [String](https://community.bistudio.com/wiki/String) -  Can be:\n\n* \"NO CHANGE\"\n\n* \"BLUE\"\n\n* \"GREEN\"\n\n* \"WHITE\"\n\n* \"YELLOW\"\n\n* \"RED\"\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n[_grp, 2] setWaypointCombatMode \"RED\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setWaypointCombatMode",
        "modifiers": []
    },
    "ctrlsetfontheighth3": {
        "name": "ctrlSetFontHeightH3",
        "description": "Sets H3 font size of given HTML control.",
        "syntaxArray": [
            {
                "Syntax": "controlName **ctrlSetFontHeightH3** height",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\nheight: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "_control ctrlSetFontHeightH3 0.05"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlSetFontHeightH3",
        "modifiers": []
    },
    "nearroads": {
        "name": "nearRoads",
        "description": "Find the road segments within the circle of given radius.",
        "syntaxArray": [
            {
                "Syntax": "pos **nearRoads** radius",
                "Params": "pos: [Object](https://community.bistudio.com/wiki/Object) or [Array](https://community.bistudio.com/wiki/Array) in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL) or [Position2D](https://community.bistudio.com/wiki/Position2D), center of search radius\n\nradius: [Number](https://community.bistudio.com/wiki/Number) - search radius in meters\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) of [Objects](https://community.bistudio.com/wiki/Object) - road segments within radius"
            }
        ],
        "examples": [
            "\n```sqf\n_list = player nearRoads 50;\n```\n",
            "\n```sqf\n_list = (position _unit) nearRoads 50;\n```\n",
            "\n```sqf\n_list = [1800,5700] nearRoads 50;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/nearRoads",
        "modifiers": []
    },
    "markerchannel": {
        "name": "markerChannel",
        "description": "Returns the channel that a marker belongs to.",
        "syntaxArray": [
            {
                "Syntax": "markerChannel marker",
                "Params": "marker: [String](https://community.bistudio.com/wiki/String)\n\n",
                "Return": "[Number](https://community.bistudio.com/wiki/Number)"
            }
        ],
        "examples": [
            "\n```sqf\nmarkerChannel \"marker_1\";\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/markerChannel",
        "modifiers": []
    },
    "flyinheight": {
        "name": "flyInHeight",
        "description": "Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.",
        "syntaxArray": [
            {
                "Syntax": "aircraft flyInHeight altitude",
                "Params": "aircraft: [Object](https://community.bistudio.com/wiki/Object)\n\naltitude: [Number](https://community.bistudio.com/wiki/Number) - flying altitude in meters\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_helicopter flyInHeight 40;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/flyInHeight",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    },
    "diag_codeperformance": {
        "name": "diag_codePerformance",
        "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to [BIS_fnc_codePerformance](https://community.bistudio.com/wiki/BIS_fnc_codePerformance)\n> ",
        "syntaxArray": [
            {
                "Syntax": "**diag_codePerformance** [code, arguments, cycles]",
                "Params": "[code, arguments, cycles]: [Array](https://community.bistudio.com/wiki/Array)\n\ncode: [Code](https://community.bistudio.com/wiki/Code) - code to compare performance\n\narguments (Optional): [Anything](https://community.bistudio.com/wiki/Anything) - arguments to pass to the code in _this variable. Default: [nil](https://community.bistudio.com/wiki/nil)\n\ncycles (Optional): [Number](https://community.bistudio.com/wiki/Number) - wanted number of cycles to run the given code. > 1000 is recommended. Default: 100000\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array) - format [duration, cycles], where:\n\n* duration: [Number](https://community.bistudio.com/wiki/Number) - average duration of 1 execution in milliseconds\n\n* cycles: [Number](https://community.bistudio.com/wiki/Number) - actual number of cycles executed"
            }
        ],
        "examples": [
            "\n```sqf\n_result = diag_codePerformance [{private _a = 123;}, 0, 10000];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/diag_codePerformance",
        "modifiers": []
    },
    "ctrlactivate": {
        "name": "ctrlActivate",
        "description": "Launch actions attached to given (button based) control.  \nCommand only triggers **action** entry described in control config and engine-based actions (cancel or ok codes) and will not trigger button related [User Interface Event Handlers](https://community.bistudio.com/wiki/User_Interface_Event_Handlers).\nCommand ignores control disabled state. (Example 2)",
        "syntaxArray": [
            {
                "Syntax": "**ctrlActivate** controlName",
                "Params": "controlName: [Control](https://community.bistudio.com/wiki/Control)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\nctrlActivate _control\n```\n",
            "\n```sqf\n_control ctrlEnable false;\nctrlActivate _control; // Action fired.\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/ctrlActivate",
        "modifiers": []
    },
    "is3denmultiplayer": {
        "name": "is3DENMultiplayer",
        "description": "Returns [true](https://community.bistudio.com/wiki/true) if the [Eden Editor](https://community.bistudio.com/wiki/Eden_Editor) is in multiplayer mode. Returns [true](https://community.bistudio.com/wiki/true) in the following cases:\n\n* Multiplayer Preview launched directly from [3DEN](https://community.bistudio.com/wiki/3DEN) - [true](https://community.bistudio.com/wiki/true) in preview and only for the creator\n\n* MP mission is chosen for editing when creating a server: Multiplayer - Server Browser - Host Server. When 3D EDITOR button is clicked for selected mission and 3DEN is launched, command returns [true](https://community.bistudio.com/wiki/true) within the editor environment. (see also [is3DEN](https://community.bistudio.com/wiki/is3DEN), [is3DENPreview](https://community.bistudio.com/wiki/is3DENPreview))",
        "syntaxArray": [
            {
                "Syntax": "**is3DENMultiplayer**",
                "Params": "",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\nif is3DENMultiplayer then {systemChat \"You are hosting a test server!\"};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/is3DENMultiplayer",
        "modifiers": []
    },
    "vectormultiply": {
        "name": "vectorMultiply",
        "description": "Multiplies 3D vector by a scalar.",
        "syntaxArray": [
            {
                "Syntax": "vector vectorMultiply scalar",
                "Params": "vector: [Array](https://community.bistudio.com/wiki/Array) - vector 3D or 2D (since Arma 3 v2.00, z coordinate is defaulted to 0)\n\nscalar: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_newVector = [1,2,3] vectorMultiply 3; // returns [3,6,9]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/vectorMultiply",
        "modifiers": []
    },
    "removegoggles": {
        "name": "removeGoggles",
        "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use [unassignItem](https://community.bistudio.com/wiki/unassignItem) and [removeItem](https://community.bistudio.com/wiki/removeItem) or just [unlinkItem](https://community.bistudio.com/wiki/unlinkItem) for latter.",
        "syntaxArray": [
            {
                "Syntax": "**removeGoggles** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n removeGoggles assaultDiver;\n\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/removeGoggles",
        "modifiers": [
            "Global argument",
            "Global effect"
        ]
    },
    "terrainintersect": {
        "name": "terrainIntersect",
        "description": "Checks for intersection of terrain between two AGL positions. Returns [true](https://community.bistudio.com/wiki/true) if intersects with terrain. For ASL variant see [terrainIntersectASL](https://community.bistudio.com/wiki/terrainIntersectASL)",
        "syntaxArray": [
            {
                "Syntax": "**terrainIntersect** [pos1, pos2]",
                "Params": "[pos1, pos2]: [Array](https://community.bistudio.com/wiki/Array)\n\npos1: [Array](https://community.bistudio.com/wiki/Array) - start position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\npos2: [Array](https://community.bistudio.com/wiki/Array) - end position in format [PositionAGL](https://community.bistudio.com/wiki/PositionAGL)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean)"
            }
        ],
        "examples": [
            "\n```sqf\n_intersects = terrainIntersect [getPos player, getPos chopper];\n```\n",
            "\n```sqf\n_intersects = terrainIntersect [position player, position enemy1];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/terrainIntersect",
        "modifiers": []
    },
    "west": {
        "name": "west",
        "description": "West (BLUFOR) [side](https://community.bistudio.com/wiki/Side).",
        "syntaxArray": [
            {
                "Syntax": "west",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "[SQS](https://community.bistudio.com/wiki/SQS_Syntax):\n```sqf\n?((side _unit) == west) : hint \"This is a western unit!\"\n```\n",
            "[SQF](https://community.bistudio.com/wiki/SQF_Syntax):\n```sqf\nif ((side _unit) == west) then {\n\thint \"This is a western unit!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/west",
        "modifiers": []
    },
    "wind": {
        "name": "wind",
        "description": "Returns the current wind vector (in m/s) as array [x, y, z].\n**NOTE:** the last value (z, \"up-down\") always returns 0 – wind being only horizontal.",
        "syntaxArray": [
            {
                "Syntax": "**wind**",
                "Params": "",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\n_windArray = wind;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/wind",
        "modifiers": []
    },
    "itemswithmagazines": {
        "name": "itemsWithMagazines",
        "description": "Returns combined array including all unit's stored [items](https://community.bistudio.com/wiki/items) and all unit's stored [magazines](https://community.bistudio.com/wiki/magazines) and all unit's **stored** [weapons](https://community.bistudio.com/wiki/weapons). Loaded magazines such as [currentMagazine](https://community.bistudio.com/wiki/currentMagazine), [primaryWeaponMagazine](https://community.bistudio.com/wiki/primaryWeaponMagazine), [secondaryWeaponMagazine](https://community.bistudio.com/wiki/secondaryWeaponMagazine), [handgunMagazine](https://community.bistudio.com/wiki/handgunMagazine), [binocularMagazine](https://community.bistudio.com/wiki/binocularMagazine) as well as [assignedItems](https://community.bistudio.com/wiki/assignedItems) are excluded.",
        "syntaxArray": [
            {
                "Syntax": "**itemsWithMagazines** unit",
                "Params": "unit: [Object](https://community.bistudio.com/wiki/Object)\n\n",
                "Return": "[Array](https://community.bistudio.com/wiki/Array)"
            }
        ],
        "examples": [
            "\n```sqf\nitemsWithMagazines player\n//is essentially the same as\nitems player + magazines player\n```\n\n\n\n```sqf\n[\n\t\"FirstAidKit\",\t\t\t//item\n\t\"30Rnd_65x39_caseless_mag\",\t//magazine\n\t\"16Rnd_9x21_Mag\",\t\t//magazine\n\t\"Chemlight_green\",\t\t//magazine\n\t\"HandGrenade\",\t\t\t//magazine\n\t\"ToolKit\",\t\t\t//item\n\t\"MineDetector\"\t\t\t//item\n]\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/itemsWithMagazines",
        "modifiers": [
            "Global argument"
        ]
    },
    "setcurrentchannel": {
        "name": "setCurrentChannel",
        "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see [enableChannel](https://community.bistudio.com/wiki/enableChannel)), this is why this command returns boolean, [true](https://community.bistudio.com/wiki/true) on success or [false](https://community.bistudio.com/wiki/false) on failure. \n\nFor Custom Radio (see [radioChannelCreate](https://community.bistudio.com/wiki/radioChannelCreate))",
        "syntaxArray": [
            {
                "Syntax": "**setCurrentChannel** channelID",
                "Params": "channelID: [Number](https://community.bistudio.com/wiki/Number) - [channel ID](https://community.bistudio.com/wiki/Channel_IDs)\n\n",
                "Return": "[Boolean](https://community.bistudio.com/wiki/Boolean) - [true](https://community.bistudio.com/wiki/true) on success"
            }
        ],
        "examples": [
            "\n```sqf\n_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/setCurrentChannel",
        "modifiers": [
            "Local effect"
        ]
    },
    "slidersetposition": {
        "name": "sliderSetPosition",
        "description": "Sets current thumb position of [CT_SLIDER](https://community.bistudio.com/wiki/CT_SLIDER) or [CT_XSLIDER](https://community.bistudio.com/wiki/CT_XSLIDER).",
        "syntaxArray": [
            {
                "Syntax": "**sliderSetPosition**",
                "Params": "idc: [Number](https://community.bistudio.com/wiki/Number) - Idc of the control\n\npos: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            },
            {
                "Syntax": "control **sliderSetPosition** pos",
                "Params": "control: [Control](https://community.bistudio.com/wiki/Control)\n\npos: [Number](https://community.bistudio.com/wiki/Number)\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "\n```sqf\n_ctrlSlider sliderSetPosition 50;\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sliderSetPosition",
        "modifiers": []
    },
    "sideenemy": {
        "name": "sideEnemy",
        "description": "The enemy [side](https://community.bistudio.com/wiki/Side) which is used for renegades. Units of this side are hostile to everyone.\n\n* To join sideEnemy, you can attack members of your own side or use [addRating](https://community.bistudio.com/wiki/addRating).\n\n* When below a [rating](https://community.bistudio.com/wiki/rating) of -2000 units switch automatically to this side.",
        "syntaxArray": [
            {
                "Syntax": "**sideEnemy**",
                "Params": "",
                "Return": "[Side](https://community.bistudio.com/wiki/Side)"
            }
        ],
        "examples": [
            "\n```sqf\nif (side player == sideEnemy) then {\n    hint \"We've got a renegade!\";\n};\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/sideEnemy",
        "modifiers": []
    },
    "switchmove": {
        "name": "switchMove",
        "description": "Applies given animation to a unit. When used on a person, the given move is started immediately (there is no transition). Use \n```sqf\n_unit switchMove \"\";\n```\n to reset animation. For a smooth transition use [playMove](https://community.bistudio.com/wiki/playMove).\n> ",
        "syntaxArray": [
            {
                "Syntax": "person switchMove moveName",
                "Params": "person: [Object](https://community.bistudio.com/wiki/Object) - unit\n\nmoveName: [String](https://community.bistudio.com/wiki/String) - unit animation (see [animationState](https://community.bistudio.com/wiki/animationState))\n\n",
                "Return": "[Nothing](https://community.bistudio.com/wiki/Nothing)"
            }
        ],
        "examples": [
            "Prone: \n```sqf\nplayer switchMove \"AmovPpneMstpSrasWrflDnon\";\n```\n",
            "Sit player immediately and globally: \n```sqf\n[player, \"AmovPsitMstpSlowWrflDnon\"] remoteExec [\"switchMove\", 0];\n```\n"
        ],
        "Url": "https://community.bistudio.com/wiki/switchMove",
        "modifiers": [
            "Local argument",
            "Global effect"
        ]
    }
}
